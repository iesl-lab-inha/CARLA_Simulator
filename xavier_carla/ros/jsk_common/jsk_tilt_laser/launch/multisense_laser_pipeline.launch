<launch>
  <arg name="not_use_sensor_tf_prefix" default="false" />
  <arg name="namespace"  default="multisense" />
  <arg name="fixed_frame_id" default="head_root" />
  <arg name="assemble_cloud" default="/multisense/lidar_scan_filtered"/>
  <arg name="run_distance_filters" default="true" />
  <arg name="local" default="false" />
  <node name="tilt_scan_to_cloud"
        pkg="laser_filters" type="scan_to_cloud_filter_chain"
        clear_params="true" output="log">
    <remap from="scan" to="/multisense/lidar_scan" />
    <rosparam subst_value="true">
      scan_filter_chain:
      - name: shadows
        type: laser_filters/ScanShadowsFilter
        params:
          min_angle: 0
#          max_angle: 175
          max_angle: 165
          neighbors: 5
          window: 5
      - name: dark_shadows
        type: LaserScanIntensityFilter
        params:
          lower_threshold: 200
          upper_threshold: 10000
          disp_histogram: 0
      - name: range
        type: laser_filters/LaserScanRangeFilter
        params:
          lower_threshold: 0.2 # 0.5
          upper_threshold: 30.0
      high_fidelity: false # range_max is ignored when high_fidelity
      laser_max_range: 30
      target_frame: $(arg fixed_frame_id)
    </rosparam>
    <remap from="cloud_filtered" to="/multisense/lidar_scan_filtered" />
  </node>
  <node pkg="jsk_topic_tools"
        type="standalone_complexed_nodelet"
        name="multisense_laser"
        output="log">
    <rosparam subst_value="true">
    nodelets:
      - name: laser_x_filter
        type: pcl/PassThrough
        if: $(arg run_distance_filters)
        remappings:
          - from: ~input
            to: tilt_laser_listener/output_cloud
          - from: /tf
            to: /tf_null
      - name: laser_y_filter
        type: pcl/PassThrough
        if: $(arg run_distance_filters)
        remappings:
          - from: ~input
            to: laser_x_filter/output
          - from: /tf
            to: /tf_null
      - name: laser_z_filter
        type: pcl/PassThrough
        if: $(arg run_distance_filters)
        remappings:
          - from: ~input
            to: laser_y_filter/output
          - from: /tf
            to: /tf_null
      - name: laser_downsampler
        type: pcl/VoxelGrid
        if: $(arg run_distance_filters)
        remappings:
          - from: ~input
            to: laser_z_filter/output
          - from: /tf
            to: /tf_null
      - name: laser_downsampler
        type: pcl/VoxelGrid
        unless: $(arg run_distance_filters)
        remappings:
          - from: ~input
            to: tilt_laser_listener/output_cloud
          - from: /tf
            to: /tf_null
      - name: laser_camera_cloud
        type: jsk_pcl/TfTransformCloud
        remappings:
          - from: ~input
            to: "laser_downsampler/output"
      - name: tilt_laser_listener
        type: jsk_pcl/TiltLaserListener
        remappings:
          - from: ~input
            to: /$(arg namespace)/joint_states
            unless: $(arg local)
          - from: ~input
            to: /$(arg namespace)_local/joint_states
            if: $(arg local)
          - from: ~input/cloud
            to: $(arg assemble_cloud)
      - name: tilt_laser_listener_snapshot
        type: jsk_pcl/TiltLaserListener
        remappings:
          - from: ~input
            to: /$(arg namespace)/joint_states
            unless: $(arg local)
          - from: ~input
            to: /$(arg namespace)_local/joint_states
            if: $(arg local)
          - from: ~input/cloud
            to: $(arg assemble_cloud)
      - name: multisense_laser_relay
        type: jsk_topic_tools/Relay
        remappings:
          - from: ~input
            to: tilt_laser_listener/output_cloud
          - from: ~output
            to: /full_cloud2
    </rosparam>
  </node>
  <group ns="laser_x_filter">
    <rosparam>
      filter_field_name: x
      filter_limit_min: -5.0
      filter_limit_max: 1000.0
    </rosparam>
  </group>
  <group ns="laser_y_filter">
    <rosparam>
      filter_field_name: y
      filter_limit_min: -5.0
      filter_limit_max: 5.0
    </rosparam>
  </group>
  <group ns="laser_z_filter">
    <rosparam>
      filter_field_name: z
      filter_limit_min: -5.0
      filter_limit_max: 5.0
    </rosparam>
  </group>
  <group ns="laser_downsampler">
    <rosparam>
      leaf_size: 0.01
      filter_limit_min: -100
      filter_limit_max: 100
    </rosparam>
  </group>
  <group ns="laser_camera_cloud">
    <param name="target_frame_id" value="multisense/left_camera_optical_frame"
           unless="$(arg not_use_sensor_tf_prefix)"/>
    <param name="target_frame_id" value="left_camera_optical_frame"
           if="$(arg not_use_sensor_tf_prefix)"/>
  </group>
  <group ns="tilt_laser_listener">
    <rosparam subst_value="true">
#      laser_type: infinite_spindle_half
      laser_type: infinite_spindle
      joint_name: motor_joint
      use_laser_assembler: true
      not_use_laser_assembler_service: true
      twist_frame_id: head_hokuyo_frame
      overwrap_angle: 0.0
      skip_number: 10
    </rosparam>
  </group>
  <group ns="tilt_laser_listener_snapshot">
    <rosparam subst_value="true">
      laser_type: infinite_spindle_half
#      laser_type: infinite_spindle
      joint_name: motor_joint
      use_laser_assembler: true
      not_use_laser_assembler_service: true
      twist_frame_id: head_hokuyo_frame
      overwrap_angle: 0.0
      skip_number: 1
      clear_assembled_scans: true
    </rosparam>
  </group>
</launch>
