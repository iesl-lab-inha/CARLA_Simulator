static pointer CLO4913();
static pointer CLO4927();
static pointer CLO4981();
static pointer CLO5043();
static pointer UWP5044();
static pointer CLO5115();
static pointer CLO5116();
static pointer CLO5117();
static pointer CLO5118();
static pointer CLO5119();
static pointer CLO5120();
static pointer CLO5132();
static pointer CLO5133();
static pointer CLO5134();
static pointer CLO5135();
static pointer CLO5136();
static pointer CLO5137();
static pointer CLO5138();
static pointer CLO5139();
static pointer CLO5140();
static pointer CLO5141();
static pointer CLO5142();
static pointer CLO5143();
static pointer CLO5144();
static pointer CLO5145();
static pointer CLO5146();
static pointer CLO5147();
static pointer CLO5148();
static pointer CLO5246();
static pointer CLO5247();
static pointer CLO5248();
static pointer CLO5249();
static pointer CLO5250();
static pointer CLO5251();
static pointer CLO5252();
static pointer CLO5253();
static pointer CLO5254();
static pointer CLO5255();
static pointer CLO5256();
static pointer CLO5257();
static pointer CLO5258();
static pointer CLO5259();
static pointer CLO5260();
static pointer CLO5261();
static pointer CLO5262();
static pointer CLO5263();
static pointer CLO5264();
static pointer CLO5265();
static pointer CLO5266();
static pointer CLO5267();
static pointer CLO5268();
static pointer CLO5269();
static pointer CLO5270();
static pointer CLO5271();
static pointer CLO5275();
static pointer CLO5276();
static pointer CLO5277();
static pointer CLO5278();
static pointer CLO5279();
static pointer CLO5280();
static pointer CLO5281();
static pointer CLO5282();
static pointer CLO5283();
static pointer CLO5284();
static pointer CLO5285();
static pointer CLO5286();
static pointer CLO5287();
static pointer CLO5288();
static pointer CLO5289();
static pointer CLO5290();
static pointer CLO5291();
static pointer CLO5292();
static pointer CLO5293();
static pointer CLO5294();
static pointer CLO5295();
static pointer CLO5296();
static pointer CLO5297();
static pointer CLO5298();
static pointer CLO5299();
static pointer CLO5300();
static pointer (*ftab[36])();

#define QUOTE_STRINGS_SIZE 405
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "make-cube",
    ":pos",
    "make-cylinder",
    ":assoc",
    "normalize-vector",
    "#f(0.0 0.0 1.0)",
    "eps=",
    "#f(1.0 0.0 0.0)",
    "make-coords",
    ":rotate",
    "#f(0.0 0.0 -1.0)",
    "acos",
    ":rot",
    "make-prism",
    "super",
    ":init",
    "make-cascoords",
    ":bodies",
    ":name",
    "'user::end",
    ":set-color",
    ":red",
    "'user::root",
    ":darkgreen",
    ":green",
    ":locate",
    ":worldpos",
    ":world",
    ":worldcoords",
    "#(:order :bvh-offset-rotation)",
    ":z",
    ":x",
    ":y",
    "unit-matrix",
    "send-message",
    ":joint-angle-bvh-impl",
    "float-vector",
    "deg2rad",
    ":joint-angle",
    "rad2deg",
    "user::matrix-log",
    "cons",
    "matrix-to-euler-angle",
    "#(:order :scale :bvh-offset-rotation)",
    "#(:tree :coords :scale)",
    ":coords",
    ":make-bvh-link",
    ":scale",
    ":transform",
    ":init-ending",
    "#(:parent :scale)",
    "user::bvh-link",
    "user::end",
    "user::root",
    "user::bodyset-link",
    "user::root-parent",
    "3",
    "user::bvh-sphere-joint",
    "6",
    "user::bvh-6dof-joint",
    "\"unknown joint type ~A~%\"",
    "warning-message",
    ":child-link",
    ":parent-link",
    ":bvh-offset-rotation",
    ":bvh-offset-rotate",
    ":order",
    "user::xrotation",
    "user::yrotation",
    "user::zrotation",
    "reduce",
    ":parent",
    "user::calc-target-joint-dimension",
    ":joint-dof",
    "1",
    "3",
    ":joint-angle-bvh-offset",
    "#(:depth :strm)",
    "*standard-output*",
    "make-string",
    "fill",
    ":offset",
    ":channels",
    ":joint",
    ":axis-order",
    "\"~A~A ~A~%\"",
    ":type",
    "string-upcase",
    "\"~A{~%\"",
    "\"  ~AOFFSET ~0,6f ~0,6f ~0,6f~%\"",
    "\"  ~ACHANNELS ~A\"",
    "\" Xrotation\"",
    "\" Yrotation\"",
    "\" Zrotation\"",
    "\" ~A\"",
    "\"~%\"",
    ":child-links",
    ":dump-joints",
    ":depth",
    ":strm",
    ":descendants",
    "find-if",
    "\"  ~AEnd Site~%\"",
    "\"  ~A{~%\"",
    "\"    ~A OFFSET ~0,6f ~0,6f ~0,6f~%\"",
    "\"  ~A}~%\"",
    "\"~A}~%\"",
    "\"HIERARCHY~%\"",
    "\"MOTION~%\"",
    "\"Frames: 100~%\"",
    "\"Frame Time: 0.033333~%\"",
    ":joint-angle-bvh",
    "\"~0,6f \"",
    "\"~%\"",
    "\"subclass's responsibility :copy-state-to~%\"",
    "user::offset",
    "assoc",
    "substitute",
    "#(:scale)",
    "(user::root user::joint user::end)",
    "user::channels",
    "#(:scale)",
    "copy-readtable",
    "*readtable*",
    "set-syntax-from-char",
    ":direction",
    ":input",
    "open",
    "user::motion",
    "\"\"",
    "line",
    "\"(float-vector ~A)\"",
    "read-from-string",
    "\";; Reading motion capture data from \\\"~A\\\"~%\"",
    "\";;  ~A joints, ~A frames~%\"",
    "user::hierarchy",
    "user::motions",
    "user::frames",
    "user::frame-time",
    "read-delimited-list",
    "user::bvh-robot-model",
    "send",
    ":tree",
    "#(:coords :scale)",
    "last",
    "user:forward-message-to",
    ":joint-list",
    "#(:start :step :end :interval)",
    ":frame-length",
    ":frame",
    ":animate",
    "*viewer*",
    ":pickviewer",
    ":look-all",
    "user::objects",
    "user::robot-model",
    ":model",
    ":copy-state-to",
    "*standard-input*",
    "select-stream",
    "unix:usleep",
    "x::window-main-one",
    "#(:objects)",
    "user::load-mcd",
    "user::site",
    ":rpy",
    "user::leftcollar",
    ":key",
    "find",
    "user::leftshoulder",
    "user::leftelbow",
    "user::leftwrist",
    "user::rightcollar",
    "user::rightshoulder",
    "user::rightelbow",
    "user::rightwrist",
    "user::lefthip",
    "user::leftknee",
    "user::leftankle",
    "user::righthip",
    "user::rightknee",
    "user::rightankle",
    "user::chest",
    "user::neck",
    "user::head",
    ":init-end-coords",
    ":init-root-link",
    "user::joint",
    "\"~A-~A-R\"",
    "symbol-name",
    "\"KEYWORD\"",
    "find-method",
    "\"~A-R\"",
    "\"KEYWORD\"",
    "\"~A-~A-P\"",
    "\"KEYWORD\"",
    "\"~A-P\"",
    "\"KEYWORD\"",
    "\"~A-~A-Y\"",
    "\"KEYWORD\"",
    "\"~A-Y\"",
    "\"KEYWORD\"",
    "(:larm :rarm)",
    "(:collar :shoulder :elbow :wrist)",
    "user::euscollada-robot",
    ":copy-joint-to",
    ":rarm",
    "(:lleg :rleg)",
    "(:crotch :knee :ankle)",
    ":rleg",
    ":torso",
    ":chest",
    ":head",
    ":neck",
    ":newcoords",
    ":transformation",
    "user::sb.l",
    "user::oa.l",
    "user::ua.l",
    "user::ha.l",
    "user::fi.l",
    "user::sb.r",
    "user::oa.r",
    "user::ua.r",
    "user::ha.r",
    "user::fi.r",
    "user::os.l",
    "user::us.l",
    "user::fu.l",
    "user::fb.l",
    "user::os.r",
    "user::us.r",
    "user::fu.r",
    "user::fb.r",
    "user::ulw",
    "user::olw",
    "user::ubw",
    "user::obw",
    "user::uhw",
    "user::brk",
    "user::ohw",
    "user::ko",
    "user::leftarm",
    "user::leftforearm",
    "user::lefthand",
    "user::lthumb",
    "user::rightarm",
    "user::rightforearm",
    "user::righthand",
    "user::rthumb",
    "user::lhipjoint",
    "user::leftupleg",
    "user::leftleg",
    "user::leftfoot",
    "user::lefttoebase",
    "user::rhipjoint",
    "user::rightupleg",
    "user::rightleg",
    "user::rightfoot",
    "user::righttoebase",
    "user::lowerback",
    "user::spine",
    "user::spine1",
    "user::neck1",
    "#(:scale :coords :bvh-robot-model-class)",
    "user::motion-capture-data",
    "user::bvh2eus",
    ":bvh-robot-model-class",
    "user::rikiya-bvh-robot-model",
    "user::cmu-bvh-robot-model",
    "user::tum-bvh-robot-model",
    "#(:num :cls)",
    "user::a",
    "\"~A/bvh/rikiya/rbvh_~A/~A~0,2d.bvh\"",
    "\"EUSDIR\"",
    "\"~A\"",
    "#(:num :cls)",
    "\"~A/bvh/tum-kitchen/~A-~A/poses.bvh\"",
    "\"EUSDIR\"",
    "#(:num :cls)",
    "\"~A/bvh/cmu-mocap/~0,2d/~0,2d_~0,2d.bvh\"",
    "\"EUSDIR\"",
    "\"USER\"",
    "\"USER\"",
    "*package*",
    "\"no such package\"",
    ":global",
    ":super",
    ":slots",
    "(type user::offset user::channels user::neutral)",
    ":metaclass",
    ":element-type",
    ":size",
    ":documentation",
    "make-class",
    "\"create link for bvh model\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "user::sphere-joint",
    "(user::axis-order user::bvh-offset-rotation)",
    "\"create joint for bvh model\"",
    "\"(self class &optional v)\"",
    "\"(self class &optional v)\"",
    "\"(self class v bvh-offset)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "user::6dof-joint",
    "(scale user::axis-order user::bvh-offset-rotation)",
    "\"(self class &rest args &key (order (list :x :y :z :z :x :y)) ((:scale scl)) ((:bvh-offset-rotation bvh-rotation) (unit-matrix 3)) &allow-other-keys)\"",
    "\"(self class &optional v)\"",
    "\"(self class &optional v)\"",
    "\"(self class v bvh-offset)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "nil",
    "\"create robot model for bvh model\"",
    "\"(self class tree &key parent ((:scale scl)))\"",
    ":angle-vector",
    "\"(self class &optional vec (angle-vector (instantiate float-vector (calc-target-joint-dimension joint-list))))\"",
    "\"(self class links &key (depth 0) (strm *standard-output*))\"",
    ":dump-hierarchy",
    "\"(self class &optional (strm *standard-output*))\"",
    ":dump-motion",
    "\"(self class &optional (strm *standard-output*))\"",
    "\"(self class robot)\"",
    ":fix-joint-angle",
    "\"(self class i limb joint-name joint-order a)\"",
    ":fix-joint-order",
    "\"(self class jo limb)\"",
    "\"(self class name)\"",
    "user::parse-bvh-sexp",
    "\"(src &key ((:scale scl)))\"",
    "user::read-bvh",
    "\"read bvh file\"",
    "user::make-bvh-robot-model",
    "\"(bvh-data &rest args)\"",
    "propertied-object",
    "(user::frame user::model user::animation)",
    "\"(self class fname &key (coords (make-coords)) ((:scale scl)))\"",
    "\"(self class &rest args)\"",
    ":animation",
    "\"(self class &rest args)\"",
    "\"(self class &optional f)\"",
    "\"(self class)\"",
    "\"(self class &rest args &key (start 0) (step 1) (end (send self :frame-length)) (interval 20) &allow-other-keys)\"",
    "\"read bvh file and anmiate robot model in the viewer\n\nfor Supported bvh data, such as\n\n- CMU motion capture database\n   (https://sites.google.com/a/cgspeed.com/cgspeed/motion-capture/cmu-bvh-conversion)\n\n- The TUM Kitchen Data Set\n   (http://ias.cs.tum.edu/download/kitchen-activity-data)\n\nUse\n\n(tum-bvh2eus \\\"Take 005.bvh\\\")   ;; tum\n(rikiya-bvh2eus \\\"A01.bvh\\\")     ;; rikiya\n(cmu-bvh2eus \\\"01_01.bvh\\\")      ;; cmu\n\n\nOther Sites are:\n (http://www.mocapdata.com/page.cgi?p=free_motions)\n (http://www.motekentertainment.com/)\n (http://www.mocapclub.com/Pages/Library.htm)\n\n(bvh2eus \\\"poses.bvh\\\")\n \"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class &rest args)\"",
    ":larm-collar",
    "\"(self class &rest args)\"",
    ":larm-shoulder",
    "\"(self class &rest args)\"",
    ":larm-elbow",
    "\"(self class &rest args)\"",
    ":larm-wrist",
    "\"(self class &rest args)\"",
    ":rarm-collar",
    "\"(self class &rest args)\"",
    ":rarm-shoulder",
    "\"(self class &rest args)\"",
    ":rarm-elbow",
    "\"(self class &rest args)\"",
    ":rarm-wrist",
    "\"(self class &rest args)\"",
    ":lleg-crotch",
    "\"(self class &rest args)\"",
    ":lleg-knee",
    "\"(self class &rest args)\"",
    ":lleg-ankle",
    "\"(self class &rest args)\"",
    ":rleg-crotch",
    "\"(self class &rest args)\"",
    ":rleg-knee",
    "\"(self class &rest args)\"",
    ":rleg-ankle",
    "\"(self class &rest args)\"",
    ":torso-chest",
    "\"(self class &rest args)\"",
    ":head-neck",
    "\"(self class &rest args)\"",
    "\"(self class robot limb joint &optional (sign 1))\"",
    "\"(self class robot)\"",
    "\"(self class &rest args)\"",
    "\"(self class &rest args)\"",
    "\"load motion capture data\"",
    "user::rikiya-bvh2eus",
    "\"read rikiya bvh file and anmiate robot model in the viewer\n(rikiya-bvh2eus \\\"A01.bvh\\\")\n\"",
    "user::cmu-bvh2eus",
    "\"read cmu bvh file and anmiate robot model in the viewer\n\nCMU motion capture database\n (https://sites.google.com/a/cgspeed.com/cgspeed/motion-capture/cmu-bvh-conversion)\n\n(cmu-bvh2eus \\\"01_01.bvh\\\" :scale 100.0)\n\"",
    "user::tum-bvh2eus",
    "\"read tum file and anmiate robot model in the viewer\n\nThe TUM Kitchen Data Set\n (http://ias.cs.tum.edu/download/kitchen-activity-data)\n\n(tum-bvh2eus \\\"Take 005.bvh\\\" :scale 10.0)\n\"",
    "user::rikiya-file",
    "\"(&key (num 1) (cls 'a))\"",
    "user::tum-kitchen-file",
    "\"(&key (num 1) (cls 0))\"",
    "user::cmu-mocap-file",
    "\"(&key (num 1) (cls 1))\"",
    "\"GEOMETRY\"",
    "\"GEOMETRY\"",
    "\"no such package\"",
    ":irtbvh",
    "\"$Id: \"",
    "provide",
  };
