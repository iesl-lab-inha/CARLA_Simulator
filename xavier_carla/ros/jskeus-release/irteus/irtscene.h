static pointer CLO643();
static pointer CLO679();
static pointer CLO680();
static pointer CLO722();
static pointer CLO723();
static pointer CLO735();
static pointer CLO745();
static pointer (*ftab[11])();

#define QUOTE_STRINGS_SIZE 87
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "#(:name :objects :remove-wall)",
    "\"scene\"",
    "send-message",
    "super",
    ":init",
    ":name",
    "delete-if",
    ":assoc",
    "cascaded-coords",
    ":width",
    "#f(0.294118 0.572549 0.858823)",
    ":color",
    ":size",
    ":find-object",
    "\"object with name ~A already exists.\"",
    ":add-objects",
    ":object",
    "\"object ~A not found in scene\"",
    "set-difference",
    ":remove-objects",
    "null-string-p",
    "\"spot name must not be empty!: ~A\"",
    "\"class of spot ~A must be cascaded-coords\"",
    ":parent",
    "\"parent of spot ~A must be ~A. please dissoc at first.\"",
    ":spot",
    "\"spot with name ~A already exists.\"",
    ":add-spots",
    "\"class of spot ~A must be cascaded-coords. To remove object(s) from scene, use :remove-object(s).\"",
    ":dissoc",
    ":remove-spots",
    "remove-if-not",
    "0",
    "\"could not found object(~A)\"",
    "warning-message",
    "1",
    "\"found multiple object ~A for given name(~A)\"",
    ":spots",
    "0",
    "\"could not found spot(~A)\"",
    "1",
    "\"found multiple spot ~A for given name(~A)\"",
    "flatten",
    "\"wall\"",
    "substringp",
    "user::scene-model",
    "string=",
    ":bodies",
    "find-method",
    "\"USER\"",
    "\"USER\"",
    "*package*",
    "\"no such package\"",
    ":global",
    ":super",
    ":slots",
    "(name user::objs)",
    ":metaclass",
    ":element-type",
    ":documentation",
    "make-class",
    "\"Create scene model\"",
    ":objects",
    "\"Returns objects in the scene.\"",
    "\"Add objects to scene with identifiable names. Returns all objects.\"",
    ":add-object",
    "\"Add object to scene with identifiable name. Returns all objects.\"",
    "\"Remove objects or objects with given names from scene. Returns removed objects.\"",
    ":remove-object",
    "\"Remove object or object with given name from scene. Returns removed object.\"",
    "\"Returns objects with given name.\"",
    "\"Add spots to scene with identifiable names. All spots will be :assoc with this scene. Returns T if added spots successfly, otherwise returns NIL.\"",
    ":add-spot",
    "\"Add spot to scene with identifiable name. The spot will be :assoc with this scene. Returns T if spot is added successfly, otherwise returns NIL.\"",
    "\"Remove spots from this scene. All spots will be :dissoc with this scene. Returns removed spots.\"",
    ":remove-spot",
    "\"Remove spot from scene. the spot will be :dissoc with this scene. Returns removed spot.\"",
    "\"Return all spots in the scene.\"",
    "\"Return an object of given name.\"",
    "\"Return a spot of given name.\"",
    "\"(self class)\"",
    "\"GEOMETRY\"",
    "\"GEOMETRY\"",
    "\"no such package\"",
    ":irtscene",
    "\"$Id: $\"",
    "provide",
  };
