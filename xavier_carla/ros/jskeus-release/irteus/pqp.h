static pointer (*ftab[9])();

#define QUOTE_STRINGS_SIZE 39
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "#(:fat :faces)",
    ":faces",
    "pqpmakemodel",
    ":pqpmodel",
    "pqpbeginmodel",
    "face-to-triangle-aux",
    ":vertices",
    ":inverse-transform-vector",
    "normalize-vector",
    "pqpaddtri",
    "pqpendmodel",
    "#(:fat :fat2)",
    ":worldrot",
    ":worldpos",
    ":make-pqpmodel",
    ":fat",
    "pqpcollide",
    "#(:fat :fat2 :qsize)",
    "pqpdistance",
    "#(:fat)",
    "\"GEOMETRY\"",
    "\"GEOMETRY\"",
    "*package*",
    "\"no such package\"",
    "(pqp-collision-check pqp-collision-distance pqp-collision-check-objects)",
    "pqp_all_contacts",
    ":constant",
    "pqp_first_contact",
    "cascaded-coords",
    "\"(self class &key (fat 0) ((:faces fs) (send self :faces)))\"",
    "pqp-collision-check",
    "\"Check collision between model1 and model2 using PQP.\n   If return value is 0, no collision.\n   Otherwise (return value is 1), collision.\"",
    "pqp-collision-distance",
    "\"Calculate collision distance between model1 and model2 using PQP.\n   Return value is (list [distance] [nearest point on model1] [nearest point on model2]).\n   If collision occurs, [distance] is 0 and nearest points are insignificant values.\"",
    "pqp-collision-check-objects",
    "\"return nil or t\"",
    ":pqp",
    "\"$Id$\"",
    "provide",
  };
