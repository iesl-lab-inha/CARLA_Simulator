;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73a3-clock-object
  :super cascaded-link
  :slots (sensors
         joint0 joint1 joint2 ))
(defmethod room73a3-clock-object
  (:init
   (&rest args &key (name "room73a3-clock") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room73a3-clock-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 6.0 -31.0583 34.0889) (float-vector 6.0 0.0 30.0) (float-vector 6.0 31.0583 34.0889) (float-vector 6.0 60.0 46.077) (float-vector 6.0 84.8528 65.1472) (float-vector 6.0 103.923 90.0) (float-vector 6.0 115.911 118.942) (float-vector 6.0 120.0 150.0) (float-vector 6.0 115.911 181.058) (float-vector 6.0 103.923 210.0) (float-vector 6.0 84.8528 234.853) (float-vector 6.0 60.0 253.923) (float-vector 6.0 31.0583 265.911) (float-vector 6.0 2.273737e-13 270.0) (float-vector 6.0 -31.0583 265.911) (float-vector 6.0 -60.0 253.923) (float-vector 6.0 -84.8528 234.853) (float-vector 6.0 -103.923 210.0) (float-vector 6.0 -115.911 181.058) (float-vector 6.0 -120.0 150.0) (float-vector 6.0 -115.911 118.942) (float-vector 6.0 -103.923 90.0) (float-vector 6.0 -84.8528 65.1472) (float-vector 6.0 -60.0 46.077)))
         (instance face :init :vertices (list (float-vector 1.0 0.0 30.0) (float-vector 1.0 -31.0583 34.0889) (float-vector 1.0 -60.0 46.077) (float-vector 1.0 -84.8528 65.1472) (float-vector 1.0 -103.923 90.0) (float-vector 1.0 -115.911 118.942) (float-vector 1.0 -120.0 150.0) (float-vector 1.0 -115.911 181.058) (float-vector 1.0 -103.923 210.0) (float-vector 1.0 -84.8528 234.853) (float-vector 1.0 -60.0 253.923) (float-vector 1.0 -31.0583 265.911) (float-vector 1.0 2.273737e-13 270.0) (float-vector 1.0 31.0583 265.911) (float-vector 1.0 60.0 253.923) (float-vector 1.0 84.8528 234.853) (float-vector 1.0 103.923 210.0) (float-vector 1.0 115.911 181.058) (float-vector 1.0 120.0 150.0) (float-vector 1.0 115.911 118.942) (float-vector 1.0 103.923 90.0) (float-vector 1.0 84.8528 65.1472) (float-vector 1.0 60.0 46.077) (float-vector 1.0 31.0583 34.0889)))
         (instance face :init :vertices (list (float-vector 6.0 -31.0583 34.0889) (float-vector 1.0 -31.0583 34.0889) (float-vector 1.0 0.0 30.0) (float-vector 6.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 6.0 -60.0 46.077) (float-vector 1.0 -60.0 46.077) (float-vector 1.0 -31.0583 34.0889) (float-vector 6.0 -31.0583 34.0889)))
         (instance face :init :vertices (list (float-vector 6.0 -84.8528 65.1472) (float-vector 1.0 -84.8528 65.1472) (float-vector 1.0 -60.0 46.077) (float-vector 6.0 -60.0 46.077)))
         (instance face :init :vertices (list (float-vector 6.0 -103.923 90.0) (float-vector 1.0 -103.923 90.0) (float-vector 1.0 -84.8528 65.1472) (float-vector 6.0 -84.8528 65.1472)))
         (instance face :init :vertices (list (float-vector 6.0 -115.911 118.942) (float-vector 1.0 -115.911 118.942) (float-vector 1.0 -103.923 90.0) (float-vector 6.0 -103.923 90.0)))
         (instance face :init :vertices (list (float-vector 6.0 -120.0 150.0) (float-vector 1.0 -120.0 150.0) (float-vector 1.0 -115.911 118.942) (float-vector 6.0 -115.911 118.942)))
         (instance face :init :vertices (list (float-vector 6.0 -115.911 181.058) (float-vector 1.0 -115.911 181.058) (float-vector 1.0 -120.0 150.0) (float-vector 6.0 -120.0 150.0)))
         (instance face :init :vertices (list (float-vector 6.0 -103.923 210.0) (float-vector 1.0 -103.923 210.0) (float-vector 1.0 -115.911 181.058) (float-vector 6.0 -115.911 181.058)))
         (instance face :init :vertices (list (float-vector 6.0 -84.8528 234.853) (float-vector 1.0 -84.8528 234.853) (float-vector 1.0 -103.923 210.0) (float-vector 6.0 -103.923 210.0)))
         (instance face :init :vertices (list (float-vector 6.0 -60.0 253.923) (float-vector 1.0 -60.0 253.923) (float-vector 1.0 -84.8528 234.853) (float-vector 6.0 -84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 6.0 -31.0583 265.911) (float-vector 1.0 -31.0583 265.911) (float-vector 1.0 -60.0 253.923) (float-vector 6.0 -60.0 253.923)))
         (instance face :init :vertices (list (float-vector 6.0 2.273737e-13 270.0) (float-vector 1.0 2.273737e-13 270.0) (float-vector 1.0 -31.0583 265.911) (float-vector 6.0 -31.0583 265.911)))
         (instance face :init :vertices (list (float-vector 6.0 31.0583 265.911) (float-vector 1.0 31.0583 265.911) (float-vector 1.0 2.273737e-13 270.0) (float-vector 6.0 2.273737e-13 270.0)))
         (instance face :init :vertices (list (float-vector 6.0 60.0 253.923) (float-vector 1.0 60.0 253.923) (float-vector 1.0 31.0583 265.911) (float-vector 6.0 31.0583 265.911)))
         (instance face :init :vertices (list (float-vector 6.0 84.8528 234.853) (float-vector 1.0 84.8528 234.853) (float-vector 1.0 60.0 253.923) (float-vector 6.0 60.0 253.923)))
         (instance face :init :vertices (list (float-vector 6.0 103.923 210.0) (float-vector 1.0 103.923 210.0) (float-vector 1.0 84.8528 234.853) (float-vector 6.0 84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 6.0 115.911 181.058) (float-vector 1.0 115.911 181.058) (float-vector 1.0 103.923 210.0) (float-vector 6.0 103.923 210.0)))
         (instance face :init :vertices (list (float-vector 6.0 120.0 150.0) (float-vector 1.0 120.0 150.0) (float-vector 1.0 115.911 181.058) (float-vector 6.0 115.911 181.058)))
         (instance face :init :vertices (list (float-vector 6.0 115.911 118.942) (float-vector 1.0 115.911 118.942) (float-vector 1.0 120.0 150.0) (float-vector 6.0 120.0 150.0)))
         (instance face :init :vertices (list (float-vector 6.0 103.923 90.0) (float-vector 1.0 103.923 90.0) (float-vector 1.0 115.911 118.942) (float-vector 6.0 115.911 118.942)))
         (instance face :init :vertices (list (float-vector 6.0 84.8528 65.1472) (float-vector 1.0 84.8528 65.1472) (float-vector 1.0 103.923 90.0) (float-vector 6.0 103.923 90.0)))
         (instance face :init :vertices (list (float-vector 6.0 60.0 46.077) (float-vector 1.0 60.0 46.077) (float-vector 1.0 84.8528 65.1472) (float-vector 6.0 84.8528 65.1472)))
         (instance face :init :vertices (list (float-vector 6.0 31.0583 34.0889) (float-vector 1.0 31.0583 34.0889) (float-vector 1.0 60.0 46.077) (float-vector 6.0 60.0 46.077)))
         (instance face :init :vertices (list (float-vector 6.0 0.0 30.0) (float-vector 1.0 0.0 30.0) (float-vector 1.0 31.0583 34.0889) (float-vector 6.0 31.0583 34.0889)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.0 0.0 0.0) (float-vector 5.0 38.8229 5.11113) (float-vector 20.0 38.8229 5.11113) (float-vector 20.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.0 75.0 20.0962) (float-vector 20.0 75.0 20.0962) (float-vector 20.0 38.8229 5.11113) (float-vector 5.0 38.8229 5.11113)))
         (instance face :init :vertices (list (float-vector 5.0 106.066 43.934) (float-vector 20.0 106.066 43.934) (float-vector 20.0 75.0 20.0962) (float-vector 5.0 75.0 20.0962)))
         (instance face :init :vertices (list (float-vector 5.0 129.904 75.0) (float-vector 20.0 129.904 75.0) (float-vector 20.0 106.066 43.934) (float-vector 5.0 106.066 43.934)))
         (instance face :init :vertices (list (float-vector 5.0 144.889 111.177) (float-vector 20.0 144.889 111.177) (float-vector 20.0 129.904 75.0) (float-vector 5.0 129.904 75.0)))
         (instance face :init :vertices (list (float-vector 5.0 150.0 150.0) (float-vector 20.0 150.0 150.0) (float-vector 20.0 144.889 111.177) (float-vector 5.0 144.889 111.177)))
         (instance face :init :vertices (list (float-vector 5.0 144.889 188.823) (float-vector 20.0 144.889 188.823) (float-vector 20.0 150.0 150.0) (float-vector 5.0 150.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.0 129.904 225.0) (float-vector 20.0 129.904 225.0) (float-vector 20.0 144.889 188.823) (float-vector 5.0 144.889 188.823)))
         (instance face :init :vertices (list (float-vector 5.0 106.066 256.066) (float-vector 20.0 106.066 256.066) (float-vector 20.0 129.904 225.0) (float-vector 5.0 129.904 225.0)))
         (instance face :init :vertices (list (float-vector 5.0 75.0 279.904) (float-vector 20.0 75.0 279.904) (float-vector 20.0 106.066 256.066) (float-vector 5.0 106.066 256.066)))
         (instance face :init :vertices (list (float-vector 5.0 38.8229 294.889) (float-vector 20.0 38.8229 294.889) (float-vector 20.0 75.0 279.904) (float-vector 5.0 75.0 279.904)))
         (instance face :init :vertices (list (float-vector 5.0 2.273737e-13 300.0) (float-vector 20.0 2.273737e-13 300.0) (float-vector 20.0 38.8229 294.889) (float-vector 5.0 38.8229 294.889)))
         (instance face :init :vertices (list (float-vector 5.0 -38.8229 294.889) (float-vector 20.0 -38.8229 294.889) (float-vector 20.0 2.273737e-13 300.0) (float-vector 5.0 2.273737e-13 300.0)))
         (instance face :init :vertices (list (float-vector 5.0 -75.0 279.904) (float-vector 20.0 -75.0 279.904) (float-vector 20.0 -38.8229 294.889) (float-vector 5.0 -38.8229 294.889)))
         (instance face :init :vertices (list (float-vector 5.0 -106.066 256.066) (float-vector 20.0 -106.066 256.066) (float-vector 20.0 -75.0 279.904) (float-vector 5.0 -75.0 279.904)))
         (instance face :init :vertices (list (float-vector 5.0 -129.904 225.0) (float-vector 20.0 -129.904 225.0) (float-vector 20.0 -106.066 256.066) (float-vector 5.0 -106.066 256.066)))
         (instance face :init :vertices (list (float-vector 5.0 -144.889 188.823) (float-vector 20.0 -144.889 188.823) (float-vector 20.0 -129.904 225.0) (float-vector 5.0 -129.904 225.0)))
         (instance face :init :vertices (list (float-vector 5.0 -150.0 150.0) (float-vector 20.0 -150.0 150.0) (float-vector 20.0 -144.889 188.823) (float-vector 5.0 -144.889 188.823)))
         (instance face :init :vertices (list (float-vector 5.0 -144.889 111.177) (float-vector 20.0 -144.889 111.177) (float-vector 20.0 -150.0 150.0) (float-vector 5.0 -150.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.0 -129.904 75.0) (float-vector 20.0 -129.904 75.0) (float-vector 20.0 -144.889 111.177) (float-vector 5.0 -144.889 111.177)))
         (instance face :init :vertices (list (float-vector 5.0 -106.066 43.934) (float-vector 20.0 -106.066 43.934) (float-vector 20.0 -129.904 75.0) (float-vector 5.0 -129.904 75.0)))
         (instance face :init :vertices (list (float-vector 5.0 -75.0 20.0962) (float-vector 20.0 -75.0 20.0962) (float-vector 20.0 -106.066 43.934) (float-vector 5.0 -106.066 43.934)))
         (instance face :init :vertices (list (float-vector 5.0 -38.8229 5.11113) (float-vector 20.0 -38.8229 5.11113) (float-vector 20.0 -75.0 20.0962) (float-vector 5.0 -75.0 20.0962)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 0.0) (float-vector 20.0 38.8229 5.11113) (float-vector 20.0 75.0 20.0962) (float-vector 20.0 106.066 43.934) (float-vector 20.0 129.904 75.0) (float-vector 20.0 144.889 111.177) (float-vector 20.0 150.0 150.0) (float-vector 20.0 144.889 188.823) (float-vector 20.0 129.904 225.0) (float-vector 20.0 106.066 256.066) (float-vector 20.0 75.0 279.904) (float-vector 20.0 38.8229 294.889) (float-vector 20.0 2.273737e-13 300.0) (float-vector 20.0 -38.8229 294.889) (float-vector 20.0 -75.0 279.904) (float-vector 20.0 -106.066 256.066) (float-vector 20.0 -129.904 225.0) (float-vector 20.0 -144.889 188.823) (float-vector 20.0 -150.0 150.0) (float-vector 20.0 -144.889 111.177) (float-vector 20.0 -129.904 75.0) (float-vector 20.0 -106.066 43.934) (float-vector 20.0 -75.0 20.0962) (float-vector 20.0 -38.8229 5.11113))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 20.0 -31.0583 34.0889) (float-vector 20.0 -60.0 46.077) (float-vector 20.0 -84.8528 65.1472) (float-vector 20.0 -103.923 90.0) (float-vector 20.0 -115.911 118.942) (float-vector 20.0 -120.0 150.0) (float-vector 20.0 -115.911 181.058) (float-vector 20.0 -103.923 210.0) (float-vector 20.0 -84.8528 234.853) (float-vector 20.0 -60.0 253.923) (float-vector 20.0 -31.0583 265.911) (float-vector 20.0 2.273737e-13 270.0) (float-vector 20.0 31.0583 265.911) (float-vector 20.0 60.0 253.923) (float-vector 20.0 84.8528 234.853) (float-vector 20.0 103.923 210.0) (float-vector 20.0 115.911 181.058) (float-vector 20.0 120.0 150.0) (float-vector 20.0 115.911 118.942) (float-vector 20.0 103.923 90.0) (float-vector 20.0 84.8528 65.1472) (float-vector 20.0 60.0 46.077) (float-vector 20.0 31.0583 34.0889) (float-vector 20.0 0.0 30.0)))
))
         (instance face :init :vertices (list (float-vector 5.0 -38.8229 5.11113) (float-vector 5.0 -75.0 20.0962) (float-vector 5.0 -106.066 43.934) (float-vector 5.0 -129.904 75.0) (float-vector 5.0 -144.889 111.177) (float-vector 5.0 -150.0 150.0) (float-vector 5.0 -144.889 188.823) (float-vector 5.0 -129.904 225.0) (float-vector 5.0 -106.066 256.066) (float-vector 5.0 -75.0 279.904) (float-vector 5.0 -38.8229 294.889) (float-vector 5.0 2.273737e-13 300.0) (float-vector 5.0 38.8229 294.889) (float-vector 5.0 75.0 279.904) (float-vector 5.0 106.066 256.066) (float-vector 5.0 129.904 225.0) (float-vector 5.0 144.889 188.823) (float-vector 5.0 150.0 150.0) (float-vector 5.0 144.889 111.177) (float-vector 5.0 129.904 75.0) (float-vector 5.0 106.066 43.934) (float-vector 5.0 75.0 20.0962) (float-vector 5.0 38.8229 5.11113) (float-vector 5.0 0.0 0.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.0 -31.0583 34.0889) (float-vector 5.0 0.0 30.0) (float-vector 5.0 31.0583 34.0889) (float-vector 5.0 60.0 46.077) (float-vector 5.0 84.8528 65.1472) (float-vector 5.0 103.923 90.0) (float-vector 5.0 115.911 118.942) (float-vector 5.0 120.0 150.0) (float-vector 5.0 115.911 181.058) (float-vector 5.0 103.923 210.0) (float-vector 5.0 84.8528 234.853) (float-vector 5.0 60.0 253.923) (float-vector 5.0 31.0583 265.911) (float-vector 5.0 2.273737e-13 270.0) (float-vector 5.0 -31.0583 265.911) (float-vector 5.0 -60.0 253.923) (float-vector 5.0 -84.8528 234.853) (float-vector 5.0 -103.923 210.0) (float-vector 5.0 -115.911 181.058) (float-vector 5.0 -120.0 150.0) (float-vector 5.0 -115.911 118.942) (float-vector 5.0 -103.923 90.0) (float-vector 5.0 -84.8528 65.1472) (float-vector 5.0 -60.0 46.077)))
))
         (instance face :init :vertices (list (float-vector 5.0 0.0 0.0) (float-vector 20.0 0.0 0.0) (float-vector 20.0 -38.8229 5.11113) (float-vector 5.0 -38.8229 5.11113)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 20.0 31.0583 34.0889) (float-vector 5.0 31.0583 34.0889) (float-vector 5.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 5.0 60.0 46.077) (float-vector 5.0 31.0583 34.0889) (float-vector 20.0 31.0583 34.0889) (float-vector 20.0 60.0 46.077)))
         (instance face :init :vertices (list (float-vector 5.0 84.8528 65.1472) (float-vector 5.0 60.0 46.077) (float-vector 20.0 60.0 46.077) (float-vector 20.0 84.8528 65.1472)))
         (instance face :init :vertices (list (float-vector 5.0 103.923 90.0) (float-vector 5.0 84.8528 65.1472) (float-vector 20.0 84.8528 65.1472) (float-vector 20.0 103.923 90.0)))
         (instance face :init :vertices (list (float-vector 5.0 115.911 118.942) (float-vector 5.0 103.923 90.0) (float-vector 20.0 103.923 90.0) (float-vector 20.0 115.911 118.942)))
         (instance face :init :vertices (list (float-vector 5.0 120.0 150.0) (float-vector 5.0 115.911 118.942) (float-vector 20.0 115.911 118.942) (float-vector 20.0 120.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.0 115.911 181.058) (float-vector 5.0 120.0 150.0) (float-vector 20.0 120.0 150.0) (float-vector 20.0 115.911 181.058)))
         (instance face :init :vertices (list (float-vector 5.0 103.923 210.0) (float-vector 5.0 115.911 181.058) (float-vector 20.0 115.911 181.058) (float-vector 20.0 103.923 210.0)))
         (instance face :init :vertices (list (float-vector 5.0 84.8528 234.853) (float-vector 5.0 103.923 210.0) (float-vector 20.0 103.923 210.0) (float-vector 20.0 84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 5.0 60.0 253.923) (float-vector 5.0 84.8528 234.853) (float-vector 20.0 84.8528 234.853) (float-vector 20.0 60.0 253.923)))
         (instance face :init :vertices (list (float-vector 5.0 31.0583 265.911) (float-vector 5.0 60.0 253.923) (float-vector 20.0 60.0 253.923) (float-vector 20.0 31.0583 265.911)))
         (instance face :init :vertices (list (float-vector 5.0 2.273737e-13 270.0) (float-vector 5.0 31.0583 265.911) (float-vector 20.0 31.0583 265.911) (float-vector 20.0 2.273737e-13 270.0)))
         (instance face :init :vertices (list (float-vector 5.0 -31.0583 265.911) (float-vector 5.0 2.273737e-13 270.0) (float-vector 20.0 2.273737e-13 270.0) (float-vector 20.0 -31.0583 265.911)))
         (instance face :init :vertices (list (float-vector 5.0 -60.0 253.923) (float-vector 5.0 -31.0583 265.911) (float-vector 20.0 -31.0583 265.911) (float-vector 20.0 -60.0 253.923)))
         (instance face :init :vertices (list (float-vector 5.0 -84.8528 234.853) (float-vector 5.0 -60.0 253.923) (float-vector 20.0 -60.0 253.923) (float-vector 20.0 -84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 5.0 -103.923 210.0) (float-vector 5.0 -84.8528 234.853) (float-vector 20.0 -84.8528 234.853) (float-vector 20.0 -103.923 210.0)))
         (instance face :init :vertices (list (float-vector 5.0 -115.911 181.058) (float-vector 5.0 -103.923 210.0) (float-vector 20.0 -103.923 210.0) (float-vector 20.0 -115.911 181.058)))
         (instance face :init :vertices (list (float-vector 5.0 -120.0 150.0) (float-vector 5.0 -115.911 181.058) (float-vector 20.0 -115.911 181.058) (float-vector 20.0 -120.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.0 -115.911 118.942) (float-vector 5.0 -120.0 150.0) (float-vector 20.0 -120.0 150.0) (float-vector 20.0 -115.911 118.942)))
         (instance face :init :vertices (list (float-vector 5.0 -103.923 90.0) (float-vector 5.0 -115.911 118.942) (float-vector 20.0 -115.911 118.942) (float-vector 20.0 -103.923 90.0)))
         (instance face :init :vertices (list (float-vector 5.0 -84.8528 65.1472) (float-vector 5.0 -103.923 90.0) (float-vector 20.0 -103.923 90.0) (float-vector 20.0 -84.8528 65.1472)))
         (instance face :init :vertices (list (float-vector 5.0 -60.0 46.077) (float-vector 5.0 -84.8528 65.1472) (float-vector 20.0 -84.8528 65.1472) (float-vector 20.0 -60.0 46.077)))
         (instance face :init :vertices (list (float-vector 5.0 -31.0583 34.0889) (float-vector 5.0 -60.0 46.077) (float-vector 20.0 -60.0 46.077) (float-vector 20.0 -31.0583 34.0889)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 5.0 0.0 30.0) (float-vector 5.0 -31.0583 34.0889) (float-vector 20.0 -31.0583 34.0889)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.0 -38.8229 5.11113) (float-vector 5.0 0.0 0.0) (float-vector 5.0 38.8229 5.11113) (float-vector 5.0 75.0 20.0962) (float-vector 5.0 106.066 43.934) (float-vector 5.0 129.904 75.0) (float-vector 5.0 144.889 111.177) (float-vector 5.0 150.0 150.0) (float-vector 5.0 144.889 188.823) (float-vector 5.0 129.904 225.0) (float-vector 5.0 106.066 256.066) (float-vector 5.0 75.0 279.904) (float-vector 5.0 38.8229 294.889) (float-vector 5.0 2.273737e-13 300.0) (float-vector 5.0 -38.8229 294.889) (float-vector 5.0 -75.0 279.904) (float-vector 5.0 -106.066 256.066) (float-vector 5.0 -129.904 225.0) (float-vector 5.0 -144.889 188.823) (float-vector 5.0 -150.0 150.0) (float-vector 5.0 -144.889 111.177) (float-vector 5.0 -129.904 75.0) (float-vector 5.0 -106.066 43.934) (float-vector 5.0 -75.0 20.0962)))
         (instance face :init :vertices (list (float-vector -20.0 0.0 0.0) (float-vector -20.0 -38.8229 5.11113) (float-vector -20.0 -75.0 20.0962) (float-vector -20.0 -106.066 43.934) (float-vector -20.0 -129.904 75.0) (float-vector -20.0 -144.889 111.177) (float-vector -20.0 -150.0 150.0) (float-vector -20.0 -144.889 188.823) (float-vector -20.0 -129.904 225.0) (float-vector -20.0 -106.066 256.066) (float-vector -20.0 -75.0 279.904) (float-vector -20.0 -38.8229 294.889) (float-vector -20.0 2.273737e-13 300.0) (float-vector -20.0 38.8229 294.889) (float-vector -20.0 75.0 279.904) (float-vector -20.0 106.066 256.066) (float-vector -20.0 129.904 225.0) (float-vector -20.0 144.889 188.823) (float-vector -20.0 150.0 150.0) (float-vector -20.0 144.889 111.177) (float-vector -20.0 129.904 75.0) (float-vector -20.0 106.066 43.934) (float-vector -20.0 75.0 20.0962) (float-vector -20.0 38.8229 5.11113)))
         (instance face :init :vertices (list (float-vector 5.0 -38.8229 5.11113) (float-vector -20.0 -38.8229 5.11113) (float-vector -20.0 0.0 0.0) (float-vector 5.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.0 -75.0 20.0962) (float-vector -20.0 -75.0 20.0962) (float-vector -20.0 -38.8229 5.11113) (float-vector 5.0 -38.8229 5.11113)))
         (instance face :init :vertices (list (float-vector 5.0 -106.066 43.934) (float-vector -20.0 -106.066 43.934) (float-vector -20.0 -75.0 20.0962) (float-vector 5.0 -75.0 20.0962)))
         (instance face :init :vertices (list (float-vector 5.0 -129.904 75.0) (float-vector -20.0 -129.904 75.0) (float-vector -20.0 -106.066 43.934) (float-vector 5.0 -106.066 43.934)))
         (instance face :init :vertices (list (float-vector 5.0 -144.889 111.177) (float-vector -20.0 -144.889 111.177) (float-vector -20.0 -129.904 75.0) (float-vector 5.0 -129.904 75.0)))
         (instance face :init :vertices (list (float-vector 5.0 -150.0 150.0) (float-vector -20.0 -150.0 150.0) (float-vector -20.0 -144.889 111.177) (float-vector 5.0 -144.889 111.177)))
         (instance face :init :vertices (list (float-vector 5.0 -144.889 188.823) (float-vector -20.0 -144.889 188.823) (float-vector -20.0 -150.0 150.0) (float-vector 5.0 -150.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.0 -129.904 225.0) (float-vector -20.0 -129.904 225.0) (float-vector -20.0 -144.889 188.823) (float-vector 5.0 -144.889 188.823)))
         (instance face :init :vertices (list (float-vector 5.0 -106.066 256.066) (float-vector -20.0 -106.066 256.066) (float-vector -20.0 -129.904 225.0) (float-vector 5.0 -129.904 225.0)))
         (instance face :init :vertices (list (float-vector 5.0 -75.0 279.904) (float-vector -20.0 -75.0 279.904) (float-vector -20.0 -106.066 256.066) (float-vector 5.0 -106.066 256.066)))
         (instance face :init :vertices (list (float-vector 5.0 -38.8229 294.889) (float-vector -20.0 -38.8229 294.889) (float-vector -20.0 -75.0 279.904) (float-vector 5.0 -75.0 279.904)))
         (instance face :init :vertices (list (float-vector 5.0 2.273737e-13 300.0) (float-vector -20.0 2.273737e-13 300.0) (float-vector -20.0 -38.8229 294.889) (float-vector 5.0 -38.8229 294.889)))
         (instance face :init :vertices (list (float-vector 5.0 38.8229 294.889) (float-vector -20.0 38.8229 294.889) (float-vector -20.0 2.273737e-13 300.0) (float-vector 5.0 2.273737e-13 300.0)))
         (instance face :init :vertices (list (float-vector 5.0 75.0 279.904) (float-vector -20.0 75.0 279.904) (float-vector -20.0 38.8229 294.889) (float-vector 5.0 38.8229 294.889)))
         (instance face :init :vertices (list (float-vector 5.0 106.066 256.066) (float-vector -20.0 106.066 256.066) (float-vector -20.0 75.0 279.904) (float-vector 5.0 75.0 279.904)))
         (instance face :init :vertices (list (float-vector 5.0 129.904 225.0) (float-vector -20.0 129.904 225.0) (float-vector -20.0 106.066 256.066) (float-vector 5.0 106.066 256.066)))
         (instance face :init :vertices (list (float-vector 5.0 144.889 188.823) (float-vector -20.0 144.889 188.823) (float-vector -20.0 129.904 225.0) (float-vector 5.0 129.904 225.0)))
         (instance face :init :vertices (list (float-vector 5.0 150.0 150.0) (float-vector -20.0 150.0 150.0) (float-vector -20.0 144.889 188.823) (float-vector 5.0 144.889 188.823)))
         (instance face :init :vertices (list (float-vector 5.0 144.889 111.177) (float-vector -20.0 144.889 111.177) (float-vector -20.0 150.0 150.0) (float-vector 5.0 150.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.0 129.904 75.0) (float-vector -20.0 129.904 75.0) (float-vector -20.0 144.889 111.177) (float-vector 5.0 144.889 111.177)))
         (instance face :init :vertices (list (float-vector 5.0 106.066 43.934) (float-vector -20.0 106.066 43.934) (float-vector -20.0 129.904 75.0) (float-vector 5.0 129.904 75.0)))
         (instance face :init :vertices (list (float-vector 5.0 75.0 20.0962) (float-vector -20.0 75.0 20.0962) (float-vector -20.0 106.066 43.934) (float-vector 5.0 106.066 43.934)))
         (instance face :init :vertices (list (float-vector 5.0 38.8229 5.11113) (float-vector -20.0 38.8229 5.11113) (float-vector -20.0 75.0 20.0962) (float-vector 5.0 75.0 20.0962)))
         (instance face :init :vertices (list (float-vector 5.0 0.0 0.0) (float-vector -20.0 0.0 0.0) (float-vector -20.0 38.8229 5.11113) (float-vector 5.0 38.8229 5.11113)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (gl::transparent (elt bc 0) 0.1)
     (send (elt bc 1) :set-color :whitesmoke)
     (send (elt bc 2) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73a3-clock-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73a3-clock-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 3.5 60.0) (float-vector -0.5 3.5 60.0) (float-vector -0.5 -3.5 60.0) (float-vector 0.5 -3.5 60.0)))
         (instance face :init :vertices (list (float-vector -0.5 3.5 0.0) (float-vector 0.5 3.5 0.0) (float-vector 0.5 -3.5 0.0) (float-vector -0.5 -3.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 3.5 60.0) (float-vector 0.5 3.5 0.0) (float-vector -0.5 3.5 0.0) (float-vector -0.5 3.5 60.0)))
         (instance face :init :vertices (list (float-vector 0.5 -3.5 60.0) (float-vector 0.5 -3.5 0.0) (float-vector 0.5 3.5 0.0) (float-vector 0.5 3.5 60.0)))
         (instance face :init :vertices (list (float-vector -0.5 -3.5 60.0) (float-vector -0.5 -3.5 0.0) (float-vector 0.5 -3.5 0.0) (float-vector 0.5 -3.5 60.0)))
         (instance face :init :vertices (list (float-vector -0.5 3.5 60.0) (float-vector -0.5 3.5 0.0) (float-vector -0.5 -3.5 0.0) (float-vector -0.5 -3.5 60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 -5.25 -9.09327) (float-vector 0.5 0.0 -10.5) (float-vector 0.5 5.25 -9.09327) (float-vector 0.5 9.09327 -5.25) (float-vector 0.5 10.5 0.0) (float-vector 0.5 9.09327 5.25) (float-vector 0.5 5.25 9.09327) (float-vector 0.5 0.0 10.5) (float-vector 0.5 -5.25 9.09327) (float-vector 0.5 -9.09327 5.25) (float-vector 0.5 -10.5 0.0) (float-vector 0.5 -9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector -0.5 0.0 -10.5) (float-vector -0.5 -5.25 -9.09327) (float-vector -0.5 -9.09327 -5.25) (float-vector -0.5 -10.5 0.0) (float-vector -0.5 -9.09327 5.25) (float-vector -0.5 -5.25 9.09327) (float-vector -0.5 0.0 10.5) (float-vector -0.5 5.25 9.09327) (float-vector -0.5 9.09327 5.25) (float-vector -0.5 10.5 0.0) (float-vector -0.5 9.09327 -5.25) (float-vector -0.5 5.25 -9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 -5.25 -9.09327) (float-vector -0.5 -5.25 -9.09327) (float-vector -0.5 0.0 -10.5) (float-vector 0.5 0.0 -10.5)))
         (instance face :init :vertices (list (float-vector 0.5 -9.09327 -5.25) (float-vector -0.5 -9.09327 -5.25) (float-vector -0.5 -5.25 -9.09327) (float-vector 0.5 -5.25 -9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 -10.5 0.0) (float-vector -0.5 -10.5 0.0) (float-vector -0.5 -9.09327 -5.25) (float-vector 0.5 -9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector 0.5 -9.09327 5.25) (float-vector -0.5 -9.09327 5.25) (float-vector -0.5 -10.5 0.0) (float-vector 0.5 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 -5.25 9.09327) (float-vector -0.5 -5.25 9.09327) (float-vector -0.5 -9.09327 5.25) (float-vector 0.5 -9.09327 5.25)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 10.5) (float-vector -0.5 0.0 10.5) (float-vector -0.5 -5.25 9.09327) (float-vector 0.5 -5.25 9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 5.25 9.09327) (float-vector -0.5 5.25 9.09327) (float-vector -0.5 0.0 10.5) (float-vector 0.5 0.0 10.5)))
         (instance face :init :vertices (list (float-vector 0.5 9.09327 5.25) (float-vector -0.5 9.09327 5.25) (float-vector -0.5 5.25 9.09327) (float-vector 0.5 5.25 9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 10.5 0.0) (float-vector -0.5 10.5 0.0) (float-vector -0.5 9.09327 5.25) (float-vector 0.5 9.09327 5.25)))
         (instance face :init :vertices (list (float-vector 0.5 9.09327 -5.25) (float-vector -0.5 9.09327 -5.25) (float-vector -0.5 10.5 0.0) (float-vector 0.5 10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 5.25 -9.09327) (float-vector -0.5 5.25 -9.09327) (float-vector -0.5 9.09327 -5.25) (float-vector 0.5 9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 -10.5) (float-vector -0.5 0.0 -10.5) (float-vector -0.5 5.25 -9.09327) (float-vector 0.5 5.25 -9.09327)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :black)
     (send (elt bc 1) :set-color :black)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73a3-clock-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73a3-clock-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 1.75 96.0) (float-vector -0.5 1.75 96.0) (float-vector -0.5 -1.75 96.0) (float-vector 0.5 -1.75 96.0)))
         (instance face :init :vertices (list (float-vector -0.5 1.75 0.0) (float-vector 0.5 1.75 0.0) (float-vector 0.5 -1.75 0.0) (float-vector -0.5 -1.75 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 1.75 96.0) (float-vector 0.5 1.75 0.0) (float-vector -0.5 1.75 0.0) (float-vector -0.5 1.75 96.0)))
         (instance face :init :vertices (list (float-vector 0.5 -1.75 96.0) (float-vector 0.5 -1.75 0.0) (float-vector 0.5 1.75 0.0) (float-vector 0.5 1.75 96.0)))
         (instance face :init :vertices (list (float-vector -0.5 -1.75 96.0) (float-vector -0.5 -1.75 0.0) (float-vector 0.5 -1.75 0.0) (float-vector 0.5 -1.75 96.0)))
         (instance face :init :vertices (list (float-vector -0.5 1.75 96.0) (float-vector -0.5 1.75 0.0) (float-vector -0.5 -1.75 0.0) (float-vector -0.5 -1.75 96.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 -5.25 -9.09327) (float-vector 0.5 0.0 -10.5) (float-vector 0.5 5.25 -9.09327) (float-vector 0.5 9.09327 -5.25) (float-vector 0.5 10.5 0.0) (float-vector 0.5 9.09327 5.25) (float-vector 0.5 5.25 9.09327) (float-vector 0.5 0.0 10.5) (float-vector 0.5 -5.25 9.09327) (float-vector 0.5 -9.09327 5.25) (float-vector 0.5 -10.5 0.0) (float-vector 0.5 -9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector -0.5 0.0 -10.5) (float-vector -0.5 -5.25 -9.09327) (float-vector -0.5 -9.09327 -5.25) (float-vector -0.5 -10.5 0.0) (float-vector -0.5 -9.09327 5.25) (float-vector -0.5 -5.25 9.09327) (float-vector -0.5 0.0 10.5) (float-vector -0.5 5.25 9.09327) (float-vector -0.5 9.09327 5.25) (float-vector -0.5 10.5 0.0) (float-vector -0.5 9.09327 -5.25) (float-vector -0.5 5.25 -9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 -5.25 -9.09327) (float-vector -0.5 -5.25 -9.09327) (float-vector -0.5 0.0 -10.5) (float-vector 0.5 0.0 -10.5)))
         (instance face :init :vertices (list (float-vector 0.5 -9.09327 -5.25) (float-vector -0.5 -9.09327 -5.25) (float-vector -0.5 -5.25 -9.09327) (float-vector 0.5 -5.25 -9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 -10.5 0.0) (float-vector -0.5 -10.5 0.0) (float-vector -0.5 -9.09327 -5.25) (float-vector 0.5 -9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector 0.5 -9.09327 5.25) (float-vector -0.5 -9.09327 5.25) (float-vector -0.5 -10.5 0.0) (float-vector 0.5 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 -5.25 9.09327) (float-vector -0.5 -5.25 9.09327) (float-vector -0.5 -9.09327 5.25) (float-vector 0.5 -9.09327 5.25)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 10.5) (float-vector -0.5 0.0 10.5) (float-vector -0.5 -5.25 9.09327) (float-vector 0.5 -5.25 9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 5.25 9.09327) (float-vector -0.5 5.25 9.09327) (float-vector -0.5 0.0 10.5) (float-vector 0.5 0.0 10.5)))
         (instance face :init :vertices (list (float-vector 0.5 9.09327 5.25) (float-vector -0.5 9.09327 5.25) (float-vector -0.5 5.25 9.09327) (float-vector 0.5 5.25 9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 10.5 0.0) (float-vector -0.5 10.5 0.0) (float-vector -0.5 9.09327 5.25) (float-vector 0.5 9.09327 5.25)))
         (instance face :init :vertices (list (float-vector 0.5 9.09327 -5.25) (float-vector -0.5 9.09327 -5.25) (float-vector -0.5 10.5 0.0) (float-vector 0.5 10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 5.25 -9.09327) (float-vector -0.5 5.25 -9.09327) (float-vector -0.5 9.09327 -5.25) (float-vector 0.5 9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 -10.5) (float-vector -0.5 0.0 -10.5) (float-vector -0.5 5.25 -9.09327) (float-vector 0.5 5.25 -9.09327)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :black)
     (send (elt bc 1) :set-color :black)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73a3-clock-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73a3-clock-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 0.875 102.0) (float-vector -0.5 0.875 102.0) (float-vector -0.5 -0.875 102.0) (float-vector 0.5 -0.875 102.0)))
         (instance face :init :vertices (list (float-vector -0.5 0.875 0.0) (float-vector 0.5 0.875 0.0) (float-vector 0.5 -0.875 0.0) (float-vector -0.5 -0.875 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 0.875 102.0) (float-vector 0.5 0.875 0.0) (float-vector -0.5 0.875 0.0) (float-vector -0.5 0.875 102.0)))
         (instance face :init :vertices (list (float-vector 0.5 -0.875 102.0) (float-vector 0.5 -0.875 0.0) (float-vector 0.5 0.875 0.0) (float-vector 0.5 0.875 102.0)))
         (instance face :init :vertices (list (float-vector -0.5 -0.875 102.0) (float-vector -0.5 -0.875 0.0) (float-vector 0.5 -0.875 0.0) (float-vector 0.5 -0.875 102.0)))
         (instance face :init :vertices (list (float-vector -0.5 0.875 102.0) (float-vector -0.5 0.875 0.0) (float-vector -0.5 -0.875 0.0) (float-vector -0.5 -0.875 102.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 -5.25 -9.09327) (float-vector 0.5 0.0 -10.5) (float-vector 0.5 5.25 -9.09327) (float-vector 0.5 9.09327 -5.25) (float-vector 0.5 10.5 0.0) (float-vector 0.5 9.09327 5.25) (float-vector 0.5 5.25 9.09327) (float-vector 0.5 0.0 10.5) (float-vector 0.5 -5.25 9.09327) (float-vector 0.5 -9.09327 5.25) (float-vector 0.5 -10.5 0.0) (float-vector 0.5 -9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector -0.5 0.0 -10.5) (float-vector -0.5 -5.25 -9.09327) (float-vector -0.5 -9.09327 -5.25) (float-vector -0.5 -10.5 0.0) (float-vector -0.5 -9.09327 5.25) (float-vector -0.5 -5.25 9.09327) (float-vector -0.5 0.0 10.5) (float-vector -0.5 5.25 9.09327) (float-vector -0.5 9.09327 5.25) (float-vector -0.5 10.5 0.0) (float-vector -0.5 9.09327 -5.25) (float-vector -0.5 5.25 -9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 -5.25 -9.09327) (float-vector -0.5 -5.25 -9.09327) (float-vector -0.5 0.0 -10.5) (float-vector 0.5 0.0 -10.5)))
         (instance face :init :vertices (list (float-vector 0.5 -9.09327 -5.25) (float-vector -0.5 -9.09327 -5.25) (float-vector -0.5 -5.25 -9.09327) (float-vector 0.5 -5.25 -9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 -10.5 0.0) (float-vector -0.5 -10.5 0.0) (float-vector -0.5 -9.09327 -5.25) (float-vector 0.5 -9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector 0.5 -9.09327 5.25) (float-vector -0.5 -9.09327 5.25) (float-vector -0.5 -10.5 0.0) (float-vector 0.5 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 -5.25 9.09327) (float-vector -0.5 -5.25 9.09327) (float-vector -0.5 -9.09327 5.25) (float-vector 0.5 -9.09327 5.25)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 10.5) (float-vector -0.5 0.0 10.5) (float-vector -0.5 -5.25 9.09327) (float-vector 0.5 -5.25 9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 5.25 9.09327) (float-vector -0.5 5.25 9.09327) (float-vector -0.5 0.0 10.5) (float-vector 0.5 0.0 10.5)))
         (instance face :init :vertices (list (float-vector 0.5 9.09327 5.25) (float-vector -0.5 9.09327 5.25) (float-vector -0.5 5.25 9.09327) (float-vector 0.5 5.25 9.09327)))
         (instance face :init :vertices (list (float-vector 0.5 10.5 0.0) (float-vector -0.5 10.5 0.0) (float-vector -0.5 9.09327 5.25) (float-vector 0.5 9.09327 5.25)))
         (instance face :init :vertices (list (float-vector 0.5 9.09327 -5.25) (float-vector -0.5 9.09327 -5.25) (float-vector -0.5 10.5 0.0) (float-vector 0.5 10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 5.25 -9.09327) (float-vector -0.5 5.25 -9.09327) (float-vector -0.5 9.09327 -5.25) (float-vector 0.5 9.09327 -5.25)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 -10.5) (float-vector -0.5 0.0 -10.5) (float-vector -0.5 5.25 -9.09327) (float-vector 0.5 5.25 -9.09327)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :black)
     (send (elt bc 1) :set-color :black)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73a3-clock-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink3 :newcoords (make-coords :pos (float-vector 8.0 0.0 150.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector 7.0 0.0 150.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink1 :newcoords (make-coords :pos (float-vector 6.0 0.0 150.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :hour-joint
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :hour-joint :axis :-x
			     :min -360.0 :max  360.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :minute-joint
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :minute-joint :axis :-x
			     :min -360.0 :max  360.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :second-joint
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :second-joint :axis :-x
			     :min -360.0 :max  360.0 :max-joint-velocity 5 :max-joint-torque 100))


     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3))
     (setq joint-list (list joint0 joint1 joint2))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:hour-joint (&rest args) (forward-message-to joint0 args))
  (:minute-joint (&rest args) (forward-message-to joint1 args))
  (:second-joint (&rest args) (forward-message-to joint2 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73a3-clock (&rest args) (instance* room73a3-clock-object :init args))
;; (format *error-output* "(instance room73a3-clock-object :init) for generating model~%")
