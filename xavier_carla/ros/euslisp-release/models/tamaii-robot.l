;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass tamaii-robot
  :super robot-model
  :slots (sensors
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 ))
(defmethod tamaii-robot
  (:init
   (&rest args &key (name "tamaii") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -114.0 -99.4 24.9) (float-vector -114.0 -99.4 -24.9) (float-vector -55.0 -99.4 -24.9) (float-vector -55.0 -99.4 24.9)))
         (instance face :init :vertices (list (float-vector -55.0 -99.4 -24.9) (float-vector -55.0 -70.6 -24.9) (float-vector -55.0 -70.6 24.9) (float-vector -55.0 -99.4 24.9)))
         (instance face :init :vertices (list (float-vector -55.0 -70.6 -24.9) (float-vector -114.0 -70.6 -24.9) (float-vector -114.0 -70.6 24.9) (float-vector -55.0 -70.6 24.9)))
         (instance face :init :vertices (list (float-vector -114.0 -70.6 24.9) (float-vector -114.0 -99.4 24.9) (float-vector -55.0 -99.4 24.9) (float-vector -55.0 -70.6 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -106.7 -96.6047 24.9) (float-vector -111.605 -91.7 24.9) (float-vector -113.4 -85.0 24.9) (float-vector -111.605 -78.3 24.9) (float-vector -106.7 -73.3953 24.9) (float-vector -100.0 -71.6 24.9) (float-vector -93.3 -73.3953 24.9) (float-vector -88.3953 -78.3 24.9) (float-vector -86.6 -85.0 24.9) (float-vector -88.3953 -91.7 24.9) (float-vector -93.3 -96.6047 24.9) (float-vector -100.0 -98.4 24.9)))
))
         (instance face :init :vertices (list (float-vector -114.0 -70.6 -24.9) (float-vector -114.0 -99.4 -24.9) (float-vector -114.0 -99.4 24.9) (float-vector -114.0 -70.6 24.9)))
         (instance face :init :vertices (list (float-vector -114.0 -99.4 -24.9) (float-vector -114.0 -70.6 -24.9) (float-vector -55.0 -70.6 -24.9) (float-vector -55.0 -99.4 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -111.605 -91.7 -24.9) (float-vector -106.7 -96.6047 -24.9) (float-vector -100.0 -98.4 -24.9) (float-vector -93.3 -96.6047 -24.9) (float-vector -88.3953 -91.7 -24.9) (float-vector -86.6 -85.0 -24.9) (float-vector -88.3953 -78.3 -24.9) (float-vector -93.3 -73.3953 -24.9) (float-vector -100.0 -71.6 -24.9) (float-vector -106.7 -73.3953 -24.9) (float-vector -111.605 -78.3 -24.9) (float-vector -113.4 -85.0 -24.9)))
))
         (instance face :init :vertices (list (float-vector -100.0 -98.4 26.9) (float-vector -100.0 -98.4 24.9) (float-vector -93.3 -96.6047 24.9) (float-vector -93.3 -96.6047 26.9)))
         (instance face :init :vertices (list (float-vector -100.0 -98.4 -24.9) (float-vector -100.0 -98.4 -26.9) (float-vector -93.3 -96.6047 -26.9) (float-vector -93.3 -96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 -91.7 24.9) (float-vector -88.3953 -91.7 26.9) (float-vector -93.3 -96.6047 26.9) (float-vector -93.3 -96.6047 24.9)))
         (instance face :init :vertices (list (float-vector -93.3 -96.6047 -26.9) (float-vector -88.3953 -91.7 -26.9) (float-vector -88.3953 -91.7 -24.9) (float-vector -93.3 -96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -86.6 -85.0 24.9) (float-vector -86.6 -85.0 26.9) (float-vector -88.3953 -91.7 26.9) (float-vector -88.3953 -91.7 24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 -91.7 -26.9) (float-vector -86.6 -85.0 -26.9) (float-vector -86.6 -85.0 -24.9) (float-vector -88.3953 -91.7 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 -78.3 24.9) (float-vector -88.3953 -78.3 26.9) (float-vector -86.6 -85.0 26.9) (float-vector -86.6 -85.0 24.9)))
         (instance face :init :vertices (list (float-vector -86.6 -85.0 -26.9) (float-vector -88.3953 -78.3 -26.9) (float-vector -88.3953 -78.3 -24.9) (float-vector -86.6 -85.0 -24.9)))
         (instance face :init :vertices (list (float-vector -93.3 -73.3953 24.9) (float-vector -93.3 -73.3953 26.9) (float-vector -88.3953 -78.3 26.9) (float-vector -88.3953 -78.3 24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 -78.3 -26.9) (float-vector -93.3 -73.3953 -26.9) (float-vector -93.3 -73.3953 -24.9) (float-vector -88.3953 -78.3 -24.9)))
         (instance face :init :vertices (list (float-vector -100.0 -71.6 24.9) (float-vector -100.0 -71.6 26.9) (float-vector -93.3 -73.3953 26.9) (float-vector -93.3 -73.3953 24.9)))
         (instance face :init :vertices (list (float-vector -93.3 -73.3953 -26.9) (float-vector -100.0 -71.6 -26.9) (float-vector -100.0 -71.6 -24.9) (float-vector -93.3 -73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -73.3953 24.9) (float-vector -106.7 -73.3953 26.9) (float-vector -100.0 -71.6 26.9) (float-vector -100.0 -71.6 24.9)))
         (instance face :init :vertices (list (float-vector -100.0 -71.6 -26.9) (float-vector -106.7 -73.3953 -26.9) (float-vector -106.7 -73.3953 -24.9) (float-vector -100.0 -71.6 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -78.3 24.9) (float-vector -111.605 -78.3 26.9) (float-vector -106.7 -73.3953 26.9) (float-vector -106.7 -73.3953 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -73.3953 -26.9) (float-vector -111.605 -78.3 -26.9) (float-vector -111.605 -78.3 -24.9) (float-vector -106.7 -73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector -113.4 -85.0 24.9) (float-vector -113.4 -85.0 26.9) (float-vector -111.605 -78.3 26.9) (float-vector -111.605 -78.3 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -78.3 -26.9) (float-vector -113.4 -85.0 -26.9) (float-vector -113.4 -85.0 -24.9) (float-vector -111.605 -78.3 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -91.7 24.9) (float-vector -111.605 -91.7 26.9) (float-vector -113.4 -85.0 26.9) (float-vector -113.4 -85.0 24.9)))
         (instance face :init :vertices (list (float-vector -113.4 -85.0 -26.9) (float-vector -111.605 -91.7 -26.9) (float-vector -111.605 -91.7 -24.9) (float-vector -113.4 -85.0 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -96.6047 24.9) (float-vector -106.7 -96.6047 26.9) (float-vector -111.605 -91.7 26.9) (float-vector -111.605 -91.7 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -91.7 -26.9) (float-vector -106.7 -96.6047 -26.9) (float-vector -106.7 -96.6047 -24.9) (float-vector -111.605 -91.7 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -96.6047 26.9) (float-vector -100.0 -98.4 26.9) (float-vector -93.3 -96.6047 26.9) (float-vector -88.3953 -91.7 26.9) (float-vector -86.6 -85.0 26.9) (float-vector -88.3953 -78.3 26.9) (float-vector -93.3 -73.3953 26.9) (float-vector -100.0 -71.6 26.9) (float-vector -106.7 -73.3953 26.9) (float-vector -111.605 -78.3 26.9) (float-vector -113.4 -85.0 26.9) (float-vector -111.605 -91.7 26.9)))
         (instance face :init :vertices (list (float-vector -100.0 -98.4 26.9) (float-vector -106.7 -96.6047 26.9) (float-vector -106.7 -96.6047 24.9) (float-vector -100.0 -98.4 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -96.6047 -26.9) (float-vector -100.0 -98.4 -26.9) (float-vector -100.0 -98.4 -24.9) (float-vector -106.7 -96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -100.0 -98.4 -26.9) (float-vector -106.7 -96.6047 -26.9) (float-vector -111.605 -91.7 -26.9) (float-vector -113.4 -85.0 -26.9) (float-vector -111.605 -78.3 -26.9) (float-vector -106.7 -73.3953 -26.9) (float-vector -100.0 -71.6 -26.9) (float-vector -93.3 -73.3953 -26.9) (float-vector -88.3953 -78.3 -26.9) (float-vector -86.6 -85.0 -26.9) (float-vector -88.3953 -91.7 -26.9) (float-vector -93.3 -96.6047 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 119.0 -70.6 24.9) (float-vector 119.0 -70.6 -24.9) (float-vector 60.0 -70.6 -24.9) (float-vector 60.0 -70.6 24.9)))
         (instance face :init :vertices (list (float-vector 60.0 -70.6 -24.9) (float-vector 60.0 -99.4 -24.9) (float-vector 60.0 -99.4 24.9) (float-vector 60.0 -70.6 24.9)))
         (instance face :init :vertices (list (float-vector 60.0 -99.4 -24.9) (float-vector 119.0 -99.4 -24.9) (float-vector 119.0 -99.4 24.9) (float-vector 60.0 -99.4 24.9)))
         (instance face :init :vertices (list (float-vector 119.0 -99.4 24.9) (float-vector 119.0 -70.6 24.9) (float-vector 60.0 -70.6 24.9) (float-vector 60.0 -99.4 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 111.7 -73.3953 24.9) (float-vector 116.605 -78.3 24.9) (float-vector 118.4 -85.0 24.9) (float-vector 116.605 -91.7 24.9) (float-vector 111.7 -96.6047 24.9) (float-vector 105.0 -98.4 24.9) (float-vector 98.3 -96.6047 24.9) (float-vector 93.3953 -91.7 24.9) (float-vector 91.6 -85.0 24.9) (float-vector 93.3953 -78.3 24.9) (float-vector 98.3 -73.3953 24.9) (float-vector 105.0 -71.6 24.9)))
))
         (instance face :init :vertices (list (float-vector 119.0 -99.4 -24.9) (float-vector 119.0 -70.6 -24.9) (float-vector 119.0 -70.6 24.9) (float-vector 119.0 -99.4 24.9)))
         (instance face :init :vertices (list (float-vector 119.0 -70.6 -24.9) (float-vector 119.0 -99.4 -24.9) (float-vector 60.0 -99.4 -24.9) (float-vector 60.0 -70.6 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 116.605 -78.3 -24.9) (float-vector 111.7 -73.3953 -24.9) (float-vector 105.0 -71.6 -24.9) (float-vector 98.3 -73.3953 -24.9) (float-vector 93.3953 -78.3 -24.9) (float-vector 91.6 -85.0 -24.9) (float-vector 93.3953 -91.7 -24.9) (float-vector 98.3 -96.6047 -24.9) (float-vector 105.0 -98.4 -24.9) (float-vector 111.7 -96.6047 -24.9) (float-vector 116.605 -91.7 -24.9) (float-vector 118.4 -85.0 -24.9)))
))
         (instance face :init :vertices (list (float-vector 105.0 -71.6 26.9) (float-vector 105.0 -71.6 24.9) (float-vector 98.3 -73.3953 24.9) (float-vector 98.3 -73.3953 26.9)))
         (instance face :init :vertices (list (float-vector 105.0 -71.6 -24.9) (float-vector 105.0 -71.6 -26.9) (float-vector 98.3 -73.3953 -26.9) (float-vector 98.3 -73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -78.3 24.9) (float-vector 93.3953 -78.3 26.9) (float-vector 98.3 -73.3953 26.9) (float-vector 98.3 -73.3953 24.9)))
         (instance face :init :vertices (list (float-vector 98.3 -73.3953 -26.9) (float-vector 93.3953 -78.3 -26.9) (float-vector 93.3953 -78.3 -24.9) (float-vector 98.3 -73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 91.6 -85.0 24.9) (float-vector 91.6 -85.0 26.9) (float-vector 93.3953 -78.3 26.9) (float-vector 93.3953 -78.3 24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -78.3 -26.9) (float-vector 91.6 -85.0 -26.9) (float-vector 91.6 -85.0 -24.9) (float-vector 93.3953 -78.3 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -91.7 24.9) (float-vector 93.3953 -91.7 26.9) (float-vector 91.6 -85.0 26.9) (float-vector 91.6 -85.0 24.9)))
         (instance face :init :vertices (list (float-vector 91.6 -85.0 -26.9) (float-vector 93.3953 -91.7 -26.9) (float-vector 93.3953 -91.7 -24.9) (float-vector 91.6 -85.0 -24.9)))
         (instance face :init :vertices (list (float-vector 98.3 -96.6047 24.9) (float-vector 98.3 -96.6047 26.9) (float-vector 93.3953 -91.7 26.9) (float-vector 93.3953 -91.7 24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -91.7 -26.9) (float-vector 98.3 -96.6047 -26.9) (float-vector 98.3 -96.6047 -24.9) (float-vector 93.3953 -91.7 -24.9)))
         (instance face :init :vertices (list (float-vector 105.0 -98.4 24.9) (float-vector 105.0 -98.4 26.9) (float-vector 98.3 -96.6047 26.9) (float-vector 98.3 -96.6047 24.9)))
         (instance face :init :vertices (list (float-vector 98.3 -96.6047 -26.9) (float-vector 105.0 -98.4 -26.9) (float-vector 105.0 -98.4 -24.9) (float-vector 98.3 -96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -96.6047 24.9) (float-vector 111.7 -96.6047 26.9) (float-vector 105.0 -98.4 26.9) (float-vector 105.0 -98.4 24.9)))
         (instance face :init :vertices (list (float-vector 105.0 -98.4 -26.9) (float-vector 111.7 -96.6047 -26.9) (float-vector 111.7 -96.6047 -24.9) (float-vector 105.0 -98.4 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -91.7 24.9) (float-vector 116.605 -91.7 26.9) (float-vector 111.7 -96.6047 26.9) (float-vector 111.7 -96.6047 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -96.6047 -26.9) (float-vector 116.605 -91.7 -26.9) (float-vector 116.605 -91.7 -24.9) (float-vector 111.7 -96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 118.4 -85.0 24.9) (float-vector 118.4 -85.0 26.9) (float-vector 116.605 -91.7 26.9) (float-vector 116.605 -91.7 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -91.7 -26.9) (float-vector 118.4 -85.0 -26.9) (float-vector 118.4 -85.0 -24.9) (float-vector 116.605 -91.7 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -78.3 24.9) (float-vector 116.605 -78.3 26.9) (float-vector 118.4 -85.0 26.9) (float-vector 118.4 -85.0 24.9)))
         (instance face :init :vertices (list (float-vector 118.4 -85.0 -26.9) (float-vector 116.605 -78.3 -26.9) (float-vector 116.605 -78.3 -24.9) (float-vector 118.4 -85.0 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -73.3953 24.9) (float-vector 111.7 -73.3953 26.9) (float-vector 116.605 -78.3 26.9) (float-vector 116.605 -78.3 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -78.3 -26.9) (float-vector 111.7 -73.3953 -26.9) (float-vector 111.7 -73.3953 -24.9) (float-vector 116.605 -78.3 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -73.3953 26.9) (float-vector 105.0 -71.6 26.9) (float-vector 98.3 -73.3953 26.9) (float-vector 93.3953 -78.3 26.9) (float-vector 91.6 -85.0 26.9) (float-vector 93.3953 -91.7 26.9) (float-vector 98.3 -96.6047 26.9) (float-vector 105.0 -98.4 26.9) (float-vector 111.7 -96.6047 26.9) (float-vector 116.605 -91.7 26.9) (float-vector 118.4 -85.0 26.9) (float-vector 116.605 -78.3 26.9)))
         (instance face :init :vertices (list (float-vector 105.0 -71.6 26.9) (float-vector 111.7 -73.3953 26.9) (float-vector 111.7 -73.3953 24.9) (float-vector 105.0 -71.6 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -73.3953 -26.9) (float-vector 105.0 -71.6 -26.9) (float-vector 105.0 -71.6 -24.9) (float-vector 111.7 -73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 105.0 -71.6 -26.9) (float-vector 111.7 -73.3953 -26.9) (float-vector 116.605 -78.3 -26.9) (float-vector 118.4 -85.0 -26.9) (float-vector 116.605 -91.7 -26.9) (float-vector 111.7 -96.6047 -26.9) (float-vector 105.0 -98.4 -26.9) (float-vector 98.3 -96.6047 -26.9) (float-vector 93.3953 -91.7 -26.9) (float-vector 91.6 -85.0 -26.9) (float-vector 93.3953 -78.3 -26.9) (float-vector 98.3 -73.3953 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -114.0 99.4 -24.9) (float-vector -114.0 99.4 24.9) (float-vector -55.0 99.4 24.9) (float-vector -55.0 99.4 -24.9)))
         (instance face :init :vertices (list (float-vector -55.0 99.4 24.9) (float-vector -55.0 70.6 24.9) (float-vector -55.0 70.6 -24.9) (float-vector -55.0 99.4 -24.9)))
         (instance face :init :vertices (list (float-vector -55.0 70.6 24.9) (float-vector -114.0 70.6 24.9) (float-vector -114.0 70.6 -24.9) (float-vector -55.0 70.6 -24.9)))
         (instance face :init :vertices (list (float-vector -114.0 70.6 -24.9) (float-vector -114.0 99.4 -24.9) (float-vector -55.0 99.4 -24.9) (float-vector -55.0 70.6 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -106.7 96.6047 -24.9) (float-vector -111.605 91.7 -24.9) (float-vector -113.4 85.0 -24.9) (float-vector -111.605 78.3 -24.9) (float-vector -106.7 73.3953 -24.9) (float-vector -100.0 71.6 -24.9) (float-vector -93.3 73.3953 -24.9) (float-vector -88.3953 78.3 -24.9) (float-vector -86.6 85.0 -24.9) (float-vector -88.3953 91.7 -24.9) (float-vector -93.3 96.6047 -24.9) (float-vector -100.0 98.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -114.0 70.6 24.9) (float-vector -114.0 99.4 24.9) (float-vector -114.0 99.4 -24.9) (float-vector -114.0 70.6 -24.9)))
         (instance face :init :vertices (list (float-vector -114.0 99.4 24.9) (float-vector -114.0 70.6 24.9) (float-vector -55.0 70.6 24.9) (float-vector -55.0 99.4 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -111.605 91.7 24.9) (float-vector -106.7 96.6047 24.9) (float-vector -100.0 98.4 24.9) (float-vector -93.3 96.6047 24.9) (float-vector -88.3953 91.7 24.9) (float-vector -86.6 85.0 24.9) (float-vector -88.3953 78.3 24.9) (float-vector -93.3 73.3953 24.9) (float-vector -100.0 71.6 24.9) (float-vector -106.7 73.3953 24.9) (float-vector -111.605 78.3 24.9) (float-vector -113.4 85.0 24.9)))
))
         (instance face :init :vertices (list (float-vector -100.0 98.4 -26.9) (float-vector -100.0 98.4 -24.9) (float-vector -93.3 96.6047 -24.9) (float-vector -93.3 96.6047 -26.9)))
         (instance face :init :vertices (list (float-vector -100.0 98.4 24.9) (float-vector -100.0 98.4 26.9) (float-vector -93.3 96.6047 26.9) (float-vector -93.3 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 91.7 -24.9) (float-vector -88.3953 91.7 -26.9) (float-vector -93.3 96.6047 -26.9) (float-vector -93.3 96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -93.3 96.6047 26.9) (float-vector -88.3953 91.7 26.9) (float-vector -88.3953 91.7 24.9) (float-vector -93.3 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector -86.6 85.0 -24.9) (float-vector -86.6 85.0 -26.9) (float-vector -88.3953 91.7 -26.9) (float-vector -88.3953 91.7 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 91.7 26.9) (float-vector -86.6 85.0 26.9) (float-vector -86.6 85.0 24.9) (float-vector -88.3953 91.7 24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 78.3 -24.9) (float-vector -88.3953 78.3 -26.9) (float-vector -86.6 85.0 -26.9) (float-vector -86.6 85.0 -24.9)))
         (instance face :init :vertices (list (float-vector -86.6 85.0 26.9) (float-vector -88.3953 78.3 26.9) (float-vector -88.3953 78.3 24.9) (float-vector -86.6 85.0 24.9)))
         (instance face :init :vertices (list (float-vector -93.3 73.3953 -24.9) (float-vector -93.3 73.3953 -26.9) (float-vector -88.3953 78.3 -26.9) (float-vector -88.3953 78.3 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 78.3 26.9) (float-vector -93.3 73.3953 26.9) (float-vector -93.3 73.3953 24.9) (float-vector -88.3953 78.3 24.9)))
         (instance face :init :vertices (list (float-vector -100.0 71.6 -24.9) (float-vector -100.0 71.6 -26.9) (float-vector -93.3 73.3953 -26.9) (float-vector -93.3 73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector -93.3 73.3953 26.9) (float-vector -100.0 71.6 26.9) (float-vector -100.0 71.6 24.9) (float-vector -93.3 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 73.3953 -24.9) (float-vector -106.7 73.3953 -26.9) (float-vector -100.0 71.6 -26.9) (float-vector -100.0 71.6 -24.9)))
         (instance face :init :vertices (list (float-vector -100.0 71.6 26.9) (float-vector -106.7 73.3953 26.9) (float-vector -106.7 73.3953 24.9) (float-vector -100.0 71.6 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 78.3 -24.9) (float-vector -111.605 78.3 -26.9) (float-vector -106.7 73.3953 -26.9) (float-vector -106.7 73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 73.3953 26.9) (float-vector -111.605 78.3 26.9) (float-vector -111.605 78.3 24.9) (float-vector -106.7 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector -113.4 85.0 -24.9) (float-vector -113.4 85.0 -26.9) (float-vector -111.605 78.3 -26.9) (float-vector -111.605 78.3 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 78.3 26.9) (float-vector -113.4 85.0 26.9) (float-vector -113.4 85.0 24.9) (float-vector -111.605 78.3 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 91.7 -24.9) (float-vector -111.605 91.7 -26.9) (float-vector -113.4 85.0 -26.9) (float-vector -113.4 85.0 -24.9)))
         (instance face :init :vertices (list (float-vector -113.4 85.0 26.9) (float-vector -111.605 91.7 26.9) (float-vector -111.605 91.7 24.9) (float-vector -113.4 85.0 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 96.6047 -24.9) (float-vector -106.7 96.6047 -26.9) (float-vector -111.605 91.7 -26.9) (float-vector -111.605 91.7 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 91.7 26.9) (float-vector -106.7 96.6047 26.9) (float-vector -106.7 96.6047 24.9) (float-vector -111.605 91.7 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 96.6047 -26.9) (float-vector -100.0 98.4 -26.9) (float-vector -93.3 96.6047 -26.9) (float-vector -88.3953 91.7 -26.9) (float-vector -86.6 85.0 -26.9) (float-vector -88.3953 78.3 -26.9) (float-vector -93.3 73.3953 -26.9) (float-vector -100.0 71.6 -26.9) (float-vector -106.7 73.3953 -26.9) (float-vector -111.605 78.3 -26.9) (float-vector -113.4 85.0 -26.9) (float-vector -111.605 91.7 -26.9)))
         (instance face :init :vertices (list (float-vector -100.0 98.4 -26.9) (float-vector -106.7 96.6047 -26.9) (float-vector -106.7 96.6047 -24.9) (float-vector -100.0 98.4 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 96.6047 26.9) (float-vector -100.0 98.4 26.9) (float-vector -100.0 98.4 24.9) (float-vector -106.7 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector -100.0 98.4 26.9) (float-vector -106.7 96.6047 26.9) (float-vector -111.605 91.7 26.9) (float-vector -113.4 85.0 26.9) (float-vector -111.605 78.3 26.9) (float-vector -106.7 73.3953 26.9) (float-vector -100.0 71.6 26.9) (float-vector -93.3 73.3953 26.9) (float-vector -88.3953 78.3 26.9) (float-vector -86.6 85.0 26.9) (float-vector -88.3953 91.7 26.9) (float-vector -93.3 96.6047 26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 119.0 70.6 -24.9) (float-vector 119.0 70.6 24.9) (float-vector 60.0 70.6 24.9) (float-vector 60.0 70.6 -24.9)))
         (instance face :init :vertices (list (float-vector 60.0 70.6 24.9) (float-vector 60.0 99.4 24.9) (float-vector 60.0 99.4 -24.9) (float-vector 60.0 70.6 -24.9)))
         (instance face :init :vertices (list (float-vector 60.0 99.4 24.9) (float-vector 119.0 99.4 24.9) (float-vector 119.0 99.4 -24.9) (float-vector 60.0 99.4 -24.9)))
         (instance face :init :vertices (list (float-vector 119.0 99.4 -24.9) (float-vector 119.0 70.6 -24.9) (float-vector 60.0 70.6 -24.9) (float-vector 60.0 99.4 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 111.7 73.3953 -24.9) (float-vector 116.605 78.3 -24.9) (float-vector 118.4 85.0 -24.9) (float-vector 116.605 91.7 -24.9) (float-vector 111.7 96.6047 -24.9) (float-vector 105.0 98.4 -24.9) (float-vector 98.3 96.6047 -24.9) (float-vector 93.3953 91.7 -24.9) (float-vector 91.6 85.0 -24.9) (float-vector 93.3953 78.3 -24.9) (float-vector 98.3 73.3953 -24.9) (float-vector 105.0 71.6 -24.9)))
))
         (instance face :init :vertices (list (float-vector 119.0 99.4 24.9) (float-vector 119.0 70.6 24.9) (float-vector 119.0 70.6 -24.9) (float-vector 119.0 99.4 -24.9)))
         (instance face :init :vertices (list (float-vector 119.0 70.6 24.9) (float-vector 119.0 99.4 24.9) (float-vector 60.0 99.4 24.9) (float-vector 60.0 70.6 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 116.605 78.3 24.9) (float-vector 111.7 73.3953 24.9) (float-vector 105.0 71.6 24.9) (float-vector 98.3 73.3953 24.9) (float-vector 93.3953 78.3 24.9) (float-vector 91.6 85.0 24.9) (float-vector 93.3953 91.7 24.9) (float-vector 98.3 96.6047 24.9) (float-vector 105.0 98.4 24.9) (float-vector 111.7 96.6047 24.9) (float-vector 116.605 91.7 24.9) (float-vector 118.4 85.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 105.0 71.6 -26.9) (float-vector 105.0 71.6 -24.9) (float-vector 98.3 73.3953 -24.9) (float-vector 98.3 73.3953 -26.9)))
         (instance face :init :vertices (list (float-vector 105.0 71.6 24.9) (float-vector 105.0 71.6 26.9) (float-vector 98.3 73.3953 26.9) (float-vector 98.3 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 78.3 -24.9) (float-vector 93.3953 78.3 -26.9) (float-vector 98.3 73.3953 -26.9) (float-vector 98.3 73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 98.3 73.3953 26.9) (float-vector 93.3953 78.3 26.9) (float-vector 93.3953 78.3 24.9) (float-vector 98.3 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector 91.6 85.0 -24.9) (float-vector 91.6 85.0 -26.9) (float-vector 93.3953 78.3 -26.9) (float-vector 93.3953 78.3 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 78.3 26.9) (float-vector 91.6 85.0 26.9) (float-vector 91.6 85.0 24.9) (float-vector 93.3953 78.3 24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 91.7 -24.9) (float-vector 93.3953 91.7 -26.9) (float-vector 91.6 85.0 -26.9) (float-vector 91.6 85.0 -24.9)))
         (instance face :init :vertices (list (float-vector 91.6 85.0 26.9) (float-vector 93.3953 91.7 26.9) (float-vector 93.3953 91.7 24.9) (float-vector 91.6 85.0 24.9)))
         (instance face :init :vertices (list (float-vector 98.3 96.6047 -24.9) (float-vector 98.3 96.6047 -26.9) (float-vector 93.3953 91.7 -26.9) (float-vector 93.3953 91.7 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 91.7 26.9) (float-vector 98.3 96.6047 26.9) (float-vector 98.3 96.6047 24.9) (float-vector 93.3953 91.7 24.9)))
         (instance face :init :vertices (list (float-vector 105.0 98.4 -24.9) (float-vector 105.0 98.4 -26.9) (float-vector 98.3 96.6047 -26.9) (float-vector 98.3 96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 98.3 96.6047 26.9) (float-vector 105.0 98.4 26.9) (float-vector 105.0 98.4 24.9) (float-vector 98.3 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 96.6047 -24.9) (float-vector 111.7 96.6047 -26.9) (float-vector 105.0 98.4 -26.9) (float-vector 105.0 98.4 -24.9)))
         (instance face :init :vertices (list (float-vector 105.0 98.4 26.9) (float-vector 111.7 96.6047 26.9) (float-vector 111.7 96.6047 24.9) (float-vector 105.0 98.4 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 91.7 -24.9) (float-vector 116.605 91.7 -26.9) (float-vector 111.7 96.6047 -26.9) (float-vector 111.7 96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 96.6047 26.9) (float-vector 116.605 91.7 26.9) (float-vector 116.605 91.7 24.9) (float-vector 111.7 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector 118.4 85.0 -24.9) (float-vector 118.4 85.0 -26.9) (float-vector 116.605 91.7 -26.9) (float-vector 116.605 91.7 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 91.7 26.9) (float-vector 118.4 85.0 26.9) (float-vector 118.4 85.0 24.9) (float-vector 116.605 91.7 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 78.3 -24.9) (float-vector 116.605 78.3 -26.9) (float-vector 118.4 85.0 -26.9) (float-vector 118.4 85.0 -24.9)))
         (instance face :init :vertices (list (float-vector 118.4 85.0 26.9) (float-vector 116.605 78.3 26.9) (float-vector 116.605 78.3 24.9) (float-vector 118.4 85.0 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 73.3953 -24.9) (float-vector 111.7 73.3953 -26.9) (float-vector 116.605 78.3 -26.9) (float-vector 116.605 78.3 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 78.3 26.9) (float-vector 111.7 73.3953 26.9) (float-vector 111.7 73.3953 24.9) (float-vector 116.605 78.3 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 73.3953 -26.9) (float-vector 105.0 71.6 -26.9) (float-vector 98.3 73.3953 -26.9) (float-vector 93.3953 78.3 -26.9) (float-vector 91.6 85.0 -26.9) (float-vector 93.3953 91.7 -26.9) (float-vector 98.3 96.6047 -26.9) (float-vector 105.0 98.4 -26.9) (float-vector 111.7 96.6047 -26.9) (float-vector 116.605 91.7 -26.9) (float-vector 118.4 85.0 -26.9) (float-vector 116.605 78.3 -26.9)))
         (instance face :init :vertices (list (float-vector 105.0 71.6 -26.9) (float-vector 111.7 73.3953 -26.9) (float-vector 111.7 73.3953 -24.9) (float-vector 105.0 71.6 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 73.3953 26.9) (float-vector 105.0 71.6 26.9) (float-vector 105.0 71.6 24.9) (float-vector 111.7 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector 105.0 71.6 26.9) (float-vector 111.7 73.3953 26.9) (float-vector 116.605 78.3 26.9) (float-vector 118.4 85.0 26.9) (float-vector 116.605 91.7 26.9) (float-vector 111.7 96.6047 26.9) (float-vector 105.0 98.4 26.9) (float-vector 98.3 96.6047 26.9) (float-vector 93.3953 91.7 26.9) (float-vector 91.6 85.0 26.9) (float-vector 93.3953 78.3 26.9) (float-vector 98.3 73.3953 26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 74.0 14.4 94.9) (float-vector 74.0 14.4 45.1) (float-vector 15.0 14.4 45.1) (float-vector 15.0 14.4 94.9)))
         (instance face :init :vertices (list (float-vector 15.0 14.4 45.1) (float-vector 15.0 -14.4 45.1) (float-vector 15.0 -14.4 94.9) (float-vector 15.0 14.4 94.9)))
         (instance face :init :vertices (list (float-vector 15.0 -14.4 45.1) (float-vector 74.0 -14.4 45.1) (float-vector 74.0 -14.4 94.9) (float-vector 15.0 -14.4 94.9)))
         (instance face :init :vertices (list (float-vector 74.0 -14.4 94.9) (float-vector 74.0 14.4 94.9) (float-vector 15.0 14.4 94.9) (float-vector 15.0 -14.4 94.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 66.7 11.6047 94.9) (float-vector 71.6047 6.7 94.9) (float-vector 73.4 2.987610e-14 94.9) (float-vector 71.6047 -6.7 94.9) (float-vector 66.7 -11.6047 94.9) (float-vector 60.0 -13.4 94.9) (float-vector 53.3 -11.6047 94.9) (float-vector 48.3953 -6.7 94.9) (float-vector 46.6 4.162226e-14 94.9) (float-vector 48.3953 6.7 94.9) (float-vector 53.3 11.6047 94.9) (float-vector 60.0 13.4 94.9)))
))
         (instance face :init :vertices (list (float-vector 74.0 -14.4 45.1) (float-vector 74.0 14.4 45.1) (float-vector 74.0 14.4 94.9) (float-vector 74.0 -14.4 94.9)))
         (instance face :init :vertices (list (float-vector 74.0 14.4 45.1) (float-vector 74.0 -14.4 45.1) (float-vector 15.0 -14.4 45.1) (float-vector 15.0 14.4 45.1))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 71.6047 6.7 45.1) (float-vector 66.7 11.6047 45.1) (float-vector 60.0 13.4 45.1) (float-vector 53.3 11.6047 45.1) (float-vector 48.3953 6.7 45.1) (float-vector 46.6 4.162226e-14 45.1) (float-vector 48.3953 -6.7 45.1) (float-vector 53.3 -11.6047 45.1) (float-vector 60.0 -13.4 45.1) (float-vector 66.7 -11.6047 45.1) (float-vector 71.6047 -6.7 45.1) (float-vector 73.4 2.987610e-14 45.1)))
))
         (instance face :init :vertices (list (float-vector 60.0 13.4 96.9) (float-vector 60.0 13.4 94.9) (float-vector 53.3 11.6047 94.9) (float-vector 53.3 11.6047 96.9)))
         (instance face :init :vertices (list (float-vector 60.0 13.4 45.1) (float-vector 60.0 13.4 43.1) (float-vector 53.3 11.6047 43.1) (float-vector 53.3 11.6047 45.1)))
         (instance face :init :vertices (list (float-vector 48.3953 6.7 94.9) (float-vector 48.3953 6.7 96.9) (float-vector 53.3 11.6047 96.9) (float-vector 53.3 11.6047 94.9)))
         (instance face :init :vertices (list (float-vector 53.3 11.6047 43.1) (float-vector 48.3953 6.7 43.1) (float-vector 48.3953 6.7 45.1) (float-vector 53.3 11.6047 45.1)))
         (instance face :init :vertices (list (float-vector 46.6 4.162226e-14 94.9) (float-vector 46.6 4.162226e-14 96.9) (float-vector 48.3953 6.7 96.9) (float-vector 48.3953 6.7 94.9)))
         (instance face :init :vertices (list (float-vector 48.3953 6.7 43.1) (float-vector 46.6 4.162226e-14 43.1) (float-vector 46.6 4.162226e-14 45.1) (float-vector 48.3953 6.7 45.1)))
         (instance face :init :vertices (list (float-vector 48.3953 -6.7 94.9) (float-vector 48.3953 -6.7 96.9) (float-vector 46.6 4.162226e-14 96.9) (float-vector 46.6 4.162226e-14 94.9)))
         (instance face :init :vertices (list (float-vector 46.6 4.162226e-14 43.1) (float-vector 48.3953 -6.7 43.1) (float-vector 48.3953 -6.7 45.1) (float-vector 46.6 4.162226e-14 45.1)))
         (instance face :init :vertices (list (float-vector 53.3 -11.6047 94.9) (float-vector 53.3 -11.6047 96.9) (float-vector 48.3953 -6.7 96.9) (float-vector 48.3953 -6.7 94.9)))
         (instance face :init :vertices (list (float-vector 48.3953 -6.7 43.1) (float-vector 53.3 -11.6047 43.1) (float-vector 53.3 -11.6047 45.1) (float-vector 48.3953 -6.7 45.1)))
         (instance face :init :vertices (list (float-vector 60.0 -13.4 94.9) (float-vector 60.0 -13.4 96.9) (float-vector 53.3 -11.6047 96.9) (float-vector 53.3 -11.6047 94.9)))
         (instance face :init :vertices (list (float-vector 53.3 -11.6047 43.1) (float-vector 60.0 -13.4 43.1) (float-vector 60.0 -13.4 45.1) (float-vector 53.3 -11.6047 45.1)))
         (instance face :init :vertices (list (float-vector 66.7 -11.6047 94.9) (float-vector 66.7 -11.6047 96.9) (float-vector 60.0 -13.4 96.9) (float-vector 60.0 -13.4 94.9)))
         (instance face :init :vertices (list (float-vector 60.0 -13.4 43.1) (float-vector 66.7 -11.6047 43.1) (float-vector 66.7 -11.6047 45.1) (float-vector 60.0 -13.4 45.1)))
         (instance face :init :vertices (list (float-vector 71.6047 -6.7 94.9) (float-vector 71.6047 -6.7 96.9) (float-vector 66.7 -11.6047 96.9) (float-vector 66.7 -11.6047 94.9)))
         (instance face :init :vertices (list (float-vector 66.7 -11.6047 43.1) (float-vector 71.6047 -6.7 43.1) (float-vector 71.6047 -6.7 45.1) (float-vector 66.7 -11.6047 45.1)))
         (instance face :init :vertices (list (float-vector 73.4 2.987610e-14 94.9) (float-vector 73.4 2.987610e-14 96.9) (float-vector 71.6047 -6.7 96.9) (float-vector 71.6047 -6.7 94.9)))
         (instance face :init :vertices (list (float-vector 71.6047 -6.7 43.1) (float-vector 73.4 2.987610e-14 43.1) (float-vector 73.4 2.987610e-14 45.1) (float-vector 71.6047 -6.7 45.1)))
         (instance face :init :vertices (list (float-vector 71.6047 6.7 94.9) (float-vector 71.6047 6.7 96.9) (float-vector 73.4 2.987610e-14 96.9) (float-vector 73.4 2.987610e-14 94.9)))
         (instance face :init :vertices (list (float-vector 73.4 2.987610e-14 43.1) (float-vector 71.6047 6.7 43.1) (float-vector 71.6047 6.7 45.1) (float-vector 73.4 2.987610e-14 45.1)))
         (instance face :init :vertices (list (float-vector 66.7 11.6047 94.9) (float-vector 66.7 11.6047 96.9) (float-vector 71.6047 6.7 96.9) (float-vector 71.6047 6.7 94.9)))
         (instance face :init :vertices (list (float-vector 71.6047 6.7 43.1) (float-vector 66.7 11.6047 43.1) (float-vector 66.7 11.6047 45.1) (float-vector 71.6047 6.7 45.1)))
         (instance face :init :vertices (list (float-vector 66.7 11.6047 96.9) (float-vector 60.0 13.4 96.9) (float-vector 53.3 11.6047 96.9) (float-vector 48.3953 6.7 96.9) (float-vector 46.6 4.162226e-14 96.9) (float-vector 48.3953 -6.7 96.9) (float-vector 53.3 -11.6047 96.9) (float-vector 60.0 -13.4 96.9) (float-vector 66.7 -11.6047 96.9) (float-vector 71.6047 -6.7 96.9) (float-vector 73.4 2.987610e-14 96.9) (float-vector 71.6047 6.7 96.9)))
         (instance face :init :vertices (list (float-vector 60.0 13.4 96.9) (float-vector 66.7 11.6047 96.9) (float-vector 66.7 11.6047 94.9) (float-vector 60.0 13.4 94.9)))
         (instance face :init :vertices (list (float-vector 66.7 11.6047 43.1) (float-vector 60.0 13.4 43.1) (float-vector 60.0 13.4 45.1) (float-vector 66.7 11.6047 45.1)))
         (instance face :init :vertices (list (float-vector 60.0 13.4 43.1) (float-vector 66.7 11.6047 43.1) (float-vector 71.6047 6.7 43.1) (float-vector 73.4 2.987610e-14 43.1) (float-vector 71.6047 -6.7 43.1) (float-vector 66.7 -11.6047 43.1) (float-vector 60.0 -13.4 43.1) (float-vector 53.3 -11.6047 43.1) (float-vector 48.3953 -6.7 43.1) (float-vector 46.6 4.162226e-14 43.1) (float-vector 48.3953 6.7 43.1) (float-vector 53.3 11.6047 43.1)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 129.5 -58.5 28.5) (float-vector 129.5 58.5 28.5) (float-vector -129.5 58.5 28.5) (float-vector -129.5 -58.5 28.5)))
         (instance face :init :vertices (list (float-vector 129.5 58.5 -28.5) (float-vector 129.5 -58.5 -28.5) (float-vector -129.5 -58.5 -28.5) (float-vector -129.5 58.5 -28.5)))
         (instance face :init :vertices (list (float-vector 129.5 -58.5 28.5) (float-vector 129.5 -58.5 -28.5) (float-vector 129.5 58.5 -28.5) (float-vector 129.5 58.5 28.5)))
         (instance face :init :vertices (list (float-vector -129.5 -58.5 28.5) (float-vector -129.5 -58.5 -28.5) (float-vector 129.5 -58.5 -28.5) (float-vector 129.5 -58.5 28.5)))
         (instance face :init :vertices (list (float-vector -129.5 58.5 28.5) (float-vector -129.5 58.5 -28.5) (float-vector -129.5 -58.5 -28.5) (float-vector -129.5 -58.5 28.5)))
         (instance face :init :vertices (list (float-vector 129.5 58.5 28.5) (float-vector 129.5 58.5 -28.5) (float-vector -129.5 58.5 -28.5) (float-vector -129.5 58.5 28.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray40)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color :gray90)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 635 :centroid (float-vector 9.24832 -1.191208e-14 11.7953) :inertia-tensor #2f((3.661888e+06 -6.727050e-11 -2.560092e+05) (-6.727050e-11 4.111439e+06 -1.557293e-10) (-2.560092e+05 -1.557293e-10 6.708109e+06))))

     ;; definition of :rbleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -34.9 114.0 -44.4) (float-vector 14.9 114.0 -44.4) (float-vector 14.9 55.0 -44.4) (float-vector -34.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 14.9 55.0 -44.4) (float-vector 14.9 55.0 -15.6) (float-vector -34.9 55.0 -15.6) (float-vector -34.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 14.9 55.0 -15.6) (float-vector 14.9 114.0 -15.6) (float-vector -34.9 114.0 -15.6) (float-vector -34.9 55.0 -15.6)))
         (instance face :init :vertices (list (float-vector -34.9 114.0 -15.6) (float-vector -34.9 114.0 -44.4) (float-vector -34.9 55.0 -44.4) (float-vector -34.9 55.0 -15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -34.9 106.7 -41.6047) (float-vector -34.9 111.605 -36.7) (float-vector -34.9 113.4 -30.0) (float-vector -34.9 111.605 -23.3) (float-vector -34.9 106.7 -18.3953) (float-vector -34.9 100.0 -16.6) (float-vector -34.9 93.3 -18.3953) (float-vector -34.9 88.3953 -23.3) (float-vector -34.9 86.6 -30.0) (float-vector -34.9 88.3953 -36.7) (float-vector -34.9 93.3 -41.6047) (float-vector -34.9 100.0 -43.4)))
))
         (instance face :init :vertices (list (float-vector 14.9 114.0 -15.6) (float-vector 14.9 114.0 -44.4) (float-vector -34.9 114.0 -44.4) (float-vector -34.9 114.0 -15.6)))
         (instance face :init :vertices (list (float-vector 14.9 114.0 -44.4) (float-vector 14.9 114.0 -15.6) (float-vector 14.9 55.0 -15.6) (float-vector 14.9 55.0 -44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 14.9 111.605 -36.7) (float-vector 14.9 106.7 -41.6047) (float-vector 14.9 100.0 -43.4) (float-vector 14.9 93.3 -41.6047) (float-vector 14.9 88.3953 -36.7) (float-vector 14.9 86.6 -30.0) (float-vector 14.9 88.3953 -23.3) (float-vector 14.9 93.3 -18.3953) (float-vector 14.9 100.0 -16.6) (float-vector 14.9 106.7 -18.3953) (float-vector 14.9 111.605 -23.3) (float-vector 14.9 113.4 -30.0)))
))
         (instance face :init :vertices (list (float-vector -36.9 100.0 -43.4) (float-vector -34.9 100.0 -43.4) (float-vector -34.9 93.3 -41.6047) (float-vector -36.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 14.9 100.0 -43.4) (float-vector 16.9 100.0 -43.4) (float-vector 16.9 93.3 -41.6047) (float-vector 14.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector -34.9 88.3953 -36.7) (float-vector -36.9 88.3953 -36.7) (float-vector -36.9 93.3 -41.6047) (float-vector -34.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 16.9 93.3 -41.6047) (float-vector 16.9 88.3953 -36.7) (float-vector 14.9 88.3953 -36.7) (float-vector 14.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector -34.9 86.6 -30.0) (float-vector -36.9 86.6 -30.0) (float-vector -36.9 88.3953 -36.7) (float-vector -34.9 88.3953 -36.7)))
         (instance face :init :vertices (list (float-vector 16.9 88.3953 -36.7) (float-vector 16.9 86.6 -30.0) (float-vector 14.9 86.6 -30.0) (float-vector 14.9 88.3953 -36.7)))
         (instance face :init :vertices (list (float-vector -34.9 88.3953 -23.3) (float-vector -36.9 88.3953 -23.3) (float-vector -36.9 86.6 -30.0) (float-vector -34.9 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector 16.9 86.6 -30.0) (float-vector 16.9 88.3953 -23.3) (float-vector 14.9 88.3953 -23.3) (float-vector 14.9 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector -34.9 93.3 -18.3953) (float-vector -36.9 93.3 -18.3953) (float-vector -36.9 88.3953 -23.3) (float-vector -34.9 88.3953 -23.3)))
         (instance face :init :vertices (list (float-vector 16.9 88.3953 -23.3) (float-vector 16.9 93.3 -18.3953) (float-vector 14.9 93.3 -18.3953) (float-vector 14.9 88.3953 -23.3)))
         (instance face :init :vertices (list (float-vector -34.9 100.0 -16.6) (float-vector -36.9 100.0 -16.6) (float-vector -36.9 93.3 -18.3953) (float-vector -34.9 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector 16.9 93.3 -18.3953) (float-vector 16.9 100.0 -16.6) (float-vector 14.9 100.0 -16.6) (float-vector 14.9 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector -34.9 106.7 -18.3953) (float-vector -36.9 106.7 -18.3953) (float-vector -36.9 100.0 -16.6) (float-vector -34.9 100.0 -16.6)))
         (instance face :init :vertices (list (float-vector 16.9 100.0 -16.6) (float-vector 16.9 106.7 -18.3953) (float-vector 14.9 106.7 -18.3953) (float-vector 14.9 100.0 -16.6)))
         (instance face :init :vertices (list (float-vector -34.9 111.605 -23.3) (float-vector -36.9 111.605 -23.3) (float-vector -36.9 106.7 -18.3953) (float-vector -34.9 106.7 -18.3953)))
         (instance face :init :vertices (list (float-vector 16.9 106.7 -18.3953) (float-vector 16.9 111.605 -23.3) (float-vector 14.9 111.605 -23.3) (float-vector 14.9 106.7 -18.3953)))
         (instance face :init :vertices (list (float-vector -34.9 113.4 -30.0) (float-vector -36.9 113.4 -30.0) (float-vector -36.9 111.605 -23.3) (float-vector -34.9 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector 16.9 111.605 -23.3) (float-vector 16.9 113.4 -30.0) (float-vector 14.9 113.4 -30.0) (float-vector 14.9 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector -34.9 111.605 -36.7) (float-vector -36.9 111.605 -36.7) (float-vector -36.9 113.4 -30.0) (float-vector -34.9 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector 16.9 113.4 -30.0) (float-vector 16.9 111.605 -36.7) (float-vector 14.9 111.605 -36.7) (float-vector 14.9 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector -34.9 106.7 -41.6047) (float-vector -36.9 106.7 -41.6047) (float-vector -36.9 111.605 -36.7) (float-vector -34.9 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector 16.9 111.605 -36.7) (float-vector 16.9 106.7 -41.6047) (float-vector 14.9 106.7 -41.6047) (float-vector 14.9 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -36.9 106.7 -41.6047) (float-vector -36.9 100.0 -43.4) (float-vector -36.9 93.3 -41.6047) (float-vector -36.9 88.3953 -36.7) (float-vector -36.9 86.6 -30.0) (float-vector -36.9 88.3953 -23.3) (float-vector -36.9 93.3 -18.3953) (float-vector -36.9 100.0 -16.6) (float-vector -36.9 106.7 -18.3953) (float-vector -36.9 111.605 -23.3) (float-vector -36.9 113.4 -30.0) (float-vector -36.9 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -36.9 100.0 -43.4) (float-vector -36.9 106.7 -41.6047) (float-vector -34.9 106.7 -41.6047) (float-vector -34.9 100.0 -43.4)))
         (instance face :init :vertices (list (float-vector 16.9 106.7 -41.6047) (float-vector 16.9 100.0 -43.4) (float-vector 14.9 100.0 -43.4) (float-vector 14.9 106.7 -41.6047)))
         (instance face :init :vertices (list (float-vector 16.9 100.0 -43.4) (float-vector 16.9 106.7 -41.6047) (float-vector 16.9 111.605 -36.7) (float-vector 16.9 113.4 -30.0) (float-vector 16.9 111.605 -23.3) (float-vector 16.9 106.7 -18.3953) (float-vector 16.9 100.0 -16.6) (float-vector 16.9 93.3 -18.3953) (float-vector 16.9 88.3953 -23.3) (float-vector 16.9 86.6 -30.0) (float-vector 16.9 88.3953 -36.7) (float-vector 16.9 93.3 -41.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rbleg-crotch :weight 120.301 :centroid (float-vector -8.89434 78.1661 -26.683) :inertia-tensor #2f((1.072086e+05 7189.1 -3549.18) (7189.1 52421.3 21567.3) (-3549.18 21567.3 1.033760e+05))))

     ;; definition of :rbleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 1.421085e-14 32.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 -1.421085e-14 -32.5) (float-vector -15.0 -1.421085e-14 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 -1.421085e-14 -31.5) (float-vector -15.0 -1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -2.842171e-14 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector -2.842171e-14 -15.0 32.5) (float-vector -2.842171e-14 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.421085e-14 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -2.842171e-14 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 -1.421085e-14 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 15.0 1.421085e-14 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector -2.842171e-14 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 -1.421085e-14 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.4 114.0 24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 55.0 -24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 55.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 55.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 114.0 24.9) (float-vector -14.4 114.0 24.9) (float-vector -14.4 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -6.7 111.605 24.9) (float-vector 0.0 113.4 24.9) (float-vector 6.7 111.605 24.9) (float-vector 11.6047 106.7 24.9) (float-vector 13.4 100.0 24.9) (float-vector 11.6047 93.3 24.9) (float-vector 6.7 88.3953 24.9) (float-vector -2.842171e-14 86.6 24.9) (float-vector -6.7 88.3953 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.4 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4 114.0 -24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 114.0 24.9) (float-vector 14.4 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 114.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector -14.4 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.7 111.605 -24.9) (float-vector -11.6047 106.7 -24.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.7 88.3953 -24.9) (float-vector -2.842171e-14 86.6 -24.9) (float-vector 6.7 88.3953 -24.9) (float-vector 11.6047 93.3 -24.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 106.7 -24.9) (float-vector 6.7 111.605 -24.9) (float-vector 2.842171e-14 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -13.4 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -24.9) (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 24.9) (float-vector -6.7 88.3953 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -6.7 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 86.6 24.9) (float-vector -2.842171e-14 86.6 26.9) (float-vector -6.7 88.3953 26.9) (float-vector -6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 -26.9) (float-vector -2.842171e-14 86.6 -26.9) (float-vector -2.842171e-14 86.6 -24.9) (float-vector -6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 24.9) (float-vector 6.7 88.3953 26.9) (float-vector -2.842171e-14 86.6 26.9) (float-vector -2.842171e-14 86.6 24.9)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 86.6 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector 6.7 88.3953 -24.9) (float-vector -2.842171e-14 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 24.9) (float-vector 11.6047 93.3 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 11.6047 93.3 -24.9) (float-vector 6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 24.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 24.9) (float-vector 11.6047 106.7 26.9) (float-vector 13.4 100.0 26.9) (float-vector 13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 11.6047 106.7 -24.9) (float-vector 13.4 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 24.9) (float-vector 6.7 111.605 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 11.6047 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 6.7 111.605 -24.9) (float-vector 11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 0.0 113.4 24.9) (float-vector 0.0 113.4 26.9) (float-vector 6.7 111.605 26.9) (float-vector 6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 -26.9) (float-vector 2.842171e-14 113.4 -26.9) (float-vector 2.842171e-14 113.4 -24.9) (float-vector 6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 24.9) (float-vector -6.7 111.605 26.9) (float-vector 0.0 113.4 26.9) (float-vector 0.0 113.4 24.9)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 113.4 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector -6.7 111.605 -24.9) (float-vector 2.842171e-14 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -11.6047 106.7 26.9) (float-vector -6.7 111.605 26.9) (float-vector -6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -11.6047 106.7 -24.9) (float-vector -6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 26.9) (float-vector -13.4 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.7 88.3953 26.9) (float-vector -2.842171e-14 86.6 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 6.7 111.605 26.9) (float-vector 0.0 113.4 26.9) (float-vector -6.7 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -11.6047 106.7 26.9) (float-vector -11.6047 106.7 24.9) (float-vector -13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 -26.9) (float-vector -13.4 100.0 -26.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector 2.842171e-14 113.4 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector -2.842171e-14 86.6 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rbleg-knee :weight 120.301 :centroid (float-vector 2.842171e-14 78.1661 2.131628e-14) :inertia-tensor #2f((1.112789e+05 -1.018627e-11 -5.295804e-26) (-1.018627e-11 40590.7 1.277041e-12) (-5.295804e-26 1.277041e-12 87475.1))))

     ;; definition of :rbleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 -1.421085e-14 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 2.842171e-14 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -15.0 -32.5) (float-vector 2.842171e-14 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 2.842171e-14 -15.0 32.5) (float-vector 2.842171e-14 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 2.842171e-14 -15.0 -31.5) (float-vector 2.842171e-14 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 2.842171e-14 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 2.842171e-14 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 -1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 -32.5) (float-vector 15.0 -1.421085e-14 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 2.842171e-14 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 2.842171e-14 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 -1.421085e-14 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 35.0 136.0 -2.842171e-14) (float-vector 30.3109 136.0 17.5) (float-vector 17.5 136.0 30.3109) (float-vector 8.526513e-14 136.0 35.0) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 0.0) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector 0.0 136.0 -35.0) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 -2.842171e-14) (float-vector 30.3109 140.0 -17.5) (float-vector 17.5 140.0 -30.3109) (float-vector 2.842171e-14 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 0.0) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3109) (float-vector 8.526513e-14 140.0 35.0) (float-vector 17.5 140.0 30.3109) (float-vector 30.3109 140.0 17.5)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 30.3109 140.0 -17.5) (float-vector 35.0 140.0 -2.842171e-14) (float-vector 35.0 136.0 -2.842171e-14)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.3109) (float-vector 17.5 140.0 -30.3109) (float-vector 30.3109 140.0 -17.5) (float-vector 30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector 0.0 136.0 -35.0) (float-vector 2.842171e-14 140.0 -35.0) (float-vector 17.5 140.0 -30.3109) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector 2.842171e-14 140.0 -35.0) (float-vector 0.0 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 0.0) (float-vector -35.0 140.0 0.0) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 0.0) (float-vector -35.0 136.0 0.0)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3109) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 8.526513e-14 136.0 35.0) (float-vector 8.526513e-14 140.0 35.0) (float-vector -17.5 140.0 30.3109) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3109) (float-vector 17.5 140.0 30.3109) (float-vector 8.526513e-14 140.0 35.0) (float-vector 8.526513e-14 136.0 35.0)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.5) (float-vector 30.3109 140.0 17.5) (float-vector 17.5 140.0 30.3109) (float-vector 17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 -2.842171e-14) (float-vector 35.0 140.0 -2.842171e-14) (float-vector 30.3109 140.0 17.5) (float-vector 30.3109 136.0 17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rbleg-ankle :weight 68.1613 :centroid (float-vector -1.918465e-13 112.105 9.592327e-14) :inertia-tensor #2f((1.217524e+05 2.438039e-10 3.765323e-25) (2.438039e-10 16422.7 -1.425987e-10) (3.765323e-25 -1.425987e-10 1.080539e+05))))

     ;; definition of :rfleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 1.421085e-14 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 1.421085e-14 32.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 1.421085e-14 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 1.421085e-14 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 -15.0 -32.5) (float-vector 1.421085e-14 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 1.421085e-14 -15.0 32.5) (float-vector 1.421085e-14 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 1.421085e-14 -15.0 -31.5) (float-vector 1.421085e-14 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.421085e-14 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 1.421085e-14 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 1.421085e-14 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 15.0 1.421085e-14 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.421085e-14 -32.5) (float-vector 15.0 1.421085e-14 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 1.421085e-14 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 1.421085e-14 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 1.421085e-14 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.9 114.0 -44.4) (float-vector 34.9 114.0 -44.4) (float-vector 34.9 55.0 -44.4) (float-vector -14.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 34.9 55.0 -44.4) (float-vector 34.9 55.0 -15.6) (float-vector -14.9 55.0 -15.6) (float-vector -14.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 34.9 55.0 -15.6) (float-vector 34.9 114.0 -15.6) (float-vector -14.9 114.0 -15.6) (float-vector -14.9 55.0 -15.6)))
         (instance face :init :vertices (list (float-vector -14.9 114.0 -15.6) (float-vector -14.9 114.0 -44.4) (float-vector -14.9 55.0 -44.4) (float-vector -14.9 55.0 -15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -14.9 106.7 -41.6047) (float-vector -14.9 111.605 -36.7) (float-vector -14.9 113.4 -30.0) (float-vector -14.9 111.605 -23.3) (float-vector -14.9 106.7 -18.3953) (float-vector -14.9 100.0 -16.6) (float-vector -14.9 93.3 -18.3953) (float-vector -14.9 88.3953 -23.3) (float-vector -14.9 86.6 -30.0) (float-vector -14.9 88.3953 -36.7) (float-vector -14.9 93.3 -41.6047) (float-vector -14.9 100.0 -43.4)))
))
         (instance face :init :vertices (list (float-vector 34.9 114.0 -15.6) (float-vector 34.9 114.0 -44.4) (float-vector -14.9 114.0 -44.4) (float-vector -14.9 114.0 -15.6)))
         (instance face :init :vertices (list (float-vector 34.9 114.0 -44.4) (float-vector 34.9 114.0 -15.6) (float-vector 34.9 55.0 -15.6) (float-vector 34.9 55.0 -44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 34.9 111.605 -36.7) (float-vector 34.9 106.7 -41.6047) (float-vector 34.9 100.0 -43.4) (float-vector 34.9 93.3 -41.6047) (float-vector 34.9 88.3953 -36.7) (float-vector 34.9 86.6 -30.0) (float-vector 34.9 88.3953 -23.3) (float-vector 34.9 93.3 -18.3953) (float-vector 34.9 100.0 -16.6) (float-vector 34.9 106.7 -18.3953) (float-vector 34.9 111.605 -23.3) (float-vector 34.9 113.4 -30.0)))
))
         (instance face :init :vertices (list (float-vector -16.9 100.0 -43.4) (float-vector -14.9 100.0 -43.4) (float-vector -14.9 93.3 -41.6047) (float-vector -16.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 34.9 100.0 -43.4) (float-vector 36.9 100.0 -43.4) (float-vector 36.9 93.3 -41.6047) (float-vector 34.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector -14.9 88.3953 -36.7) (float-vector -16.9 88.3953 -36.7) (float-vector -16.9 93.3 -41.6047) (float-vector -14.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 36.9 93.3 -41.6047) (float-vector 36.9 88.3953 -36.7) (float-vector 34.9 88.3953 -36.7) (float-vector 34.9 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector -14.9 86.6 -30.0) (float-vector -16.9 86.6 -30.0) (float-vector -16.9 88.3953 -36.7) (float-vector -14.9 88.3953 -36.7)))
         (instance face :init :vertices (list (float-vector 36.9 88.3953 -36.7) (float-vector 36.9 86.6 -30.0) (float-vector 34.9 86.6 -30.0) (float-vector 34.9 88.3953 -36.7)))
         (instance face :init :vertices (list (float-vector -14.9 88.3953 -23.3) (float-vector -16.9 88.3953 -23.3) (float-vector -16.9 86.6 -30.0) (float-vector -14.9 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector 36.9 86.6 -30.0) (float-vector 36.9 88.3953 -23.3) (float-vector 34.9 88.3953 -23.3) (float-vector 34.9 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector -14.9 93.3 -18.3953) (float-vector -16.9 93.3 -18.3953) (float-vector -16.9 88.3953 -23.3) (float-vector -14.9 88.3953 -23.3)))
         (instance face :init :vertices (list (float-vector 36.9 88.3953 -23.3) (float-vector 36.9 93.3 -18.3953) (float-vector 34.9 93.3 -18.3953) (float-vector 34.9 88.3953 -23.3)))
         (instance face :init :vertices (list (float-vector -14.9 100.0 -16.6) (float-vector -16.9 100.0 -16.6) (float-vector -16.9 93.3 -18.3953) (float-vector -14.9 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector 36.9 93.3 -18.3953) (float-vector 36.9 100.0 -16.6) (float-vector 34.9 100.0 -16.6) (float-vector 34.9 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector -14.9 106.7 -18.3953) (float-vector -16.9 106.7 -18.3953) (float-vector -16.9 100.0 -16.6) (float-vector -14.9 100.0 -16.6)))
         (instance face :init :vertices (list (float-vector 36.9 100.0 -16.6) (float-vector 36.9 106.7 -18.3953) (float-vector 34.9 106.7 -18.3953) (float-vector 34.9 100.0 -16.6)))
         (instance face :init :vertices (list (float-vector -14.9 111.605 -23.3) (float-vector -16.9 111.605 -23.3) (float-vector -16.9 106.7 -18.3953) (float-vector -14.9 106.7 -18.3953)))
         (instance face :init :vertices (list (float-vector 36.9 106.7 -18.3953) (float-vector 36.9 111.605 -23.3) (float-vector 34.9 111.605 -23.3) (float-vector 34.9 106.7 -18.3953)))
         (instance face :init :vertices (list (float-vector -14.9 113.4 -30.0) (float-vector -16.9 113.4 -30.0) (float-vector -16.9 111.605 -23.3) (float-vector -14.9 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector 36.9 111.605 -23.3) (float-vector 36.9 113.4 -30.0) (float-vector 34.9 113.4 -30.0) (float-vector 34.9 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector -14.9 111.605 -36.7) (float-vector -16.9 111.605 -36.7) (float-vector -16.9 113.4 -30.0) (float-vector -14.9 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector 36.9 113.4 -30.0) (float-vector 36.9 111.605 -36.7) (float-vector 34.9 111.605 -36.7) (float-vector 34.9 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector -14.9 106.7 -41.6047) (float-vector -16.9 106.7 -41.6047) (float-vector -16.9 111.605 -36.7) (float-vector -14.9 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector 36.9 111.605 -36.7) (float-vector 36.9 106.7 -41.6047) (float-vector 34.9 106.7 -41.6047) (float-vector 34.9 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -16.9 106.7 -41.6047) (float-vector -16.9 100.0 -43.4) (float-vector -16.9 93.3 -41.6047) (float-vector -16.9 88.3953 -36.7) (float-vector -16.9 86.6 -30.0) (float-vector -16.9 88.3953 -23.3) (float-vector -16.9 93.3 -18.3953) (float-vector -16.9 100.0 -16.6) (float-vector -16.9 106.7 -18.3953) (float-vector -16.9 111.605 -23.3) (float-vector -16.9 113.4 -30.0) (float-vector -16.9 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -16.9 100.0 -43.4) (float-vector -16.9 106.7 -41.6047) (float-vector -14.9 106.7 -41.6047) (float-vector -14.9 100.0 -43.4)))
         (instance face :init :vertices (list (float-vector 36.9 106.7 -41.6047) (float-vector 36.9 100.0 -43.4) (float-vector 34.9 100.0 -43.4) (float-vector 34.9 106.7 -41.6047)))
         (instance face :init :vertices (list (float-vector 36.9 100.0 -43.4) (float-vector 36.9 106.7 -41.6047) (float-vector 36.9 111.605 -36.7) (float-vector 36.9 113.4 -30.0) (float-vector 36.9 111.605 -23.3) (float-vector 36.9 106.7 -18.3953) (float-vector 36.9 100.0 -16.6) (float-vector 36.9 93.3 -18.3953) (float-vector 36.9 88.3953 -23.3) (float-vector 36.9 86.6 -30.0) (float-vector 36.9 88.3953 -36.7) (float-vector 36.9 93.3 -41.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rfleg-crotch :weight 120.301 :centroid (float-vector 8.89434 78.1661 -26.683) :inertia-tensor #2f((1.072086e+05 -7189.1 3549.18) (-7189.1 52421.3 21567.3) (3549.18 21567.3 1.033760e+05))))

     ;; definition of :rfleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 -1.421085e-14 32.5) (float-vector 15.0 -1.421085e-14 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 -1.421085e-14 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 2.842171e-14 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 2.842171e-14 -15.0 32.5) (float-vector 2.842171e-14 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 2.842171e-14 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 -1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 -1.421085e-14 31.5) (float-vector 15.0 -1.421085e-14 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 -32.5) (float-vector 15.0 -1.421085e-14 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 -1.421085e-14 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 2.842171e-14 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 -1.421085e-14 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.4 114.0 24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 55.0 -24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 55.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 55.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 114.0 24.9) (float-vector -14.4 114.0 24.9) (float-vector -14.4 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -6.7 111.605 24.9) (float-vector 5.684342e-14 113.4 24.9) (float-vector 6.7 111.605 24.9) (float-vector 11.6047 106.7 24.9) (float-vector 13.4 100.0 24.9) (float-vector 11.6047 93.3 24.9) (float-vector 6.7 88.3953 24.9) (float-vector 0.0 86.6 24.9) (float-vector -6.7 88.3953 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.4 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4 114.0 -24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 114.0 24.9) (float-vector 14.4 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 114.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector -14.4 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.7 111.605 -24.9) (float-vector -11.6047 106.7 -24.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.7 88.3953 -24.9) (float-vector 0.0 86.6 -24.9) (float-vector 6.7 88.3953 -24.9) (float-vector 11.6047 93.3 -24.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 106.7 -24.9) (float-vector 6.7 111.605 -24.9) (float-vector 0.0 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -13.4 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -24.9) (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 24.9) (float-vector -6.7 88.3953 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -6.7 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 0.0 86.6 24.9) (float-vector 0.0 86.6 26.9) (float-vector -6.7 88.3953 26.9) (float-vector -6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 -26.9) (float-vector 0.0 86.6 -26.9) (float-vector 0.0 86.6 -24.9) (float-vector -6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 24.9) (float-vector 6.7 88.3953 26.9) (float-vector 0.0 86.6 26.9) (float-vector 0.0 86.6 24.9)))
         (instance face :init :vertices (list (float-vector 0.0 86.6 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector 6.7 88.3953 -24.9) (float-vector 0.0 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 24.9) (float-vector 11.6047 93.3 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 11.6047 93.3 -24.9) (float-vector 6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 24.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 24.9) (float-vector 11.6047 106.7 26.9) (float-vector 13.4 100.0 26.9) (float-vector 13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 11.6047 106.7 -24.9) (float-vector 13.4 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 24.9) (float-vector 6.7 111.605 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 11.6047 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 6.7 111.605 -24.9) (float-vector 11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 113.4 24.9) (float-vector 5.684342e-14 113.4 26.9) (float-vector 6.7 111.605 26.9) (float-vector 6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 -26.9) (float-vector 0.0 113.4 -26.9) (float-vector 0.0 113.4 -24.9) (float-vector 6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 24.9) (float-vector -6.7 111.605 26.9) (float-vector 5.684342e-14 113.4 26.9) (float-vector 5.684342e-14 113.4 24.9)))
         (instance face :init :vertices (list (float-vector 0.0 113.4 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector -6.7 111.605 -24.9) (float-vector 0.0 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -11.6047 106.7 26.9) (float-vector -6.7 111.605 26.9) (float-vector -6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -11.6047 106.7 -24.9) (float-vector -6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 26.9) (float-vector -13.4 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.7 88.3953 26.9) (float-vector 0.0 86.6 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 6.7 111.605 26.9) (float-vector 5.684342e-14 113.4 26.9) (float-vector -6.7 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -11.6047 106.7 26.9) (float-vector -11.6047 106.7 24.9) (float-vector -13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 -26.9) (float-vector -13.4 100.0 -26.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector 0.0 113.4 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector 0.0 86.6 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rfleg-knee :weight 120.301 :centroid (float-vector 5.684342e-14 78.1661 2.664535e-14) :inertia-tensor #2f((1.112789e+05 -5.078104e-12 3.268019e-12) (-5.078104e-12 40590.7 -7.089964e-12) (3.268019e-12 -7.089964e-12 87475.1))))

     ;; definition of :rfleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 -1.421085e-14 31.5) (float-vector -15.0 -1.421085e-14 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 -1.421085e-14 32.5) (float-vector -15.0 -1.421085e-14 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 -1.421085e-14 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 -1.421085e-14 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 35.0 136.0 2.842171e-14) (float-vector 30.3109 136.0 17.5) (float-vector 17.5 136.0 30.3109) (float-vector 8.526513e-14 136.0 35.0) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 4.263256e-14) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector 2.842171e-14 136.0 -35.0) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 2.842171e-14) (float-vector 30.3109 140.0 -17.5) (float-vector 17.5 140.0 -30.3109) (float-vector 2.842171e-14 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 4.263256e-14) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3109) (float-vector 8.526513e-14 140.0 35.0) (float-vector 17.5 140.0 30.3109) (float-vector 30.3109 140.0 17.5)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 30.3109 140.0 -17.5) (float-vector 35.0 140.0 2.842171e-14) (float-vector 35.0 136.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.3109) (float-vector 17.5 140.0 -30.3109) (float-vector 30.3109 140.0 -17.5) (float-vector 30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 136.0 -35.0) (float-vector 2.842171e-14 140.0 -35.0) (float-vector 17.5 140.0 -30.3109) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector 2.842171e-14 140.0 -35.0) (float-vector 2.842171e-14 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 4.263256e-14) (float-vector -35.0 140.0 4.263256e-14) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 4.263256e-14) (float-vector -35.0 136.0 4.263256e-14)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3109) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 8.526513e-14 136.0 35.0) (float-vector 8.526513e-14 140.0 35.0) (float-vector -17.5 140.0 30.3109) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3109) (float-vector 17.5 140.0 30.3109) (float-vector 8.526513e-14 140.0 35.0) (float-vector 8.526513e-14 136.0 35.0)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.5) (float-vector 30.3109 140.0 17.5) (float-vector 17.5 140.0 30.3109) (float-vector 17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 2.842171e-14) (float-vector 35.0 140.0 2.842171e-14) (float-vector 30.3109 140.0 17.5) (float-vector 30.3109 136.0 17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rfleg-ankle :weight 68.1613 :centroid (float-vector 1.776357e-14 112.105 6.927792e-14) :inertia-tensor #2f((1.217524e+05 -3.219352e-11 -3.779627e-26) (-3.219352e-11 16422.7 -1.080990e-10) (-3.779627e-26 -1.080990e-10 1.080539e+05))))

     ;; definition of :lbleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 -1.421085e-14 32.5) (float-vector 15.0 -1.421085e-14 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 -1.421085e-14 31.5) (float-vector -15.0 -1.421085e-14 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 -1.421085e-14 32.5) (float-vector -15.0 -1.421085e-14 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -1.421085e-14 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 -15.0 -32.5) (float-vector -1.421085e-14 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector -1.421085e-14 -15.0 32.5) (float-vector -1.421085e-14 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector -1.421085e-14 -15.0 -31.5) (float-vector -1.421085e-14 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 -1.421085e-14 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -1.421085e-14 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector -1.421085e-14 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 -1.421085e-14 31.5) (float-vector 15.0 -1.421085e-14 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 -1.421085e-14 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector -1.421085e-14 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 -1.421085e-14 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -1.421085e-14 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.9 114.0 44.4) (float-vector -34.9 114.0 44.4) (float-vector -34.9 55.0 44.4) (float-vector 14.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -34.9 55.0 44.4) (float-vector -34.9 55.0 15.6) (float-vector 14.9 55.0 15.6) (float-vector 14.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -34.9 55.0 15.6) (float-vector -34.9 114.0 15.6) (float-vector 14.9 114.0 15.6) (float-vector 14.9 55.0 15.6)))
         (instance face :init :vertices (list (float-vector 14.9 114.0 15.6) (float-vector 14.9 114.0 44.4) (float-vector 14.9 55.0 44.4) (float-vector 14.9 55.0 15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 14.9 106.7 41.6047) (float-vector 14.9 111.605 36.7) (float-vector 14.9 113.4 30.0) (float-vector 14.9 111.605 23.3) (float-vector 14.9 106.7 18.3953) (float-vector 14.9 100.0 16.6) (float-vector 14.9 93.3 18.3953) (float-vector 14.9 88.3953 23.3) (float-vector 14.9 86.6 30.0) (float-vector 14.9 88.3953 36.7) (float-vector 14.9 93.3 41.6047) (float-vector 14.9 100.0 43.4)))
))
         (instance face :init :vertices (list (float-vector -34.9 114.0 15.6) (float-vector -34.9 114.0 44.4) (float-vector 14.9 114.0 44.4) (float-vector 14.9 114.0 15.6)))
         (instance face :init :vertices (list (float-vector -34.9 114.0 44.4) (float-vector -34.9 114.0 15.6) (float-vector -34.9 55.0 15.6) (float-vector -34.9 55.0 44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -34.9 111.605 36.7) (float-vector -34.9 106.7 41.6047) (float-vector -34.9 100.0 43.4) (float-vector -34.9 93.3 41.6047) (float-vector -34.9 88.3953 36.7) (float-vector -34.9 86.6 30.0) (float-vector -34.9 88.3953 23.3) (float-vector -34.9 93.3 18.3953) (float-vector -34.9 100.0 16.6) (float-vector -34.9 106.7 18.3953) (float-vector -34.9 111.605 23.3) (float-vector -34.9 113.4 30.0)))
))
         (instance face :init :vertices (list (float-vector 16.9 100.0 43.4) (float-vector 14.9 100.0 43.4) (float-vector 14.9 93.3 41.6047) (float-vector 16.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector -34.9 100.0 43.4) (float-vector -36.9 100.0 43.4) (float-vector -36.9 93.3 41.6047) (float-vector -34.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 14.9 88.3953 36.7) (float-vector 16.9 88.3953 36.7) (float-vector 16.9 93.3 41.6047) (float-vector 14.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector -36.9 93.3 41.6047) (float-vector -36.9 88.3953 36.7) (float-vector -34.9 88.3953 36.7) (float-vector -34.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 14.9 86.6 30.0) (float-vector 16.9 86.6 30.0) (float-vector 16.9 88.3953 36.7) (float-vector 14.9 88.3953 36.7)))
         (instance face :init :vertices (list (float-vector -36.9 88.3953 36.7) (float-vector -36.9 86.6 30.0) (float-vector -34.9 86.6 30.0) (float-vector -34.9 88.3953 36.7)))
         (instance face :init :vertices (list (float-vector 14.9 88.3953 23.3) (float-vector 16.9 88.3953 23.3) (float-vector 16.9 86.6 30.0) (float-vector 14.9 86.6 30.0)))
         (instance face :init :vertices (list (float-vector -36.9 86.6 30.0) (float-vector -36.9 88.3953 23.3) (float-vector -34.9 88.3953 23.3) (float-vector -34.9 86.6 30.0)))
         (instance face :init :vertices (list (float-vector 14.9 93.3 18.3953) (float-vector 16.9 93.3 18.3953) (float-vector 16.9 88.3953 23.3) (float-vector 14.9 88.3953 23.3)))
         (instance face :init :vertices (list (float-vector -36.9 88.3953 23.3) (float-vector -36.9 93.3 18.3953) (float-vector -34.9 93.3 18.3953) (float-vector -34.9 88.3953 23.3)))
         (instance face :init :vertices (list (float-vector 14.9 100.0 16.6) (float-vector 16.9 100.0 16.6) (float-vector 16.9 93.3 18.3953) (float-vector 14.9 93.3 18.3953)))
         (instance face :init :vertices (list (float-vector -36.9 93.3 18.3953) (float-vector -36.9 100.0 16.6) (float-vector -34.9 100.0 16.6) (float-vector -34.9 93.3 18.3953)))
         (instance face :init :vertices (list (float-vector 14.9 106.7 18.3953) (float-vector 16.9 106.7 18.3953) (float-vector 16.9 100.0 16.6) (float-vector 14.9 100.0 16.6)))
         (instance face :init :vertices (list (float-vector -36.9 100.0 16.6) (float-vector -36.9 106.7 18.3953) (float-vector -34.9 106.7 18.3953) (float-vector -34.9 100.0 16.6)))
         (instance face :init :vertices (list (float-vector 14.9 111.605 23.3) (float-vector 16.9 111.605 23.3) (float-vector 16.9 106.7 18.3953) (float-vector 14.9 106.7 18.3953)))
         (instance face :init :vertices (list (float-vector -36.9 106.7 18.3953) (float-vector -36.9 111.605 23.3) (float-vector -34.9 111.605 23.3) (float-vector -34.9 106.7 18.3953)))
         (instance face :init :vertices (list (float-vector 14.9 113.4 30.0) (float-vector 16.9 113.4 30.0) (float-vector 16.9 111.605 23.3) (float-vector 14.9 111.605 23.3)))
         (instance face :init :vertices (list (float-vector -36.9 111.605 23.3) (float-vector -36.9 113.4 30.0) (float-vector -34.9 113.4 30.0) (float-vector -34.9 111.605 23.3)))
         (instance face :init :vertices (list (float-vector 14.9 111.605 36.7) (float-vector 16.9 111.605 36.7) (float-vector 16.9 113.4 30.0) (float-vector 14.9 113.4 30.0)))
         (instance face :init :vertices (list (float-vector -36.9 113.4 30.0) (float-vector -36.9 111.605 36.7) (float-vector -34.9 111.605 36.7) (float-vector -34.9 113.4 30.0)))
         (instance face :init :vertices (list (float-vector 14.9 106.7 41.6047) (float-vector 16.9 106.7 41.6047) (float-vector 16.9 111.605 36.7) (float-vector 14.9 111.605 36.7)))
         (instance face :init :vertices (list (float-vector -36.9 111.605 36.7) (float-vector -36.9 106.7 41.6047) (float-vector -34.9 106.7 41.6047) (float-vector -34.9 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 16.9 106.7 41.6047) (float-vector 16.9 100.0 43.4) (float-vector 16.9 93.3 41.6047) (float-vector 16.9 88.3953 36.7) (float-vector 16.9 86.6 30.0) (float-vector 16.9 88.3953 23.3) (float-vector 16.9 93.3 18.3953) (float-vector 16.9 100.0 16.6) (float-vector 16.9 106.7 18.3953) (float-vector 16.9 111.605 23.3) (float-vector 16.9 113.4 30.0) (float-vector 16.9 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 16.9 100.0 43.4) (float-vector 16.9 106.7 41.6047) (float-vector 14.9 106.7 41.6047) (float-vector 14.9 100.0 43.4)))
         (instance face :init :vertices (list (float-vector -36.9 106.7 41.6047) (float-vector -36.9 100.0 43.4) (float-vector -34.9 100.0 43.4) (float-vector -34.9 106.7 41.6047)))
         (instance face :init :vertices (list (float-vector -36.9 100.0 43.4) (float-vector -36.9 106.7 41.6047) (float-vector -36.9 111.605 36.7) (float-vector -36.9 113.4 30.0) (float-vector -36.9 111.605 23.3) (float-vector -36.9 106.7 18.3953) (float-vector -36.9 100.0 16.6) (float-vector -36.9 93.3 18.3953) (float-vector -36.9 88.3953 23.3) (float-vector -36.9 86.6 30.0) (float-vector -36.9 88.3953 36.7) (float-vector -36.9 93.3 41.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lbleg-crotch :weight 120.301 :centroid (float-vector -8.89434 78.1661 26.683) :inertia-tensor #2f((1.072086e+05 7189.1 3549.18) (7189.1 52421.3 -21567.3) (3549.18 -21567.3 1.033760e+05))))

     ;; definition of :lbleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 1.421085e-14 32.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 -1.421085e-14 -32.5) (float-vector -15.0 -1.421085e-14 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 -1.421085e-14 -31.5) (float-vector -15.0 -1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -2.842171e-14 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector -2.842171e-14 -15.0 32.5) (float-vector -2.842171e-14 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.421085e-14 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -2.842171e-14 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 -1.421085e-14 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 15.0 1.421085e-14 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 1.421085e-14 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector -2.842171e-14 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 -1.421085e-14 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.4 114.0 24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 55.0 -24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 55.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 55.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 114.0 24.9) (float-vector -14.4 114.0 24.9) (float-vector -14.4 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -6.7 111.605 24.9) (float-vector 2.842171e-14 113.4 24.9) (float-vector 6.7 111.605 24.9) (float-vector 11.6047 106.7 24.9) (float-vector 13.4 100.0 24.9) (float-vector 11.6047 93.3 24.9) (float-vector 6.7 88.3953 24.9) (float-vector 0.0 86.6 24.9) (float-vector -6.7 88.3953 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.4 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4 114.0 -24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 114.0 24.9) (float-vector 14.4 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 114.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector -14.4 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.7 111.605 -24.9) (float-vector -11.6047 106.7 -24.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.7 88.3953 -24.9) (float-vector 0.0 86.6 -24.9) (float-vector 6.7 88.3953 -24.9) (float-vector 11.6047 93.3 -24.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 106.7 -24.9) (float-vector 6.7 111.605 -24.9) (float-vector 5.684342e-14 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -13.4 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -24.9) (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 24.9) (float-vector -6.7 88.3953 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -6.7 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 0.0 86.6 24.9) (float-vector 0.0 86.6 26.9) (float-vector -6.7 88.3953 26.9) (float-vector -6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 -26.9) (float-vector 0.0 86.6 -26.9) (float-vector 0.0 86.6 -24.9) (float-vector -6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 24.9) (float-vector 6.7 88.3953 26.9) (float-vector 0.0 86.6 26.9) (float-vector 0.0 86.6 24.9)))
         (instance face :init :vertices (list (float-vector 0.0 86.6 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector 6.7 88.3953 -24.9) (float-vector 0.0 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 24.9) (float-vector 11.6047 93.3 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 11.6047 93.3 -24.9) (float-vector 6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 24.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 24.9) (float-vector 11.6047 106.7 26.9) (float-vector 13.4 100.0 26.9) (float-vector 13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 11.6047 106.7 -24.9) (float-vector 13.4 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 24.9) (float-vector 6.7 111.605 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 11.6047 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 6.7 111.605 -24.9) (float-vector 11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 113.4 24.9) (float-vector 2.842171e-14 113.4 26.9) (float-vector 6.7 111.605 26.9) (float-vector 6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 -26.9) (float-vector 5.684342e-14 113.4 -26.9) (float-vector 5.684342e-14 113.4 -24.9) (float-vector 6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 24.9) (float-vector -6.7 111.605 26.9) (float-vector 2.842171e-14 113.4 26.9) (float-vector 2.842171e-14 113.4 24.9)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 113.4 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector -6.7 111.605 -24.9) (float-vector 5.684342e-14 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -11.6047 106.7 26.9) (float-vector -6.7 111.605 26.9) (float-vector -6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -11.6047 106.7 -24.9) (float-vector -6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 26.9) (float-vector -13.4 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.7 88.3953 26.9) (float-vector 0.0 86.6 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 6.7 111.605 26.9) (float-vector 2.842171e-14 113.4 26.9) (float-vector -6.7 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -11.6047 106.7 26.9) (float-vector -11.6047 106.7 24.9) (float-vector -13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 -26.9) (float-vector -13.4 100.0 -26.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector 5.684342e-14 113.4 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector 0.0 86.6 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lbleg-knee :weight 120.301 :centroid (float-vector 2.131628e-14 78.1661 1.953993e-14) :inertia-tensor #2f((1.112789e+05 -7.632187e-12 -2.478342e-26) (-7.632187e-12 40590.7 -3.831124e-12) (-2.478342e-26 -3.831124e-12 87475.1))))

     ;; definition of :lbleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 1.421085e-14 -32.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -15.0 1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -2.842171e-14 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -15.0 -32.5) (float-vector -2.842171e-14 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector -2.842171e-14 -15.0 32.5) (float-vector -2.842171e-14 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector -2.842171e-14 -15.0 -31.5) (float-vector -2.842171e-14 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -2.842171e-14 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector -2.842171e-14 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 1.421085e-14 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector -2.842171e-14 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -2.842171e-14 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 35.0 136.0 0.0) (float-vector 30.3109 136.0 17.5) (float-vector 17.5 136.0 30.3109) (float-vector 5.684342e-14 136.0 35.0) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 2.842171e-14) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector -5.684342e-14 136.0 -35.0) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 0.0) (float-vector 30.3109 140.0 -17.5) (float-vector 17.5 140.0 -30.3109) (float-vector -5.684342e-14 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 2.842171e-14) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3109) (float-vector 0.0 140.0 35.0) (float-vector 17.5 140.0 30.3109) (float-vector 30.3109 140.0 17.5)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 30.3109 140.0 -17.5) (float-vector 35.0 140.0 0.0) (float-vector 35.0 136.0 0.0)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.3109) (float-vector 17.5 140.0 -30.3109) (float-vector 30.3109 140.0 -17.5) (float-vector 30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 136.0 -35.0) (float-vector -5.684342e-14 140.0 -35.0) (float-vector 17.5 140.0 -30.3109) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector -5.684342e-14 140.0 -35.0) (float-vector -5.684342e-14 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 2.842171e-14) (float-vector -35.0 140.0 2.842171e-14) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 2.842171e-14) (float-vector -35.0 136.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3109) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 136.0 35.0) (float-vector 0.0 140.0 35.0) (float-vector -17.5 140.0 30.3109) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3109) (float-vector 17.5 140.0 30.3109) (float-vector 0.0 140.0 35.0) (float-vector 5.684342e-14 136.0 35.0)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.5) (float-vector 30.3109 140.0 17.5) (float-vector 17.5 140.0 30.3109) (float-vector 17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 0.0) (float-vector 35.0 140.0 0.0) (float-vector 30.3109 140.0 17.5) (float-vector 30.3109 136.0 17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lbleg-ankle :weight 68.1613 :centroid (float-vector 3.765876e-13 112.105 2.504663e-13) :inertia-tensor #2f((1.217524e+05 -4.921893e-10 -1.851902e-24) (-4.921893e-10 16422.7 -3.472968e-10) (-1.851902e-24 -3.472968e-10 1.080539e+05))))

     ;; definition of :lfleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 1.421085e-14 -32.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 1.421085e-14 31.5) (float-vector -15.0 1.421085e-14 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 1.421085e-14 32.5) (float-vector -15.0 1.421085e-14 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -15.0 1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 1.421085e-14 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 1.421085e-14 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 1.421085e-14 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 34.9 114.0 44.4) (float-vector -14.9 114.0 44.4) (float-vector -14.9 55.0 44.4) (float-vector 34.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -14.9 55.0 44.4) (float-vector -14.9 55.0 15.6) (float-vector 34.9 55.0 15.6) (float-vector 34.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -14.9 55.0 15.6) (float-vector -14.9 114.0 15.6) (float-vector 34.9 114.0 15.6) (float-vector 34.9 55.0 15.6)))
         (instance face :init :vertices (list (float-vector 34.9 114.0 15.6) (float-vector 34.9 114.0 44.4) (float-vector 34.9 55.0 44.4) (float-vector 34.9 55.0 15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 34.9 106.7 41.6047) (float-vector 34.9 111.605 36.7) (float-vector 34.9 113.4 30.0) (float-vector 34.9 111.605 23.3) (float-vector 34.9 106.7 18.3953) (float-vector 34.9 100.0 16.6) (float-vector 34.9 93.3 18.3953) (float-vector 34.9 88.3953 23.3) (float-vector 34.9 86.6 30.0) (float-vector 34.9 88.3953 36.7) (float-vector 34.9 93.3 41.6047) (float-vector 34.9 100.0 43.4)))
))
         (instance face :init :vertices (list (float-vector -14.9 114.0 15.6) (float-vector -14.9 114.0 44.4) (float-vector 34.9 114.0 44.4) (float-vector 34.9 114.0 15.6)))
         (instance face :init :vertices (list (float-vector -14.9 114.0 44.4) (float-vector -14.9 114.0 15.6) (float-vector -14.9 55.0 15.6) (float-vector -14.9 55.0 44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -14.9 111.605 36.7) (float-vector -14.9 106.7 41.6047) (float-vector -14.9 100.0 43.4) (float-vector -14.9 93.3 41.6047) (float-vector -14.9 88.3953 36.7) (float-vector -14.9 86.6 30.0) (float-vector -14.9 88.3953 23.3) (float-vector -14.9 93.3 18.3953) (float-vector -14.9 100.0 16.6) (float-vector -14.9 106.7 18.3953) (float-vector -14.9 111.605 23.3) (float-vector -14.9 113.4 30.0)))
))
         (instance face :init :vertices (list (float-vector 36.9 100.0 43.4) (float-vector 34.9 100.0 43.4) (float-vector 34.9 93.3 41.6047) (float-vector 36.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector -14.9 100.0 43.4) (float-vector -16.9 100.0 43.4) (float-vector -16.9 93.3 41.6047) (float-vector -14.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 34.9 88.3953 36.7) (float-vector 36.9 88.3953 36.7) (float-vector 36.9 93.3 41.6047) (float-vector 34.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector -16.9 93.3 41.6047) (float-vector -16.9 88.3953 36.7) (float-vector -14.9 88.3953 36.7) (float-vector -14.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 34.9 86.6 30.0) (float-vector 36.9 86.6 30.0) (float-vector 36.9 88.3953 36.7) (float-vector 34.9 88.3953 36.7)))
         (instance face :init :vertices (list (float-vector -16.9 88.3953 36.7) (float-vector -16.9 86.6 30.0) (float-vector -14.9 86.6 30.0) (float-vector -14.9 88.3953 36.7)))
         (instance face :init :vertices (list (float-vector 34.9 88.3953 23.3) (float-vector 36.9 88.3953 23.3) (float-vector 36.9 86.6 30.0) (float-vector 34.9 86.6 30.0)))
         (instance face :init :vertices (list (float-vector -16.9 86.6 30.0) (float-vector -16.9 88.3953 23.3) (float-vector -14.9 88.3953 23.3) (float-vector -14.9 86.6 30.0)))
         (instance face :init :vertices (list (float-vector 34.9 93.3 18.3953) (float-vector 36.9 93.3 18.3953) (float-vector 36.9 88.3953 23.3) (float-vector 34.9 88.3953 23.3)))
         (instance face :init :vertices (list (float-vector -16.9 88.3953 23.3) (float-vector -16.9 93.3 18.3953) (float-vector -14.9 93.3 18.3953) (float-vector -14.9 88.3953 23.3)))
         (instance face :init :vertices (list (float-vector 34.9 100.0 16.6) (float-vector 36.9 100.0 16.6) (float-vector 36.9 93.3 18.3953) (float-vector 34.9 93.3 18.3953)))
         (instance face :init :vertices (list (float-vector -16.9 93.3 18.3953) (float-vector -16.9 100.0 16.6) (float-vector -14.9 100.0 16.6) (float-vector -14.9 93.3 18.3953)))
         (instance face :init :vertices (list (float-vector 34.9 106.7 18.3953) (float-vector 36.9 106.7 18.3953) (float-vector 36.9 100.0 16.6) (float-vector 34.9 100.0 16.6)))
         (instance face :init :vertices (list (float-vector -16.9 100.0 16.6) (float-vector -16.9 106.7 18.3953) (float-vector -14.9 106.7 18.3953) (float-vector -14.9 100.0 16.6)))
         (instance face :init :vertices (list (float-vector 34.9 111.605 23.3) (float-vector 36.9 111.605 23.3) (float-vector 36.9 106.7 18.3953) (float-vector 34.9 106.7 18.3953)))
         (instance face :init :vertices (list (float-vector -16.9 106.7 18.3953) (float-vector -16.9 111.605 23.3) (float-vector -14.9 111.605 23.3) (float-vector -14.9 106.7 18.3953)))
         (instance face :init :vertices (list (float-vector 34.9 113.4 30.0) (float-vector 36.9 113.4 30.0) (float-vector 36.9 111.605 23.3) (float-vector 34.9 111.605 23.3)))
         (instance face :init :vertices (list (float-vector -16.9 111.605 23.3) (float-vector -16.9 113.4 30.0) (float-vector -14.9 113.4 30.0) (float-vector -14.9 111.605 23.3)))
         (instance face :init :vertices (list (float-vector 34.9 111.605 36.7) (float-vector 36.9 111.605 36.7) (float-vector 36.9 113.4 30.0) (float-vector 34.9 113.4 30.0)))
         (instance face :init :vertices (list (float-vector -16.9 113.4 30.0) (float-vector -16.9 111.605 36.7) (float-vector -14.9 111.605 36.7) (float-vector -14.9 113.4 30.0)))
         (instance face :init :vertices (list (float-vector 34.9 106.7 41.6047) (float-vector 36.9 106.7 41.6047) (float-vector 36.9 111.605 36.7) (float-vector 34.9 111.605 36.7)))
         (instance face :init :vertices (list (float-vector -16.9 111.605 36.7) (float-vector -16.9 106.7 41.6047) (float-vector -14.9 106.7 41.6047) (float-vector -14.9 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 36.9 106.7 41.6047) (float-vector 36.9 100.0 43.4) (float-vector 36.9 93.3 41.6047) (float-vector 36.9 88.3953 36.7) (float-vector 36.9 86.6 30.0) (float-vector 36.9 88.3953 23.3) (float-vector 36.9 93.3 18.3953) (float-vector 36.9 100.0 16.6) (float-vector 36.9 106.7 18.3953) (float-vector 36.9 111.605 23.3) (float-vector 36.9 113.4 30.0) (float-vector 36.9 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 36.9 100.0 43.4) (float-vector 36.9 106.7 41.6047) (float-vector 34.9 106.7 41.6047) (float-vector 34.9 100.0 43.4)))
         (instance face :init :vertices (list (float-vector -16.9 106.7 41.6047) (float-vector -16.9 100.0 43.4) (float-vector -14.9 100.0 43.4) (float-vector -14.9 106.7 41.6047)))
         (instance face :init :vertices (list (float-vector -16.9 100.0 43.4) (float-vector -16.9 106.7 41.6047) (float-vector -16.9 111.605 36.7) (float-vector -16.9 113.4 30.0) (float-vector -16.9 111.605 23.3) (float-vector -16.9 106.7 18.3953) (float-vector -16.9 100.0 16.6) (float-vector -16.9 93.3 18.3953) (float-vector -16.9 88.3953 23.3) (float-vector -16.9 86.6 30.0) (float-vector -16.9 88.3953 36.7) (float-vector -16.9 93.3 41.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lfleg-crotch :weight 120.301 :centroid (float-vector 8.89434 78.1661 26.683) :inertia-tensor #2f((1.072086e+05 -7189.1 -3549.18) (-7189.1 52421.3 -21567.3) (-3549.18 -21567.3 1.033760e+05))))

     ;; definition of :lfleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 1.421085e-14 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 1.421085e-14 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 1.421085e-14 -32.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -15.0 1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -15.0 -32.5) (float-vector -2.842171e-14 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector -2.842171e-14 -15.0 -31.5) (float-vector -2.842171e-14 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector -2.842171e-14 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 1.421085e-14 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 1.421085e-14 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.421085e-14 -32.5) (float-vector 15.0 1.421085e-14 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 1.421085e-14 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -2.842171e-14 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 1.421085e-14 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.4 114.0 24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 55.0 -24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 55.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 55.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 114.0 24.9) (float-vector -14.4 114.0 24.9) (float-vector -14.4 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -6.7 111.605 24.9) (float-vector 0.0 113.4 24.9) (float-vector 6.7 111.605 24.9) (float-vector 11.6047 106.7 24.9) (float-vector 13.4 100.0 24.9) (float-vector 11.6047 93.3 24.9) (float-vector 6.7 88.3953 24.9) (float-vector -5.684342e-14 86.6 24.9) (float-vector -6.7 88.3953 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.4 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4 114.0 -24.9) (float-vector -14.4 114.0 -24.9) (float-vector -14.4 114.0 24.9) (float-vector 14.4 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 114.0 -24.9) (float-vector 14.4 114.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector -14.4 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.7 111.605 -24.9) (float-vector -11.6047 106.7 -24.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.7 88.3953 -24.9) (float-vector -8.526513e-14 86.6 -24.9) (float-vector 6.7 88.3953 -24.9) (float-vector 11.6047 93.3 -24.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 106.7 -24.9) (float-vector 6.7 111.605 -24.9) (float-vector -2.842171e-14 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -13.4 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -24.9) (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 24.9) (float-vector -6.7 88.3953 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -6.7 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 86.6 24.9) (float-vector -2.842171e-14 86.6 26.9) (float-vector -6.7 88.3953 26.9) (float-vector -6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 88.3953 -26.9) (float-vector -5.684342e-14 86.6 -26.9) (float-vector -8.526513e-14 86.6 -24.9) (float-vector -6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 24.9) (float-vector 6.7 88.3953 26.9) (float-vector -2.842171e-14 86.6 26.9) (float-vector -5.684342e-14 86.6 24.9)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 86.6 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector 6.7 88.3953 -24.9) (float-vector -8.526513e-14 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 24.9) (float-vector 11.6047 93.3 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 6.7 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 88.3953 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 11.6047 93.3 -24.9) (float-vector 6.7 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 24.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 93.3 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 24.9) (float-vector 11.6047 106.7 26.9) (float-vector 13.4 100.0 26.9) (float-vector 13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 11.6047 106.7 -24.9) (float-vector 13.4 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 24.9) (float-vector 6.7 111.605 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 11.6047 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 106.7 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 6.7 111.605 -24.9) (float-vector 11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 0.0 113.4 24.9) (float-vector 2.842171e-14 113.4 26.9) (float-vector 6.7 111.605 26.9) (float-vector 6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 111.605 -26.9) (float-vector -2.842171e-14 113.4 -26.9) (float-vector -2.842171e-14 113.4 -24.9) (float-vector 6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 24.9) (float-vector -6.7 111.605 26.9) (float-vector 2.842171e-14 113.4 26.9) (float-vector 0.0 113.4 24.9)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 113.4 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector -6.7 111.605 -24.9) (float-vector -2.842171e-14 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -11.6047 106.7 26.9) (float-vector -6.7 111.605 26.9) (float-vector -6.7 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 111.605 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -11.6047 106.7 -24.9) (float-vector -6.7 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 26.9) (float-vector -13.4 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.7 88.3953 26.9) (float-vector -2.842171e-14 86.6 26.9) (float-vector 6.7 88.3953 26.9) (float-vector 11.6047 93.3 26.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6047 106.7 26.9) (float-vector 6.7 111.605 26.9) (float-vector 2.842171e-14 113.4 26.9) (float-vector -6.7 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 26.9) (float-vector -11.6047 106.7 26.9) (float-vector -11.6047 106.7 24.9) (float-vector -13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 -26.9) (float-vector -13.4 100.0 -26.9) (float-vector -13.4 100.0 -24.9) (float-vector -11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 100.0 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -6.7 111.605 -26.9) (float-vector -2.842171e-14 113.4 -26.9) (float-vector 6.7 111.605 -26.9) (float-vector 11.6047 106.7 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 11.6047 93.3 -26.9) (float-vector 6.7 88.3953 -26.9) (float-vector -5.684342e-14 86.6 -26.9) (float-vector -6.7 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lfleg-knee :weight 120.301 :centroid (float-vector 8.171241e-14 78.1661 -2.842171e-14) :inertia-tensor #2f((1.112789e+05 -2.295668e-11 -3.268019e-12) (-2.295668e-11 40590.7 1.602925e-11) (-3.268019e-12 1.602925e-11 87475.1))))

     ;; definition of :lfleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 35.0 136.0 -1.421085e-14) (float-vector 30.3109 136.0 17.5) (float-vector 17.5 136.0 30.3109) (float-vector 2.842171e-14 136.0 35.0) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 2.842171e-14) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector -8.526513e-14 136.0 -35.0) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 -1.421085e-14) (float-vector 30.3109 140.0 -17.5) (float-vector 17.5 140.0 -30.3109) (float-vector -2.842171e-14 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 2.842171e-14) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3109) (float-vector 8.526513e-14 140.0 35.0) (float-vector 17.5 140.0 30.3109) (float-vector 30.3109 140.0 17.5)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5) (float-vector 30.3109 140.0 -17.5) (float-vector 35.0 140.0 -1.421085e-14) (float-vector 35.0 136.0 -1.421085e-14)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.3109) (float-vector 17.5 140.0 -30.3109) (float-vector 30.3109 140.0 -17.5) (float-vector 30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 136.0 -35.0) (float-vector -2.842171e-14 140.0 -35.0) (float-vector 17.5 140.0 -30.3109) (float-vector 17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector -2.842171e-14 140.0 -35.0) (float-vector -8.526513e-14 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 2.842171e-14) (float-vector -35.0 140.0 2.842171e-14) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 2.842171e-14) (float-vector -35.0 136.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3109) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 136.0 35.0) (float-vector 8.526513e-14 140.0 35.0) (float-vector -17.5 140.0 30.3109) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3109) (float-vector 17.5 140.0 30.3109) (float-vector 8.526513e-14 140.0 35.0) (float-vector 2.842171e-14 136.0 35.0)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.5) (float-vector 30.3109 140.0 17.5) (float-vector 17.5 140.0 30.3109) (float-vector 17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 -1.421085e-14) (float-vector 35.0 140.0 -1.421085e-14) (float-vector 30.3109 140.0 17.5) (float-vector 30.3109 136.0 17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lfleg-ankle :weight 68.1613 :centroid (float-vector -5.790923e-13 112.105 2.060574e-13) :inertia-tensor #2f((1.217524e+05 7.607078e-10 2.416198e-24) (7.607078e-10 16422.7 -2.920973e-10) (2.416198e-24 -2.920973e-10 1.080539e+05))))

     ;; definition of :head-pan1
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 30.0 -32.5) (float-vector 15.0 30.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 29.0 31.5) (float-vector 15.0 29.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 30.0 -32.5) (float-vector -15.0 30.0 32.5) (float-vector 15.0 30.0 32.5) (float-vector 15.0 30.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 29.0 -31.5) (float-vector -15.0 29.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 30.0 32.5) (float-vector -15.0 30.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 30.0 32.5) (float-vector -15.0 30.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 30.0 -32.5) (float-vector 15.0 30.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 29.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 29.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 29.0 -31.5) (float-vector 15.0 29.0 31.5) (float-vector -15.0 29.0 31.5) (float-vector -15.0 29.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 29.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 29.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -9.9 20.0 81.0) (float-vector -9.9 20.0 45.0) (float-vector -9.9 -20.0 45.0) (float-vector -9.9 -20.0 81.0)))
         (instance face :init :vertices (list (float-vector -9.9 -20.0 45.0) (float-vector 9.9 -20.0 45.0) (float-vector 9.9 -20.0 81.0) (float-vector -9.9 -20.0 81.0)))
         (instance face :init :vertices (list (float-vector 9.9 -20.0 45.0) (float-vector 9.9 20.0 45.0) (float-vector 9.9 20.0 81.0) (float-vector 9.9 -20.0 81.0)))
         (instance face :init :vertices (list (float-vector 9.9 20.0 81.0) (float-vector -9.9 20.0 81.0) (float-vector -9.9 -20.0 81.0) (float-vector 9.9 -20.0 81.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -7.70763 14.45 81.0) (float-vector -4.45 17.7076 81.0) (float-vector 1.632368e-14 18.9 81.0) (float-vector 4.45 17.7076 81.0) (float-vector 7.70763 14.45 81.0) (float-vector 8.9 10.0 81.0) (float-vector 7.70763 5.55 81.0) (float-vector 4.45 2.29237 81.0) (float-vector -4.104424e-15 1.1 81.0) (float-vector -4.45 2.29237 81.0) (float-vector -7.70763 5.55 81.0) (float-vector -8.9 10.0 81.0)))
))
         (instance face :init :vertices (list (float-vector 9.9 20.0 45.0) (float-vector -9.9 20.0 45.0) (float-vector -9.9 20.0 81.0) (float-vector 9.9 20.0 81.0)))
         (instance face :init :vertices (list (float-vector -9.9 20.0 45.0) (float-vector 9.9 20.0 45.0) (float-vector 9.9 -20.0 45.0) (float-vector -9.9 -20.0 45.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.45 17.7076 45.0) (float-vector -7.70763 14.45 45.0) (float-vector -8.9 10.0 45.0) (float-vector -7.70763 5.55 45.0) (float-vector -4.45 2.29237 45.0) (float-vector -4.104424e-15 1.1 45.0) (float-vector 4.45 2.29237 45.0) (float-vector 7.70763 5.55 45.0) (float-vector 8.9 10.0 45.0) (float-vector 7.70763 14.45 45.0) (float-vector 4.45 17.7076 45.0) (float-vector 1.632368e-14 18.9 45.0)))
))
         (instance face :init :vertices (list (float-vector -8.9 10.0 83.0) (float-vector -8.9 10.0 81.0) (float-vector -7.70763 5.55 81.0) (float-vector -7.70763 5.55 83.0)))
         (instance face :init :vertices (list (float-vector -8.9 10.0 45.0) (float-vector -8.9 10.0 43.0) (float-vector -7.70763 5.55 43.0) (float-vector -7.70763 5.55 45.0)))
         (instance face :init :vertices (list (float-vector -4.45 2.29237 81.0) (float-vector -4.45 2.29237 83.0) (float-vector -7.70763 5.55 83.0) (float-vector -7.70763 5.55 81.0)))
         (instance face :init :vertices (list (float-vector -7.70763 5.55 43.0) (float-vector -4.45 2.29237 43.0) (float-vector -4.45 2.29237 45.0) (float-vector -7.70763 5.55 45.0)))
         (instance face :init :vertices (list (float-vector -4.104424e-15 1.1 81.0) (float-vector -4.104424e-15 1.1 83.0) (float-vector -4.45 2.29237 83.0) (float-vector -4.45 2.29237 81.0)))
         (instance face :init :vertices (list (float-vector -4.45 2.29237 43.0) (float-vector -4.104424e-15 1.1 43.0) (float-vector -4.104424e-15 1.1 45.0) (float-vector -4.45 2.29237 45.0)))
         (instance face :init :vertices (list (float-vector 4.45 2.29237 81.0) (float-vector 4.45 2.29237 83.0) (float-vector -4.104424e-15 1.1 83.0) (float-vector -4.104424e-15 1.1 81.0)))
         (instance face :init :vertices (list (float-vector -4.104424e-15 1.1 43.0) (float-vector 4.45 2.29237 43.0) (float-vector 4.45 2.29237 45.0) (float-vector -4.104424e-15 1.1 45.0)))
         (instance face :init :vertices (list (float-vector 7.70763 5.55 81.0) (float-vector 7.70763 5.55 83.0) (float-vector 4.45 2.29237 83.0) (float-vector 4.45 2.29237 81.0)))
         (instance face :init :vertices (list (float-vector 4.45 2.29237 43.0) (float-vector 7.70763 5.55 43.0) (float-vector 7.70763 5.55 45.0) (float-vector 4.45 2.29237 45.0)))
         (instance face :init :vertices (list (float-vector 8.9 10.0 81.0) (float-vector 8.9 10.0 83.0) (float-vector 7.70763 5.55 83.0) (float-vector 7.70763 5.55 81.0)))
         (instance face :init :vertices (list (float-vector 7.70763 5.55 43.0) (float-vector 8.9 10.0 43.0) (float-vector 8.9 10.0 45.0) (float-vector 7.70763 5.55 45.0)))
         (instance face :init :vertices (list (float-vector 7.70763 14.45 81.0) (float-vector 7.70763 14.45 83.0) (float-vector 8.9 10.0 83.0) (float-vector 8.9 10.0 81.0)))
         (instance face :init :vertices (list (float-vector 8.9 10.0 43.0) (float-vector 7.70763 14.45 43.0) (float-vector 7.70763 14.45 45.0) (float-vector 8.9 10.0 45.0)))
         (instance face :init :vertices (list (float-vector 4.45 17.7076 81.0) (float-vector 4.45 17.7076 83.0) (float-vector 7.70763 14.45 83.0) (float-vector 7.70763 14.45 81.0)))
         (instance face :init :vertices (list (float-vector 7.70763 14.45 43.0) (float-vector 4.45 17.7076 43.0) (float-vector 4.45 17.7076 45.0) (float-vector 7.70763 14.45 45.0)))
         (instance face :init :vertices (list (float-vector 1.632368e-14 18.9 81.0) (float-vector 1.632368e-14 18.9 83.0) (float-vector 4.45 17.7076 83.0) (float-vector 4.45 17.7076 81.0)))
         (instance face :init :vertices (list (float-vector 4.45 17.7076 43.0) (float-vector 1.632368e-14 18.9 43.0) (float-vector 1.632368e-14 18.9 45.0) (float-vector 4.45 17.7076 45.0)))
         (instance face :init :vertices (list (float-vector -4.45 17.7076 81.0) (float-vector -4.45 17.7076 83.0) (float-vector 1.632368e-14 18.9 83.0) (float-vector 1.632368e-14 18.9 81.0)))
         (instance face :init :vertices (list (float-vector 1.632368e-14 18.9 43.0) (float-vector -4.45 17.7076 43.0) (float-vector -4.45 17.7076 45.0) (float-vector 1.632368e-14 18.9 45.0)))
         (instance face :init :vertices (list (float-vector -7.70763 14.45 81.0) (float-vector -7.70763 14.45 83.0) (float-vector -4.45 17.7076 83.0) (float-vector -4.45 17.7076 81.0)))
         (instance face :init :vertices (list (float-vector -4.45 17.7076 43.0) (float-vector -7.70763 14.45 43.0) (float-vector -7.70763 14.45 45.0) (float-vector -4.45 17.7076 45.0)))
         (instance face :init :vertices (list (float-vector -7.70763 14.45 83.0) (float-vector -8.9 10.0 83.0) (float-vector -7.70763 5.55 83.0) (float-vector -4.45 2.29237 83.0) (float-vector -4.104424e-15 1.1 83.0) (float-vector 4.45 2.29237 83.0) (float-vector 7.70763 5.55 83.0) (float-vector 8.9 10.0 83.0) (float-vector 7.70763 14.45 83.0) (float-vector 4.45 17.7076 83.0) (float-vector 1.632368e-14 18.9 83.0) (float-vector -4.45 17.7076 83.0)))
         (instance face :init :vertices (list (float-vector -8.9 10.0 83.0) (float-vector -7.70763 14.45 83.0) (float-vector -7.70763 14.45 81.0) (float-vector -8.9 10.0 81.0)))
         (instance face :init :vertices (list (float-vector -7.70763 14.45 43.0) (float-vector -8.9 10.0 43.0) (float-vector -8.9 10.0 45.0) (float-vector -7.70763 14.45 45.0)))
         (instance face :init :vertices (list (float-vector -8.9 10.0 43.0) (float-vector -7.70763 14.45 43.0) (float-vector -4.45 17.7076 43.0) (float-vector 1.632368e-14 18.9 43.0) (float-vector 4.45 17.7076 43.0) (float-vector 7.70763 14.45 43.0) (float-vector 8.9 10.0 43.0) (float-vector 7.70763 5.55 43.0) (float-vector 4.45 2.29237 43.0) (float-vector -4.104424e-15 1.1 43.0) (float-vector -4.45 2.29237 43.0) (float-vector -7.70763 5.55 43.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-pan1 :weight 56.7813 :centroid (float-vector -5.888801e-16 4.00868 50.0394) :inertia-tensor #2f((61603.1 -2.347578e-13 -1.070071e-12) (-2.347578e-13 52469.8 10473.2) (-1.070071e-12 10473.2 13832.3))))

     ;; definition of :head-pan2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 0.0 25.0) (float-vector 15.0 0.0 24.0) (float-vector 15.0 19.0 24.0) (float-vector 15.0 19.0 -24.0) (float-vector 15.0 0.0 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 20.0 -25.0) (float-vector -15.0 20.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -25.0) (float-vector -15.0 0.0 -24.0) (float-vector -15.0 19.0 -24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 0.0 24.0) (float-vector -15.0 0.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 25.0) (float-vector -15.0 0.0 25.0) (float-vector -15.0 0.0 24.0) (float-vector -10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -25.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -15.0 0.0 -24.0) (float-vector -15.0 0.0 -25.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector -10.6066 -10.6066 24.0) (float-vector 0.0 -15.0 24.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -25.0) (float-vector 0.0 -15.0 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 0.0 -15.0 25.0) (float-vector 0.0 -15.0 24.0) (float-vector 10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 0.0 -15.0 -24.0) (float-vector 0.0 -15.0 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 0.0 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector 0.0 -15.0 25.0) (float-vector 10.6066 -10.6066 25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 0.0 -15.0 -25.0) (float-vector -10.6066 -10.6066 -25.0) (float-vector -15.0 0.0 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 0.0 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 15.0 0.0 24.0) (float-vector 15.0 0.0 25.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -25.0) (float-vector 15.0 0.0 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 24.0) (float-vector 15.0 0.0 24.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 0.0 -15.0 24.0) (float-vector -10.6066 -10.6066 24.0) (float-vector -15.0 0.0 24.0) (float-vector -15.0 19.0 24.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 -24.0) (float-vector 15.0 19.0 24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 19.0 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 19.0 -24.0) (float-vector -15.0 0.0 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector 0.0 -15.0 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 15.0 0.0 -24.0) (float-vector 15.0 19.0 -24.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 18.0 10.0 59.9) (float-vector -18.0 10.0 59.9) (float-vector -18.0 -30.0 59.9) (float-vector 18.0 -30.0 59.9)))
         (instance face :init :vertices (list (float-vector -18.0 -30.0 59.9) (float-vector -18.0 -30.0 40.1) (float-vector 18.0 -30.0 40.1) (float-vector 18.0 -30.0 59.9)))
         (instance face :init :vertices (list (float-vector -18.0 -30.0 40.1) (float-vector -18.0 10.0 40.1) (float-vector 18.0 10.0 40.1) (float-vector 18.0 -30.0 40.1)))
         (instance face :init :vertices (list (float-vector 18.0 10.0 40.1) (float-vector 18.0 10.0 59.9) (float-vector 18.0 -30.0 59.9) (float-vector 18.0 -30.0 40.1))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 18.0 4.45 57.7076) (float-vector 18.0 7.70763 54.45) (float-vector 18.0 8.9 50.0) (float-vector 18.0 7.70763 45.55) (float-vector 18.0 4.45 42.2924) (float-vector 18.0 -1.421085e-14 41.1) (float-vector 18.0 -4.45 42.2924) (float-vector 18.0 -7.70763 45.55) (float-vector 18.0 -8.9 50.0) (float-vector 18.0 -7.70763 54.45) (float-vector 18.0 -4.45 57.7076) (float-vector 18.0 0.0 58.9)))
))
         (instance face :init :vertices (list (float-vector -18.0 10.0 40.1) (float-vector -18.0 10.0 59.9) (float-vector 18.0 10.0 59.9) (float-vector 18.0 10.0 40.1)))
         (instance face :init :vertices (list (float-vector -18.0 10.0 59.9) (float-vector -18.0 10.0 40.1) (float-vector -18.0 -30.0 40.1) (float-vector -18.0 -30.0 59.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -18.0 7.70763 54.45) (float-vector -18.0 4.45 57.7076) (float-vector -18.0 0.0 58.9) (float-vector -18.0 -4.45 57.7076) (float-vector -18.0 -7.70763 54.45) (float-vector -18.0 -8.9 50.0) (float-vector -18.0 -7.70763 45.55) (float-vector -18.0 -4.45 42.2924) (float-vector -18.0 -1.421085e-14 41.1) (float-vector -18.0 4.45 42.2924) (float-vector -18.0 7.70763 45.55) (float-vector -18.0 8.9 50.0)))
))
         (instance face :init :vertices (list (float-vector 20.0 0.0 58.9) (float-vector 18.0 0.0 58.9) (float-vector 18.0 -4.45 57.7076) (float-vector 20.0 -4.45 57.7076)))
         (instance face :init :vertices (list (float-vector -18.0 0.0 58.9) (float-vector -20.0 0.0 58.9) (float-vector -20.0 -4.45 57.7076) (float-vector -18.0 -4.45 57.7076)))
         (instance face :init :vertices (list (float-vector 18.0 -7.70763 54.45) (float-vector 20.0 -7.70763 54.45) (float-vector 20.0 -4.45 57.7076) (float-vector 18.0 -4.45 57.7076)))
         (instance face :init :vertices (list (float-vector -20.0 -4.45 57.7076) (float-vector -20.0 -7.70763 54.45) (float-vector -18.0 -7.70763 54.45) (float-vector -18.0 -4.45 57.7076)))
         (instance face :init :vertices (list (float-vector 18.0 -8.9 50.0) (float-vector 20.0 -8.9 50.0) (float-vector 20.0 -7.70763 54.45) (float-vector 18.0 -7.70763 54.45)))
         (instance face :init :vertices (list (float-vector -20.0 -7.70763 54.45) (float-vector -20.0 -8.9 50.0) (float-vector -18.0 -8.9 50.0) (float-vector -18.0 -7.70763 54.45)))
         (instance face :init :vertices (list (float-vector 18.0 -7.70763 45.55) (float-vector 20.0 -7.70763 45.55) (float-vector 20.0 -8.9 50.0) (float-vector 18.0 -8.9 50.0)))
         (instance face :init :vertices (list (float-vector -20.0 -8.9 50.0) (float-vector -20.0 -7.70763 45.55) (float-vector -18.0 -7.70763 45.55) (float-vector -18.0 -8.9 50.0)))
         (instance face :init :vertices (list (float-vector 18.0 -4.45 42.2924) (float-vector 20.0 -4.45 42.2924) (float-vector 20.0 -7.70763 45.55) (float-vector 18.0 -7.70763 45.55)))
         (instance face :init :vertices (list (float-vector -20.0 -7.70763 45.55) (float-vector -20.0 -4.45 42.2924) (float-vector -18.0 -4.45 42.2924) (float-vector -18.0 -7.70763 45.55)))
         (instance face :init :vertices (list (float-vector 18.0 -1.421085e-14 41.1) (float-vector 20.0 -1.421085e-14 41.1) (float-vector 20.0 -4.45 42.2924) (float-vector 18.0 -4.45 42.2924)))
         (instance face :init :vertices (list (float-vector -20.0 -4.45 42.2924) (float-vector -20.0 -1.421085e-14 41.1) (float-vector -18.0 -1.421085e-14 41.1) (float-vector -18.0 -4.45 42.2924)))
         (instance face :init :vertices (list (float-vector 18.0 4.45 42.2924) (float-vector 20.0 4.45 42.2924) (float-vector 20.0 -1.421085e-14 41.1) (float-vector 18.0 -1.421085e-14 41.1)))
         (instance face :init :vertices (list (float-vector -20.0 -1.421085e-14 41.1) (float-vector -20.0 4.45 42.2924) (float-vector -18.0 4.45 42.2924) (float-vector -18.0 -1.421085e-14 41.1)))
         (instance face :init :vertices (list (float-vector 18.0 7.70763 45.55) (float-vector 20.0 7.70763 45.55) (float-vector 20.0 4.45 42.2924) (float-vector 18.0 4.45 42.2924)))
         (instance face :init :vertices (list (float-vector -20.0 4.45 42.2924) (float-vector -20.0 7.70763 45.55) (float-vector -18.0 7.70763 45.55) (float-vector -18.0 4.45 42.2924)))
         (instance face :init :vertices (list (float-vector 18.0 8.9 50.0) (float-vector 20.0 8.9 50.0) (float-vector 20.0 7.70763 45.55) (float-vector 18.0 7.70763 45.55)))
         (instance face :init :vertices (list (float-vector -20.0 7.70763 45.55) (float-vector -20.0 8.9 50.0) (float-vector -18.0 8.9 50.0) (float-vector -18.0 7.70763 45.55)))
         (instance face :init :vertices (list (float-vector 18.0 7.70763 54.45) (float-vector 20.0 7.70763 54.45) (float-vector 20.0 8.9 50.0) (float-vector 18.0 8.9 50.0)))
         (instance face :init :vertices (list (float-vector -20.0 8.9 50.0) (float-vector -20.0 7.70763 54.45) (float-vector -18.0 7.70763 54.45) (float-vector -18.0 8.9 50.0)))
         (instance face :init :vertices (list (float-vector 18.0 4.45 57.7076) (float-vector 20.0 4.45 57.7076) (float-vector 20.0 7.70763 54.45) (float-vector 18.0 7.70763 54.45)))
         (instance face :init :vertices (list (float-vector -20.0 7.70763 54.45) (float-vector -20.0 4.45 57.7076) (float-vector -18.0 4.45 57.7076) (float-vector -18.0 7.70763 54.45)))
         (instance face :init :vertices (list (float-vector 20.0 4.45 57.7076) (float-vector 20.0 0.0 58.9) (float-vector 20.0 -4.45 57.7076) (float-vector 20.0 -7.70763 54.45) (float-vector 20.0 -8.9 50.0) (float-vector 20.0 -7.70763 45.55) (float-vector 20.0 -4.45 42.2924) (float-vector 20.0 -1.421085e-14 41.1) (float-vector 20.0 4.45 42.2924) (float-vector 20.0 7.70763 45.55) (float-vector 20.0 8.9 50.0) (float-vector 20.0 7.70763 54.45)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 58.9) (float-vector 20.0 4.45 57.7076) (float-vector 18.0 4.45 57.7076) (float-vector 18.0 0.0 58.9)))
         (instance face :init :vertices (list (float-vector -20.0 4.45 57.7076) (float-vector -20.0 0.0 58.9) (float-vector -18.0 0.0 58.9) (float-vector -18.0 4.45 57.7076)))
         (instance face :init :vertices (list (float-vector -20.0 0.0 58.9) (float-vector -20.0 4.45 57.7076) (float-vector -20.0 7.70763 54.45) (float-vector -20.0 8.9 50.0) (float-vector -20.0 7.70763 45.55) (float-vector -20.0 4.45 42.2924) (float-vector -20.0 -1.421085e-14 41.1) (float-vector -20.0 -4.45 42.2924) (float-vector -20.0 -7.70763 45.55) (float-vector -20.0 -8.9 50.0) (float-vector -20.0 -7.70763 54.45) (float-vector -20.0 -4.45 57.7076)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-pan2 :weight 53.9463 :centroid (float-vector -1.893712e-15 -6.2767 41.8009) :inertia-tensor #2f((34009.4 3.209175e-13 -3.623348e-13) (3.209175e-13 29219.9 7668.53) (-3.623348e-13 7668.53 15858.1))))

     ;; definition of :head-tilt
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 -113.0 -25.0) (float-vector 20.0 -113.0 -25.0) (float-vector 20.0 -113.0 25.0) (float-vector 40.0 -113.0 25.0) (float-vector 40.0 -113.0 24.0) (float-vector 21.0 -113.0 24.0) (float-vector 21.0 -113.0 -24.0) (float-vector 40.0 -113.0 -24.0)))
         (instance face :init :vertices (list (float-vector 20.0 -143.0 -25.0) (float-vector 20.0 -143.0 25.0) (float-vector 20.0 -113.0 25.0) (float-vector 20.0 -113.0 -25.0)))
         (instance face :init :vertices (list (float-vector 40.0 -143.0 -25.0) (float-vector 40.0 -143.0 -24.0) (float-vector 21.0 -143.0 -24.0) (float-vector 21.0 -143.0 24.0) (float-vector 40.0 -143.0 24.0) (float-vector 40.0 -143.0 25.0) (float-vector 20.0 -143.0 25.0) (float-vector 20.0 -143.0 -25.0)))
         (instance face :init :vertices (list (float-vector 50.6066 -138.607 25.0) (float-vector 40.0 -143.0 25.0) (float-vector 40.0 -143.0 24.0) (float-vector 50.6066 -138.607 24.0)))
         (instance face :init :vertices (list (float-vector 50.6066 -138.607 -25.0) (float-vector 50.6066 -138.607 -24.0) (float-vector 40.0 -143.0 -24.0) (float-vector 40.0 -143.0 -25.0)))
         (instance face :init :vertices (list (float-vector 55.0 -128.0 25.0) (float-vector 50.6066 -138.607 25.0) (float-vector 50.6066 -138.607 24.0) (float-vector 55.0 -128.0 24.0)))
         (instance face :init :vertices (list (float-vector 55.0 -128.0 -25.0) (float-vector 55.0 -128.0 -24.0) (float-vector 50.6066 -138.607 -24.0) (float-vector 50.6066 -138.607 -25.0)))
         (instance face :init :vertices (list (float-vector 50.6066 -117.393 25.0) (float-vector 55.0 -128.0 25.0) (float-vector 55.0 -128.0 24.0) (float-vector 50.6066 -117.393 24.0)))
         (instance face :init :vertices (list (float-vector 50.6066 -117.393 -25.0) (float-vector 50.6066 -117.393 -24.0) (float-vector 55.0 -128.0 -24.0) (float-vector 55.0 -128.0 -25.0)))
         (instance face :init :vertices (list (float-vector 40.0 -113.0 25.0) (float-vector 20.0 -113.0 25.0) (float-vector 20.0 -143.0 25.0) (float-vector 40.0 -143.0 25.0) (float-vector 50.6066 -138.607 25.0) (float-vector 55.0 -128.0 25.0) (float-vector 50.6066 -117.393 25.0)))
         (instance face :init :vertices (list (float-vector 50.6066 -117.393 -25.0) (float-vector 55.0 -128.0 -25.0) (float-vector 50.6066 -138.607 -25.0) (float-vector 40.0 -143.0 -25.0) (float-vector 20.0 -143.0 -25.0) (float-vector 20.0 -113.0 -25.0) (float-vector 40.0 -113.0 -25.0)))
         (instance face :init :vertices (list (float-vector 50.6066 -117.393 25.0) (float-vector 50.6066 -117.393 24.0) (float-vector 40.0 -113.0 24.0) (float-vector 40.0 -113.0 25.0)))
         (instance face :init :vertices (list (float-vector 40.0 -113.0 -25.0) (float-vector 40.0 -113.0 -24.0) (float-vector 50.6066 -117.393 -24.0) (float-vector 50.6066 -117.393 -25.0)))
         (instance face :init :vertices (list (float-vector 21.0 -113.0 24.0) (float-vector 40.0 -113.0 24.0) (float-vector 50.6066 -117.393 24.0) (float-vector 55.0 -128.0 24.0) (float-vector 50.6066 -138.607 24.0) (float-vector 40.0 -143.0 24.0) (float-vector 21.0 -143.0 24.0)))
         (instance face :init :vertices (list (float-vector 21.0 -113.0 -24.0) (float-vector 21.0 -113.0 24.0) (float-vector 21.0 -143.0 24.0) (float-vector 21.0 -143.0 -24.0)))
         (instance face :init :vertices (list (float-vector 21.0 -143.0 -24.0) (float-vector 40.0 -143.0 -24.0) (float-vector 50.6066 -138.607 -24.0) (float-vector 55.0 -128.0 -24.0) (float-vector 50.6066 -117.393 -24.0) (float-vector 40.0 -113.0 -24.0) (float-vector 21.0 -113.0 -24.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -22.5) (float-vector 15.0 20.0 -22.5) (float-vector 15.0 20.0 22.5) (float-vector 15.0 0.0 22.5) (float-vector 15.0 0.0 21.5) (float-vector 15.0 19.0 21.5) (float-vector 15.0 19.0 -21.5) (float-vector 15.0 0.0 -21.5)))
         (instance face :init :vertices (list (float-vector -15.0 20.0 -22.5) (float-vector -15.0 20.0 22.5) (float-vector 15.0 20.0 22.5) (float-vector 15.0 20.0 -22.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -22.5) (float-vector -15.0 0.0 -21.5) (float-vector -15.0 19.0 -21.5) (float-vector -15.0 19.0 21.5) (float-vector -15.0 0.0 21.5) (float-vector -15.0 0.0 22.5) (float-vector -15.0 20.0 22.5) (float-vector -15.0 20.0 -22.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 22.5) (float-vector -15.0 0.0 22.5) (float-vector -15.0 0.0 21.5) (float-vector -10.6066 -10.6066 21.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -22.5) (float-vector -10.6066 -10.6066 -21.5) (float-vector -15.0 0.0 -21.5) (float-vector -15.0 0.0 -22.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 22.5) (float-vector -10.6066 -10.6066 22.5) (float-vector -10.6066 -10.6066 21.5) (float-vector 0.0 -15.0 21.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -22.5) (float-vector 0.0 -15.0 -21.5) (float-vector -10.6066 -10.6066 -21.5) (float-vector -10.6066 -10.6066 -22.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 22.5) (float-vector 0.0 -15.0 22.5) (float-vector 0.0 -15.0 21.5) (float-vector 10.6066 -10.6066 21.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -22.5) (float-vector 10.6066 -10.6066 -21.5) (float-vector 0.0 -15.0 -21.5) (float-vector 0.0 -15.0 -22.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 22.5) (float-vector 15.0 20.0 22.5) (float-vector -15.0 20.0 22.5) (float-vector -15.0 0.0 22.5) (float-vector -10.6066 -10.6066 22.5) (float-vector 0.0 -15.0 22.5) (float-vector 10.6066 -10.6066 22.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -22.5) (float-vector 0.0 -15.0 -22.5) (float-vector -10.6066 -10.6066 -22.5) (float-vector -15.0 0.0 -22.5) (float-vector -15.0 20.0 -22.5) (float-vector 15.0 20.0 -22.5) (float-vector 15.0 0.0 -22.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 22.5) (float-vector 10.6066 -10.6066 21.5) (float-vector 15.0 0.0 21.5) (float-vector 15.0 0.0 22.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -22.5) (float-vector 15.0 0.0 -21.5) (float-vector 10.6066 -10.6066 -21.5) (float-vector 10.6066 -10.6066 -22.5)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 21.5) (float-vector 15.0 0.0 21.5) (float-vector 10.6066 -10.6066 21.5) (float-vector 0.0 -15.0 21.5) (float-vector -10.6066 -10.6066 21.5) (float-vector -15.0 0.0 21.5) (float-vector -15.0 19.0 21.5)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 -21.5) (float-vector 15.0 19.0 21.5) (float-vector -15.0 19.0 21.5) (float-vector -15.0 19.0 -21.5)))
         (instance face :init :vertices (list (float-vector -15.0 19.0 -21.5) (float-vector -15.0 0.0 -21.5) (float-vector -10.6066 -10.6066 -21.5) (float-vector 0.0 -15.0 -21.5) (float-vector 10.6066 -10.6066 -21.5) (float-vector 15.0 0.0 -21.5) (float-vector 15.0 19.0 -21.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 54.5 22.0) (float-vector -35.0 54.5 22.0) (float-vector -35.0 25.5 22.0) (float-vector 35.0 25.5 22.0)))
         (instance face :init :vertices (list (float-vector -35.0 25.5 22.0) (float-vector -35.0 25.5 -22.0) (float-vector 35.0 25.5 -22.0) (float-vector 35.0 25.5 22.0)))
         (instance face :init :vertices (list (float-vector -35.0 25.5 -22.0) (float-vector -35.0 54.5 -22.0) (float-vector 35.0 54.5 -22.0) (float-vector 35.0 25.5 -22.0)))
         (instance face :init :vertices (list (float-vector 35.0 54.5 -22.0) (float-vector 35.0 54.5 22.0) (float-vector 35.0 25.5 22.0) (float-vector 35.0 25.5 -22.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 35.0 33.5 -11.2583) (float-vector 35.0 28.7417 -6.5) (float-vector 35.0 27.0 3.030881e-14) (float-vector 35.0 28.7417 6.5) (float-vector 35.0 33.5 11.2583) (float-vector 35.0 40.0 13.0) (float-vector 35.0 46.5 11.2583) (float-vector 35.0 51.2583 6.5) (float-vector 35.0 53.0 1.298933e-14) (float-vector 35.0 51.2583 -6.5) (float-vector 35.0 46.5 -11.2583) (float-vector 35.0 40.0 -13.0)))
))
         (instance face :init :vertices (list (float-vector -35.0 54.5 -22.0) (float-vector -35.0 54.5 22.0) (float-vector 35.0 54.5 22.0) (float-vector 35.0 54.5 -22.0)))
         (instance face :init :vertices (list (float-vector -35.0 54.5 22.0) (float-vector -35.0 54.5 -22.0) (float-vector -35.0 25.5 -22.0) (float-vector -35.0 25.5 22.0)))
         (instance face :init :vertices (list (float-vector 72.0 40.0 -13.0) (float-vector 35.0 40.0 -13.0) (float-vector 35.0 46.5 -11.2583) (float-vector 72.0 46.5 -11.2583)))
         (instance face :init :vertices (list (float-vector 35.0 51.2583 -6.5) (float-vector 72.0 51.2583 -6.5) (float-vector 72.0 46.5 -11.2583) (float-vector 35.0 46.5 -11.2583)))
         (instance face :init :vertices (list (float-vector 35.0 53.0 1.298933e-14) (float-vector 72.0 53.0 2.085258e-14) (float-vector 72.0 51.2583 -6.5) (float-vector 35.0 51.2583 -6.5)))
         (instance face :init :vertices (list (float-vector 35.0 51.2583 6.5) (float-vector 72.0 51.2583 6.5) (float-vector 72.0 53.0 2.085258e-14) (float-vector 35.0 53.0 1.298933e-14)))
         (instance face :init :vertices (list (float-vector 35.0 46.5 11.2583) (float-vector 72.0 46.5 11.2583) (float-vector 72.0 51.2583 6.5) (float-vector 35.0 51.2583 6.5)))
         (instance face :init :vertices (list (float-vector 35.0 40.0 13.0) (float-vector 72.0 40.0 13.0) (float-vector 72.0 46.5 11.2583) (float-vector 35.0 46.5 11.2583)))
         (instance face :init :vertices (list (float-vector 35.0 33.5 11.2583) (float-vector 72.0 33.5 11.2583) (float-vector 72.0 40.0 13.0) (float-vector 35.0 40.0 13.0)))
         (instance face :init :vertices (list (float-vector 35.0 28.7417 6.5) (float-vector 72.0 28.7417 6.5) (float-vector 72.0 33.5 11.2583) (float-vector 35.0 33.5 11.2583)))
         (instance face :init :vertices (list (float-vector 35.0 27.0 3.030881e-14) (float-vector 72.0 27.0 3.817206e-14) (float-vector 72.0 28.7417 6.5) (float-vector 35.0 28.7417 6.5)))
         (instance face :init :vertices (list (float-vector 35.0 28.7417 -6.5) (float-vector 72.0 28.7417 -6.5) (float-vector 72.0 27.0 3.817206e-14) (float-vector 35.0 27.0 3.030881e-14)))
         (instance face :init :vertices (list (float-vector 35.0 33.5 -11.2583) (float-vector 72.0 33.5 -11.2583) (float-vector 72.0 28.7417 -6.5) (float-vector 35.0 28.7417 -6.5)))
         (instance face :init :vertices (list (float-vector 72.0 33.5 -11.2583) (float-vector 72.0 40.0 -13.0) (float-vector 72.0 46.5 -11.2583) (float-vector 72.0 51.2583 -6.5) (float-vector 72.0 53.0 2.085258e-14) (float-vector 72.0 51.2583 6.5) (float-vector 72.0 46.5 11.2583) (float-vector 72.0 40.0 13.0) (float-vector 72.0 33.5 11.2583) (float-vector 72.0 28.7417 6.5) (float-vector 72.0 27.0 3.817206e-14) (float-vector 72.0 28.7417 -6.5)))
         (instance face :init :vertices (list (float-vector 72.0 40.0 -13.0) (float-vector 72.0 33.5 -11.2583) (float-vector 35.0 33.5 -11.2583) (float-vector 35.0 40.0 -13.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (send (elt bc 2) :set-color :gray40)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-tilt :weight 37.2875 :centroid (float-vector 11.8464 -6.50015 6.768968e-15) :inertia-tensor #2f((1.414925e+05 20087.4 1.225227e-11) (20087.4 12192.2 -5.726296e-11) (1.225227e-11 -5.726296e-11 1.403648e+05))))

     ;; definition of :arm-shoulder2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -10.0 20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector -10.0 30.0 20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 -10.0 20.0) (float-vector -10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 20.0) (float-vector 10.0 -10.0 20.0) (float-vector 10.0 30.0 20.0) (float-vector -10.0 30.0 20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79423 -4.5 20.0) (float-vector 4.5 -7.79423 20.0) (float-vector -1.421085e-14 -9.0 20.0) (float-vector -4.5 -7.79423 20.0) (float-vector -7.79423 -4.5 20.0) (float-vector -9.0 0.0 20.0) (float-vector -7.79423 4.5 20.0) (float-vector -4.5 7.79423 20.0) (float-vector 1.421085e-14 9.0 20.0) (float-vector 4.5 7.79423 20.0) (float-vector 7.79423 4.5 20.0) (float-vector 9.0 -2.842171e-14 20.0)))
))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 -20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 -10.0 20.0) (float-vector -10.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 -10.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector 10.0 30.0 -20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.5 -7.79423 -20.0) (float-vector 7.79423 -4.5 -20.0) (float-vector 9.0 0.0 -20.0) (float-vector 7.79423 4.5 -20.0) (float-vector 4.5 7.79423 -20.0) (float-vector 1.421085e-14 9.0 -20.0) (float-vector -4.5 7.79423 -20.0) (float-vector -7.79423 4.5 -20.0) (float-vector -9.0 0.0 -20.0) (float-vector -7.79423 -4.5 -20.0) (float-vector -4.5 -7.79423 -20.0) (float-vector 0.0 -9.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 9.0 -2.842171e-14 22.0) (float-vector 9.0 -2.842171e-14 20.0) (float-vector 7.79423 4.5 20.0) (float-vector 7.79423 4.5 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 -20.0) (float-vector 9.0 0.0 -22.0) (float-vector 7.79423 4.5 -22.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79423 20.0) (float-vector 4.5 7.79423 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 7.79423 4.5 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 4.5 -22.0) (float-vector 4.5 7.79423 -22.0) (float-vector 4.5 7.79423 -20.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 9.0 20.0) (float-vector 1.421085e-14 9.0 22.0) (float-vector 4.5 7.79423 22.0) (float-vector 4.5 7.79423 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79423 -22.0) (float-vector 1.421085e-14 9.0 -22.0) (float-vector 1.421085e-14 9.0 -20.0) (float-vector 4.5 7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector -4.5 7.79423 20.0) (float-vector -4.5 7.79423 22.0) (float-vector 1.421085e-14 9.0 22.0) (float-vector 1.421085e-14 9.0 20.0)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 9.0 -22.0) (float-vector -4.5 7.79423 -22.0) (float-vector -4.5 7.79423 -20.0) (float-vector 1.421085e-14 9.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.5 20.0) (float-vector -7.79423 4.5 22.0) (float-vector -4.5 7.79423 22.0) (float-vector -4.5 7.79423 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 7.79423 -22.0) (float-vector -7.79423 4.5 -22.0) (float-vector -7.79423 4.5 -20.0) (float-vector -4.5 7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector -9.0 0.0 20.0) (float-vector -9.0 0.0 22.0) (float-vector -7.79423 4.5 22.0) (float-vector -7.79423 4.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.5 -22.0) (float-vector -9.0 0.0 -22.0) (float-vector -9.0 0.0 -20.0) (float-vector -7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -4.5 20.0) (float-vector -7.79423 -4.5 22.0) (float-vector -9.0 0.0 22.0) (float-vector -9.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector -9.0 0.0 -22.0) (float-vector -7.79423 -4.5 -22.0) (float-vector -7.79423 -4.5 -20.0) (float-vector -9.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector -4.5 -7.79423 20.0) (float-vector -4.5 -7.79423 22.0) (float-vector -7.79423 -4.5 22.0) (float-vector -7.79423 -4.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -4.5 -22.0) (float-vector -4.5 -7.79423 -22.0) (float-vector -4.5 -7.79423 -20.0) (float-vector -7.79423 -4.5 -20.0)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 -9.0 20.0) (float-vector -1.421085e-14 -9.0 22.0) (float-vector -4.5 -7.79423 22.0) (float-vector -4.5 -7.79423 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 -7.79423 -22.0) (float-vector 0.0 -9.0 -22.0) (float-vector 0.0 -9.0 -20.0) (float-vector -4.5 -7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 -7.79423 20.0) (float-vector 4.5 -7.79423 22.0) (float-vector -1.421085e-14 -9.0 22.0) (float-vector -1.421085e-14 -9.0 20.0)))
         (instance face :init :vertices (list (float-vector 0.0 -9.0 -22.0) (float-vector 4.5 -7.79423 -22.0) (float-vector 4.5 -7.79423 -20.0) (float-vector 0.0 -9.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 20.0) (float-vector 7.79423 -4.5 22.0) (float-vector 4.5 -7.79423 22.0) (float-vector 4.5 -7.79423 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 -7.79423 -22.0) (float-vector 7.79423 -4.5 -22.0) (float-vector 7.79423 -4.5 -20.0) (float-vector 4.5 -7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 22.0) (float-vector 9.0 -2.842171e-14 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 4.5 7.79423 22.0) (float-vector 1.421085e-14 9.0 22.0) (float-vector -4.5 7.79423 22.0) (float-vector -7.79423 4.5 22.0) (float-vector -9.0 0.0 22.0) (float-vector -7.79423 -4.5 22.0) (float-vector -4.5 -7.79423 22.0) (float-vector -1.421085e-14 -9.0 22.0) (float-vector 4.5 -7.79423 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 -2.842171e-14 22.0) (float-vector 7.79423 -4.5 22.0) (float-vector 7.79423 -4.5 20.0) (float-vector 9.0 -2.842171e-14 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 -22.0) (float-vector 9.0 0.0 -22.0) (float-vector 9.0 0.0 -20.0) (float-vector 7.79423 -4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 -22.0) (float-vector 7.79423 -4.5 -22.0) (float-vector 4.5 -7.79423 -22.0) (float-vector 0.0 -9.0 -22.0) (float-vector -4.5 -7.79423 -22.0) (float-vector -7.79423 -4.5 -22.0) (float-vector -9.0 0.0 -22.0) (float-vector -7.79423 4.5 -22.0) (float-vector -4.5 7.79423 -22.0) (float-vector 1.421085e-14 9.0 -22.0) (float-vector 4.5 7.79423 -22.0) (float-vector 7.79423 4.5 -22.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 20.0) (float-vector -10.0 80.0 -20.0) (float-vector -10.0 40.0 -20.0) (float-vector -10.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -20.0) (float-vector 10.0 40.0 -20.0) (float-vector 10.0 40.0 20.0) (float-vector -10.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 40.0 -20.0) (float-vector 10.0 80.0 -20.0) (float-vector 10.0 80.0 20.0) (float-vector 10.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 20.0) (float-vector -10.0 80.0 20.0) (float-vector -10.0 40.0 20.0) (float-vector 10.0 40.0 20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -7.79423 74.5 20.0) (float-vector -4.5 77.7942 20.0) (float-vector 2.842171e-14 79.0 20.0) (float-vector 4.5 77.7942 20.0) (float-vector 7.79423 74.5 20.0) (float-vector 9.0 70.0 20.0) (float-vector 7.79423 65.5 20.0) (float-vector 4.5 62.2058 20.0) (float-vector 0.0 61.0 20.0) (float-vector -4.5 62.2058 20.0) (float-vector -7.79423 65.5 20.0) (float-vector -9.0 70.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -20.0) (float-vector -10.0 80.0 -20.0) (float-vector -10.0 80.0 20.0) (float-vector 10.0 80.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -20.0) (float-vector 10.0 80.0 -20.0) (float-vector 10.0 40.0 -20.0) (float-vector -10.0 40.0 -20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.5 77.7942 -20.0) (float-vector -7.79423 74.5 -20.0) (float-vector -9.0 70.0 -20.0) (float-vector -7.79423 65.5 -20.0) (float-vector -4.5 62.2058 -20.0) (float-vector 0.0 61.0 -20.0) (float-vector 4.5 62.2058 -20.0) (float-vector 7.79423 65.5 -20.0) (float-vector 9.0 70.0 -20.0) (float-vector 7.79423 74.5 -20.0) (float-vector 4.5 77.7942 -20.0) (float-vector 2.842171e-14 79.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector -9.0 70.0 22.0) (float-vector -9.0 70.0 20.0) (float-vector -7.79423 65.5 20.0) (float-vector -7.79423 65.5 22.0)))
         (instance face :init :vertices (list (float-vector -9.0 70.0 -20.0) (float-vector -9.0 70.0 -22.0) (float-vector -7.79423 65.5 -22.0) (float-vector -7.79423 65.5 -20.0)))
         (instance face :init :vertices (list (float-vector -4.5 62.2058 20.0) (float-vector -4.5 62.2058 22.0) (float-vector -7.79423 65.5 22.0) (float-vector -7.79423 65.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 65.5 -22.0) (float-vector -4.5 62.2058 -22.0) (float-vector -4.5 62.2058 -20.0) (float-vector -7.79423 65.5 -20.0)))
         (instance face :init :vertices (list (float-vector 0.0 61.0 20.0) (float-vector 0.0 61.0 22.0) (float-vector -4.5 62.2058 22.0) (float-vector -4.5 62.2058 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 62.2058 -22.0) (float-vector 0.0 61.0 -22.0) (float-vector 0.0 61.0 -20.0) (float-vector -4.5 62.2058 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 62.2058 20.0) (float-vector 4.5 62.2058 22.0) (float-vector 0.0 61.0 22.0) (float-vector 0.0 61.0 20.0)))
         (instance face :init :vertices (list (float-vector 0.0 61.0 -22.0) (float-vector 4.5 62.2058 -22.0) (float-vector 4.5 62.2058 -20.0) (float-vector 0.0 61.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 65.5 20.0) (float-vector 7.79423 65.5 22.0) (float-vector 4.5 62.2058 22.0) (float-vector 4.5 62.2058 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 62.2058 -22.0) (float-vector 7.79423 65.5 -22.0) (float-vector 7.79423 65.5 -20.0) (float-vector 4.5 62.2058 -20.0)))
         (instance face :init :vertices (list (float-vector 9.0 70.0 20.0) (float-vector 9.0 70.0 22.0) (float-vector 7.79423 65.5 22.0) (float-vector 7.79423 65.5 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 65.5 -22.0) (float-vector 9.0 70.0 -22.0) (float-vector 9.0 70.0 -20.0) (float-vector 7.79423 65.5 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 74.5 20.0) (float-vector 7.79423 74.5 22.0) (float-vector 9.0 70.0 22.0) (float-vector 9.0 70.0 20.0)))
         (instance face :init :vertices (list (float-vector 9.0 70.0 -22.0) (float-vector 7.79423 74.5 -22.0) (float-vector 7.79423 74.5 -20.0) (float-vector 9.0 70.0 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 77.7942 20.0) (float-vector 4.5 77.7942 22.0) (float-vector 7.79423 74.5 22.0) (float-vector 7.79423 74.5 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 74.5 -22.0) (float-vector 4.5 77.7942 -22.0) (float-vector 4.5 77.7942 -20.0) (float-vector 7.79423 74.5 -20.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 79.0 20.0) (float-vector 2.842171e-14 79.0 22.0) (float-vector 4.5 77.7942 22.0) (float-vector 4.5 77.7942 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 77.7942 -22.0) (float-vector 2.842171e-14 79.0 -22.0) (float-vector 2.842171e-14 79.0 -20.0) (float-vector 4.5 77.7942 -20.0)))
         (instance face :init :vertices (list (float-vector -4.5 77.7942 20.0) (float-vector -4.5 77.7942 22.0) (float-vector 2.842171e-14 79.0 22.0) (float-vector 2.842171e-14 79.0 20.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 79.0 -22.0) (float-vector -4.5 77.7942 -22.0) (float-vector -4.5 77.7942 -20.0) (float-vector 2.842171e-14 79.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 74.5 20.0) (float-vector -7.79423 74.5 22.0) (float-vector -4.5 77.7942 22.0) (float-vector -4.5 77.7942 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 77.7942 -22.0) (float-vector -7.79423 74.5 -22.0) (float-vector -7.79423 74.5 -20.0) (float-vector -4.5 77.7942 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 74.5 22.0) (float-vector -9.0 70.0 22.0) (float-vector -7.79423 65.5 22.0) (float-vector -4.5 62.2058 22.0) (float-vector 0.0 61.0 22.0) (float-vector 4.5 62.2058 22.0) (float-vector 7.79423 65.5 22.0) (float-vector 9.0 70.0 22.0) (float-vector 7.79423 74.5 22.0) (float-vector 4.5 77.7942 22.0) (float-vector 2.842171e-14 79.0 22.0) (float-vector -4.5 77.7942 22.0)))
         (instance face :init :vertices (list (float-vector -9.0 70.0 22.0) (float-vector -7.79423 74.5 22.0) (float-vector -7.79423 74.5 20.0) (float-vector -9.0 70.0 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 74.5 -22.0) (float-vector -9.0 70.0 -22.0) (float-vector -9.0 70.0 -20.0) (float-vector -7.79423 74.5 -20.0)))
         (instance face :init :vertices (list (float-vector -9.0 70.0 -22.0) (float-vector -7.79423 74.5 -22.0) (float-vector -4.5 77.7942 -22.0) (float-vector 2.842171e-14 79.0 -22.0) (float-vector 4.5 77.7942 -22.0) (float-vector 7.79423 74.5 -22.0) (float-vector 9.0 70.0 -22.0) (float-vector 7.79423 65.5 -22.0) (float-vector 4.5 62.2058 -22.0) (float-vector 0.0 61.0 -22.0) (float-vector -4.5 62.2058 -22.0) (float-vector -7.79423 65.5 -22.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-shoulder2 :weight 129.0 :centroid (float-vector 4.285749e-15 35.0 -1.655031e-16) :inertia-tensor #2f((1.169376e+05 -1.275751e-11 2.376107e-28) (-1.275751e-11 21500.0 -6.058452e-28) (2.376107e-28 -6.058452e-28 1.040376e+05))))

     ;; definition of :arm-shoulder1
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 0.0 25.0) (float-vector 15.0 0.0 24.0) (float-vector 15.0 19.0 24.0) (float-vector 15.0 19.0 -24.0) (float-vector 15.0 0.0 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 20.0 -25.0) (float-vector -15.0 20.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -25.0) (float-vector -15.0 0.0 -24.0) (float-vector -15.0 19.0 -24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 0.0 24.0) (float-vector -15.0 0.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 25.0) (float-vector -15.0 0.0 25.0) (float-vector -15.0 0.0 24.0) (float-vector -10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -25.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -15.0 0.0 -24.0) (float-vector -15.0 0.0 -25.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -15.0 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector -10.6066 -10.6066 24.0) (float-vector 2.842171e-14 -15.0 24.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -15.0 -25.0) (float-vector 2.842171e-14 -15.0 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 2.842171e-14 -15.0 25.0) (float-vector 2.842171e-14 -15.0 24.0) (float-vector 10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 2.842171e-14 -15.0 -24.0) (float-vector 2.842171e-14 -15.0 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 0.0 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector 2.842171e-14 -15.0 25.0) (float-vector 10.6066 -10.6066 25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 2.842171e-14 -15.0 -25.0) (float-vector -10.6066 -10.6066 -25.0) (float-vector -15.0 0.0 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 0.0 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 15.0 0.0 24.0) (float-vector 15.0 0.0 25.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -25.0) (float-vector 15.0 0.0 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 24.0) (float-vector 15.0 0.0 24.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 2.842171e-14 -15.0 24.0) (float-vector -10.6066 -10.6066 24.0) (float-vector -15.0 0.0 24.0) (float-vector -15.0 19.0 24.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 -24.0) (float-vector 15.0 19.0 24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 19.0 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 19.0 -24.0) (float-vector -15.0 0.0 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector 2.842171e-14 -15.0 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 15.0 0.0 -24.0) (float-vector 15.0 19.0 -24.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 40.0 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 40.0 25.0) (float-vector -15.0 40.0 24.0) (float-vector -15.0 21.0 24.0) (float-vector -15.0 21.0 -24.0) (float-vector -15.0 40.0 -24.0)))
         (instance face :init :vertices (list (float-vector 15.0 20.0 -25.0) (float-vector 15.0 20.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 40.0 -25.0) (float-vector 15.0 40.0 -24.0) (float-vector 15.0 21.0 -24.0) (float-vector 15.0 21.0 24.0) (float-vector 15.0 40.0 24.0) (float-vector 15.0 40.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 50.6066 25.0) (float-vector 15.0 40.0 25.0) (float-vector 15.0 40.0 24.0) (float-vector 10.6066 50.6066 24.0)))
         (instance face :init :vertices (list (float-vector 10.6066 50.6066 -25.0) (float-vector 10.6066 50.6066 -24.0) (float-vector 15.0 40.0 -24.0) (float-vector 15.0 40.0 -25.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 55.0 25.0) (float-vector 10.6066 50.6066 25.0) (float-vector 10.6066 50.6066 24.0) (float-vector 2.842171e-14 55.0 24.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 55.0 -25.0) (float-vector 2.842171e-14 55.0 -24.0) (float-vector 10.6066 50.6066 -24.0) (float-vector 10.6066 50.6066 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 25.0) (float-vector 2.842171e-14 55.0 25.0) (float-vector 2.842171e-14 55.0 24.0) (float-vector -10.6066 50.6066 24.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 -25.0) (float-vector -10.6066 50.6066 -24.0) (float-vector 2.842171e-14 55.0 -24.0) (float-vector 2.842171e-14 55.0 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 40.0 25.0) (float-vector 10.6066 50.6066 25.0) (float-vector 2.842171e-14 55.0 25.0) (float-vector -10.6066 50.6066 25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 -25.0) (float-vector 2.842171e-14 55.0 -25.0) (float-vector 10.6066 50.6066 -25.0) (float-vector 15.0 40.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector -15.0 40.0 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 25.0) (float-vector -10.6066 50.6066 24.0) (float-vector -15.0 40.0 24.0) (float-vector -15.0 40.0 25.0)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -25.0) (float-vector -15.0 40.0 -24.0) (float-vector -10.6066 50.6066 -24.0) (float-vector -10.6066 50.6066 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 21.0 24.0) (float-vector -15.0 40.0 24.0) (float-vector -10.6066 50.6066 24.0) (float-vector 2.842171e-14 55.0 24.0) (float-vector 10.6066 50.6066 24.0) (float-vector 15.0 40.0 24.0) (float-vector 15.0 21.0 24.0)))
         (instance face :init :vertices (list (float-vector -15.0 21.0 -24.0) (float-vector -15.0 21.0 24.0) (float-vector 15.0 21.0 24.0) (float-vector 15.0 21.0 -24.0)))
         (instance face :init :vertices (list (float-vector 15.0 21.0 -24.0) (float-vector 15.0 40.0 -24.0) (float-vector 10.6066 50.6066 -24.0) (float-vector 2.842171e-14 55.0 -24.0) (float-vector -10.6066 50.6066 -24.0) (float-vector -15.0 40.0 -24.0) (float-vector -15.0 21.0 -24.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink17 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-shoulder1 :weight 17.6925 :centroid (float-vector 8.821566e-15 20.0 -2.886936e-14) :inertia-tensor #2f((11119.9 -2.885324e-13 5.696445e-27) (-2.885324e-13 8773.16 2.867667e-25) (5.696445e-27 2.867667e-25 5000.59))))

     ;; definition of :arm-elbow
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -10.0 20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector -10.0 30.0 20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 -10.0 20.0) (float-vector -10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 20.0) (float-vector 10.0 -10.0 20.0) (float-vector 10.0 30.0 20.0) (float-vector -10.0 30.0 20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79423 -4.5 20.0) (float-vector 4.5 -7.79423 20.0) (float-vector -7.105427e-15 -9.0 20.0) (float-vector -4.5 -7.79423 20.0) (float-vector -7.79423 -4.5 20.0) (float-vector -9.0 0.0 20.0) (float-vector -7.79423 4.5 20.0) (float-vector -4.5 7.79423 20.0) (float-vector 2.842171e-14 9.0 20.0) (float-vector 4.5 7.79423 20.0) (float-vector 7.79423 4.5 20.0) (float-vector 9.0 2.842171e-14 20.0)))
))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 -20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 -10.0 20.0) (float-vector -10.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 -10.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector 10.0 30.0 -20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.5 -7.79423 -20.0) (float-vector 7.79423 -4.5 -20.0) (float-vector 9.0 2.842171e-14 -20.0) (float-vector 7.79423 4.5 -20.0) (float-vector 4.5 7.79423 -20.0) (float-vector 2.842171e-14 9.0 -20.0) (float-vector -4.5 7.79423 -20.0) (float-vector -7.79423 4.5 -20.0) (float-vector -9.0 0.0 -20.0) (float-vector -7.79423 -4.5 -20.0) (float-vector -4.5 -7.79423 -20.0) (float-vector -7.105427e-15 -9.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 9.0 2.842171e-14 22.0) (float-vector 9.0 2.842171e-14 20.0) (float-vector 7.79423 4.5 20.0) (float-vector 7.79423 4.5 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 2.842171e-14 -20.0) (float-vector 9.0 2.842171e-14 -22.0) (float-vector 7.79423 4.5 -22.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79423 20.0) (float-vector 4.5 7.79423 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 7.79423 4.5 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 4.5 -22.0) (float-vector 4.5 7.79423 -22.0) (float-vector 4.5 7.79423 -20.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 9.0 20.0) (float-vector 2.842171e-14 9.0 22.0) (float-vector 4.5 7.79423 22.0) (float-vector 4.5 7.79423 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79423 -22.0) (float-vector 2.842171e-14 9.0 -22.0) (float-vector 2.842171e-14 9.0 -20.0) (float-vector 4.5 7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector -4.5 7.79423 20.0) (float-vector -4.5 7.79423 22.0) (float-vector 2.842171e-14 9.0 22.0) (float-vector 2.842171e-14 9.0 20.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 9.0 -22.0) (float-vector -4.5 7.79423 -22.0) (float-vector -4.5 7.79423 -20.0) (float-vector 2.842171e-14 9.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.5 20.0) (float-vector -7.79423 4.5 22.0) (float-vector -4.5 7.79423 22.0) (float-vector -4.5 7.79423 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 7.79423 -22.0) (float-vector -7.79423 4.5 -22.0) (float-vector -7.79423 4.5 -20.0) (float-vector -4.5 7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector -9.0 0.0 20.0) (float-vector -9.0 0.0 22.0) (float-vector -7.79423 4.5 22.0) (float-vector -7.79423 4.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.5 -22.0) (float-vector -9.0 0.0 -22.0) (float-vector -9.0 0.0 -20.0) (float-vector -7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -4.5 20.0) (float-vector -7.79423 -4.5 22.0) (float-vector -9.0 0.0 22.0) (float-vector -9.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector -9.0 0.0 -22.0) (float-vector -7.79423 -4.5 -22.0) (float-vector -7.79423 -4.5 -20.0) (float-vector -9.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector -4.5 -7.79423 20.0) (float-vector -4.5 -7.79423 22.0) (float-vector -7.79423 -4.5 22.0) (float-vector -7.79423 -4.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -4.5 -22.0) (float-vector -4.5 -7.79423 -22.0) (float-vector -4.5 -7.79423 -20.0) (float-vector -7.79423 -4.5 -20.0)))
         (instance face :init :vertices (list (float-vector -7.105427e-15 -9.0 20.0) (float-vector -7.105427e-15 -9.0 22.0) (float-vector -4.5 -7.79423 22.0) (float-vector -4.5 -7.79423 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 -7.79423 -22.0) (float-vector -7.105427e-15 -9.0 -22.0) (float-vector -7.105427e-15 -9.0 -20.0) (float-vector -4.5 -7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 -7.79423 20.0) (float-vector 4.5 -7.79423 22.0) (float-vector -7.105427e-15 -9.0 22.0) (float-vector -7.105427e-15 -9.0 20.0)))
         (instance face :init :vertices (list (float-vector -7.105427e-15 -9.0 -22.0) (float-vector 4.5 -7.79423 -22.0) (float-vector 4.5 -7.79423 -20.0) (float-vector -7.105427e-15 -9.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 20.0) (float-vector 7.79423 -4.5 22.0) (float-vector 4.5 -7.79423 22.0) (float-vector 4.5 -7.79423 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 -7.79423 -22.0) (float-vector 7.79423 -4.5 -22.0) (float-vector 7.79423 -4.5 -20.0) (float-vector 4.5 -7.79423 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 22.0) (float-vector 9.0 2.842171e-14 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 4.5 7.79423 22.0) (float-vector 2.842171e-14 9.0 22.0) (float-vector -4.5 7.79423 22.0) (float-vector -7.79423 4.5 22.0) (float-vector -9.0 0.0 22.0) (float-vector -7.79423 -4.5 22.0) (float-vector -4.5 -7.79423 22.0) (float-vector -7.105427e-15 -9.0 22.0) (float-vector 4.5 -7.79423 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 2.842171e-14 22.0) (float-vector 7.79423 -4.5 22.0) (float-vector 7.79423 -4.5 20.0) (float-vector 9.0 2.842171e-14 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 -22.0) (float-vector 9.0 2.842171e-14 -22.0) (float-vector 9.0 2.842171e-14 -20.0) (float-vector 7.79423 -4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 9.0 2.842171e-14 -22.0) (float-vector 7.79423 -4.5 -22.0) (float-vector 4.5 -7.79423 -22.0) (float-vector -7.105427e-15 -9.0 -22.0) (float-vector -4.5 -7.79423 -22.0) (float-vector -7.79423 -4.5 -22.0) (float-vector -9.0 0.0 -22.0) (float-vector -7.79423 4.5 -22.0) (float-vector -4.5 7.79423 -22.0) (float-vector 2.842171e-14 9.0 -22.0) (float-vector 4.5 7.79423 -22.0) (float-vector 7.79423 4.5 -22.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -6.5 64.5 -7.0) (float-vector -6.5 35.5 -7.0) (float-vector -6.5 35.5 21.0) (float-vector -6.5 64.5 21.0)))
         (instance face :init :vertices (list (float-vector -6.5 35.5 21.0) (float-vector 6.5 35.5 21.0) (float-vector 6.5 64.5 21.0) (float-vector -6.5 64.5 21.0)))
         (instance face :init :vertices (list (float-vector 6.5 35.5 21.0) (float-vector 6.5 35.5 -7.0) (float-vector 6.5 64.5 -7.0) (float-vector 6.5 64.5 21.0)))
         (instance face :init :vertices (list (float-vector 6.5 64.5 -7.0) (float-vector -6.5 64.5 -7.0) (float-vector -6.5 64.5 21.0) (float-vector 6.5 64.5 21.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.76314 64.5 -2.75) (float-vector -2.75 64.5 -4.76314) (float-vector 2.842171e-14 64.5 -5.5) (float-vector 2.75 64.5 -4.76314) (float-vector 4.76314 64.5 -2.75) (float-vector 5.5 64.5 7.940169e-15) (float-vector 4.76314 64.5 2.75) (float-vector 2.75 64.5 4.76314) (float-vector 0.0 64.5 5.5) (float-vector -2.75 64.5 4.76314) (float-vector -4.76314 64.5 2.75) (float-vector -5.5 64.5 6.142008e-16)))
))
         (instance face :init :vertices (list (float-vector 6.5 35.5 -7.0) (float-vector -6.5 35.5 -7.0) (float-vector -6.5 64.5 -7.0) (float-vector 6.5 64.5 -7.0)))
         (instance face :init :vertices (list (float-vector -6.5 35.5 -7.0) (float-vector 6.5 35.5 -7.0) (float-vector 6.5 35.5 21.0) (float-vector -6.5 35.5 21.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -2.75 35.5 -4.76314) (float-vector -4.76314 35.5 -2.75) (float-vector -5.5 35.5 4.844403e-15) (float-vector -4.76314 35.5 2.75) (float-vector -2.75 35.5 4.76314) (float-vector 0.0 35.5 5.5) (float-vector 2.75 35.5 4.76314) (float-vector 4.76314 35.5 2.75) (float-vector 5.5 35.5 1.217037e-14) (float-vector 4.76314 35.5 -2.75) (float-vector 2.75 35.5 -4.76314) (float-vector 2.842171e-14 35.5 -5.5)))
))
         (instance face :init :vertices (list (float-vector -5.5 66.5 3.224628e-16) (float-vector -5.5 64.5 6.142008e-16) (float-vector -4.76314 64.5 2.75) (float-vector -4.76314 66.5 2.75)))
         (instance face :init :vertices (list (float-vector -5.5 35.5 4.844403e-15) (float-vector -5.5 33.5 5.136141e-15) (float-vector -4.76314 33.5 2.75) (float-vector -4.76314 35.5 2.75)))
         (instance face :init :vertices (list (float-vector -2.75 64.5 4.76314) (float-vector -2.75 66.5 4.76314) (float-vector -4.76314 66.5 2.75) (float-vector -4.76314 64.5 2.75)))
         (instance face :init :vertices (list (float-vector -4.76314 33.5 2.75) (float-vector -2.75 33.5 4.76314) (float-vector -2.75 35.5 4.76314) (float-vector -4.76314 35.5 2.75)))
         (instance face :init :vertices (list (float-vector 0.0 64.5 5.5) (float-vector 1.421085e-14 66.5 5.5) (float-vector -2.75 66.5 4.76314) (float-vector -2.75 64.5 4.76314)))
         (instance face :init :vertices (list (float-vector -2.75 33.5 4.76314) (float-vector 1.421085e-14 33.5 5.5) (float-vector 0.0 35.5 5.5) (float-vector -2.75 35.5 4.76314)))
         (instance face :init :vertices (list (float-vector 2.75 64.5 4.76314) (float-vector 2.75 66.5 4.76314) (float-vector 1.421085e-14 66.5 5.5) (float-vector 0.0 64.5 5.5)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 33.5 5.5) (float-vector 2.75 33.5 4.76314) (float-vector 2.75 35.5 4.76314) (float-vector 0.0 35.5 5.5)))
         (instance face :init :vertices (list (float-vector 4.76314 64.5 2.75) (float-vector 4.76314 66.5 2.75) (float-vector 2.75 66.5 4.76314) (float-vector 2.75 64.5 4.76314)))
         (instance face :init :vertices (list (float-vector 2.75 33.5 4.76314) (float-vector 4.76314 33.5 2.75) (float-vector 4.76314 35.5 2.75) (float-vector 2.75 35.5 4.76314)))
         (instance face :init :vertices (list (float-vector 5.5 64.5 7.940169e-15) (float-vector 5.5 66.5 7.648431e-15) (float-vector 4.76314 66.5 2.75) (float-vector 4.76314 64.5 2.75)))
         (instance face :init :vertices (list (float-vector 4.76314 33.5 2.75) (float-vector 5.5 33.5 1.246211e-14) (float-vector 5.5 35.5 1.217037e-14) (float-vector 4.76314 35.5 2.75)))
         (instance face :init :vertices (list (float-vector 4.76314 64.5 -2.75) (float-vector 4.76314 66.5 -2.75) (float-vector 5.5 66.5 7.648431e-15) (float-vector 5.5 64.5 7.940169e-15)))
         (instance face :init :vertices (list (float-vector 5.5 33.5 1.246211e-14) (float-vector 4.76314 33.5 -2.75) (float-vector 4.76314 35.5 -2.75) (float-vector 5.5 35.5 1.217037e-14)))
         (instance face :init :vertices (list (float-vector 2.75 64.5 -4.76314) (float-vector 2.75 66.5 -4.76314) (float-vector 4.76314 66.5 -2.75) (float-vector 4.76314 64.5 -2.75)))
         (instance face :init :vertices (list (float-vector 4.76314 33.5 -2.75) (float-vector 2.75 33.5 -4.76314) (float-vector 2.75 35.5 -4.76314) (float-vector 4.76314 35.5 -2.75)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 64.5 -5.5) (float-vector 1.421085e-14 66.5 -5.5) (float-vector 2.75 66.5 -4.76314) (float-vector 2.75 64.5 -4.76314)))
         (instance face :init :vertices (list (float-vector 2.75 33.5 -4.76314) (float-vector 1.421085e-14 33.5 -5.5) (float-vector 2.842171e-14 35.5 -5.5) (float-vector 2.75 35.5 -4.76314)))
         (instance face :init :vertices (list (float-vector -2.75 64.5 -4.76314) (float-vector -2.75 66.5 -4.76314) (float-vector 1.421085e-14 66.5 -5.5) (float-vector 2.842171e-14 64.5 -5.5)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 33.5 -5.5) (float-vector -2.75 33.5 -4.76314) (float-vector -2.75 35.5 -4.76314) (float-vector 2.842171e-14 35.5 -5.5)))
         (instance face :init :vertices (list (float-vector -4.76314 64.5 -2.75) (float-vector -4.76314 66.5 -2.75) (float-vector -2.75 66.5 -4.76314) (float-vector -2.75 64.5 -4.76314)))
         (instance face :init :vertices (list (float-vector -2.75 33.5 -4.76314) (float-vector -4.76314 33.5 -2.75) (float-vector -4.76314 35.5 -2.75) (float-vector -2.75 35.5 -4.76314)))
         (instance face :init :vertices (list (float-vector -4.76314 66.5 -2.75) (float-vector -5.5 66.5 3.224628e-16) (float-vector -4.76314 66.5 2.75) (float-vector -2.75 66.5 4.76314) (float-vector 1.421085e-14 66.5 5.5) (float-vector 2.75 66.5 4.76314) (float-vector 4.76314 66.5 2.75) (float-vector 5.5 66.5 7.648431e-15) (float-vector 4.76314 66.5 -2.75) (float-vector 2.75 66.5 -4.76314) (float-vector 1.421085e-14 66.5 -5.5) (float-vector -2.75 66.5 -4.76314)))
         (instance face :init :vertices (list (float-vector -5.5 66.5 3.224628e-16) (float-vector -4.76314 66.5 -2.75) (float-vector -4.76314 64.5 -2.75) (float-vector -5.5 64.5 6.142008e-16)))
         (instance face :init :vertices (list (float-vector -4.76314 33.5 -2.75) (float-vector -5.5 33.5 5.136141e-15) (float-vector -5.5 35.5 4.844403e-15) (float-vector -4.76314 35.5 -2.75)))
         (instance face :init :vertices (list (float-vector -5.5 33.5 5.136141e-15) (float-vector -4.76314 33.5 -2.75) (float-vector -2.75 33.5 -4.76314) (float-vector 1.421085e-14 33.5 -5.5) (float-vector 2.75 33.5 -4.76314) (float-vector 4.76314 33.5 -2.75) (float-vector 5.5 33.5 1.246211e-14) (float-vector 4.76314 33.5 2.75) (float-vector 2.75 33.5 4.76314) (float-vector 1.421085e-14 33.5 5.5) (float-vector -2.75 33.5 4.76314) (float-vector -4.76314 33.5 2.75)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink18 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-elbow :weight 86.5 :centroid (float-vector 3.166475e-17 19.9536 1.72116) :inertia-tensor #2f((47566.1 1.088359e-12 3.487679e-13) (1.088359e-12 13248.4 -4473.32) (3.487679e-13 -4473.32 39237.4))))

     ;; definition of :arm-wrist
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.0 15.0 10.0) (float-vector -5.0 15.0 10.0) (float-vector -5.0 -15.0 10.0) (float-vector 5.0 -15.0 10.0)))
         (instance face :init :vertices (list (float-vector -5.0 15.0 -10.0) (float-vector 5.0 15.0 -10.0) (float-vector 5.0 -15.0 -10.0) (float-vector -5.0 -15.0 -10.0)))
         (instance face :init :vertices (list (float-vector 5.0 15.0 10.0) (float-vector 5.0 15.0 -10.0) (float-vector -5.0 15.0 -10.0) (float-vector -5.0 15.0 10.0)))
         (instance face :init :vertices (list (float-vector 5.0 -15.0 10.0) (float-vector 5.0 -15.0 -10.0) (float-vector 5.0 15.0 -10.0) (float-vector 5.0 15.0 10.0)))
         (instance face :init :vertices (list (float-vector -5.0 -15.0 10.0) (float-vector -5.0 -15.0 -10.0) (float-vector 5.0 -15.0 -10.0) (float-vector 5.0 -15.0 10.0)))
         (instance face :init :vertices (list (float-vector -5.0 15.0 10.0) (float-vector -5.0 15.0 -10.0) (float-vector -5.0 -15.0 -10.0) (float-vector -5.0 -15.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.5 -14.0 -6.5) (float-vector -39.5 -14.0 -6.5) (float-vector -39.5 14.0 -6.5) (float-vector -10.5 14.0 -6.5)))
         (instance face :init :vertices (list (float-vector -39.5 14.0 -6.5) (float-vector -39.5 14.0 6.5) (float-vector -10.5 14.0 6.5) (float-vector -10.5 14.0 -6.5)))
         (instance face :init :vertices (list (float-vector -39.5 14.0 6.5) (float-vector -39.5 -14.0 6.5) (float-vector -10.5 -14.0 6.5) (float-vector -10.5 14.0 6.5)))
         (instance face :init :vertices (list (float-vector -10.5 -14.0 6.5) (float-vector -10.5 -14.0 -6.5) (float-vector -10.5 14.0 -6.5) (float-vector -10.5 14.0 6.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -10.5 -9.75 -4.76314) (float-vector -10.5 -11.7631 -2.75) (float-vector -10.5 -12.5 0.0) (float-vector -10.5 -11.7631 2.75) (float-vector -10.5 -9.75 4.76314) (float-vector -10.5 -7.0 5.5) (float-vector -10.5 -4.25 4.76314) (float-vector -10.5 -2.23686 2.75) (float-vector -10.5 -1.5 0.0) (float-vector -10.5 -2.23686 -2.75) (float-vector -10.5 -4.25 -4.76314) (float-vector -10.5 -7.0 -5.5)))
))
         (instance face :init :vertices (list (float-vector -39.5 -14.0 6.5) (float-vector -39.5 -14.0 -6.5) (float-vector -10.5 -14.0 -6.5) (float-vector -10.5 -14.0 6.5)))
         (instance face :init :vertices (list (float-vector -39.5 -14.0 -6.5) (float-vector -39.5 -14.0 6.5) (float-vector -39.5 14.0 6.5) (float-vector -39.5 14.0 -6.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -39.5 -11.7631 -2.75) (float-vector -39.5 -9.75 -4.76314) (float-vector -39.5 -7.0 -5.5) (float-vector -39.5 -4.25 -4.76314) (float-vector -39.5 -2.23686 -2.75) (float-vector -39.5 -1.5 0.0) (float-vector -39.5 -2.23686 2.75) (float-vector -39.5 -4.25 4.76314) (float-vector -39.5 -7.0 5.5) (float-vector -39.5 -9.75 4.76314) (float-vector -39.5 -11.7631 2.75) (float-vector -39.5 -12.5 0.0)))
))
         (instance face :init :vertices (list (float-vector -8.5 -7.0 -5.5) (float-vector -10.5 -7.0 -5.5) (float-vector -10.5 -4.25 -4.76314) (float-vector -8.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -39.5 -7.0 -5.5) (float-vector -41.5 -7.0 -5.5) (float-vector -41.5 -4.25 -4.76314) (float-vector -39.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -2.23686 -2.75) (float-vector -8.5 -2.23686 -2.75) (float-vector -8.5 -4.25 -4.76314) (float-vector -10.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -41.5 -4.25 -4.76314) (float-vector -41.5 -2.23686 -2.75) (float-vector -39.5 -2.23686 -2.75) (float-vector -39.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -1.5 0.0) (float-vector -8.5 -1.5 0.0) (float-vector -8.5 -2.23686 -2.75) (float-vector -10.5 -2.23686 -2.75)))
         (instance face :init :vertices (list (float-vector -41.5 -2.23686 -2.75) (float-vector -41.5 -1.5 0.0) (float-vector -39.5 -1.5 0.0) (float-vector -39.5 -2.23686 -2.75)))
         (instance face :init :vertices (list (float-vector -10.5 -2.23686 2.75) (float-vector -8.5 -2.23686 2.75) (float-vector -8.5 -1.5 0.0) (float-vector -10.5 -1.5 0.0)))
         (instance face :init :vertices (list (float-vector -41.5 -1.5 0.0) (float-vector -41.5 -2.23686 2.75) (float-vector -39.5 -2.23686 2.75) (float-vector -39.5 -1.5 0.0)))
         (instance face :init :vertices (list (float-vector -10.5 -4.25 4.76314) (float-vector -8.5 -4.25 4.76314) (float-vector -8.5 -2.23686 2.75) (float-vector -10.5 -2.23686 2.75)))
         (instance face :init :vertices (list (float-vector -41.5 -2.23686 2.75) (float-vector -41.5 -4.25 4.76314) (float-vector -39.5 -4.25 4.76314) (float-vector -39.5 -2.23686 2.75)))
         (instance face :init :vertices (list (float-vector -10.5 -7.0 5.5) (float-vector -8.5 -7.0 5.5) (float-vector -8.5 -4.25 4.76314) (float-vector -10.5 -4.25 4.76314)))
         (instance face :init :vertices (list (float-vector -41.5 -4.25 4.76314) (float-vector -41.5 -7.0 5.5) (float-vector -39.5 -7.0 5.5) (float-vector -39.5 -4.25 4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -9.75 4.76314) (float-vector -8.5 -9.75 4.76314) (float-vector -8.5 -7.0 5.5) (float-vector -10.5 -7.0 5.5)))
         (instance face :init :vertices (list (float-vector -41.5 -7.0 5.5) (float-vector -41.5 -9.75 4.76314) (float-vector -39.5 -9.75 4.76314) (float-vector -39.5 -7.0 5.5)))
         (instance face :init :vertices (list (float-vector -10.5 -11.7631 2.75) (float-vector -8.5 -11.7631 2.75) (float-vector -8.5 -9.75 4.76314) (float-vector -10.5 -9.75 4.76314)))
         (instance face :init :vertices (list (float-vector -41.5 -9.75 4.76314) (float-vector -41.5 -11.7631 2.75) (float-vector -39.5 -11.7631 2.75) (float-vector -39.5 -9.75 4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -12.5 0.0) (float-vector -8.5 -12.5 2.842171e-14) (float-vector -8.5 -11.7631 2.75) (float-vector -10.5 -11.7631 2.75)))
         (instance face :init :vertices (list (float-vector -41.5 -11.7631 2.75) (float-vector -41.5 -12.5 0.0) (float-vector -39.5 -12.5 0.0) (float-vector -39.5 -11.7631 2.75)))
         (instance face :init :vertices (list (float-vector -10.5 -11.7631 -2.75) (float-vector -8.5 -11.7631 -2.75) (float-vector -8.5 -12.5 2.842171e-14) (float-vector -10.5 -12.5 0.0)))
         (instance face :init :vertices (list (float-vector -41.5 -12.5 0.0) (float-vector -41.5 -11.7631 -2.75) (float-vector -39.5 -11.7631 -2.75) (float-vector -39.5 -12.5 0.0)))
         (instance face :init :vertices (list (float-vector -10.5 -9.75 -4.76314) (float-vector -8.5 -9.75 -4.76314) (float-vector -8.5 -11.7631 -2.75) (float-vector -10.5 -11.7631 -2.75)))
         (instance face :init :vertices (list (float-vector -41.5 -11.7631 -2.75) (float-vector -41.5 -9.75 -4.76314) (float-vector -39.5 -9.75 -4.76314) (float-vector -39.5 -11.7631 -2.75)))
         (instance face :init :vertices (list (float-vector -8.5 -9.75 -4.76314) (float-vector -8.5 -7.0 -5.5) (float-vector -8.5 -4.25 -4.76314) (float-vector -8.5 -2.23686 -2.75) (float-vector -8.5 -1.5 0.0) (float-vector -8.5 -2.23686 2.75) (float-vector -8.5 -4.25 4.76314) (float-vector -8.5 -7.0 5.5) (float-vector -8.5 -9.75 4.76314) (float-vector -8.5 -11.7631 2.75) (float-vector -8.5 -12.5 2.842171e-14) (float-vector -8.5 -11.7631 -2.75)))
         (instance face :init :vertices (list (float-vector -8.5 -7.0 -5.5) (float-vector -8.5 -9.75 -4.76314) (float-vector -10.5 -9.75 -4.76314) (float-vector -10.5 -7.0 -5.5)))
         (instance face :init :vertices (list (float-vector -41.5 -9.75 -4.76314) (float-vector -41.5 -7.0 -5.5) (float-vector -39.5 -7.0 -5.5) (float-vector -39.5 -9.75 -4.76314)))
         (instance face :init :vertices (list (float-vector -41.5 -7.0 -5.5) (float-vector -41.5 -9.75 -4.76314) (float-vector -41.5 -11.7631 -2.75) (float-vector -41.5 -12.5 0.0) (float-vector -41.5 -11.7631 2.75) (float-vector -41.5 -9.75 4.76314) (float-vector -41.5 -7.0 5.5) (float-vector -41.5 -4.25 4.76314) (float-vector -41.5 -2.23686 2.75) (float-vector -41.5 -1.5 0.0) (float-vector -41.5 -2.23686 -2.75) (float-vector -41.5 -4.25 -4.76314)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink19 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-wrist :weight 27 :centroid (float-vector -20.3704 -0.189619 1.989520e-13) :inertia-tensor #2f((1747.21 -4.38932 -2.343199e-11) (-4.38932 2323.2 -8.280034e-14) (-2.343199e-11 -8.280034e-14 3450.74))))

     ;; definition of :arm-gripper
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 35.0 -27.5) (float-vector 10.0 35.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 -1.262177e-29 26.5) (float-vector 10.0 34.0 26.5) (float-vector 10.0 34.0 -26.5) (float-vector 10.0 6.310887e-30 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 35.0 -27.5) (float-vector -10.0 35.0 27.5) (float-vector 10.0 35.0 27.5) (float-vector 10.0 35.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 -1.262177e-29 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 34.0 -26.5) (float-vector -10.0 34.0 26.5) (float-vector -10.0 -1.262177e-29 26.5) (float-vector -10.0 1.262177e-29 27.5) (float-vector -10.0 35.0 27.5) (float-vector -10.0 35.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 1.262177e-29 27.5) (float-vector -10.0 -1.262177e-29 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 -1.262177e-29 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 35.0 27.5) (float-vector -10.0 35.0 27.5) (float-vector -10.0 1.262177e-29 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 -1.262177e-29 -27.5) (float-vector -10.0 35.0 -27.5) (float-vector 10.0 35.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 -1.262177e-29 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 6.310887e-30 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 34.0 26.5) (float-vector 10.0 -1.262177e-29 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 -1.262177e-29 26.5) (float-vector -10.0 34.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 34.0 -26.5) (float-vector 10.0 34.0 26.5) (float-vector -10.0 34.0 26.5) (float-vector -10.0 34.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 34.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 6.310887e-30 -26.5) (float-vector 10.0 34.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink20 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-gripper :weight 7.40568 :centroid (float-vector 4.689582e-12 21.8503 2.309264e-13) :inertia-tensor #2f((5594.48 -6.414004e-15 -4.320110e-24) (-6.414004e-15 4229.52 -4.547474e-13) (-4.320110e-24 -4.547474e-13 1858.67))))

     ;; definition of assoc
     (send blink12 :newcoords (make-coords :pos (float-vector 0.0 100.0 0.0) :rot #2f((1.0 -1.110223e-16 -1.848893e-32) (1.110223e-16 1.0 3.330669e-16) (-1.848893e-32 -3.330669e-16 1.0))))
     (send blink13 :assoc blink12)
     (send blink13 :newcoords (make-coords :pos (float-vector -10.0 100.0 -30.0) :rot #2f((-2.220446e-16 3.140185e-16 -1.0) (-2.465190e-32 1.0 3.140185e-16) (1.0 7.395571e-32 -2.220446e-16))))
     (send blink14 :assoc blink13)
     (send blink9 :newcoords (make-coords :pos (float-vector 2.842171e-14 100.0 0.0) :rot #2f((1.0 -3.330669e-16 -4.440892e-16) (3.330669e-16 1.0 -1.232595e-31) (4.440892e-16 -2.465190e-32 1.0))))
     (send blink10 :assoc blink9)
     (send blink10 :newcoords (make-coords :pos (float-vector 10.0 100.0 -30.0) :rot #2f((-2.220446e-16 -4.930381e-32 -1.0) (-1.570092e-16 1.0 -2.465190e-32) (1.0 1.570092e-16 -2.220446e-16))))
     (send blink11 :assoc blink10)
     (send blink4 :newcoords (make-coords :pos (float-vector 2.842171e-14 100.0 -2.842171e-14) :rot #2f((1.0 4.440892e-16 5.992361e-32) (-4.440892e-16 1.0 4.440892e-16) (1.372916e-31 -4.440892e-16 1.0))))
     (send blink5 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector -10.0 100.0 30.0) :rot #2f((-2.220446e-16 -1.570092e-16 1.0) (-6.123234e-17 1.0 1.570092e-16) (-1.0 -6.123234e-17 -2.220446e-16))))
     (send blink6 :assoc blink5)
     (send blink1 :newcoords (make-coords :pos (float-vector 0.0 100.0 -1.421085e-14) :rot #2f((1.0 2.220446e-16 -2.220446e-16) (-2.220446e-16 1.0 2.775558e-16) (2.220446e-16 -2.775558e-16 1.0))))
     (send blink2 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 10.0 100.0 30.0) :rot #2f((-2.220446e-16 -1.570092e-16 1.0) (-4.097954e-16 1.0 1.570092e-16) (-1.0 -4.097954e-16 -2.220446e-16))))
     (send blink3 :assoc blink2)
     (send blink20 :newcoords (make-coords :pos (float-vector -25.0 -7.0 0.0) :rot #2f((-2.220446e-16 1.177569e-16 1.0) (1.177569e-16 1.0 -1.177569e-16) (-1.0 1.177569e-16 -2.220446e-16))))
     (send blink19 :assoc blink20)
     (send blink19 :newcoords (make-coords :pos (float-vector -10.0 80.0 7.0) :rot #2f((-1.0 -1.570092e-16 -4.710277e-16) (-4.710277e-16 2.220446e-16 1.0) (-1.570092e-16 1.0 -2.220446e-16))))
     (send blink18 :assoc blink19)
     (send blink18 :newcoords (make-coords :pos (float-vector 2.842171e-14 40.0 0.0) :rot #2f((1.0 4.440892e-16 0.0) (-4.440892e-16 1.0 0.0) (0.0 0.0 1.0))))
     (send blink17 :assoc blink18)
     (send blink17 :newcoords (make-coords :pos (float-vector 1.421085e-14 70.0 0.0) :rot #2f((1.0 2.220446e-16 -1.110223e-16) (-2.220446e-16 1.0 1.110223e-16) (1.110223e-16 -1.110223e-16 1.0))))
     (send blink16 :assoc blink17)
     (send blink16 :newcoords (make-coords :pos (float-vector 40.0 -128.0 -5.292084e-14) :rot #2f((-2.220446e-16 1.0 -2.355139e-16) (-1.0 -2.220446e-16 7.850462e-17) (7.850462e-17 2.355139e-16 1.0))))
     (send blink7 :assoc blink16)
     (send blink7 :newcoords (make-coords :pos (float-vector 3.061617e-15 0.0 50.0) :rot #2f((1.110223e-16 1.110223e-16 1.0) (1.0 1.110223e-16 -1.110223e-16) (-1.110223e-16 1.0 -1.110223e-16))))
     (send blink8 :assoc blink7)
     (send blink8 :newcoords (make-coords :pos (float-vector 1.224647e-15 10.0 63.0) :rot #2f((1.0 4.440892e-16 0.0) (-4.440892e-16 1.0 0.0) (0.0 0.0 1.0))))
     (send blink15 :assoc blink8)
     (send blink15 :newcoords (make-coords :pos (float-vector 60.0 4.329870e-14 70.0) :rot #2f((4.440892e-16 1.0 0.0) (-1.0 4.440892e-16 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink15)
     (send blink3 :newcoords (make-coords :pos (float-vector 105.0 85.0 0.0) :rot #2f((-1.0 -8.881784e-16 -9.136310e-32) (-8.881784e-16 1.0 1.224647e-16) (-1.740739e-32 1.224647e-16 -1.0))))
     (send blink0 :assoc blink3)
     (send blink6 :newcoords (make-coords :pos (float-vector -100.0 85.0 0.0) :rot #2f((-1.0 -5.551115e-16 9.562054e-32) (-5.551115e-16 1.0 -1.224647e-16) (-2.763898e-32 -1.224647e-16 -1.0))))
     (send blink0 :assoc blink6)
     (send blink11 :newcoords (make-coords :pos (float-vector 105.0 -85.0 0.0) :rot #2f((-1.0 5.551115e-16 0.0) (-5.551115e-16 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink11)
     (send blink14 :newcoords (make-coords :pos (float-vector -100.0 -85.0 0.0) :rot #2f((-1.0 8.881784e-16 0.0) (-8.881784e-16 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink14)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 80.0 0.0) :rot #2f((2.220446e-16 -7.850462e-17 1.0) (-7.850462e-17 1.0 7.850462e-17) (-1.0 -7.850462e-17 2.220446e-16))))))
     (send blink7 :assoc head-end-coords)

     ;; definition of arm-end-coords
     (setq arm-end-coords
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 -7.0 0.0) :rot #2f((2.220446e-16 1.743153e-32 1.0) (5.229458e-32 1.0 -1.743153e-32) (-1.0 5.229458e-32 2.220446e-16))))))
     (send blink19 :assoc arm-end-coords)

     ;; definition of lfleg-end-coords
     (setq lfleg-end-coords
       (make-cascoords
	:coords (send (send blink1 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 2.842171e-14 140.0 -1.421085e-14) :rot #2f((1.0 1.962616e-17 1.373831e-16) (1.373831e-16 -3.330669e-16 -1.0) (-1.962616e-17 1.0 -3.330669e-16))))))
     (send blink1 :assoc lfleg-end-coords)

     ;; definition of lbleg-end-coords
     (setq lbleg-end-coords
       (make-cascoords
	:coords (send (send blink4 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -2.842171e-14 140.0 -1.421085e-14) :rot #2f((1.0 0.0 0.0) (0.0 -2.220446e-16 -1.0) (0.0 1.0 -2.220446e-16))))))
     (send blink4 :assoc lbleg-end-coords)

     ;; definition of rfleg-end-coords
     (setq rfleg-end-coords
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -2.842171e-14 140.0 1.421085e-14) :rot #2f((1.0 6.869155e-17 -6.869155e-17) (-6.869155e-17 -2.359264e-33 -1.0) (-6.869155e-17 1.0 2.359264e-33))))))
     (send blink9 :assoc rfleg-end-coords)

     ;; definition of rbleg-end-coords
     (setq rbleg-end-coords
       (make-cascoords
	:coords (send (send blink12 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 2.842171e-14 140.0 -1.421085e-14) :rot #2f((1.0 -2.943923e-17 -1.275700e-16) (-1.275700e-16 1.877782e-33 -1.0) (2.943923e-17 1.0 -1.877782e-33))))))
     (send blink12 :assoc rbleg-end-coords)

     ;; definition of joint

     ;; definition of :head-pan1
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink15 :name :head-pan1 :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :head-pan2
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink15 :child-link blink8 :name :head-pan2 :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :head-tilt
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink8 :child-link blink7 :name :head-tilt :axis :-z
			     :min -180.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :arm-shoulder2
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink16 :name :arm-shoulder2 :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :arm-shoulder1
     (setq joint16 (instance rotational-joint :init
			     :parent-link blink16 :child-link blink17 :name :arm-shoulder1 :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :arm-elbow
     (setq joint17 (instance rotational-joint :init
			     :parent-link blink17 :child-link blink18 :name :arm-elbow :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :arm-wrist
     (setq joint18 (instance rotational-joint :init
			     :parent-link blink18 :child-link blink19 :name :arm-wrist :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :arm-gripper
     (setq joint19 (instance rotational-joint :init
			     :parent-link blink19 :child-link blink20 :name :arm-gripper :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lfleg-crotch
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink3 :name :lfleg-crotch :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lfleg-knee
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink3 :child-link blink2 :name :lfleg-knee :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lfleg-ankle
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink1 :name :lfleg-ankle :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lbleg-crotch
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink6 :name :lbleg-crotch :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lbleg-knee
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink5 :name :lbleg-knee :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lbleg-ankle
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink4 :name :lbleg-ankle :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rfleg-crotch
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink11 :name :rfleg-crotch :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rfleg-knee
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink10 :name :rfleg-knee :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rfleg-ankle
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink9 :name :rfleg-ankle :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rbleg-crotch
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink14 :name :rbleg-crotch :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rbleg-knee
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink13 :name :rbleg-knee :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rbleg-ankle
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink12 :name :rbleg-ankle :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     (setq head-root-link blink15)
     (setq head (list blink15 blink8 blink7))
     (setq arm-root-link blink16)
     (setq arm (list blink16 blink17 blink18 blink19 blink20))
     (setq lfleg-root-link blink3)
     (setq lfleg (list blink3 blink2 blink1))
     (setq lbleg-root-link blink6)
     (setq lbleg (list blink6 blink5 blink4))
     (setq rfleg-root-link blink11)
     (setq rfleg (list blink11 blink10 blink9))
     (setq rbleg-root-link blink14)
     (setq rbleg (list blink14 blink13 blink12))

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:head-pan1 (&rest args) (forward-message-to joint14 args))
  (:head-pan2 (&rest args) (forward-message-to joint7 args))
  (:head-tilt (&rest args) (forward-message-to joint6 args))
  (:arm-shoulder2 (&rest args) (forward-message-to joint15 args))
  (:arm-shoulder1 (&rest args) (forward-message-to joint16 args))
  (:arm-elbow (&rest args) (forward-message-to joint17 args))
  (:arm-wrist (&rest args) (forward-message-to joint18 args))
  (:arm-gripper (&rest args) (forward-message-to joint19 args))
  (:lfleg-crotch (&rest args) (forward-message-to joint2 args))
  (:lfleg-knee (&rest args) (forward-message-to joint1 args))
  (:lfleg-ankle (&rest args) (forward-message-to joint0 args))
  (:lbleg-crotch (&rest args) (forward-message-to joint5 args))
  (:lbleg-knee (&rest args) (forward-message-to joint4 args))
  (:lbleg-ankle (&rest args) (forward-message-to joint3 args))
  (:rfleg-crotch (&rest args) (forward-message-to joint10 args))
  (:rfleg-knee (&rest args) (forward-message-to joint9 args))
  (:rfleg-ankle (&rest args) (forward-message-to joint8 args))
  (:rbleg-crotch (&rest args) (forward-message-to joint13 args))
  (:rbleg-knee (&rest args) (forward-message-to joint12 args))
  (:rbleg-ankle (&rest args) (forward-message-to joint11 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun tamaii (&rest args) (instance* tamaii-robot :init args))
;; (format *error-output* "(instance tamaii-robot :init) for generating model~%")
