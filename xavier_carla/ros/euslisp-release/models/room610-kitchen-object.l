;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room610-kitchen-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod room610-kitchen-object
  (:init
   (&rest args &key (name "room610-kitchen") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room610-kitchen-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 2551.0 825.0) (float-vector 30.0 2551.0 825.0) (float-vector 30.0 -1.0 825.0) (float-vector -10.0 -1.0 825.0)))
         (instance face :init :vertices (list (float-vector 30.0 2551.0 835.0) (float-vector 30.0 -1.0 835.0) (float-vector 30.0 -1.0 825.0) (float-vector 30.0 2551.0 825.0)))
         (instance face :init :vertices (list (float-vector 650.0 2551.0 835.0) (float-vector 650.0 -1.0 835.0) (float-vector 30.0 -1.0 835.0) (float-vector 30.0 2551.0 835.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 71.0 1667.5 835.0) (float-vector 87.5 1651.0 835.0) (float-vector 110.0 1645.0 835.0) (float-vector 540.0 1645.0 835.0) (float-vector 562.5 1651.0 835.0) (float-vector 579.0 1667.5 835.0) (float-vector 585.0 1690.0 835.0) (float-vector 585.0 2375.0 835.0) (float-vector 579.0 2397.5 835.0) (float-vector 562.5 2404.0 835.0) (float-vector 540.0 2420.0 835.0) (float-vector 110.0 2420.0 835.0) (float-vector 87.5 2404.0 835.0) (float-vector 71.0 2397.5 835.0) (float-vector 65.0 2375.0 835.0) (float-vector 65.0 1690.0 835.0)))
))
         (instance face :init :vertices (list (float-vector 650.0 2551.0 885.0) (float-vector 650.0 -1.0 885.0) (float-vector 650.0 -1.0 835.0) (float-vector 650.0 2551.0 835.0)))
         (instance face :init :vertices (list (float-vector 625.0 2551.0 885.0) (float-vector 625.0 -1.0 885.0) (float-vector 650.0 -1.0 885.0) (float-vector 650.0 2551.0 885.0)))
         (instance face :init :vertices (list (float-vector 625.0 2551.0 855.0) (float-vector 625.0 -1.0 855.0) (float-vector 625.0 -1.0 885.0) (float-vector 625.0 2551.0 885.0)))
         (instance face :init :vertices (list (float-vector -10.0 2551.0 855.0) (float-vector -10.0 -1.0 855.0) (float-vector 625.0 -1.0 855.0) (float-vector 625.0 2551.0 855.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 65.0 1690.0 855.0) (float-vector 65.0 2375.0 855.0) (float-vector 71.0 2397.5 855.0) (float-vector 87.5 2404.0 855.0) (float-vector 110.0 2420.0 855.0) (float-vector 540.0 2420.0 855.0) (float-vector 562.5 2404.0 855.0) (float-vector 579.0 2397.5 855.0) (float-vector 585.0 2375.0 855.0) (float-vector 585.0 1690.0 855.0) (float-vector 579.0 1667.5 855.0) (float-vector 562.5 1651.0 855.0) (float-vector 540.0 1645.0 855.0) (float-vector 110.0 1645.0 855.0) (float-vector 87.5 1651.0 855.0) (float-vector 71.0 1667.5 855.0)))
))
         (instance face :init :vertices (list (float-vector -10.0 -1.0 825.0) (float-vector 30.0 -1.0 825.0) (float-vector 30.0 -1.0 835.0) (float-vector 650.0 -1.0 835.0) (float-vector 650.0 -1.0 885.0) (float-vector 625.0 -1.0 885.0) (float-vector 625.0 -1.0 855.0) (float-vector -10.0 -1.0 855.0)))
         (instance face :init :vertices (list (float-vector -10.0 2551.0 855.0) (float-vector 625.0 2551.0 855.0) (float-vector 625.0 2551.0 885.0) (float-vector 650.0 2551.0 885.0) (float-vector 650.0 2551.0 835.0) (float-vector 30.0 2551.0 835.0) (float-vector 30.0 2551.0 825.0) (float-vector -10.0 2551.0 825.0)))
         (instance face :init :vertices (list (float-vector -10.0 2551.0 825.0) (float-vector -10.0 -1.0 825.0) (float-vector -10.0 -1.0 855.0) (float-vector -10.0 2551.0 855.0)))
         (instance face :init :vertices (list (float-vector 65.0 2375.0 835.0) (float-vector 71.0 2397.5 835.0) (float-vector 71.0 2397.5 855.0) (float-vector 65.0 2375.0 855.0)))
         (instance face :init :vertices (list (float-vector 87.5 2404.0 855.0) (float-vector 71.0 2397.5 855.0) (float-vector 71.0 2397.5 835.0) (float-vector 87.5 2404.0 835.0)))
         (instance face :init :vertices (list (float-vector 110.0 2420.0 855.0) (float-vector 87.5 2404.0 855.0) (float-vector 87.5 2404.0 835.0) (float-vector 110.0 2420.0 835.0)))
         (instance face :init :vertices (list (float-vector 540.0 2420.0 855.0) (float-vector 110.0 2420.0 855.0) (float-vector 110.0 2420.0 835.0) (float-vector 540.0 2420.0 835.0)))
         (instance face :init :vertices (list (float-vector 562.5 2404.0 855.0) (float-vector 540.0 2420.0 855.0) (float-vector 540.0 2420.0 835.0) (float-vector 562.5 2404.0 835.0)))
         (instance face :init :vertices (list (float-vector 579.0 2397.5 855.0) (float-vector 562.5 2404.0 855.0) (float-vector 562.5 2404.0 835.0) (float-vector 579.0 2397.5 835.0)))
         (instance face :init :vertices (list (float-vector 585.0 2375.0 855.0) (float-vector 579.0 2397.5 855.0) (float-vector 579.0 2397.5 835.0) (float-vector 585.0 2375.0 835.0)))
         (instance face :init :vertices (list (float-vector 585.0 1690.0 855.0) (float-vector 585.0 2375.0 855.0) (float-vector 585.0 2375.0 835.0) (float-vector 585.0 1690.0 835.0)))
         (instance face :init :vertices (list (float-vector 579.0 1667.5 855.0) (float-vector 585.0 1690.0 855.0) (float-vector 585.0 1690.0 835.0) (float-vector 579.0 1667.5 835.0)))
         (instance face :init :vertices (list (float-vector 562.5 1651.0 855.0) (float-vector 579.0 1667.5 855.0) (float-vector 579.0 1667.5 835.0) (float-vector 562.5 1651.0 835.0)))
         (instance face :init :vertices (list (float-vector 540.0 1645.0 855.0) (float-vector 562.5 1651.0 855.0) (float-vector 562.5 1651.0 835.0) (float-vector 540.0 1645.0 835.0)))
         (instance face :init :vertices (list (float-vector 110.0 1645.0 855.0) (float-vector 540.0 1645.0 855.0) (float-vector 540.0 1645.0 835.0) (float-vector 110.0 1645.0 835.0)))
         (instance face :init :vertices (list (float-vector 87.5 1651.0 855.0) (float-vector 110.0 1645.0 855.0) (float-vector 110.0 1645.0 835.0) (float-vector 87.5 1651.0 835.0)))
         (instance face :init :vertices (list (float-vector 71.0 1667.5 855.0) (float-vector 87.5 1651.0 855.0) (float-vector 87.5 1651.0 835.0) (float-vector 71.0 1667.5 835.0)))
         (instance face :init :vertices (list (float-vector 65.0 1690.0 835.0) (float-vector 65.0 2375.0 835.0) (float-vector 65.0 2375.0 855.0) (float-vector 65.0 1690.0 855.0)))
         (instance face :init :vertices (list (float-vector 65.0 1690.0 855.0) (float-vector 71.0 1667.5 855.0) (float-vector 71.0 1667.5 835.0) (float-vector 65.0 1690.0 835.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 650.0 2539.0 840.0) (float-vector 630.0 2539.0 840.0) (float-vector 630.0 9.0 840.0) (float-vector 650.0 9.0 840.0)))
         (instance face :init :vertices (list (float-vector 630.0 2539.0 110.0) (float-vector 650.0 2539.0 110.0) (float-vector 650.0 9.0 110.0) (float-vector 630.0 9.0 110.0)))
         (instance face :init :vertices (list (float-vector 650.0 2539.0 840.0) (float-vector 650.0 2539.0 110.0) (float-vector 630.0 2539.0 110.0) (float-vector 630.0 2539.0 840.0)))
         (instance face :init :vertices (list (float-vector 650.0 9.0 840.0) (float-vector 650.0 9.0 110.0) (float-vector 650.0 2539.0 110.0) (float-vector 650.0 2539.0 840.0)))
         (instance face :init :vertices (list (float-vector 630.0 9.0 840.0) (float-vector 630.0 9.0 110.0) (float-vector 650.0 9.0 110.0) (float-vector 650.0 9.0 840.0)))
         (instance face :init :vertices (list (float-vector 630.0 2539.0 840.0) (float-vector 630.0 2539.0 110.0) (float-vector 630.0 9.0 110.0) (float-vector 630.0 9.0 840.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 1515.0 490.0) (float-vector 0.0 1515.0 490.0) (float-vector 0.0 1035.0 490.0) (float-vector 30.0 1035.0 490.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 110.0) (float-vector 30.0 1515.0 110.0) (float-vector 30.0 1035.0 110.0) (float-vector 0.0 1035.0 110.0)))
         (instance face :init :vertices (list (float-vector 30.0 1515.0 490.0) (float-vector 30.0 1515.0 110.0) (float-vector 0.0 1515.0 110.0) (float-vector 0.0 1515.0 490.0)))
         (instance face :init :vertices (list (float-vector 30.0 1035.0 490.0) (float-vector 30.0 1035.0 110.0) (float-vector 30.0 1515.0 110.0) (float-vector 30.0 1515.0 490.0)))
         (instance face :init :vertices (list (float-vector 0.0 1035.0 490.0) (float-vector 0.0 1035.0 110.0) (float-vector 30.0 1035.0 110.0) (float-vector 30.0 1035.0 490.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 490.0) (float-vector 0.0 1515.0 110.0) (float-vector 0.0 1035.0 110.0) (float-vector 0.0 1035.0 490.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 1515.0 625.0) (float-vector 0.0 1515.0 625.0) (float-vector 0.0 1035.0 625.0) (float-vector 30.0 1035.0 625.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 490.0) (float-vector 30.0 1515.0 490.0) (float-vector 30.0 1035.0 490.0) (float-vector 0.0 1035.0 490.0)))
         (instance face :init :vertices (list (float-vector 30.0 1515.0 625.0) (float-vector 30.0 1515.0 490.0) (float-vector 0.0 1515.0 490.0) (float-vector 0.0 1515.0 625.0)))
         (instance face :init :vertices (list (float-vector 30.0 1035.0 625.0) (float-vector 30.0 1035.0 490.0) (float-vector 30.0 1515.0 490.0) (float-vector 30.0 1515.0 625.0)))
         (instance face :init :vertices (list (float-vector 0.0 1035.0 625.0) (float-vector 0.0 1035.0 490.0) (float-vector 30.0 1035.0 490.0) (float-vector 30.0 1035.0 625.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 625.0) (float-vector 0.0 1515.0 490.0) (float-vector 0.0 1035.0 490.0) (float-vector 0.0 1035.0 625.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 1035.0 624.0) (float-vector 0.0 1035.0 624.0) (float-vector 0.0 585.0 624.0) (float-vector 30.0 585.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 1035.0 109.0) (float-vector 30.0 1035.0 109.0) (float-vector 30.0 585.0 109.0) (float-vector 0.0 585.0 109.0)))
         (instance face :init :vertices (list (float-vector 30.0 1035.0 624.0) (float-vector 30.0 1035.0 109.0) (float-vector 0.0 1035.0 109.0) (float-vector 0.0 1035.0 624.0)))
         (instance face :init :vertices (list (float-vector 30.0 585.0 624.0) (float-vector 30.0 585.0 109.0) (float-vector 30.0 1035.0 109.0) (float-vector 30.0 1035.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 585.0 624.0) (float-vector 0.0 585.0 109.0) (float-vector 30.0 585.0 109.0) (float-vector 30.0 585.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 1035.0 624.0) (float-vector 0.0 1035.0 109.0) (float-vector 0.0 585.0 109.0) (float-vector 0.0 585.0 624.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 585.0 624.0) (float-vector 0.0 585.0 624.0) (float-vector 0.0 135.0 624.0) (float-vector 30.0 135.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 585.0 109.0) (float-vector 30.0 585.0 109.0) (float-vector 30.0 135.0 109.0) (float-vector 0.0 135.0 109.0)))
         (instance face :init :vertices (list (float-vector 30.0 585.0 624.0) (float-vector 30.0 585.0 109.0) (float-vector 0.0 585.0 109.0) (float-vector 0.0 585.0 624.0)))
         (instance face :init :vertices (list (float-vector 30.0 135.0 624.0) (float-vector 30.0 135.0 109.0) (float-vector 30.0 585.0 109.0) (float-vector 30.0 585.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 135.0 624.0) (float-vector 0.0 135.0 109.0) (float-vector 30.0 135.0 109.0) (float-vector 30.0 135.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 585.0 624.0) (float-vector 0.0 585.0 109.0) (float-vector 0.0 135.0 109.0) (float-vector 0.0 135.0 624.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 1965.0 624.0) (float-vector 0.0 1965.0 624.0) (float-vector 0.0 1515.0 624.0) (float-vector 30.0 1515.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 1965.0 109.0) (float-vector 30.0 1965.0 109.0) (float-vector 30.0 1515.0 109.0) (float-vector 0.0 1515.0 109.0)))
         (instance face :init :vertices (list (float-vector 30.0 1965.0 624.0) (float-vector 30.0 1965.0 109.0) (float-vector 0.0 1965.0 109.0) (float-vector 0.0 1965.0 624.0)))
         (instance face :init :vertices (list (float-vector 30.0 1515.0 624.0) (float-vector 30.0 1515.0 109.0) (float-vector 30.0 1965.0 109.0) (float-vector 30.0 1965.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 624.0) (float-vector 0.0 1515.0 109.0) (float-vector 30.0 1515.0 109.0) (float-vector 30.0 1515.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 1965.0 624.0) (float-vector 0.0 1965.0 109.0) (float-vector 0.0 1515.0 109.0) (float-vector 0.0 1515.0 624.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 2415.0 624.0) (float-vector 0.0 2415.0 624.0) (float-vector 0.0 1965.0 624.0) (float-vector 30.0 1965.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 2415.0 109.0) (float-vector 30.0 2415.0 109.0) (float-vector 30.0 1965.0 109.0) (float-vector 0.0 1965.0 109.0)))
         (instance face :init :vertices (list (float-vector 30.0 2415.0 624.0) (float-vector 30.0 2415.0 109.0) (float-vector 0.0 2415.0 109.0) (float-vector 0.0 2415.0 624.0)))
         (instance face :init :vertices (list (float-vector 30.0 1965.0 624.0) (float-vector 30.0 1965.0 109.0) (float-vector 30.0 2415.0 109.0) (float-vector 30.0 2415.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 1965.0 624.0) (float-vector 0.0 1965.0 109.0) (float-vector 30.0 1965.0 109.0) (float-vector 30.0 1965.0 624.0)))
         (instance face :init :vertices (list (float-vector 0.0 2415.0 624.0) (float-vector 0.0 2415.0 109.0) (float-vector 0.0 1965.0 109.0) (float-vector 0.0 1965.0 624.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 1035.0 810.0) (float-vector 0.0 1035.0 810.0) (float-vector 0.0 135.0 810.0) (float-vector 30.0 135.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 1035.0 625.0) (float-vector 30.0 1035.0 625.0) (float-vector 30.0 135.0 625.0) (float-vector 0.0 135.0 625.0)))
         (instance face :init :vertices (list (float-vector 30.0 1035.0 810.0) (float-vector 30.0 1035.0 625.0) (float-vector 0.0 1035.0 625.0) (float-vector 0.0 1035.0 810.0)))
         (instance face :init :vertices (list (float-vector 30.0 135.0 810.0) (float-vector 30.0 135.0 625.0) (float-vector 30.0 1035.0 625.0) (float-vector 30.0 1035.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 135.0 810.0) (float-vector 0.0 135.0 625.0) (float-vector 30.0 135.0 625.0) (float-vector 30.0 135.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 1035.0 810.0) (float-vector 0.0 1035.0 625.0) (float-vector 0.0 135.0 625.0) (float-vector 0.0 135.0 810.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 1515.0 810.0) (float-vector 0.0 1515.0 810.0) (float-vector 0.0 1035.0 810.0) (float-vector 30.0 1035.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 625.0) (float-vector 30.0 1515.0 625.0) (float-vector 30.0 1035.0 625.0) (float-vector 0.0 1035.0 625.0)))
         (instance face :init :vertices (list (float-vector 30.0 1515.0 810.0) (float-vector 30.0 1515.0 625.0) (float-vector 0.0 1515.0 625.0) (float-vector 0.0 1515.0 810.0)))
         (instance face :init :vertices (list (float-vector 30.0 1035.0 810.0) (float-vector 30.0 1035.0 625.0) (float-vector 30.0 1515.0 625.0) (float-vector 30.0 1515.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 1035.0 810.0) (float-vector 0.0 1035.0 625.0) (float-vector 30.0 1035.0 625.0) (float-vector 30.0 1035.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 810.0) (float-vector 0.0 1515.0 625.0) (float-vector 0.0 1035.0 625.0) (float-vector 0.0 1035.0 810.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 2415.0 810.0) (float-vector 0.0 2415.0 810.0) (float-vector 0.0 1515.0 810.0) (float-vector 30.0 1515.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 2415.0 625.0) (float-vector 30.0 2415.0 625.0) (float-vector 30.0 1515.0 625.0) (float-vector 0.0 1515.0 625.0)))
         (instance face :init :vertices (list (float-vector 30.0 2415.0 810.0) (float-vector 30.0 2415.0 625.0) (float-vector 0.0 2415.0 625.0) (float-vector 0.0 2415.0 810.0)))
         (instance face :init :vertices (list (float-vector 30.0 1515.0 810.0) (float-vector 30.0 1515.0 625.0) (float-vector 30.0 2415.0 625.0) (float-vector 30.0 2415.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 1515.0 810.0) (float-vector 0.0 1515.0 625.0) (float-vector 30.0 1515.0 625.0) (float-vector 30.0 1515.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 2415.0 810.0) (float-vector 0.0 2415.0 625.0) (float-vector 0.0 1515.0 625.0) (float-vector 0.0 1515.0 810.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 2550.0 810.0) (float-vector 0.0 2550.0 810.0) (float-vector 0.0 2415.0 810.0) (float-vector 30.0 2415.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 2550.0 110.0) (float-vector 30.0 2550.0 110.0) (float-vector 30.0 2415.0 110.0) (float-vector 0.0 2415.0 110.0)))
         (instance face :init :vertices (list (float-vector 30.0 2550.0 810.0) (float-vector 30.0 2550.0 110.0) (float-vector 0.0 2550.0 110.0) (float-vector 0.0 2550.0 810.0)))
         (instance face :init :vertices (list (float-vector 30.0 2415.0 810.0) (float-vector 30.0 2415.0 110.0) (float-vector 30.0 2550.0 110.0) (float-vector 30.0 2550.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 2415.0 810.0) (float-vector 0.0 2415.0 110.0) (float-vector 30.0 2415.0 110.0) (float-vector 30.0 2415.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 2550.0 810.0) (float-vector 0.0 2550.0 110.0) (float-vector 0.0 2415.0 110.0) (float-vector 0.0 2415.0 810.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 135.0 810.0) (float-vector 0.0 135.0 810.0) (float-vector 0.0 0.0 810.0) (float-vector 30.0 0.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 135.0 110.0) (float-vector 30.0 135.0 110.0) (float-vector 30.0 0.0 110.0) (float-vector 0.0 0.0 110.0)))
         (instance face :init :vertices (list (float-vector 30.0 135.0 810.0) (float-vector 30.0 135.0 110.0) (float-vector 0.0 135.0 110.0) (float-vector 0.0 135.0 810.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 810.0) (float-vector 30.0 0.0 110.0) (float-vector 30.0 135.0 110.0) (float-vector 30.0 135.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 0.0 810.0) (float-vector 0.0 0.0 110.0) (float-vector 30.0 0.0 110.0) (float-vector 30.0 0.0 810.0)))
         (instance face :init :vertices (list (float-vector 0.0 135.0 810.0) (float-vector 0.0 135.0 110.0) (float-vector 0.0 0.0 110.0) (float-vector 0.0 0.0 810.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 535.0 750.0 856.0) (float-vector 35.0 750.0 856.0) (float-vector 35.0 150.0 856.0) (float-vector 535.0 150.0 856.0)))
         (instance face :init :vertices (list (float-vector 35.0 750.0 841.0) (float-vector 535.0 750.0 841.0) (float-vector 535.0 150.0 841.0) (float-vector 35.0 150.0 841.0)))
         (instance face :init :vertices (list (float-vector 535.0 750.0 856.0) (float-vector 535.0 750.0 841.0) (float-vector 35.0 750.0 841.0) (float-vector 35.0 750.0 856.0)))
         (instance face :init :vertices (list (float-vector 535.0 150.0 856.0) (float-vector 535.0 150.0 841.0) (float-vector 535.0 750.0 841.0) (float-vector 535.0 750.0 856.0)))
         (instance face :init :vertices (list (float-vector 35.0 150.0 856.0) (float-vector 35.0 150.0 841.0) (float-vector 535.0 150.0 841.0) (float-vector 535.0 150.0 856.0)))
         (instance face :init :vertices (list (float-vector 35.0 750.0 856.0) (float-vector 35.0 750.0 841.0) (float-vector 35.0 150.0 841.0) (float-vector 35.0 150.0 856.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 1800.0 800.0) (float-vector 0.0 1800.0 800.0) (float-vector 0.0 0.0 800.0) (float-vector 30.0 0.0 800.0)))
         (instance face :init :vertices (list (float-vector 0.0 1800.0 750.0) (float-vector 30.0 1800.0 750.0) (float-vector 30.0 0.0 750.0) (float-vector 0.0 0.0 750.0)))
         (instance face :init :vertices (list (float-vector 30.0 1800.0 800.0) (float-vector 30.0 1800.0 750.0) (float-vector 0.0 1800.0 750.0) (float-vector 0.0 1800.0 800.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 800.0) (float-vector 30.0 0.0 750.0) (float-vector 30.0 1800.0 750.0) (float-vector 30.0 1800.0 800.0)))
         (instance face :init :vertices (list (float-vector 0.0 0.0 800.0) (float-vector 0.0 0.0 750.0) (float-vector 30.0 0.0 750.0) (float-vector 30.0 0.0 800.0)))
         (instance face :init :vertices (list (float-vector 0.0 1800.0 800.0) (float-vector 0.0 1800.0 750.0) (float-vector 0.0 0.0 750.0) (float-vector 0.0 0.0 800.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 2550.0 800.0) (float-vector 0.0 2550.0 800.0) (float-vector 0.0 2400.0 800.0) (float-vector 30.0 2400.0 800.0)))
         (instance face :init :vertices (list (float-vector 0.0 2550.0 750.0) (float-vector 30.0 2550.0 750.0) (float-vector 30.0 2400.0 750.0) (float-vector 0.0 2400.0 750.0)))
         (instance face :init :vertices (list (float-vector 30.0 2550.0 800.0) (float-vector 30.0 2550.0 750.0) (float-vector 0.0 2550.0 750.0) (float-vector 0.0 2550.0 800.0)))
         (instance face :init :vertices (list (float-vector 30.0 2400.0 800.0) (float-vector 30.0 2400.0 750.0) (float-vector 30.0 2550.0 750.0) (float-vector 30.0 2550.0 800.0)))
         (instance face :init :vertices (list (float-vector 0.0 2400.0 800.0) (float-vector 0.0 2400.0 750.0) (float-vector 30.0 2400.0 750.0) (float-vector 30.0 2400.0 800.0)))
         (instance face :init :vertices (list (float-vector 0.0 2550.0 800.0) (float-vector 0.0 2550.0 750.0) (float-vector 0.0 2400.0 750.0) (float-vector 0.0 2400.0 800.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 650.0 2548.0 105.0) (float-vector 70.0 2548.0 105.0) (float-vector 70.0 0.0 105.0) (float-vector 650.0 0.0 105.0)))
         (instance face :init :vertices (list (float-vector 70.0 2548.0 -5.0) (float-vector 650.0 2548.0 -5.0) (float-vector 650.0 0.0 -5.0) (float-vector 70.0 0.0 -5.0)))
         (instance face :init :vertices (list (float-vector 650.0 2548.0 105.0) (float-vector 650.0 2548.0 -5.0) (float-vector 70.0 2548.0 -5.0) (float-vector 70.0 2548.0 105.0)))
         (instance face :init :vertices (list (float-vector 650.0 0.0 105.0) (float-vector 650.0 0.0 -5.0) (float-vector 650.0 2548.0 -5.0) (float-vector 650.0 2548.0 105.0)))
         (instance face :init :vertices (list (float-vector 70.0 0.0 105.0) (float-vector 70.0 0.0 -5.0) (float-vector 650.0 0.0 -5.0) (float-vector 650.0 0.0 105.0)))
         (instance face :init :vertices (list (float-vector 70.0 2548.0 105.0) (float-vector 70.0 2548.0 -5.0) (float-vector 70.0 0.0 -5.0) (float-vector 70.0 0.0 105.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 70.0 2445.0 645.0) (float-vector 70.0 1645.0 645.0) (float-vector 70.0 1645.0 835.0) (float-vector 70.0 2445.0 835.0)))
         (instance face :init :vertices (list (float-vector 590.0 1645.0 645.0) (float-vector 590.0 1645.0 835.0) (float-vector 70.0 1645.0 835.0) (float-vector 70.0 1645.0 645.0)))
         (instance face :init :vertices (list (float-vector 590.0 2445.0 645.0) (float-vector 590.0 2445.0 835.0) (float-vector 590.0 1645.0 835.0) (float-vector 590.0 1645.0 645.0)))
         (instance face :init :vertices (list (float-vector 70.0 2445.0 835.0) (float-vector 70.0 1645.0 835.0) (float-vector 590.0 1645.0 835.0) (float-vector 590.0 2445.0 835.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 537.5 1930.0 835.0) (float-vector 505.0 1875.0 835.0) (float-vector 505.0 1755.0 835.0) (float-vector 503.6 1740.1 835.0) (float-vector 499.6 1725.6 835.0) (float-vector 493.0 1711.9 835.0) (float-vector 484.0 1699.2 835.0) (float-vector 472.8 1687.8 835.0) (float-vector 459.7 1678.1 835.0) (float-vector 444.9 1670.4 835.0) (float-vector 429.0 1664.7 835.0) (float-vector 412.2 1661.2 835.0) (float-vector 215.0 1660.0 835.0) (float-vector 200.0 1660.0 835.0) (float-vector 182.8 1661.2 835.0) (float-vector 166.0 1664.7 835.0) (float-vector 150.1 1670.4 835.0) (float-vector 135.3 1678.1 835.0) (float-vector 122.2 1687.8 835.0) (float-vector 111.0 1699.2 835.0) (float-vector 102.0 1711.9 835.0) (float-vector 95.4 1725.6 835.0) (float-vector 91.4 1740.1 835.0) (float-vector 90.0 1755.0 835.0) (float-vector 90.0 1875.0 835.0) (float-vector 85.0 1985.0 835.0) (float-vector 85.0 2045.0 835.0) (float-vector 85.0 2105.0 835.0) (float-vector 90.0 2215.0 835.0) (float-vector 90.0 2335.0 835.0) (float-vector 91.4 2349.9 835.0) (float-vector 95.4 2364.4 835.0) (float-vector 102.0 2378.1 835.0) (float-vector 111.0 2390.8 835.0) (float-vector 122.2 2402.2 835.0) (float-vector 135.3 2411.9 835.0) (float-vector 150.1 2419.6 835.0) (float-vector 166.0 2425.3 835.0) (float-vector 182.8 2428.8 835.0) (float-vector 200.0 2430.0 835.0) (float-vector 215.0 2430.0 835.0) (float-vector 412.2 2428.8 835.0) (float-vector 429.0 2425.3 835.0) (float-vector 444.9 2419.6 835.0) (float-vector 459.7 2411.9 835.0) (float-vector 472.8 2402.2 835.0) (float-vector 484.0 2390.8 835.0) (float-vector 493.0 2378.1 835.0) (float-vector 499.6 2364.4 835.0) (float-vector 503.6 2349.9 835.0) (float-vector 505.0 2335.0 835.0) (float-vector 505.0 2215.0 835.0) (float-vector 537.5 2160.0 835.0) (float-vector 570.0 2105.0 835.0) (float-vector 570.0 1985.0 835.0)))
))
         (instance face :init :vertices (list (float-vector 590.0 2445.0 645.0) (float-vector 590.0 1645.0 645.0) (float-vector 70.0 1645.0 645.0) (float-vector 70.0 2445.0 645.0)))
         (instance face :init :vertices (list (float-vector 70.0 2445.0 645.0) (float-vector 70.0 2445.0 835.0) (float-vector 590.0 2445.0 835.0) (float-vector 590.0 2445.0 645.0)))
         (instance face :init :vertices (list (float-vector 570.0 2105.0 835.0) (float-vector 537.5 2160.0 835.0) (float-vector 537.5 2160.0 675.0) (float-vector 570.0 2105.0 675.0)))
         (instance face :init :vertices (list (float-vector 537.5 2160.0 675.0) (float-vector 537.5 2160.0 835.0) (float-vector 505.0 2215.0 835.0) (float-vector 505.0 2215.0 675.0)))
         (instance face :init :vertices (list (float-vector 505.0 2215.0 675.0) (float-vector 505.0 2215.0 835.0) (float-vector 505.0 2335.0 835.0) (float-vector 505.0 2335.0 675.0)))
         (instance face :init :vertices (list (float-vector 505.0 2335.0 675.0) (float-vector 505.0 2335.0 835.0) (float-vector 503.6 2349.9 835.0) (float-vector 503.6 2349.9 675.0)))
         (instance face :init :vertices (list (float-vector 503.6 2349.9 675.0) (float-vector 503.6 2349.9 835.0) (float-vector 499.6 2364.4 835.0) (float-vector 499.6 2364.4 675.0)))
         (instance face :init :vertices (list (float-vector 499.6 2364.4 675.0) (float-vector 499.6 2364.4 835.0) (float-vector 493.0 2378.1 835.0) (float-vector 493.0 2378.1 675.0)))
         (instance face :init :vertices (list (float-vector 493.0 2378.1 675.0) (float-vector 493.0 2378.1 835.0) (float-vector 484.0 2390.8 835.0) (float-vector 484.0 2390.8 675.0)))
         (instance face :init :vertices (list (float-vector 484.0 2390.8 675.0) (float-vector 484.0 2390.8 835.0) (float-vector 472.8 2402.2 835.0) (float-vector 472.8 2402.2 675.0)))
         (instance face :init :vertices (list (float-vector 472.8 2402.2 675.0) (float-vector 472.8 2402.2 835.0) (float-vector 459.7 2411.9 835.0) (float-vector 459.7 2411.9 675.0)))
         (instance face :init :vertices (list (float-vector 459.7 2411.9 675.0) (float-vector 459.7 2411.9 835.0) (float-vector 444.9 2419.6 835.0) (float-vector 444.9 2419.6 675.0)))
         (instance face :init :vertices (list (float-vector 444.9 2419.6 675.0) (float-vector 444.9 2419.6 835.0) (float-vector 429.0 2425.3 835.0) (float-vector 429.0 2425.3 675.0)))
         (instance face :init :vertices (list (float-vector 429.0 2425.3 675.0) (float-vector 429.0 2425.3 835.0) (float-vector 412.2 2428.8 835.0) (float-vector 412.2 2428.8 675.0)))
         (instance face :init :vertices (list (float-vector 412.2 2428.8 675.0) (float-vector 412.2 2428.8 835.0) (float-vector 215.0 2430.0 835.0) (float-vector 215.0 2430.0 675.0)))
         (instance face :init :vertices (list (float-vector 215.0 2430.0 675.0) (float-vector 215.0 2430.0 835.0) (float-vector 200.0 2430.0 835.0) (float-vector 200.0 2430.0 675.0)))
         (instance face :init :vertices (list (float-vector 200.0 2430.0 675.0) (float-vector 200.0 2430.0 835.0) (float-vector 182.8 2428.8 835.0) (float-vector 182.8 2428.8 675.0)))
         (instance face :init :vertices (list (float-vector 182.8 2428.8 675.0) (float-vector 182.8 2428.8 835.0) (float-vector 166.0 2425.3 835.0) (float-vector 166.0 2425.3 675.0)))
         (instance face :init :vertices (list (float-vector 166.0 2425.3 675.0) (float-vector 166.0 2425.3 835.0) (float-vector 150.1 2419.6 835.0) (float-vector 150.1 2419.6 675.0)))
         (instance face :init :vertices (list (float-vector 150.1 2419.6 675.0) (float-vector 150.1 2419.6 835.0) (float-vector 135.3 2411.9 835.0) (float-vector 135.3 2411.9 675.0)))
         (instance face :init :vertices (list (float-vector 135.3 2411.9 675.0) (float-vector 135.3 2411.9 835.0) (float-vector 122.2 2402.2 835.0) (float-vector 122.2 2402.2 675.0)))
         (instance face :init :vertices (list (float-vector 122.2 2402.2 675.0) (float-vector 122.2 2402.2 835.0) (float-vector 111.0 2390.8 835.0) (float-vector 111.0 2390.8 675.0)))
         (instance face :init :vertices (list (float-vector 111.0 2390.8 675.0) (float-vector 111.0 2390.8 835.0) (float-vector 102.0 2378.1 835.0) (float-vector 102.0 2378.1 675.0)))
         (instance face :init :vertices (list (float-vector 102.0 2378.1 675.0) (float-vector 102.0 2378.1 835.0) (float-vector 95.4 2364.4 835.0) (float-vector 95.4 2364.4 675.0)))
         (instance face :init :vertices (list (float-vector 95.4 2364.4 675.0) (float-vector 95.4 2364.4 835.0) (float-vector 91.4 2349.9 835.0) (float-vector 91.4 2349.9 675.0)))
         (instance face :init :vertices (list (float-vector 91.4 2349.9 675.0) (float-vector 91.4 2349.9 835.0) (float-vector 90.0 2335.0 835.0) (float-vector 90.0 2335.0 675.0)))
         (instance face :init :vertices (list (float-vector 90.0 2335.0 675.0) (float-vector 90.0 2335.0 835.0) (float-vector 90.0 2215.0 835.0) (float-vector 90.0 2215.0 675.0)))
         (instance face :init :vertices (list (float-vector 90.0 2215.0 675.0) (float-vector 90.0 2215.0 835.0) (float-vector 85.0 2105.0 835.0) (float-vector 85.0 2105.0 675.0)))
         (instance face :init :vertices (list (float-vector 85.0 2105.0 675.0) (float-vector 85.0 2105.0 835.0) (float-vector 85.0 2045.0 835.0) (float-vector 85.0 2045.0 675.0)))
         (instance face :init :vertices (list (float-vector 85.0 2045.0 675.0) (float-vector 85.0 2045.0 835.0) (float-vector 85.0 1985.0 835.0) (float-vector 85.0 1985.0 675.0)))
         (instance face :init :vertices (list (float-vector 85.0 1985.0 675.0) (float-vector 85.0 1985.0 835.0) (float-vector 90.0 1875.0 835.0) (float-vector 90.0 1875.0 675.0)))
         (instance face :init :vertices (list (float-vector 90.0 1875.0 675.0) (float-vector 90.0 1875.0 835.0) (float-vector 90.0 1755.0 835.0) (float-vector 90.0 1755.0 675.0)))
         (instance face :init :vertices (list (float-vector 90.0 1755.0 675.0) (float-vector 90.0 1755.0 835.0) (float-vector 91.4 1740.1 835.0) (float-vector 91.4 1740.1 675.0)))
         (instance face :init :vertices (list (float-vector 91.4 1740.1 675.0) (float-vector 91.4 1740.1 835.0) (float-vector 95.4 1725.6 835.0) (float-vector 95.4 1725.6 675.0)))
         (instance face :init :vertices (list (float-vector 95.4 1725.6 675.0) (float-vector 95.4 1725.6 835.0) (float-vector 102.0 1711.9 835.0) (float-vector 102.0 1711.9 675.0)))
         (instance face :init :vertices (list (float-vector 102.0 1711.9 675.0) (float-vector 102.0 1711.9 835.0) (float-vector 111.0 1699.2 835.0) (float-vector 111.0 1699.2 675.0)))
         (instance face :init :vertices (list (float-vector 111.0 1699.2 675.0) (float-vector 111.0 1699.2 835.0) (float-vector 122.2 1687.8 835.0) (float-vector 122.2 1687.8 675.0)))
         (instance face :init :vertices (list (float-vector 122.2 1687.8 675.0) (float-vector 122.2 1687.8 835.0) (float-vector 135.3 1678.1 835.0) (float-vector 135.3 1678.1 675.0)))
         (instance face :init :vertices (list (float-vector 135.3 1678.1 675.0) (float-vector 135.3 1678.1 835.0) (float-vector 150.1 1670.4 835.0) (float-vector 150.1 1670.4 675.0)))
         (instance face :init :vertices (list (float-vector 150.1 1670.4 675.0) (float-vector 150.1 1670.4 835.0) (float-vector 166.0 1664.7 835.0) (float-vector 166.0 1664.7 675.0)))
         (instance face :init :vertices (list (float-vector 166.0 1664.7 675.0) (float-vector 166.0 1664.7 835.0) (float-vector 182.8 1661.2 835.0) (float-vector 182.8 1661.2 675.0)))
         (instance face :init :vertices (list (float-vector 182.8 1661.2 675.0) (float-vector 182.8 1661.2 835.0) (float-vector 200.0 1660.0 835.0) (float-vector 200.0 1660.0 675.0)))
         (instance face :init :vertices (list (float-vector 200.0 1660.0 675.0) (float-vector 200.0 1660.0 835.0) (float-vector 215.0 1660.0 835.0) (float-vector 215.0 1660.0 675.0)))
         (instance face :init :vertices (list (float-vector 215.0 1660.0 675.0) (float-vector 215.0 1660.0 835.0) (float-vector 412.2 1661.2 835.0) (float-vector 412.2 1661.2 675.0)))
         (instance face :init :vertices (list (float-vector 412.2 1661.2 675.0) (float-vector 412.2 1661.2 835.0) (float-vector 429.0 1664.7 835.0) (float-vector 429.0 1664.7 675.0)))
         (instance face :init :vertices (list (float-vector 429.0 1664.7 675.0) (float-vector 429.0 1664.7 835.0) (float-vector 444.9 1670.4 835.0) (float-vector 444.9 1670.4 675.0)))
         (instance face :init :vertices (list (float-vector 444.9 1670.4 675.0) (float-vector 444.9 1670.4 835.0) (float-vector 459.7 1678.1 835.0) (float-vector 459.7 1678.1 675.0)))
         (instance face :init :vertices (list (float-vector 459.7 1678.1 675.0) (float-vector 459.7 1678.1 835.0) (float-vector 472.8 1687.8 835.0) (float-vector 472.8 1687.8 675.0)))
         (instance face :init :vertices (list (float-vector 472.8 1687.8 675.0) (float-vector 472.8 1687.8 835.0) (float-vector 484.0 1699.2 835.0) (float-vector 484.0 1699.2 675.0)))
         (instance face :init :vertices (list (float-vector 484.0 1699.2 675.0) (float-vector 484.0 1699.2 835.0) (float-vector 493.0 1711.9 835.0) (float-vector 493.0 1711.9 675.0)))
         (instance face :init :vertices (list (float-vector 493.0 1711.9 675.0) (float-vector 493.0 1711.9 835.0) (float-vector 499.6 1725.6 835.0) (float-vector 499.6 1725.6 675.0)))
         (instance face :init :vertices (list (float-vector 499.6 1725.6 675.0) (float-vector 499.6 1725.6 835.0) (float-vector 503.6 1740.1 835.0) (float-vector 503.6 1740.1 675.0)))
         (instance face :init :vertices (list (float-vector 503.6 1740.1 675.0) (float-vector 503.6 1740.1 835.0) (float-vector 505.0 1755.0 835.0) (float-vector 505.0 1755.0 675.0)))
         (instance face :init :vertices (list (float-vector 505.0 1755.0 675.0) (float-vector 505.0 1755.0 835.0) (float-vector 505.0 1875.0 835.0) (float-vector 505.0 1875.0 675.0)))
         (instance face :init :vertices (list (float-vector 505.0 1875.0 675.0) (float-vector 505.0 1875.0 835.0) (float-vector 537.5 1930.0 835.0) (float-vector 537.5 1930.0 675.0)))
         (instance face :init :vertices (list (float-vector 537.5 1930.0 675.0) (float-vector 537.5 1930.0 835.0) (float-vector 570.0 1985.0 835.0) (float-vector 570.0 1985.0 675.0)))
         (instance face :init :vertices (list (float-vector 570.0 1985.0 675.0) (float-vector 570.0 1985.0 835.0) (float-vector 570.0 2105.0 835.0) (float-vector 570.0 2105.0 675.0)))
         (instance face :init :vertices (list (float-vector 570.0 2105.0 675.0) (float-vector 537.5 2160.0 675.0) (float-vector 505.0 2215.0 675.0) (float-vector 505.0 2335.0 675.0) (float-vector 503.6 2349.9 675.0) (float-vector 499.6 2364.4 675.0) (float-vector 493.0 2378.1 675.0) (float-vector 484.0 2390.8 675.0) (float-vector 472.8 2402.2 675.0) (float-vector 459.7 2411.9 675.0) (float-vector 444.9 2419.6 675.0) (float-vector 429.0 2425.3 675.0) (float-vector 412.2 2428.8 675.0) (float-vector 215.0 2430.0 675.0) (float-vector 200.0 2430.0 675.0) (float-vector 182.8 2428.8 675.0) (float-vector 166.0 2425.3 675.0) (float-vector 150.1 2419.6 675.0) (float-vector 135.3 2411.9 675.0) (float-vector 122.2 2402.2 675.0) (float-vector 111.0 2390.8 675.0) (float-vector 102.0 2378.1 675.0) (float-vector 95.4 2364.4 675.0) (float-vector 91.4 2349.9 675.0) (float-vector 90.0 2335.0 675.0) (float-vector 90.0 2215.0 675.0) (float-vector 85.0 2105.0 675.0) (float-vector 85.0 2045.0 675.0) (float-vector 85.0 1985.0 675.0) (float-vector 90.0 1875.0 675.0) (float-vector 90.0 1755.0 675.0) (float-vector 91.4 1740.1 675.0) (float-vector 95.4 1725.6 675.0) (float-vector 102.0 1711.9 675.0) (float-vector 111.0 1699.2 675.0) (float-vector 122.2 1687.8 675.0) (float-vector 135.3 1678.1 675.0) (float-vector 150.1 1670.4 675.0) (float-vector 166.0 1664.7 675.0) (float-vector 182.8 1661.2 675.0) (float-vector 200.0 1660.0 675.0) (float-vector 215.0 1660.0 675.0) (float-vector 412.2 1661.2 675.0) (float-vector 429.0 1664.7 675.0) (float-vector 444.9 1670.4 675.0) (float-vector 459.7 1678.1 675.0) (float-vector 472.8 1687.8 675.0) (float-vector 484.0 1699.2 675.0) (float-vector 493.0 1711.9 675.0) (float-vector 499.6 1725.6 675.0) (float-vector 503.6 1740.1 675.0) (float-vector 505.0 1755.0 675.0) (float-vector 505.0 1875.0 675.0) (float-vector 537.5 1930.0 675.0) (float-vector 570.0 1985.0 675.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 650.0 10.0 840.0) (float-vector 30.0 10.0 840.0) (float-vector 30.0 0.0 840.0) (float-vector 650.0 0.0 840.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 110.0) (float-vector 650.0 10.0 110.0) (float-vector 650.0 0.0 110.0) (float-vector 30.0 0.0 110.0)))
         (instance face :init :vertices (list (float-vector 650.0 10.0 840.0) (float-vector 650.0 10.0 110.0) (float-vector 30.0 10.0 110.0) (float-vector 30.0 10.0 840.0)))
         (instance face :init :vertices (list (float-vector 650.0 0.0 840.0) (float-vector 650.0 0.0 110.0) (float-vector 650.0 10.0 110.0) (float-vector 650.0 10.0 840.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 840.0) (float-vector 30.0 0.0 110.0) (float-vector 650.0 0.0 110.0) (float-vector 650.0 0.0 840.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 840.0) (float-vector 30.0 10.0 110.0) (float-vector 30.0 0.0 110.0) (float-vector 30.0 0.0 840.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 650.0 2550.0 840.0) (float-vector 30.0 2550.0 840.0) (float-vector 30.0 2540.0 840.0) (float-vector 650.0 2540.0 840.0)))
         (instance face :init :vertices (list (float-vector 30.0 2550.0 110.0) (float-vector 650.0 2550.0 110.0) (float-vector 650.0 2540.0 110.0) (float-vector 30.0 2540.0 110.0)))
         (instance face :init :vertices (list (float-vector 650.0 2550.0 840.0) (float-vector 650.0 2550.0 110.0) (float-vector 30.0 2550.0 110.0) (float-vector 30.0 2550.0 840.0)))
         (instance face :init :vertices (list (float-vector 650.0 2540.0 840.0) (float-vector 650.0 2540.0 110.0) (float-vector 650.0 2550.0 110.0) (float-vector 650.0 2550.0 840.0)))
         (instance face :init :vertices (list (float-vector 30.0 2540.0 840.0) (float-vector 30.0 2540.0 110.0) (float-vector 650.0 2540.0 110.0) (float-vector 650.0 2540.0 840.0)))
         (instance face :init :vertices (list (float-vector 30.0 2550.0 840.0) (float-vector 30.0 2550.0 110.0) (float-vector 30.0 2540.0 110.0) (float-vector 30.0 2540.0 840.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :wheat)
     (send (elt bc 2) :set-color :wheat)
     (send (elt bc 3) :set-color :grey)
     (send (elt bc 4) :set-color :wheat)
     (send (elt bc 5) :set-color :wheat)
     (send (elt bc 6) :set-color :wheat)
     (send (elt bc 7) :set-color :wheat)
     (send (elt bc 8) :set-color :wheat)
     (send (elt bc 9) :set-color :wheat)
     (send (elt bc 10) :set-color :wheat)
     (send (elt bc 11) :set-color :wheat)
     (send (elt bc 12) :set-color :wheat)
     (send (elt bc 13) :set-color :black)
     (send (elt bc 14) :set-color :white)
     (send (elt bc 15) :set-color :white)
     (send (elt bc 16) :set-color :snow3)
     (send (elt bc 17) :set-color :dimgray)
     (send (elt bc 18) :set-color :white)
     (send (elt bc 19) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-kitchen-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room610-kitchen (&rest args) (instance* room610-kitchen-object :init args))
;; (format *error-output* "(instance room610-kitchen-object :init) for generating model~%")
