;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass white-bread-salad-dish-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1 handle2 handle3 handle4 handle5 handle6 handle7
         attention0
         ))
(defmethod white-bread-salad-dish-object
  (:init
   (&rest args &key (name "white-bread-salad-dish") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :white-bread-salad-dish-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 126.6 0.0 0.0) (float-vector 116.963 -48.4477 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 116.963 -48.4477 0.0) (float-vector 89.5197 -89.5197 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 89.5197 -89.5197 0.0) (float-vector 48.4477 -116.963 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 48.4477 -116.963 0.0) (float-vector -1.147690e-12 -126.6 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -1.147690e-12 -126.6 0.0) (float-vector -48.4477 -116.963 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -48.4477 -116.963 0.0) (float-vector -89.5197 -89.5197 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -89.5197 -89.5197 0.0) (float-vector -116.963 -48.4477 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -116.963 -48.4477 0.0) (float-vector -126.6 6.901644e-13 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -126.6 6.901644e-13 0.0) (float-vector -116.963 48.4477 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -116.963 48.4477 0.0) (float-vector -89.5197 89.5197 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -89.5197 89.5197 0.0) (float-vector -48.4477 116.963 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -48.4477 116.963 0.0) (float-vector 1.201954e-13 126.6 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 1.201954e-13 126.6 0.0) (float-vector 48.4477 116.963 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 48.4477 116.963 0.0) (float-vector 89.5197 89.5197 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 89.5197 89.5197 0.0) (float-vector 116.963 48.4477 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 116.963 48.4477 0.0) (float-vector 126.6 0.0 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 116.963 -48.4477 0.0) (float-vector 116.963 -48.4477 0.0) (float-vector 126.6 0.0 0.0) (float-vector 126.6 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 89.5197 -89.5197 0.0) (float-vector 89.5197 -89.5197 0.0) (float-vector 116.963 -48.4477 0.0) (float-vector 116.963 -48.4477 0.0)))
         (instance face :init :vertices (list (float-vector 48.4477 -116.963 0.0) (float-vector 48.4477 -116.963 0.0) (float-vector 89.5197 -89.5197 0.0) (float-vector 89.5197 -89.5197 0.0)))
         (instance face :init :vertices (list (float-vector -1.147690e-12 -126.6 0.0) (float-vector -1.147690e-12 -126.6 0.0) (float-vector 48.4477 -116.963 0.0) (float-vector 48.4477 -116.963 0.0)))
         (instance face :init :vertices (list (float-vector -48.4477 -116.963 0.0) (float-vector -48.4477 -116.963 0.0) (float-vector -1.147690e-12 -126.6 0.0) (float-vector -1.147690e-12 -126.6 0.0)))
         (instance face :init :vertices (list (float-vector -89.5197 -89.5197 0.0) (float-vector -89.5197 -89.5197 0.0) (float-vector -48.4477 -116.963 0.0) (float-vector -48.4477 -116.963 0.0)))
         (instance face :init :vertices (list (float-vector -116.963 -48.4477 0.0) (float-vector -116.963 -48.4477 0.0) (float-vector -89.5197 -89.5197 0.0) (float-vector -89.5197 -89.5197 0.0)))
         (instance face :init :vertices (list (float-vector -126.6 6.901644e-13 0.0) (float-vector -126.6 6.901644e-13 0.0) (float-vector -116.963 -48.4477 0.0) (float-vector -116.963 -48.4477 0.0)))
         (instance face :init :vertices (list (float-vector -116.963 48.4477 0.0) (float-vector -116.963 48.4477 0.0) (float-vector -126.6 6.901644e-13 0.0) (float-vector -126.6 6.901644e-13 0.0)))
         (instance face :init :vertices (list (float-vector -89.5197 89.5197 0.0) (float-vector -89.5197 89.5197 0.0) (float-vector -116.963 48.4477 0.0) (float-vector -116.963 48.4477 0.0)))
         (instance face :init :vertices (list (float-vector -48.4477 116.963 0.0) (float-vector -48.4477 116.963 0.0) (float-vector -89.5197 89.5197 0.0) (float-vector -89.5197 89.5197 0.0)))
         (instance face :init :vertices (list (float-vector 1.201954e-13 126.6 0.0) (float-vector 1.201954e-13 126.6 0.0) (float-vector -48.4477 116.963 0.0) (float-vector -48.4477 116.963 0.0)))
         (instance face :init :vertices (list (float-vector 48.4477 116.963 0.0) (float-vector 48.4477 116.963 0.0) (float-vector 1.201954e-13 126.6 0.0) (float-vector 1.201954e-13 126.6 0.0)))
         (instance face :init :vertices (list (float-vector 89.5197 89.5197 0.0) (float-vector 89.5197 89.5197 0.0) (float-vector 48.4477 116.963 0.0) (float-vector 48.4477 116.963 0.0)))
         (instance face :init :vertices (list (float-vector 116.963 48.4477 0.0) (float-vector 116.963 48.4477 0.0) (float-vector 89.5197 89.5197 0.0) (float-vector 89.5197 89.5197 0.0)))
         (instance face :init :vertices (list (float-vector 126.6 0.0 0.0) (float-vector 126.6 0.0 0.0) (float-vector 116.963 48.4477 0.0) (float-vector 116.963 48.4477 0.0)))
         (instance face :init :vertices (list (float-vector 121.583 -50.3611 0.0) (float-vector 116.963 -48.4477 0.0) (float-vector 126.6 0.0 0.0) (float-vector 131.6 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 93.0553 -93.0553 0.0) (float-vector 89.5197 -89.5197 0.0) (float-vector 116.963 -48.4477 0.0) (float-vector 121.583 -50.3611 0.0)))
         (instance face :init :vertices (list (float-vector 50.3611 -121.583 0.0) (float-vector 48.4477 -116.963 0.0) (float-vector 89.5197 -89.5197 0.0) (float-vector 93.0553 -93.0553 0.0)))
         (instance face :init :vertices (list (float-vector -1.193017e-12 -131.6 0.0) (float-vector -1.147690e-12 -126.6 0.0) (float-vector 48.4477 -116.963 0.0) (float-vector 50.3611 -121.583 0.0)))
         (instance face :init :vertices (list (float-vector -50.3611 -121.583 0.0) (float-vector -48.4477 -116.963 0.0) (float-vector -1.147690e-12 -126.6 0.0) (float-vector -1.193017e-12 -131.6 0.0)))
         (instance face :init :vertices (list (float-vector -93.0553 -93.0553 0.0) (float-vector -89.5197 -89.5197 0.0) (float-vector -48.4477 -116.963 0.0) (float-vector -50.3611 -121.583 0.0)))
         (instance face :init :vertices (list (float-vector -121.583 -50.3611 0.0) (float-vector -116.963 -48.4477 0.0) (float-vector -89.5197 -89.5197 0.0) (float-vector -93.0553 -93.0553 0.0)))
         (instance face :init :vertices (list (float-vector -131.6 7.174220e-13 0.0) (float-vector -126.6 6.901644e-13 0.0) (float-vector -116.963 -48.4477 0.0) (float-vector -121.583 -50.3611 0.0)))
         (instance face :init :vertices (list (float-vector -121.583 50.3611 0.0) (float-vector -116.963 48.4477 0.0) (float-vector -126.6 6.901644e-13 0.0) (float-vector -131.6 7.174220e-13 0.0)))
         (instance face :init :vertices (list (float-vector -93.0553 93.0553 0.0) (float-vector -89.5197 89.5197 0.0) (float-vector -116.963 48.4477 0.0) (float-vector -121.583 50.3611 0.0)))
         (instance face :init :vertices (list (float-vector -50.3611 121.583 0.0) (float-vector -48.4477 116.963 0.0) (float-vector -89.5197 89.5197 0.0) (float-vector -93.0553 93.0553 0.0)))
         (instance face :init :vertices (list (float-vector 1.249425e-13 131.6 0.0) (float-vector 1.201954e-13 126.6 0.0) (float-vector -48.4477 116.963 0.0) (float-vector -50.3611 121.583 0.0)))
         (instance face :init :vertices (list (float-vector 50.3611 121.583 0.0) (float-vector 48.4477 116.963 0.0) (float-vector 1.201954e-13 126.6 0.0) (float-vector 1.249425e-13 131.6 0.0)))
         (instance face :init :vertices (list (float-vector 93.0553 93.0553 0.0) (float-vector 89.5197 89.5197 0.0) (float-vector 48.4477 116.963 0.0) (float-vector 50.3611 121.583 0.0)))
         (instance face :init :vertices (list (float-vector 121.583 50.3611 0.0) (float-vector 116.963 48.4477 0.0) (float-vector 89.5197 89.5197 0.0) (float-vector 93.0553 93.0553 0.0)))
         (instance face :init :vertices (list (float-vector 131.6 0.0 0.0) (float-vector 126.6 0.0 0.0) (float-vector 116.963 48.4477 0.0) (float-vector 121.583 50.3611 0.0)))
         (instance face :init :vertices (list (float-vector 121.583 -50.3611 0.0) (float-vector 121.583 -50.3611 0.0) (float-vector 131.6 0.0 0.0) (float-vector 131.6 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 93.0553 -93.0553 0.0) (float-vector 93.0553 -93.0553 0.0) (float-vector 121.583 -50.3611 0.0) (float-vector 121.583 -50.3611 0.0)))
         (instance face :init :vertices (list (float-vector 50.3611 -121.583 0.0) (float-vector 50.3611 -121.583 0.0) (float-vector 93.0553 -93.0553 0.0) (float-vector 93.0553 -93.0553 0.0)))
         (instance face :init :vertices (list (float-vector -1.193017e-12 -131.6 0.0) (float-vector -1.193017e-12 -131.6 0.0) (float-vector 50.3611 -121.583 0.0) (float-vector 50.3611 -121.583 0.0)))
         (instance face :init :vertices (list (float-vector -50.3611 -121.583 0.0) (float-vector -50.3611 -121.583 0.0) (float-vector -1.193017e-12 -131.6 0.0) (float-vector -1.193017e-12 -131.6 0.0)))
         (instance face :init :vertices (list (float-vector -93.0553 -93.0553 0.0) (float-vector -93.0553 -93.0553 0.0) (float-vector -50.3611 -121.583 0.0) (float-vector -50.3611 -121.583 0.0)))
         (instance face :init :vertices (list (float-vector -121.583 -50.3611 0.0) (float-vector -121.583 -50.3611 0.0) (float-vector -93.0553 -93.0553 0.0) (float-vector -93.0553 -93.0553 0.0)))
         (instance face :init :vertices (list (float-vector -131.6 7.174220e-13 0.0) (float-vector -131.6 7.174220e-13 0.0) (float-vector -121.583 -50.3611 0.0) (float-vector -121.583 -50.3611 0.0)))
         (instance face :init :vertices (list (float-vector -121.583 50.3611 0.0) (float-vector -121.583 50.3611 0.0) (float-vector -131.6 7.174220e-13 0.0) (float-vector -131.6 7.174220e-13 0.0)))
         (instance face :init :vertices (list (float-vector -93.0553 93.0553 0.0) (float-vector -93.0553 93.0553 0.0) (float-vector -121.583 50.3611 0.0) (float-vector -121.583 50.3611 0.0)))
         (instance face :init :vertices (list (float-vector -50.3611 121.583 0.0) (float-vector -50.3611 121.583 0.0) (float-vector -93.0553 93.0553 0.0) (float-vector -93.0553 93.0553 0.0)))
         (instance face :init :vertices (list (float-vector 1.249425e-13 131.6 0.0) (float-vector 1.249425e-13 131.6 0.0) (float-vector -50.3611 121.583 0.0) (float-vector -50.3611 121.583 0.0)))
         (instance face :init :vertices (list (float-vector 50.3611 121.583 0.0) (float-vector 50.3611 121.583 0.0) (float-vector 1.249425e-13 131.6 0.0) (float-vector 1.249425e-13 131.6 0.0)))
         (instance face :init :vertices (list (float-vector 93.0553 93.0553 0.0) (float-vector 93.0553 93.0553 0.0) (float-vector 50.3611 121.583 0.0) (float-vector 50.3611 121.583 0.0)))
         (instance face :init :vertices (list (float-vector 121.583 50.3611 0.0) (float-vector 121.583 50.3611 0.0) (float-vector 93.0553 93.0553 0.0) (float-vector 93.0553 93.0553 0.0)))
         (instance face :init :vertices (list (float-vector 131.6 0.0 0.0) (float-vector 131.6 0.0 0.0) (float-vector 121.583 50.3611 0.0) (float-vector 121.583 50.3611 0.0)))
         (instance face :init :vertices (list (float-vector 137.684 -57.0308 1.22359) (float-vector 121.583 -50.3611 0.0) (float-vector 131.6 0.0 0.0) (float-vector 149.029 0.0 1.22359)))
         (instance face :init :vertices (list (float-vector 105.379 -105.379 1.22359) (float-vector 93.0553 -93.0553 0.0) (float-vector 121.583 -50.3611 0.0) (float-vector 137.684 -57.0308 1.22359)))
         (instance face :init :vertices (list (float-vector 57.0308 -137.684 1.22359) (float-vector 50.3611 -121.583 0.0) (float-vector 93.0553 -93.0553 0.0) (float-vector 105.379 -105.379 1.22359)))
         (instance face :init :vertices (list (float-vector -1.351016e-12 -149.029 1.22359) (float-vector -1.193017e-12 -131.6 0.0) (float-vector 50.3611 -121.583 0.0) (float-vector 57.0308 -137.684 1.22359)))
         (instance face :init :vertices (list (float-vector -57.0308 -137.684 1.22359) (float-vector -50.3611 -121.583 0.0) (float-vector -1.193017e-12 -131.6 0.0) (float-vector -1.351016e-12 -149.029 1.22359)))
         (instance face :init :vertices (list (float-vector -105.379 -105.379 1.22359) (float-vector -93.0553 -93.0553 0.0) (float-vector -50.3611 -121.583 0.0) (float-vector -57.0308 -137.684 1.22359)))
         (instance face :init :vertices (list (float-vector -137.684 -57.0308 1.22359) (float-vector -121.583 -50.3611 0.0) (float-vector -93.0553 -93.0553 0.0) (float-vector -105.379 -105.379 1.22359)))
         (instance face :init :vertices (list (float-vector -149.029 8.124344e-13 1.22359) (float-vector -131.6 7.174220e-13 0.0) (float-vector -121.583 -50.3611 0.0) (float-vector -137.684 -57.0308 1.22359)))
         (instance face :init :vertices (list (float-vector -137.684 57.0308 1.22359) (float-vector -121.583 50.3611 0.0) (float-vector -131.6 7.174220e-13 0.0) (float-vector -149.029 8.124344e-13 1.22359)))
         (instance face :init :vertices (list (float-vector -105.379 105.379 1.22359) (float-vector -93.0553 93.0553 0.0) (float-vector -121.583 50.3611 0.0) (float-vector -137.684 57.0308 1.22359)))
         (instance face :init :vertices (list (float-vector -57.0308 137.684 1.22359) (float-vector -50.3611 121.583 0.0) (float-vector -93.0553 93.0553 0.0) (float-vector -105.379 105.379 1.22359)))
         (instance face :init :vertices (list (float-vector 1.414893e-13 149.029 1.22359) (float-vector 1.249425e-13 131.6 0.0) (float-vector -50.3611 121.583 0.0) (float-vector -57.0308 137.684 1.22359)))
         (instance face :init :vertices (list (float-vector 57.0308 137.684 1.22359) (float-vector 50.3611 121.583 0.0) (float-vector 1.249425e-13 131.6 0.0) (float-vector 1.414893e-13 149.029 1.22359)))
         (instance face :init :vertices (list (float-vector 105.379 105.379 1.22359) (float-vector 93.0553 93.0553 0.0) (float-vector 50.3611 121.583 0.0) (float-vector 57.0308 137.684 1.22359)))
         (instance face :init :vertices (list (float-vector 137.684 57.0308 1.22359) (float-vector 121.583 50.3611 0.0) (float-vector 93.0553 93.0553 0.0) (float-vector 105.379 105.379 1.22359)))
         (instance face :init :vertices (list (float-vector 149.029 0.0 1.22359) (float-vector 131.6 0.0 0.0) (float-vector 121.583 50.3611 0.0) (float-vector 137.684 57.0308 1.22359)))
         (instance face :init :vertices (list (float-vector 152.21 -63.0475 4.77458) (float-vector 137.684 -57.0308 1.22359) (float-vector 149.029 0.0 1.22359) (float-vector 164.751 0.0 4.77458)))
         (instance face :init :vertices (list (float-vector 116.497 -116.497 4.77458) (float-vector 105.379 -105.379 1.22359) (float-vector 137.684 -57.0308 1.22359) (float-vector 152.21 -63.0475 4.77458)))
         (instance face :init :vertices (list (float-vector 63.0475 -152.21 4.77458) (float-vector 57.0308 -137.684 1.22359) (float-vector 105.379 -105.379 1.22359) (float-vector 116.497 -116.497 4.77458)))
         (instance face :init :vertices (list (float-vector -1.493548e-12 -164.751 4.77458) (float-vector -1.351016e-12 -149.029 1.22359) (float-vector 57.0308 -137.684 1.22359) (float-vector 63.0475 -152.21 4.77458)))
         (instance face :init :vertices (list (float-vector -63.0475 -152.21 4.77458) (float-vector -57.0308 -137.684 1.22359) (float-vector -1.351016e-12 -149.029 1.22359) (float-vector -1.493548e-12 -164.751 4.77458)))
         (instance face :init :vertices (list (float-vector -116.497 -116.497 4.77458) (float-vector -105.379 -105.379 1.22359) (float-vector -57.0308 -137.684 1.22359) (float-vector -63.0475 -152.21 4.77458)))
         (instance face :init :vertices (list (float-vector -152.21 -63.0475 4.77458) (float-vector -137.684 -57.0308 1.22359) (float-vector -105.379 -105.379 1.22359) (float-vector -116.497 -116.497 4.77458)))
         (instance face :init :vertices (list (float-vector -164.751 8.981464e-13 4.77458) (float-vector -149.029 8.124344e-13 1.22359) (float-vector -137.684 -57.0308 1.22359) (float-vector -152.21 -63.0475 4.77458)))
         (instance face :init :vertices (list (float-vector -152.21 63.0475 4.77458) (float-vector -137.684 57.0308 1.22359) (float-vector -149.029 8.124344e-13 1.22359) (float-vector -164.751 8.981464e-13 4.77458)))
         (instance face :init :vertices (list (float-vector -116.497 116.497 4.77458) (float-vector -105.379 105.379 1.22359) (float-vector -137.684 57.0308 1.22359) (float-vector -152.21 63.0475 4.77458)))
         (instance face :init :vertices (list (float-vector -63.0475 152.21 4.77458) (float-vector -57.0308 137.684 1.22359) (float-vector -105.379 105.379 1.22359) (float-vector -116.497 116.497 4.77458)))
         (instance face :init :vertices (list (float-vector 1.564165e-13 164.751 4.77458) (float-vector 1.414893e-13 149.029 1.22359) (float-vector -57.0308 137.684 1.22359) (float-vector -63.0475 152.21 4.77458)))
         (instance face :init :vertices (list (float-vector 63.0475 152.21 4.77458) (float-vector 57.0308 137.684 1.22359) (float-vector 1.414893e-13 149.029 1.22359) (float-vector 1.564165e-13 164.751 4.77458)))
         (instance face :init :vertices (list (float-vector 116.497 116.497 4.77458) (float-vector 105.379 105.379 1.22359) (float-vector 57.0308 137.684 1.22359) (float-vector 63.0475 152.21 4.77458)))
         (instance face :init :vertices (list (float-vector 152.21 63.0475 4.77458) (float-vector 137.684 57.0308 1.22359) (float-vector 105.379 105.379 1.22359) (float-vector 116.497 116.497 4.77458)))
         (instance face :init :vertices (list (float-vector 164.751 0.0 4.77458) (float-vector 149.029 0.0 1.22359) (float-vector 137.684 57.0308 1.22359) (float-vector 152.21 63.0475 4.77458)))
         (instance face :init :vertices (list (float-vector 163.738 -67.8224 10.3054) (float-vector 152.21 -63.0475 4.77458) (float-vector 164.751 0.0 4.77458) (float-vector 177.229 0.0 10.3054)))
         (instance face :init :vertices (list (float-vector 125.32 -125.32 10.3054) (float-vector 116.497 -116.497 4.77458) (float-vector 152.21 -63.0475 4.77458) (float-vector 163.738 -67.8224 10.3054)))
         (instance face :init :vertices (list (float-vector 67.8224 -163.738 10.3054) (float-vector 63.0475 -152.21 4.77458) (float-vector 116.497 -116.497 4.77458) (float-vector 125.32 -125.32 10.3054)))
         (instance face :init :vertices (list (float-vector -1.606662e-12 -177.229 10.3054) (float-vector -1.493548e-12 -164.751 4.77458) (float-vector 63.0475 -152.21 4.77458) (float-vector 67.8224 -163.738 10.3054)))
         (instance face :init :vertices (list (float-vector -67.8224 -163.738 10.3054) (float-vector -63.0475 -152.21 4.77458) (float-vector -1.493548e-12 -164.751 4.77458) (float-vector -1.606662e-12 -177.229 10.3054)))
         (instance face :init :vertices (list (float-vector -125.32 -125.32 10.3054) (float-vector -116.497 -116.497 4.77458) (float-vector -63.0475 -152.21 4.77458) (float-vector -67.8224 -163.738 10.3054)))
         (instance face :init :vertices (list (float-vector -163.738 -67.8224 10.3054) (float-vector -152.21 -63.0475 4.77458) (float-vector -116.497 -116.497 4.77458) (float-vector -125.32 -125.32 10.3054)))
         (instance face :init :vertices (list (float-vector -177.229 9.661677e-13 10.3054) (float-vector -164.751 8.981464e-13 4.77458) (float-vector -152.21 -63.0475 4.77458) (float-vector -163.738 -67.8224 10.3054)))
         (instance face :init :vertices (list (float-vector -163.738 67.8224 10.3054) (float-vector -152.21 63.0475 4.77458) (float-vector -164.751 8.981464e-13 4.77458) (float-vector -177.229 9.661677e-13 10.3054)))
         (instance face :init :vertices (list (float-vector -125.32 125.32 10.3054) (float-vector -116.497 116.497 4.77458) (float-vector -152.21 63.0475 4.77458) (float-vector -163.738 67.8224 10.3054)))
         (instance face :init :vertices (list (float-vector -67.8224 163.738 10.3054) (float-vector -63.0475 152.21 4.77458) (float-vector -116.497 116.497 4.77458) (float-vector -125.32 125.32 10.3054)))
         (instance face :init :vertices (list (float-vector 1.682627e-13 177.229 10.3054) (float-vector 1.564165e-13 164.751 4.77458) (float-vector -63.0475 152.21 4.77458) (float-vector -67.8224 163.738 10.3054)))
         (instance face :init :vertices (list (float-vector 67.8224 163.738 10.3054) (float-vector 63.0475 152.21 4.77458) (float-vector 1.564165e-13 164.751 4.77458) (float-vector 1.682627e-13 177.229 10.3054)))
         (instance face :init :vertices (list (float-vector 125.32 125.32 10.3054) (float-vector 116.497 116.497 4.77458) (float-vector 63.0475 152.21 4.77458) (float-vector 67.8224 163.738 10.3054)))
         (instance face :init :vertices (list (float-vector 163.738 67.8224 10.3054) (float-vector 152.21 63.0475 4.77458) (float-vector 116.497 116.497 4.77458) (float-vector 125.32 125.32 10.3054)))
         (instance face :init :vertices (list (float-vector 177.229 0.0 10.3054) (float-vector 164.751 0.0 4.77458) (float-vector 152.21 63.0475 4.77458) (float-vector 163.738 67.8224 10.3054)))
         (instance face :init :vertices (list (float-vector 171.139 -70.8881 17.2746) (float-vector 163.738 -67.8224 10.3054) (float-vector 177.229 0.0 10.3054) (float-vector 185.24 0.0 17.2746)))
         (instance face :init :vertices (list (float-vector 130.984 -130.984 17.2746) (float-vector 125.32 -125.32 10.3054) (float-vector 163.738 -67.8224 10.3054) (float-vector 171.139 -70.8881 17.2746)))
         (instance face :init :vertices (list (float-vector 70.8881 -171.139 17.2746) (float-vector 67.8224 -163.738 10.3054) (float-vector 125.32 -125.32 10.3054) (float-vector 130.984 -130.984 17.2746)))
         (instance face :init :vertices (list (float-vector -1.679286e-12 -185.24 17.2746) (float-vector -1.606662e-12 -177.229 10.3054) (float-vector 67.8224 -163.738 10.3054) (float-vector 70.8881 -171.139 17.2746)))
         (instance face :init :vertices (list (float-vector -70.8881 -171.139 17.2746) (float-vector -67.8224 -163.738 10.3054) (float-vector -1.606662e-12 -177.229 10.3054) (float-vector -1.679286e-12 -185.24 17.2746)))
         (instance face :init :vertices (list (float-vector -130.984 -130.984 17.2746) (float-vector -125.32 -125.32 10.3054) (float-vector -67.8224 -163.738 10.3054) (float-vector -70.8881 -171.139 17.2746)))
         (instance face :init :vertices (list (float-vector -171.139 -70.8881 17.2746) (float-vector -163.738 -67.8224 10.3054) (float-vector -125.32 -125.32 10.3054) (float-vector -130.984 -130.984 17.2746)))
         (instance face :init :vertices (list (float-vector -185.24 1.009840e-12 17.2746) (float-vector -177.229 9.661677e-13 10.3054) (float-vector -163.738 -67.8224 10.3054) (float-vector -171.139 -70.8881 17.2746)))
         (instance face :init :vertices (list (float-vector -171.139 70.8881 17.2746) (float-vector -163.738 67.8224 10.3054) (float-vector -177.229 9.661677e-13 10.3054) (float-vector -185.24 1.009840e-12 17.2746)))
         (instance face :init :vertices (list (float-vector -130.984 130.984 17.2746) (float-vector -125.32 125.32 10.3054) (float-vector -163.738 67.8224 10.3054) (float-vector -171.139 70.8881 17.2746)))
         (instance face :init :vertices (list (float-vector -70.8881 171.139 17.2746) (float-vector -67.8224 163.738 10.3054) (float-vector -125.32 125.32 10.3054) (float-vector -130.984 130.984 17.2746)))
         (instance face :init :vertices (list (float-vector 1.758685e-13 185.24 17.2746) (float-vector 1.682627e-13 177.229 10.3054) (float-vector -67.8224 163.738 10.3054) (float-vector -70.8881 171.139 17.2746)))
         (instance face :init :vertices (list (float-vector 70.8881 171.139 17.2746) (float-vector 67.8224 163.738 10.3054) (float-vector 1.682627e-13 177.229 10.3054) (float-vector 1.758685e-13 185.24 17.2746)))
         (instance face :init :vertices (list (float-vector 130.984 130.984 17.2746) (float-vector 125.32 125.32 10.3054) (float-vector 67.8224 163.738 10.3054) (float-vector 70.8881 171.139 17.2746)))
         (instance face :init :vertices (list (float-vector 171.139 70.8881 17.2746) (float-vector 163.738 67.8224 10.3054) (float-vector 125.32 125.32 10.3054) (float-vector 130.984 130.984 17.2746)))
         (instance face :init :vertices (list (float-vector 185.24 0.0 17.2746) (float-vector 177.229 0.0 10.3054) (float-vector 163.738 67.8224 10.3054) (float-vector 171.139 70.8881 17.2746)))
         (instance face :init :vertices (list (float-vector 173.689 -71.9445 25.0) (float-vector 171.139 -70.8881 17.2746) (float-vector 185.24 0.0 17.2746) (float-vector 188.0 0.0 25.0)))
         (instance face :init :vertices (list (float-vector 132.936 -132.936 25.0) (float-vector 130.984 -130.984 17.2746) (float-vector 171.139 -70.8881 17.2746) (float-vector 173.689 -71.9445 25.0)))
         (instance face :init :vertices (list (float-vector 71.9445 -173.689 25.0) (float-vector 70.8881 -171.139 17.2746) (float-vector 130.984 -130.984 17.2746) (float-vector 132.936 -132.936 25.0)))
         (instance face :init :vertices (list (float-vector -1.704310e-12 -188.0 25.0) (float-vector -1.679286e-12 -185.24 17.2746) (float-vector 70.8881 -171.139 17.2746) (float-vector 71.9445 -173.689 25.0)))
         (instance face :init :vertices (list (float-vector -71.9445 -173.689 25.0) (float-vector -70.8881 -171.139 17.2746) (float-vector -1.679286e-12 -185.24 17.2746) (float-vector -1.704310e-12 -188.0 25.0)))
         (instance face :init :vertices (list (float-vector -132.936 -132.936 25.0) (float-vector -130.984 -130.984 17.2746) (float-vector -70.8881 -171.139 17.2746) (float-vector -71.9445 -173.689 25.0)))
         (instance face :init :vertices (list (float-vector -173.689 -71.9445 25.0) (float-vector -171.139 -70.8881 17.2746) (float-vector -130.984 -130.984 17.2746) (float-vector -132.936 -132.936 25.0)))
         (instance face :init :vertices (list (float-vector -188.0 1.024889e-12 25.0) (float-vector -185.24 1.009840e-12 17.2746) (float-vector -171.139 -70.8881 17.2746) (float-vector -173.689 -71.9445 25.0)))
         (instance face :init :vertices (list (float-vector -173.689 71.9445 25.0) (float-vector -171.139 70.8881 17.2746) (float-vector -185.24 1.009840e-12 17.2746) (float-vector -188.0 1.024889e-12 25.0)))
         (instance face :init :vertices (list (float-vector -132.936 132.936 25.0) (float-vector -130.984 130.984 17.2746) (float-vector -171.139 70.8881 17.2746) (float-vector -173.689 71.9445 25.0)))
         (instance face :init :vertices (list (float-vector -71.9445 173.689 25.0) (float-vector -70.8881 171.139 17.2746) (float-vector -130.984 130.984 17.2746) (float-vector -132.936 132.936 25.0)))
         (instance face :init :vertices (list (float-vector 1.784892e-13 188.0 25.0) (float-vector 1.758685e-13 185.24 17.2746) (float-vector -70.8881 171.139 17.2746) (float-vector -71.9445 173.689 25.0)))
         (instance face :init :vertices (list (float-vector 71.9445 173.689 25.0) (float-vector 70.8881 171.139 17.2746) (float-vector 1.758685e-13 185.24 17.2746) (float-vector 1.784892e-13 188.0 25.0)))
         (instance face :init :vertices (list (float-vector 132.936 132.936 25.0) (float-vector 130.984 130.984 17.2746) (float-vector 70.8881 171.139 17.2746) (float-vector 71.9445 173.689 25.0)))
         (instance face :init :vertices (list (float-vector 173.689 71.9445 25.0) (float-vector 171.139 70.8881 17.2746) (float-vector 130.984 130.984 17.2746) (float-vector 132.936 132.936 25.0)))
         (instance face :init :vertices (list (float-vector 188.0 0.0 25.0) (float-vector 185.24 0.0 17.2746) (float-vector 171.139 70.8881 17.2746) (float-vector 173.689 71.9445 25.0)))
         (instance face :init :vertices (list (float-vector 171.842 -71.1791 25.0) (float-vector 173.689 -71.9445 25.0) (float-vector 188.0 0.0 25.0) (float-vector 186.0 0.0 25.0)))
         (instance face :init :vertices (list (float-vector 131.522 -131.522 25.0) (float-vector 132.936 -132.936 25.0) (float-vector 173.689 -71.9445 25.0) (float-vector 171.842 -71.1791 25.0)))
         (instance face :init :vertices (list (float-vector 71.1791 -171.842 25.0) (float-vector 71.9445 -173.689 25.0) (float-vector 132.936 -132.936 25.0) (float-vector 131.522 -131.522 25.0)))
         (instance face :init :vertices (list (float-vector -1.686180e-12 -186.0 25.0) (float-vector -1.704310e-12 -188.0 25.0) (float-vector 71.9445 -173.689 25.0) (float-vector 71.1791 -171.842 25.0)))
         (instance face :init :vertices (list (float-vector -71.1791 -171.842 25.0) (float-vector -71.9445 -173.689 25.0) (float-vector -1.704310e-12 -188.0 25.0) (float-vector -1.686180e-12 -186.0 25.0)))
         (instance face :init :vertices (list (float-vector -131.522 -131.522 25.0) (float-vector -132.936 -132.936 25.0) (float-vector -71.9445 -173.689 25.0) (float-vector -71.1791 -171.842 25.0)))
         (instance face :init :vertices (list (float-vector -171.842 -71.1791 25.0) (float-vector -173.689 -71.9445 25.0) (float-vector -132.936 -132.936 25.0) (float-vector -131.522 -131.522 25.0)))
         (instance face :init :vertices (list (float-vector -186.0 1.013986e-12 25.0) (float-vector -188.0 1.024889e-12 25.0) (float-vector -173.689 -71.9445 25.0) (float-vector -171.842 -71.1791 25.0)))
         (instance face :init :vertices (list (float-vector -171.842 71.1791 25.0) (float-vector -173.689 71.9445 25.0) (float-vector -188.0 1.024889e-12 25.0) (float-vector -186.0 1.013986e-12 25.0)))
         (instance face :init :vertices (list (float-vector -131.522 131.522 25.0) (float-vector -132.936 132.936 25.0) (float-vector -173.689 71.9445 25.0) (float-vector -171.842 71.1791 25.0)))
         (instance face :init :vertices (list (float-vector -71.1791 171.842 25.0) (float-vector -71.9445 173.689 25.0) (float-vector -132.936 132.936 25.0) (float-vector -131.522 131.522 25.0)))
         (instance face :init :vertices (list (float-vector 1.765904e-13 186.0 25.0) (float-vector 1.784892e-13 188.0 25.0) (float-vector -71.9445 173.689 25.0) (float-vector -71.1791 171.842 25.0)))
         (instance face :init :vertices (list (float-vector 71.1791 171.842 25.0) (float-vector 71.9445 173.689 25.0) (float-vector 1.784892e-13 188.0 25.0) (float-vector 1.765904e-13 186.0 25.0)))
         (instance face :init :vertices (list (float-vector 131.522 131.522 25.0) (float-vector 132.936 132.936 25.0) (float-vector 71.9445 173.689 25.0) (float-vector 71.1791 171.842 25.0)))
         (instance face :init :vertices (list (float-vector 171.842 71.1791 25.0) (float-vector 173.689 71.9445 25.0) (float-vector 132.936 132.936 25.0) (float-vector 131.522 131.522 25.0)))
         (instance face :init :vertices (list (float-vector 186.0 0.0 25.0) (float-vector 188.0 0.0 25.0) (float-vector 173.689 71.9445 25.0) (float-vector 171.842 71.1791 25.0)))
         (instance face :init :vertices (list (float-vector 119.735 -49.5958 2.0) (float-vector 171.842 -71.1791 25.0) (float-vector 186.0 0.0 25.0) (float-vector 129.6 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 91.641 -91.641 2.0) (float-vector 131.522 -131.522 25.0) (float-vector 171.842 -71.1791 25.0) (float-vector 119.735 -49.5958 2.0)))
         (instance face :init :vertices (list (float-vector 49.5958 -119.735 2.0) (float-vector 71.1791 -171.842 25.0) (float-vector 131.522 -131.522 25.0) (float-vector 91.641 -91.641 2.0)))
         (instance face :init :vertices (list (float-vector -1.174886e-12 -129.6 2.0) (float-vector -1.686180e-12 -186.0 25.0) (float-vector 71.1791 -171.842 25.0) (float-vector 49.5958 -119.735 2.0)))
         (instance face :init :vertices (list (float-vector -49.5958 -119.735 2.0) (float-vector -71.1791 -171.842 25.0) (float-vector -1.686180e-12 -186.0 25.0) (float-vector -1.174886e-12 -129.6 2.0)))
         (instance face :init :vertices (list (float-vector -91.641 -91.641 2.0) (float-vector -131.522 -131.522 25.0) (float-vector -71.1791 -171.842 25.0) (float-vector -49.5958 -119.735 2.0)))
         (instance face :init :vertices (list (float-vector -119.735 -49.5958 2.0) (float-vector -171.842 -71.1791 25.0) (float-vector -131.522 -131.522 25.0) (float-vector -91.641 -91.641 2.0)))
         (instance face :init :vertices (list (float-vector -129.6 7.065190e-13 2.0) (float-vector -186.0 1.013986e-12 25.0) (float-vector -171.842 -71.1791 25.0) (float-vector -119.735 -49.5958 2.0)))
         (instance face :init :vertices (list (float-vector -119.735 49.5958 2.0) (float-vector -171.842 71.1791 25.0) (float-vector -186.0 1.013986e-12 25.0) (float-vector -129.6 7.065190e-13 2.0)))
         (instance face :init :vertices (list (float-vector -91.641 91.641 2.0) (float-vector -131.522 131.522 25.0) (float-vector -171.842 71.1791 25.0) (float-vector -119.735 49.5958 2.0)))
         (instance face :init :vertices (list (float-vector -49.5958 119.735 2.0) (float-vector -71.1791 171.842 25.0) (float-vector -131.522 131.522 25.0) (float-vector -91.641 91.641 2.0)))
         (instance face :init :vertices (list (float-vector 1.230436e-13 129.6 2.0) (float-vector 1.765904e-13 186.0 25.0) (float-vector -71.1791 171.842 25.0) (float-vector -49.5958 119.735 2.0)))
         (instance face :init :vertices (list (float-vector 49.5958 119.735 2.0) (float-vector 71.1791 171.842 25.0) (float-vector 1.765904e-13 186.0 25.0) (float-vector 1.230436e-13 129.6 2.0)))
         (instance face :init :vertices (list (float-vector 91.641 91.641 2.0) (float-vector 131.522 131.522 25.0) (float-vector 71.1791 171.842 25.0) (float-vector 49.5958 119.735 2.0)))
         (instance face :init :vertices (list (float-vector 119.735 49.5958 2.0) (float-vector 171.842 71.1791 25.0) (float-vector 131.522 131.522 25.0) (float-vector 91.641 91.641 2.0)))
         (instance face :init :vertices (list (float-vector 129.6 0.0 2.0) (float-vector 186.0 0.0 25.0) (float-vector 171.842 71.1791 25.0) (float-vector 119.735 49.5958 2.0)))
         (instance face :init :vertices (list (float-vector 119.735 -49.5958 2.0) (float-vector 129.6 0.0 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 129.6 0.0 2.0) (float-vector 119.735 49.5958 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 119.735 49.5958 2.0) (float-vector 91.641 91.641 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 91.641 91.641 2.0) (float-vector 49.5958 119.735 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 49.5958 119.735 2.0) (float-vector 1.230436e-13 129.6 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 1.230436e-13 129.6 2.0) (float-vector -49.5958 119.735 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -49.5958 119.735 2.0) (float-vector -91.641 91.641 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -91.641 91.641 2.0) (float-vector -119.735 49.5958 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -119.735 49.5958 2.0) (float-vector -129.6 7.065190e-13 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -129.6 7.065190e-13 2.0) (float-vector -119.735 -49.5958 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -119.735 -49.5958 2.0) (float-vector -91.641 -91.641 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -91.641 -91.641 2.0) (float-vector -49.5958 -119.735 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -49.5958 -119.735 2.0) (float-vector -1.174886e-12 -129.6 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -1.174886e-12 -129.6 2.0) (float-vector 49.5958 -119.735 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 49.5958 -119.735 2.0) (float-vector 91.641 -91.641 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 91.641 -91.641 2.0) (float-vector 119.735 -49.5958 2.0) (float-vector 0.0 0.0 2.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :white-bread-salad-dish-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 115.597 -115.597 25.0) :rot #2f((-0.541675 0.454519 -0.707107) (0.541675 -0.454519 -0.707107) (-0.642788 -0.766044 -1.498801e-15)) :name "handle0"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector -9.012176e-13 -163.478 25.0) :rot #2f((4.440892e-15 -1.665335e-15 -1.0) (0.766044 -0.642788 4.496403e-15) (-0.642788 -0.766044 -1.554312e-15)) :name "handle1"))
     (send blink0 :assoc handle1)
     (setq handle2 (make-cascoords :pos (float-vector -115.597 -115.597 25.0) :rot #2f((0.541675 -0.454519 -0.707107) (0.541675 -0.454519 0.707107) (-0.642788 -0.766044 -9.714451e-16)) :name "handle2"))
     (send blink0 :assoc handle2)
     (setq handle3 (make-cascoords :pos (float-vector -163.478 3.104160e-13 25.0) :rot #2f((0.766044 -0.642788 2.442491e-15) (-2.886580e-15 3.538836e-16 1.0) (-0.642788 -0.766044 -1.575129e-15)) :name "handle3"))
     (send blink0 :assoc handle3)
     (setq handle4 (make-cascoords :pos (float-vector -115.597 115.597 25.0) :rot #2f((0.541675 -0.454519 0.707107) (-0.541675 0.454519 0.707107) (-0.642788 -0.766044 -1.490127e-15)) :name "handle4"))
     (send blink0 :assoc handle4)
     (setq handle5 (make-cascoords :pos (float-vector 1.001016e-14 163.478 25.0) :rot #2f((-1.276756e-15 -6.106227e-16 1.0) (-0.766044 0.642788 -6.106227e-16) (-0.642788 -0.766044 -1.276756e-15)) :name "handle5"))
     (send blink0 :assoc handle5)
     (setq handle6 (make-cascoords :pos (float-vector 115.597 115.597 25.0) :rot #2f((-0.541675 0.454519 0.707107) (-0.541675 0.454519 -0.707107) (-0.642788 -0.766044 -1.720846e-15)) :name "handle6"))
     (send blink0 :assoc handle6)
     (setq handle7 (make-cascoords :pos (float-vector 163.478 0.0 25.0) :rot #2f((-0.766044 0.642788 1.110223e-15) (2.220446e-16 1.942890e-15 -1.0) (-0.642788 -0.766044 -1.609823e-15)) :name "handle7"))
     (send blink0 :assoc handle7)

     ;; definition of :attention
     (setq attention0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "attention0"))
     (send blink0 :assoc attention0)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1 handle2 handle3 handle4 handle5 handle6 handle7) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:handle-handle1 (&rest args) (forward-message-to handle1 args))
  (:handle-handle2 (&rest args) (forward-message-to handle2 args))
  (:handle-handle3 (&rest args) (forward-message-to handle3 args))
  (:handle-handle4 (&rest args) (forward-message-to handle4 args))
  (:handle-handle5 (&rest args) (forward-message-to handle5 args))
  (:handle-handle6 (&rest args) (forward-message-to handle6 args))
  (:handle-handle7 (&rest args) (forward-message-to handle7 args))
  (:attention (&rest args) (forward-message-to-all (list  attention0) args))
  (:attention-attention0 (&rest args) (forward-message-to attention0 args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun white-bread-salad-dish (&rest args) (instance* white-bread-salad-dish-object :init args))
;; (format *error-output* "(instance white-bread-salad-dish-object :init) for generating model~%")
