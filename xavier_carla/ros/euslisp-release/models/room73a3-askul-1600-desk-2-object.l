;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73a3-askul-1600-desk-2-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod room73a3-askul-1600-desk-2-object
  (:init
   (&rest args &key (name "room73a3-askul-1600-desk-2") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room73a3-askul-1600-desk-2-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -400.0 -800.0 705.0) (float-vector 400.0 -800.0 705.0) (float-vector 400.0 800.0 705.0) (float-vector -400.0 800.0 705.0)))
         (instance face :init :vertices (list (float-vector 400.0 -800.0 687.0) (float-vector -400.0 -800.0 687.0) (float-vector -400.0 800.0 687.0) (float-vector 400.0 800.0 687.0)))
         (instance face :init :vertices (list (float-vector -400.0 -800.0 705.0) (float-vector -400.0 -800.0 687.0) (float-vector 400.0 -800.0 687.0) (float-vector 400.0 -800.0 705.0)))
         (instance face :init :vertices (list (float-vector -400.0 800.0 705.0) (float-vector -400.0 800.0 687.0) (float-vector -400.0 -800.0 687.0) (float-vector -400.0 -800.0 705.0)))
         (instance face :init :vertices (list (float-vector 400.0 800.0 705.0) (float-vector 400.0 800.0 687.0) (float-vector -400.0 800.0 687.0) (float-vector -400.0 800.0 705.0)))
         (instance face :init :vertices (list (float-vector 400.0 -800.0 705.0) (float-vector 400.0 -800.0 687.0) (float-vector 400.0 800.0 687.0) (float-vector 400.0 800.0 705.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 363.856 -758.0 687.0) (float-vector 366.0 -750.0 687.0) (float-vector 363.856 -742.0 687.0) (float-vector 358.0 -736.144 687.0) (float-vector 350.0 -734.0 687.0) (float-vector 342.0 -736.144 687.0) (float-vector 336.144 -742.0 687.0) (float-vector 334.0 -750.0 687.0) (float-vector 336.144 -758.0 687.0) (float-vector 342.0 -763.856 687.0) (float-vector 350.0 -766.0 687.0) (float-vector 358.0 -763.856 687.0)))
         (instance face :init :vertices (list (float-vector 366.0 -750.0 0.0) (float-vector 363.856 -758.0 0.0) (float-vector 358.0 -763.856 0.0) (float-vector 350.0 -766.0 0.0) (float-vector 342.0 -763.856 0.0) (float-vector 336.144 -758.0 0.0) (float-vector 334.0 -750.0 0.0) (float-vector 336.144 -742.0 0.0) (float-vector 342.0 -736.144 0.0) (float-vector 350.0 -734.0 0.0) (float-vector 358.0 -736.144 0.0) (float-vector 363.856 -742.0 0.0)))
         (instance face :init :vertices (list (float-vector 363.856 -758.0 687.0) (float-vector 363.856 -758.0 0.0) (float-vector 366.0 -750.0 0.0) (float-vector 366.0 -750.0 687.0)))
         (instance face :init :vertices (list (float-vector 358.0 -763.856 687.0) (float-vector 358.0 -763.856 0.0) (float-vector 363.856 -758.0 0.0) (float-vector 363.856 -758.0 687.0)))
         (instance face :init :vertices (list (float-vector 350.0 -766.0 687.0) (float-vector 350.0 -766.0 0.0) (float-vector 358.0 -763.856 0.0) (float-vector 358.0 -763.856 687.0)))
         (instance face :init :vertices (list (float-vector 342.0 -763.856 687.0) (float-vector 342.0 -763.856 0.0) (float-vector 350.0 -766.0 0.0) (float-vector 350.0 -766.0 687.0)))
         (instance face :init :vertices (list (float-vector 336.144 -758.0 687.0) (float-vector 336.144 -758.0 0.0) (float-vector 342.0 -763.856 0.0) (float-vector 342.0 -763.856 687.0)))
         (instance face :init :vertices (list (float-vector 334.0 -750.0 687.0) (float-vector 334.0 -750.0 0.0) (float-vector 336.144 -758.0 0.0) (float-vector 336.144 -758.0 687.0)))
         (instance face :init :vertices (list (float-vector 336.144 -742.0 687.0) (float-vector 336.144 -742.0 0.0) (float-vector 334.0 -750.0 0.0) (float-vector 334.0 -750.0 687.0)))
         (instance face :init :vertices (list (float-vector 342.0 -736.144 687.0) (float-vector 342.0 -736.144 0.0) (float-vector 336.144 -742.0 0.0) (float-vector 336.144 -742.0 687.0)))
         (instance face :init :vertices (list (float-vector 350.0 -734.0 687.0) (float-vector 350.0 -734.0 0.0) (float-vector 342.0 -736.144 0.0) (float-vector 342.0 -736.144 687.0)))
         (instance face :init :vertices (list (float-vector 358.0 -736.144 687.0) (float-vector 358.0 -736.144 0.0) (float-vector 350.0 -734.0 0.0) (float-vector 350.0 -734.0 687.0)))
         (instance face :init :vertices (list (float-vector 363.856 -742.0 687.0) (float-vector 363.856 -742.0 0.0) (float-vector 358.0 -736.144 0.0) (float-vector 358.0 -736.144 687.0)))
         (instance face :init :vertices (list (float-vector 366.0 -750.0 687.0) (float-vector 366.0 -750.0 0.0) (float-vector 363.856 -742.0 0.0) (float-vector 363.856 -742.0 687.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 363.856 742.0 687.0) (float-vector 366.0 750.0 687.0) (float-vector 363.856 758.0 687.0) (float-vector 358.0 763.856 687.0) (float-vector 350.0 766.0 687.0) (float-vector 342.0 763.856 687.0) (float-vector 336.144 758.0 687.0) (float-vector 334.0 750.0 687.0) (float-vector 336.144 742.0 687.0) (float-vector 342.0 736.144 687.0) (float-vector 350.0 734.0 687.0) (float-vector 358.0 736.144 687.0)))
         (instance face :init :vertices (list (float-vector 366.0 750.0 0.0) (float-vector 363.856 742.0 0.0) (float-vector 358.0 736.144 0.0) (float-vector 350.0 734.0 0.0) (float-vector 342.0 736.144 0.0) (float-vector 336.144 742.0 0.0) (float-vector 334.0 750.0 0.0) (float-vector 336.144 758.0 0.0) (float-vector 342.0 763.856 0.0) (float-vector 350.0 766.0 0.0) (float-vector 358.0 763.856 0.0) (float-vector 363.856 758.0 0.0)))
         (instance face :init :vertices (list (float-vector 363.856 742.0 687.0) (float-vector 363.856 742.0 0.0) (float-vector 366.0 750.0 0.0) (float-vector 366.0 750.0 687.0)))
         (instance face :init :vertices (list (float-vector 358.0 736.144 687.0) (float-vector 358.0 736.144 0.0) (float-vector 363.856 742.0 0.0) (float-vector 363.856 742.0 687.0)))
         (instance face :init :vertices (list (float-vector 350.0 734.0 687.0) (float-vector 350.0 734.0 0.0) (float-vector 358.0 736.144 0.0) (float-vector 358.0 736.144 687.0)))
         (instance face :init :vertices (list (float-vector 342.0 736.144 687.0) (float-vector 342.0 736.144 0.0) (float-vector 350.0 734.0 0.0) (float-vector 350.0 734.0 687.0)))
         (instance face :init :vertices (list (float-vector 336.144 742.0 687.0) (float-vector 336.144 742.0 0.0) (float-vector 342.0 736.144 0.0) (float-vector 342.0 736.144 687.0)))
         (instance face :init :vertices (list (float-vector 334.0 750.0 687.0) (float-vector 334.0 750.0 0.0) (float-vector 336.144 742.0 0.0) (float-vector 336.144 742.0 687.0)))
         (instance face :init :vertices (list (float-vector 336.144 758.0 687.0) (float-vector 336.144 758.0 0.0) (float-vector 334.0 750.0 0.0) (float-vector 334.0 750.0 687.0)))
         (instance face :init :vertices (list (float-vector 342.0 763.856 687.0) (float-vector 342.0 763.856 0.0) (float-vector 336.144 758.0 0.0) (float-vector 336.144 758.0 687.0)))
         (instance face :init :vertices (list (float-vector 350.0 766.0 687.0) (float-vector 350.0 766.0 0.0) (float-vector 342.0 763.856 0.0) (float-vector 342.0 763.856 687.0)))
         (instance face :init :vertices (list (float-vector 358.0 763.856 687.0) (float-vector 358.0 763.856 0.0) (float-vector 350.0 766.0 0.0) (float-vector 350.0 766.0 687.0)))
         (instance face :init :vertices (list (float-vector 363.856 758.0 687.0) (float-vector 363.856 758.0 0.0) (float-vector 358.0 763.856 0.0) (float-vector 358.0 763.856 687.0)))
         (instance face :init :vertices (list (float-vector 366.0 750.0 687.0) (float-vector 366.0 750.0 0.0) (float-vector 363.856 758.0 0.0) (float-vector 363.856 758.0 687.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -336.144 742.0 687.0) (float-vector -334.0 750.0 687.0) (float-vector -336.144 758.0 687.0) (float-vector -342.0 763.856 687.0) (float-vector -350.0 766.0 687.0) (float-vector -358.0 763.856 687.0) (float-vector -363.856 758.0 687.0) (float-vector -366.0 750.0 687.0) (float-vector -363.856 742.0 687.0) (float-vector -358.0 736.144 687.0) (float-vector -350.0 734.0 687.0) (float-vector -342.0 736.144 687.0)))
         (instance face :init :vertices (list (float-vector -334.0 750.0 0.0) (float-vector -336.144 742.0 0.0) (float-vector -342.0 736.144 0.0) (float-vector -350.0 734.0 0.0) (float-vector -358.0 736.144 0.0) (float-vector -363.856 742.0 0.0) (float-vector -366.0 750.0 0.0) (float-vector -363.856 758.0 0.0) (float-vector -358.0 763.856 0.0) (float-vector -350.0 766.0 0.0) (float-vector -342.0 763.856 0.0) (float-vector -336.144 758.0 0.0)))
         (instance face :init :vertices (list (float-vector -336.144 742.0 687.0) (float-vector -336.144 742.0 0.0) (float-vector -334.0 750.0 0.0) (float-vector -334.0 750.0 687.0)))
         (instance face :init :vertices (list (float-vector -342.0 736.144 687.0) (float-vector -342.0 736.144 0.0) (float-vector -336.144 742.0 0.0) (float-vector -336.144 742.0 687.0)))
         (instance face :init :vertices (list (float-vector -350.0 734.0 687.0) (float-vector -350.0 734.0 0.0) (float-vector -342.0 736.144 0.0) (float-vector -342.0 736.144 687.0)))
         (instance face :init :vertices (list (float-vector -358.0 736.144 687.0) (float-vector -358.0 736.144 0.0) (float-vector -350.0 734.0 0.0) (float-vector -350.0 734.0 687.0)))
         (instance face :init :vertices (list (float-vector -363.856 742.0 687.0) (float-vector -363.856 742.0 0.0) (float-vector -358.0 736.144 0.0) (float-vector -358.0 736.144 687.0)))
         (instance face :init :vertices (list (float-vector -366.0 750.0 687.0) (float-vector -366.0 750.0 0.0) (float-vector -363.856 742.0 0.0) (float-vector -363.856 742.0 687.0)))
         (instance face :init :vertices (list (float-vector -363.856 758.0 687.0) (float-vector -363.856 758.0 0.0) (float-vector -366.0 750.0 0.0) (float-vector -366.0 750.0 687.0)))
         (instance face :init :vertices (list (float-vector -358.0 763.856 687.0) (float-vector -358.0 763.856 0.0) (float-vector -363.856 758.0 0.0) (float-vector -363.856 758.0 687.0)))
         (instance face :init :vertices (list (float-vector -350.0 766.0 687.0) (float-vector -350.0 766.0 0.0) (float-vector -358.0 763.856 0.0) (float-vector -358.0 763.856 687.0)))
         (instance face :init :vertices (list (float-vector -342.0 763.856 687.0) (float-vector -342.0 763.856 0.0) (float-vector -350.0 766.0 0.0) (float-vector -350.0 766.0 687.0)))
         (instance face :init :vertices (list (float-vector -336.144 758.0 687.0) (float-vector -336.144 758.0 0.0) (float-vector -342.0 763.856 0.0) (float-vector -342.0 763.856 687.0)))
         (instance face :init :vertices (list (float-vector -334.0 750.0 687.0) (float-vector -334.0 750.0 0.0) (float-vector -336.144 758.0 0.0) (float-vector -336.144 758.0 687.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -336.144 -758.0 687.0) (float-vector -334.0 -750.0 687.0) (float-vector -336.144 -742.0 687.0) (float-vector -342.0 -736.144 687.0) (float-vector -350.0 -734.0 687.0) (float-vector -358.0 -736.144 687.0) (float-vector -363.856 -742.0 687.0) (float-vector -366.0 -750.0 687.0) (float-vector -363.856 -758.0 687.0) (float-vector -358.0 -763.856 687.0) (float-vector -350.0 -766.0 687.0) (float-vector -342.0 -763.856 687.0)))
         (instance face :init :vertices (list (float-vector -334.0 -750.0 0.0) (float-vector -336.144 -758.0 0.0) (float-vector -342.0 -763.856 0.0) (float-vector -350.0 -766.0 0.0) (float-vector -358.0 -763.856 0.0) (float-vector -363.856 -758.0 0.0) (float-vector -366.0 -750.0 0.0) (float-vector -363.856 -742.0 0.0) (float-vector -358.0 -736.144 0.0) (float-vector -350.0 -734.0 0.0) (float-vector -342.0 -736.144 0.0) (float-vector -336.144 -742.0 0.0)))
         (instance face :init :vertices (list (float-vector -336.144 -758.0 687.0) (float-vector -336.144 -758.0 0.0) (float-vector -334.0 -750.0 0.0) (float-vector -334.0 -750.0 687.0)))
         (instance face :init :vertices (list (float-vector -342.0 -763.856 687.0) (float-vector -342.0 -763.856 0.0) (float-vector -336.144 -758.0 0.0) (float-vector -336.144 -758.0 687.0)))
         (instance face :init :vertices (list (float-vector -350.0 -766.0 687.0) (float-vector -350.0 -766.0 0.0) (float-vector -342.0 -763.856 0.0) (float-vector -342.0 -763.856 687.0)))
         (instance face :init :vertices (list (float-vector -358.0 -763.856 687.0) (float-vector -358.0 -763.856 0.0) (float-vector -350.0 -766.0 0.0) (float-vector -350.0 -766.0 687.0)))
         (instance face :init :vertices (list (float-vector -363.856 -758.0 687.0) (float-vector -363.856 -758.0 0.0) (float-vector -358.0 -763.856 0.0) (float-vector -358.0 -763.856 687.0)))
         (instance face :init :vertices (list (float-vector -366.0 -750.0 687.0) (float-vector -366.0 -750.0 0.0) (float-vector -363.856 -758.0 0.0) (float-vector -363.856 -758.0 687.0)))
         (instance face :init :vertices (list (float-vector -363.856 -742.0 687.0) (float-vector -363.856 -742.0 0.0) (float-vector -366.0 -750.0 0.0) (float-vector -366.0 -750.0 687.0)))
         (instance face :init :vertices (list (float-vector -358.0 -736.144 687.0) (float-vector -358.0 -736.144 0.0) (float-vector -363.856 -742.0 0.0) (float-vector -363.856 -742.0 687.0)))
         (instance face :init :vertices (list (float-vector -350.0 -734.0 687.0) (float-vector -350.0 -734.0 0.0) (float-vector -358.0 -736.144 0.0) (float-vector -358.0 -736.144 687.0)))
         (instance face :init :vertices (list (float-vector -342.0 -736.144 687.0) (float-vector -342.0 -736.144 0.0) (float-vector -350.0 -734.0 0.0) (float-vector -350.0 -734.0 687.0)))
         (instance face :init :vertices (list (float-vector -336.144 -742.0 687.0) (float-vector -336.144 -742.0 0.0) (float-vector -342.0 -736.144 0.0) (float-vector -342.0 -736.144 687.0)))
         (instance face :init :vertices (list (float-vector -334.0 -750.0 687.0) (float-vector -334.0 -750.0 0.0) (float-vector -336.144 -742.0 0.0) (float-vector -336.144 -742.0 687.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :burlywood)
     (send (elt bc 1) :set-color :gray70)
     (send (elt bc 2) :set-color :gray70)
     (send (elt bc 3) :set-color :gray70)
     (send (elt bc 4) :set-color :gray70)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73a3-askul-1600-desk-2-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73a3-askul-1600-desk-2 (&rest args) (instance* room73a3-askul-1600-desk-2-object :init args))
;; (format *error-output* "(instance room73a3-askul-1600-desk-2-object :init) for generating model~%")
