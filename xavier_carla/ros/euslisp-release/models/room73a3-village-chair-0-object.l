;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73a3-village-chair-0-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1
         ))
(defmethod room73a3-village-chair-0-object
  (:init
   (&rest args &key (name "room73a3-village-chair-0") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room73a3-village-chair-0-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 -15.0 190.0) (float-vector 30.0 0.0 190.0) (float-vector 25.9808 15.0 190.0) (float-vector 15.0 25.9808 190.0) (float-vector 0.0 30.0 190.0) (float-vector -15.0 25.9808 190.0) (float-vector -25.9808 15.0 190.0) (float-vector -30.0 0.0 190.0) (float-vector -25.9808 -15.0 190.0) (float-vector -15.0 -25.9808 190.0) (float-vector 0.0 -30.0 190.0) (float-vector 15.0 -25.9808 190.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 90.0) (float-vector 25.9808 -15.0 90.0) (float-vector 15.0 -25.9808 90.0) (float-vector 0.0 -30.0 90.0) (float-vector -15.0 -25.9808 90.0) (float-vector -25.9808 -15.0 90.0) (float-vector -30.0 0.0 90.0) (float-vector -25.9808 15.0 90.0) (float-vector -15.0 25.9808 90.0) (float-vector 0.0 30.0 90.0) (float-vector 15.0 25.9808 90.0) (float-vector 25.9808 15.0 90.0)))
         (instance face :init :vertices (list (float-vector 25.9808 -15.0 190.0) (float-vector 25.9808 -15.0 90.0) (float-vector 30.0 0.0 90.0) (float-vector 30.0 0.0 190.0)))
         (instance face :init :vertices (list (float-vector 15.0 -25.9808 190.0) (float-vector 15.0 -25.9808 90.0) (float-vector 25.9808 -15.0 90.0) (float-vector 25.9808 -15.0 190.0)))
         (instance face :init :vertices (list (float-vector 0.0 -30.0 190.0) (float-vector 0.0 -30.0 90.0) (float-vector 15.0 -25.9808 90.0) (float-vector 15.0 -25.9808 190.0)))
         (instance face :init :vertices (list (float-vector -15.0 -25.9808 190.0) (float-vector -15.0 -25.9808 90.0) (float-vector 0.0 -30.0 90.0) (float-vector 0.0 -30.0 190.0)))
         (instance face :init :vertices (list (float-vector -25.9808 -15.0 190.0) (float-vector -25.9808 -15.0 90.0) (float-vector -15.0 -25.9808 90.0) (float-vector -15.0 -25.9808 190.0)))
         (instance face :init :vertices (list (float-vector -30.0 0.0 190.0) (float-vector -30.0 0.0 90.0) (float-vector -25.9808 -15.0 90.0) (float-vector -25.9808 -15.0 190.0)))
         (instance face :init :vertices (list (float-vector -25.9808 15.0 190.0) (float-vector -25.9808 15.0 90.0) (float-vector -30.0 0.0 90.0) (float-vector -30.0 0.0 190.0)))
         (instance face :init :vertices (list (float-vector -15.0 25.9808 190.0) (float-vector -15.0 25.9808 90.0) (float-vector -25.9808 15.0 90.0) (float-vector -25.9808 15.0 190.0)))
         (instance face :init :vertices (list (float-vector 0.0 30.0 190.0) (float-vector 0.0 30.0 90.0) (float-vector -15.0 25.9808 90.0) (float-vector -15.0 25.9808 190.0)))
         (instance face :init :vertices (list (float-vector 15.0 25.9808 190.0) (float-vector 15.0 25.9808 90.0) (float-vector 0.0 30.0 90.0) (float-vector 0.0 30.0 190.0)))
         (instance face :init :vertices (list (float-vector 25.9808 15.0 190.0) (float-vector 25.9808 15.0 90.0) (float-vector 15.0 25.9808 90.0) (float-vector 15.0 25.9808 190.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 190.0) (float-vector 30.0 0.0 90.0) (float-vector 25.9808 15.0 90.0) (float-vector 25.9808 15.0 190.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 21.6506 -12.5 290.0) (float-vector 25.0 0.0 290.0) (float-vector 21.6506 12.5 290.0) (float-vector 12.5 21.6506 290.0) (float-vector 0.0 25.0 290.0) (float-vector -12.5 21.6506 290.0) (float-vector -21.6506 12.5 290.0) (float-vector -25.0 0.0 290.0) (float-vector -21.6506 -12.5 290.0) (float-vector -12.5 -21.6506 290.0) (float-vector 0.0 -25.0 290.0) (float-vector 12.5 -21.6506 290.0)))
         (instance face :init :vertices (list (float-vector 25.0 0.0 90.0) (float-vector 21.6506 -12.5 90.0) (float-vector 12.5 -21.6506 90.0) (float-vector 0.0 -25.0 90.0) (float-vector -12.5 -21.6506 90.0) (float-vector -21.6506 -12.5 90.0) (float-vector -25.0 0.0 90.0) (float-vector -21.6506 12.5 90.0) (float-vector -12.5 21.6506 90.0) (float-vector 0.0 25.0 90.0) (float-vector 12.5 21.6506 90.0) (float-vector 21.6506 12.5 90.0)))
         (instance face :init :vertices (list (float-vector 21.6506 -12.5 290.0) (float-vector 21.6506 -12.5 90.0) (float-vector 25.0 0.0 90.0) (float-vector 25.0 0.0 290.0)))
         (instance face :init :vertices (list (float-vector 12.5 -21.6506 290.0) (float-vector 12.5 -21.6506 90.0) (float-vector 21.6506 -12.5 90.0) (float-vector 21.6506 -12.5 290.0)))
         (instance face :init :vertices (list (float-vector 0.0 -25.0 290.0) (float-vector 0.0 -25.0 90.0) (float-vector 12.5 -21.6506 90.0) (float-vector 12.5 -21.6506 290.0)))
         (instance face :init :vertices (list (float-vector -12.5 -21.6506 290.0) (float-vector -12.5 -21.6506 90.0) (float-vector 0.0 -25.0 90.0) (float-vector 0.0 -25.0 290.0)))
         (instance face :init :vertices (list (float-vector -21.6506 -12.5 290.0) (float-vector -21.6506 -12.5 90.0) (float-vector -12.5 -21.6506 90.0) (float-vector -12.5 -21.6506 290.0)))
         (instance face :init :vertices (list (float-vector -25.0 0.0 290.0) (float-vector -25.0 0.0 90.0) (float-vector -21.6506 -12.5 90.0) (float-vector -21.6506 -12.5 290.0)))
         (instance face :init :vertices (list (float-vector -21.6506 12.5 290.0) (float-vector -21.6506 12.5 90.0) (float-vector -25.0 0.0 90.0) (float-vector -25.0 0.0 290.0)))
         (instance face :init :vertices (list (float-vector -12.5 21.6506 290.0) (float-vector -12.5 21.6506 90.0) (float-vector -21.6506 12.5 90.0) (float-vector -21.6506 12.5 290.0)))
         (instance face :init :vertices (list (float-vector 0.0 25.0 290.0) (float-vector 0.0 25.0 90.0) (float-vector -12.5 21.6506 90.0) (float-vector -12.5 21.6506 290.0)))
         (instance face :init :vertices (list (float-vector 12.5 21.6506 290.0) (float-vector 12.5 21.6506 90.0) (float-vector 0.0 25.0 90.0) (float-vector 0.0 25.0 290.0)))
         (instance face :init :vertices (list (float-vector 21.6506 12.5 290.0) (float-vector 21.6506 12.5 90.0) (float-vector 12.5 21.6506 90.0) (float-vector 12.5 21.6506 290.0)))
         (instance face :init :vertices (list (float-vector 25.0 0.0 290.0) (float-vector 25.0 0.0 90.0) (float-vector 21.6506 12.5 90.0) (float-vector 21.6506 12.5 290.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 116.482 -277.592 90.0) (float-vector 23.7764 7.72542 90.0) (float-vector -23.7764 -7.72542 90.0) (float-vector 68.9287 -293.042 90.0)))
         (instance face :init :vertices (list (float-vector 23.7764 7.72542 50.0) (float-vector 116.482 -277.592 50.0) (float-vector 68.9287 -293.042 50.0) (float-vector -23.7764 -7.72542 50.0)))
         (instance face :init :vertices (list (float-vector 116.482 -277.592 90.0) (float-vector 116.482 -277.592 50.0) (float-vector 23.7764 7.72542 50.0) (float-vector 23.7764 7.72542 90.0)))
         (instance face :init :vertices (list (float-vector 68.9287 -293.042 90.0) (float-vector 68.9287 -293.042 50.0) (float-vector 116.482 -277.592 50.0) (float-vector 116.482 -277.592 90.0)))
         (instance face :init :vertices (list (float-vector -23.7764 -7.72542 90.0) (float-vector -23.7764 -7.72542 50.0) (float-vector 68.9287 -293.042 50.0) (float-vector 68.9287 -293.042 90.0)))
         (instance face :init :vertices (list (float-vector 23.7764 7.72542 90.0) (float-vector 23.7764 7.72542 50.0) (float-vector -23.7764 -7.72542 50.0) (float-vector -23.7764 -7.72542 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 67.8937 -289.857 12.5) (float-vector 68.9287 -293.042 25.0) (float-vector 67.8937 -289.857 37.5) (float-vector 65.066 -281.154 46.6506) (float-vector 61.2033 -269.266 50.0) (float-vector 57.3405 -257.378 46.6506) (float-vector 54.5128 -248.675 37.5) (float-vector 53.4778 -245.49 25.0) (float-vector 54.5128 -248.675 12.5) (float-vector 57.3405 -257.378 3.34936) (float-vector 61.2033 -269.266 -1.065814e-14) (float-vector 65.066 -281.154 3.34936)))
         (instance face :init :vertices (list (float-vector 116.482 -277.592 25.0) (float-vector 115.447 -274.406 12.5) (float-vector 112.619 -265.703 3.34936) (float-vector 108.756 -253.815 -7.105427e-15) (float-vector 104.893 -241.927 3.34936) (float-vector 102.066 -233.224 12.5) (float-vector 101.031 -230.039 25.0) (float-vector 102.066 -233.224 37.5) (float-vector 104.893 -241.927 46.6506) (float-vector 108.756 -253.815 50.0) (float-vector 112.619 -265.703 46.6506) (float-vector 115.447 -274.406 37.5)))
         (instance face :init :vertices (list (float-vector 67.8937 -289.857 12.5) (float-vector 115.447 -274.406 12.5) (float-vector 116.482 -277.592 25.0) (float-vector 68.9287 -293.042 25.0)))
         (instance face :init :vertices (list (float-vector 65.066 -281.154 3.34936) (float-vector 112.619 -265.703 3.34936) (float-vector 115.447 -274.406 12.5) (float-vector 67.8937 -289.857 12.5)))
         (instance face :init :vertices (list (float-vector 61.2033 -269.266 -1.065814e-14) (float-vector 108.756 -253.815 -7.105427e-15) (float-vector 112.619 -265.703 3.34936) (float-vector 65.066 -281.154 3.34936)))
         (instance face :init :vertices (list (float-vector 57.3405 -257.378 3.34936) (float-vector 104.893 -241.927 3.34936) (float-vector 108.756 -253.815 -7.105427e-15) (float-vector 61.2033 -269.266 -1.065814e-14)))
         (instance face :init :vertices (list (float-vector 54.5128 -248.675 12.5) (float-vector 102.066 -233.224 12.5) (float-vector 104.893 -241.927 3.34936) (float-vector 57.3405 -257.378 3.34936)))
         (instance face :init :vertices (list (float-vector 53.4778 -245.49 25.0) (float-vector 101.031 -230.039 25.0) (float-vector 102.066 -233.224 12.5) (float-vector 54.5128 -248.675 12.5)))
         (instance face :init :vertices (list (float-vector 54.5128 -248.675 37.5) (float-vector 102.066 -233.224 37.5) (float-vector 101.031 -230.039 25.0) (float-vector 53.4778 -245.49 25.0)))
         (instance face :init :vertices (list (float-vector 57.3405 -257.378 46.6506) (float-vector 104.893 -241.927 46.6506) (float-vector 102.066 -233.224 37.5) (float-vector 54.5128 -248.675 37.5)))
         (instance face :init :vertices (list (float-vector 61.2033 -269.266 50.0) (float-vector 108.756 -253.815 50.0) (float-vector 104.893 -241.927 46.6506) (float-vector 57.3405 -257.378 46.6506)))
         (instance face :init :vertices (list (float-vector 65.066 -281.154 46.6506) (float-vector 112.619 -265.703 46.6506) (float-vector 108.756 -253.815 50.0) (float-vector 61.2033 -269.266 50.0)))
         (instance face :init :vertices (list (float-vector 67.8937 -289.857 37.5) (float-vector 115.447 -274.406 37.5) (float-vector 112.619 -265.703 46.6506) (float-vector 65.066 -281.154 46.6506)))
         (instance face :init :vertices (list (float-vector 68.9287 -293.042 25.0) (float-vector 116.482 -277.592 25.0) (float-vector 115.447 -274.406 37.5) (float-vector 67.8937 -289.857 37.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -228.01 -196.561 90.0) (float-vector 14.6946 -20.2254 90.0) (float-vector -14.6946 20.2254 90.0) (float-vector -257.4 -156.11 90.0)))
         (instance face :init :vertices (list (float-vector 14.6946 -20.2254 50.0) (float-vector -228.01 -196.561 50.0) (float-vector -257.4 -156.11 50.0) (float-vector -14.6946 20.2254 50.0)))
         (instance face :init :vertices (list (float-vector -228.01 -196.561 90.0) (float-vector -228.01 -196.561 50.0) (float-vector 14.6946 -20.2254 50.0) (float-vector 14.6946 -20.2254 90.0)))
         (instance face :init :vertices (list (float-vector -257.4 -156.11 90.0) (float-vector -257.4 -156.11 50.0) (float-vector -228.01 -196.561 50.0) (float-vector -228.01 -196.561 90.0)))
         (instance face :init :vertices (list (float-vector -14.6946 20.2254 90.0) (float-vector -14.6946 20.2254 50.0) (float-vector -257.4 -156.11 50.0) (float-vector -257.4 -156.11 90.0)))
         (instance face :init :vertices (list (float-vector 14.6946 -20.2254 90.0) (float-vector 14.6946 -20.2254 50.0) (float-vector -14.6946 20.2254 50.0) (float-vector -14.6946 20.2254 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -254.69 -154.141 12.5) (float-vector -257.4 -156.11 25.0) (float-vector -254.69 -154.141 37.5) (float-vector -247.287 -148.763 46.6506) (float-vector -237.174 -141.416 50.0) (float-vector -227.062 -134.068 46.6506) (float-vector -219.659 -128.69 37.5) (float-vector -216.949 -126.721 25.0) (float-vector -219.659 -128.69 12.5) (float-vector -227.062 -134.068 3.34936) (float-vector -237.174 -141.416 -7.105427e-15) (float-vector -247.287 -148.763 3.34936)))
         (instance face :init :vertices (list (float-vector -228.01 -196.561 25.0) (float-vector -225.301 -194.592 12.5) (float-vector -217.898 -189.214 3.34936) (float-vector -207.785 -181.866 -7.105427e-15) (float-vector -197.672 -174.519 3.34936) (float-vector -190.269 -169.14 12.5) (float-vector -187.56 -167.172 25.0) (float-vector -190.269 -169.14 37.5) (float-vector -197.672 -174.519 46.6506) (float-vector -207.785 -181.866 50.0) (float-vector -217.898 -189.214 46.6506) (float-vector -225.301 -194.592 37.5)))
         (instance face :init :vertices (list (float-vector -254.69 -154.141 12.5) (float-vector -225.301 -194.592 12.5) (float-vector -228.01 -196.561 25.0) (float-vector -257.4 -156.11 25.0)))
         (instance face :init :vertices (list (float-vector -247.287 -148.763 3.34936) (float-vector -217.898 -189.214 3.34936) (float-vector -225.301 -194.592 12.5) (float-vector -254.69 -154.141 12.5)))
         (instance face :init :vertices (list (float-vector -237.174 -141.416 -7.105427e-15) (float-vector -207.785 -181.866 -7.105427e-15) (float-vector -217.898 -189.214 3.34936) (float-vector -247.287 -148.763 3.34936)))
         (instance face :init :vertices (list (float-vector -227.062 -134.068 3.34936) (float-vector -197.672 -174.519 3.34936) (float-vector -207.785 -181.866 -7.105427e-15) (float-vector -237.174 -141.416 -7.105427e-15)))
         (instance face :init :vertices (list (float-vector -219.659 -128.69 12.5) (float-vector -190.269 -169.14 12.5) (float-vector -197.672 -174.519 3.34936) (float-vector -227.062 -134.068 3.34936)))
         (instance face :init :vertices (list (float-vector -216.949 -126.721 25.0) (float-vector -187.56 -167.172 25.0) (float-vector -190.269 -169.14 12.5) (float-vector -219.659 -128.69 12.5)))
         (instance face :init :vertices (list (float-vector -219.659 -128.69 37.5) (float-vector -190.269 -169.14 37.5) (float-vector -187.56 -167.172 25.0) (float-vector -216.949 -126.721 25.0)))
         (instance face :init :vertices (list (float-vector -227.062 -134.068 46.6506) (float-vector -197.672 -174.519 46.6506) (float-vector -190.269 -169.14 37.5) (float-vector -219.659 -128.69 37.5)))
         (instance face :init :vertices (list (float-vector -237.174 -141.416 50.0) (float-vector -207.785 -181.866 50.0) (float-vector -197.672 -174.519 46.6506) (float-vector -227.062 -134.068 46.6506)))
         (instance face :init :vertices (list (float-vector -247.287 -148.763 46.6506) (float-vector -217.898 -189.214 46.6506) (float-vector -207.785 -181.866 50.0) (float-vector -237.174 -141.416 50.0)))
         (instance face :init :vertices (list (float-vector -254.69 -154.141 37.5) (float-vector -225.301 -194.592 37.5) (float-vector -217.898 -189.214 46.6506) (float-vector -247.287 -148.763 46.6506)))
         (instance face :init :vertices (list (float-vector -257.4 -156.11 25.0) (float-vector -228.01 -196.561 25.0) (float-vector -225.301 -194.592 37.5) (float-vector -254.69 -154.141 37.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -257.4 156.11 90.0) (float-vector -14.6946 -20.2254 90.0) (float-vector 14.6946 20.2254 90.0) (float-vector -228.01 196.561 90.0)))
         (instance face :init :vertices (list (float-vector -14.6946 -20.2254 50.0) (float-vector -257.4 156.11 50.0) (float-vector -228.01 196.561 50.0) (float-vector 14.6946 20.2254 50.0)))
         (instance face :init :vertices (list (float-vector -257.4 156.11 90.0) (float-vector -257.4 156.11 50.0) (float-vector -14.6946 -20.2254 50.0) (float-vector -14.6946 -20.2254 90.0)))
         (instance face :init :vertices (list (float-vector -228.01 196.561 90.0) (float-vector -228.01 196.561 50.0) (float-vector -257.4 156.11 50.0) (float-vector -257.4 156.11 90.0)))
         (instance face :init :vertices (list (float-vector 14.6946 20.2254 90.0) (float-vector 14.6946 20.2254 50.0) (float-vector -228.01 196.561 50.0) (float-vector -228.01 196.561 90.0)))
         (instance face :init :vertices (list (float-vector -14.6946 -20.2254 90.0) (float-vector -14.6946 -20.2254 50.0) (float-vector 14.6946 20.2254 50.0) (float-vector 14.6946 20.2254 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -225.301 194.592 12.5) (float-vector -228.01 196.561 25.0) (float-vector -225.301 194.592 37.5) (float-vector -217.898 189.214 46.6506) (float-vector -207.785 181.866 50.0) (float-vector -197.672 174.519 46.6506) (float-vector -190.269 169.14 37.5) (float-vector -187.56 167.172 25.0) (float-vector -190.269 169.14 12.5) (float-vector -197.672 174.519 3.34936) (float-vector -207.785 181.866 -3.552714e-15) (float-vector -217.898 189.214 3.34936)))
         (instance face :init :vertices (list (float-vector -257.4 156.11 25.0) (float-vector -254.69 154.141 12.5) (float-vector -247.287 148.763 3.34936) (float-vector -237.174 141.416 3.552714e-15) (float-vector -227.062 134.068 3.34936) (float-vector -219.659 128.69 12.5) (float-vector -216.949 126.721 25.0) (float-vector -219.659 128.69 37.5) (float-vector -227.062 134.068 46.6506) (float-vector -237.174 141.416 50.0) (float-vector -247.287 148.763 46.6506) (float-vector -254.69 154.141 37.5)))
         (instance face :init :vertices (list (float-vector -225.301 194.592 12.5) (float-vector -254.69 154.141 12.5) (float-vector -257.4 156.11 25.0) (float-vector -228.01 196.561 25.0)))
         (instance face :init :vertices (list (float-vector -217.898 189.214 3.34936) (float-vector -247.287 148.763 3.34936) (float-vector -254.69 154.141 12.5) (float-vector -225.301 194.592 12.5)))
         (instance face :init :vertices (list (float-vector -207.785 181.866 -3.552714e-15) (float-vector -237.174 141.416 3.552714e-15) (float-vector -247.287 148.763 3.34936) (float-vector -217.898 189.214 3.34936)))
         (instance face :init :vertices (list (float-vector -197.672 174.519 3.34936) (float-vector -227.062 134.068 3.34936) (float-vector -237.174 141.416 3.552714e-15) (float-vector -207.785 181.866 -3.552714e-15)))
         (instance face :init :vertices (list (float-vector -190.269 169.14 12.5) (float-vector -219.659 128.69 12.5) (float-vector -227.062 134.068 3.34936) (float-vector -197.672 174.519 3.34936)))
         (instance face :init :vertices (list (float-vector -187.56 167.172 25.0) (float-vector -216.949 126.721 25.0) (float-vector -219.659 128.69 12.5) (float-vector -190.269 169.14 12.5)))
         (instance face :init :vertices (list (float-vector -190.269 169.14 37.5) (float-vector -219.659 128.69 37.5) (float-vector -216.949 126.721 25.0) (float-vector -187.56 167.172 25.0)))
         (instance face :init :vertices (list (float-vector -197.672 174.519 46.6506) (float-vector -227.062 134.068 46.6506) (float-vector -219.659 128.69 37.5) (float-vector -190.269 169.14 37.5)))
         (instance face :init :vertices (list (float-vector -207.785 181.866 50.0) (float-vector -237.174 141.416 50.0) (float-vector -227.062 134.068 46.6506) (float-vector -197.672 174.519 46.6506)))
         (instance face :init :vertices (list (float-vector -217.898 189.214 46.6506) (float-vector -247.287 148.763 46.6506) (float-vector -237.174 141.416 50.0) (float-vector -207.785 181.866 50.0)))
         (instance face :init :vertices (list (float-vector -225.301 194.592 37.5) (float-vector -254.69 154.141 37.5) (float-vector -247.287 148.763 46.6506) (float-vector -217.898 189.214 46.6506)))
         (instance face :init :vertices (list (float-vector -228.01 196.561 25.0) (float-vector -257.4 156.11 25.0) (float-vector -254.69 154.141 37.5) (float-vector -225.301 194.592 37.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 68.9287 293.042 90.0) (float-vector -23.7764 7.72542 90.0) (float-vector 23.7764 -7.72542 90.0) (float-vector 116.482 277.592 90.0)))
         (instance face :init :vertices (list (float-vector -23.7764 7.72542 50.0) (float-vector 68.9287 293.042 50.0) (float-vector 116.482 277.592 50.0) (float-vector 23.7764 -7.72542 50.0)))
         (instance face :init :vertices (list (float-vector 68.9287 293.042 90.0) (float-vector 68.9287 293.042 50.0) (float-vector -23.7764 7.72542 50.0) (float-vector -23.7764 7.72542 90.0)))
         (instance face :init :vertices (list (float-vector 116.482 277.592 90.0) (float-vector 116.482 277.592 50.0) (float-vector 68.9287 293.042 50.0) (float-vector 68.9287 293.042 90.0)))
         (instance face :init :vertices (list (float-vector 23.7764 -7.72542 90.0) (float-vector 23.7764 -7.72542 50.0) (float-vector 116.482 277.592 50.0) (float-vector 116.482 277.592 90.0)))
         (instance face :init :vertices (list (float-vector -23.7764 7.72542 90.0) (float-vector -23.7764 7.72542 50.0) (float-vector 23.7764 -7.72542 50.0) (float-vector 23.7764 -7.72542 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 115.447 274.406 12.5) (float-vector 116.482 277.592 25.0) (float-vector 115.447 274.406 37.5) (float-vector 112.619 265.703 46.6506) (float-vector 108.756 253.815 50.0) (float-vector 104.893 241.927 46.6506) (float-vector 102.066 233.224 37.5) (float-vector 101.031 230.039 25.0) (float-vector 102.066 233.224 12.5) (float-vector 104.893 241.927 3.34936) (float-vector 108.756 253.815 0.0) (float-vector 112.619 265.703 3.34936)))
         (instance face :init :vertices (list (float-vector 68.9287 293.042 25.0) (float-vector 67.8937 289.857 12.5) (float-vector 65.066 281.154 3.34936) (float-vector 61.2033 269.266 0.0) (float-vector 57.3405 257.378 3.34936) (float-vector 54.5128 248.675 12.5) (float-vector 53.4778 245.49 25.0) (float-vector 54.5128 248.675 37.5) (float-vector 57.3405 257.378 46.6506) (float-vector 61.2033 269.266 50.0) (float-vector 65.066 281.154 46.6506) (float-vector 67.8937 289.857 37.5)))
         (instance face :init :vertices (list (float-vector 115.447 274.406 12.5) (float-vector 67.8937 289.857 12.5) (float-vector 68.9287 293.042 25.0) (float-vector 116.482 277.592 25.0)))
         (instance face :init :vertices (list (float-vector 112.619 265.703 3.34936) (float-vector 65.066 281.154 3.34936) (float-vector 67.8937 289.857 12.5) (float-vector 115.447 274.406 12.5)))
         (instance face :init :vertices (list (float-vector 108.756 253.815 0.0) (float-vector 61.2033 269.266 0.0) (float-vector 65.066 281.154 3.34936) (float-vector 112.619 265.703 3.34936)))
         (instance face :init :vertices (list (float-vector 104.893 241.927 3.34936) (float-vector 57.3405 257.378 3.34936) (float-vector 61.2033 269.266 0.0) (float-vector 108.756 253.815 0.0)))
         (instance face :init :vertices (list (float-vector 102.066 233.224 12.5) (float-vector 54.5128 248.675 12.5) (float-vector 57.3405 257.378 3.34936) (float-vector 104.893 241.927 3.34936)))
         (instance face :init :vertices (list (float-vector 101.031 230.039 25.0) (float-vector 53.4778 245.49 25.0) (float-vector 54.5128 248.675 12.5) (float-vector 102.066 233.224 12.5)))
         (instance face :init :vertices (list (float-vector 102.066 233.224 37.5) (float-vector 54.5128 248.675 37.5) (float-vector 53.4778 245.49 25.0) (float-vector 101.031 230.039 25.0)))
         (instance face :init :vertices (list (float-vector 104.893 241.927 46.6506) (float-vector 57.3405 257.378 46.6506) (float-vector 54.5128 248.675 37.5) (float-vector 102.066 233.224 37.5)))
         (instance face :init :vertices (list (float-vector 108.756 253.815 50.0) (float-vector 61.2033 269.266 50.0) (float-vector 57.3405 257.378 46.6506) (float-vector 104.893 241.927 46.6506)))
         (instance face :init :vertices (list (float-vector 112.619 265.703 46.6506) (float-vector 65.066 281.154 46.6506) (float-vector 61.2033 269.266 50.0) (float-vector 108.756 253.815 50.0)))
         (instance face :init :vertices (list (float-vector 115.447 274.406 37.5) (float-vector 67.8937 289.857 37.5) (float-vector 65.066 281.154 46.6506) (float-vector 112.619 265.703 46.6506)))
         (instance face :init :vertices (list (float-vector 116.482 277.592 25.0) (float-vector 68.9287 293.042 25.0) (float-vector 67.8937 289.857 37.5) (float-vector 115.447 274.406 37.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 300.0 25.0 90.0) (float-vector 0.0 25.0 90.0) (float-vector 0.0 -25.0 90.0) (float-vector 300.0 -25.0 90.0)))
         (instance face :init :vertices (list (float-vector 0.0 25.0 50.0) (float-vector 300.0 25.0 50.0) (float-vector 300.0 -25.0 50.0) (float-vector 0.0 -25.0 50.0)))
         (instance face :init :vertices (list (float-vector 300.0 25.0 90.0) (float-vector 300.0 25.0 50.0) (float-vector 0.0 25.0 50.0) (float-vector 0.0 25.0 90.0)))
         (instance face :init :vertices (list (float-vector 300.0 -25.0 90.0) (float-vector 300.0 -25.0 50.0) (float-vector 300.0 25.0 50.0) (float-vector 300.0 25.0 90.0)))
         (instance face :init :vertices (list (float-vector 0.0 -25.0 90.0) (float-vector 0.0 -25.0 50.0) (float-vector 300.0 -25.0 50.0) (float-vector 300.0 -25.0 90.0)))
         (instance face :init :vertices (list (float-vector 0.0 25.0 90.0) (float-vector 0.0 25.0 50.0) (float-vector 0.0 -25.0 50.0) (float-vector 0.0 -25.0 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 296.651 -25.0 12.5) (float-vector 300.0 -25.0 25.0) (float-vector 296.651 -25.0 37.5) (float-vector 287.5 -25.0 46.6506) (float-vector 275.0 -25.0 50.0) (float-vector 262.5 -25.0 46.6506) (float-vector 253.349 -25.0 37.5) (float-vector 250.0 -25.0 25.0) (float-vector 253.349 -25.0 12.5) (float-vector 262.5 -25.0 3.34936) (float-vector 275.0 -25.0 1.065814e-14) (float-vector 287.5 -25.0 3.34936)))
         (instance face :init :vertices (list (float-vector 300.0 25.0 25.0) (float-vector 296.651 25.0 12.5) (float-vector 287.5 25.0 3.34936) (float-vector 275.0 25.0 0.0) (float-vector 262.5 25.0 3.34936) (float-vector 253.349 25.0 12.5) (float-vector 250.0 25.0 25.0) (float-vector 253.349 25.0 37.5) (float-vector 262.5 25.0 46.6506) (float-vector 275.0 25.0 50.0) (float-vector 287.5 25.0 46.6506) (float-vector 296.651 25.0 37.5)))
         (instance face :init :vertices (list (float-vector 296.651 -25.0 12.5) (float-vector 296.651 25.0 12.5) (float-vector 300.0 25.0 25.0) (float-vector 300.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector 287.5 -25.0 3.34936) (float-vector 287.5 25.0 3.34936) (float-vector 296.651 25.0 12.5) (float-vector 296.651 -25.0 12.5)))
         (instance face :init :vertices (list (float-vector 275.0 -25.0 1.065814e-14) (float-vector 275.0 25.0 0.0) (float-vector 287.5 25.0 3.34936) (float-vector 287.5 -25.0 3.34936)))
         (instance face :init :vertices (list (float-vector 262.5 -25.0 3.34936) (float-vector 262.5 25.0 3.34936) (float-vector 275.0 25.0 0.0) (float-vector 275.0 -25.0 1.065814e-14)))
         (instance face :init :vertices (list (float-vector 253.349 -25.0 12.5) (float-vector 253.349 25.0 12.5) (float-vector 262.5 25.0 3.34936) (float-vector 262.5 -25.0 3.34936)))
         (instance face :init :vertices (list (float-vector 250.0 -25.0 25.0) (float-vector 250.0 25.0 25.0) (float-vector 253.349 25.0 12.5) (float-vector 253.349 -25.0 12.5)))
         (instance face :init :vertices (list (float-vector 253.349 -25.0 37.5) (float-vector 253.349 25.0 37.5) (float-vector 250.0 25.0 25.0) (float-vector 250.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector 262.5 -25.0 46.6506) (float-vector 262.5 25.0 46.6506) (float-vector 253.349 25.0 37.5) (float-vector 253.349 -25.0 37.5)))
         (instance face :init :vertices (list (float-vector 275.0 -25.0 50.0) (float-vector 275.0 25.0 50.0) (float-vector 262.5 25.0 46.6506) (float-vector 262.5 -25.0 46.6506)))
         (instance face :init :vertices (list (float-vector 287.5 -25.0 46.6506) (float-vector 287.5 25.0 46.6506) (float-vector 275.0 25.0 50.0) (float-vector 275.0 -25.0 50.0)))
         (instance face :init :vertices (list (float-vector 296.651 -25.0 37.5) (float-vector 296.651 25.0 37.5) (float-vector 287.5 25.0 46.6506) (float-vector 287.5 -25.0 46.6506)))
         (instance face :init :vertices (list (float-vector 300.0 -25.0 25.0) (float-vector 300.0 25.0 25.0) (float-vector 296.651 25.0 37.5) (float-vector 296.651 -25.0 37.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -250.0 -150.0 370.0) (float-vector -150.0 -250.0 370.0) (float-vector 150.0 -250.0 370.0) (float-vector 250.0 -150.0 370.0) (float-vector 250.0 100.0 370.0) (float-vector 200.0 200.0 370.0) (float-vector 100.0 250.0 370.0) (float-vector -100.0 250.0 370.0) (float-vector -200.0 200.0 370.0) (float-vector -250.0 100.0 370.0)))
         (instance face :init :vertices (list (float-vector -150.0 -250.0 320.0) (float-vector -250.0 -150.0 320.0) (float-vector -250.0 100.0 320.0) (float-vector -200.0 200.0 320.0) (float-vector -100.0 250.0 320.0) (float-vector 100.0 250.0 320.0) (float-vector 200.0 200.0 320.0) (float-vector 250.0 100.0 320.0) (float-vector 250.0 -150.0 320.0) (float-vector 150.0 -250.0 320.0)))
         (instance face :init :vertices (list (float-vector -250.0 -150.0 370.0) (float-vector -250.0 -150.0 320.0) (float-vector -150.0 -250.0 320.0) (float-vector -150.0 -250.0 370.0)))
         (instance face :init :vertices (list (float-vector -250.0 100.0 370.0) (float-vector -250.0 100.0 320.0) (float-vector -250.0 -150.0 320.0) (float-vector -250.0 -150.0 370.0)))
         (instance face :init :vertices (list (float-vector -200.0 200.0 370.0) (float-vector -200.0 200.0 320.0) (float-vector -250.0 100.0 320.0) (float-vector -250.0 100.0 370.0)))
         (instance face :init :vertices (list (float-vector -100.0 250.0 370.0) (float-vector -100.0 250.0 320.0) (float-vector -200.0 200.0 320.0) (float-vector -200.0 200.0 370.0)))
         (instance face :init :vertices (list (float-vector 100.0 250.0 370.0) (float-vector 100.0 250.0 320.0) (float-vector -100.0 250.0 320.0) (float-vector -100.0 250.0 370.0)))
         (instance face :init :vertices (list (float-vector 200.0 200.0 370.0) (float-vector 200.0 200.0 320.0) (float-vector 100.0 250.0 320.0) (float-vector 100.0 250.0 370.0)))
         (instance face :init :vertices (list (float-vector 250.0 100.0 370.0) (float-vector 250.0 100.0 320.0) (float-vector 200.0 200.0 320.0) (float-vector 200.0 200.0 370.0)))
         (instance face :init :vertices (list (float-vector 250.0 -150.0 370.0) (float-vector 250.0 -150.0 320.0) (float-vector 250.0 100.0 320.0) (float-vector 250.0 100.0 370.0)))
         (instance face :init :vertices (list (float-vector 150.0 -250.0 370.0) (float-vector 150.0 -250.0 320.0) (float-vector 250.0 -150.0 320.0) (float-vector 250.0 -150.0 370.0)))
         (instance face :init :vertices (list (float-vector -150.0 -250.0 370.0) (float-vector -150.0 -250.0 320.0) (float-vector 150.0 -250.0 320.0) (float-vector 150.0 -250.0 370.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -250.0 -150.0 320.0) (float-vector -150.0 -250.0 320.0) (float-vector 150.0 -250.0 320.0) (float-vector 250.0 -150.0 320.0) (float-vector 250.0 100.0 320.0) (float-vector 200.0 200.0 320.0) (float-vector 100.0 250.0 320.0) (float-vector -100.0 250.0 320.0) (float-vector -200.0 200.0 320.0) (float-vector -250.0 100.0 320.0)))
         (instance face :init :vertices (list (float-vector -150.0 -250.0 290.0) (float-vector -250.0 -150.0 290.0) (float-vector -250.0 100.0 290.0) (float-vector -200.0 200.0 290.0) (float-vector -100.0 250.0 290.0) (float-vector 100.0 250.0 290.0) (float-vector 200.0 200.0 290.0) (float-vector 250.0 100.0 290.0) (float-vector 250.0 -150.0 290.0) (float-vector 150.0 -250.0 290.0)))
         (instance face :init :vertices (list (float-vector -250.0 -150.0 320.0) (float-vector -250.0 -150.0 290.0) (float-vector -150.0 -250.0 290.0) (float-vector -150.0 -250.0 320.0)))
         (instance face :init :vertices (list (float-vector -250.0 100.0 320.0) (float-vector -250.0 100.0 290.0) (float-vector -250.0 -150.0 290.0) (float-vector -250.0 -150.0 320.0)))
         (instance face :init :vertices (list (float-vector -200.0 200.0 320.0) (float-vector -200.0 200.0 290.0) (float-vector -250.0 100.0 290.0) (float-vector -250.0 100.0 320.0)))
         (instance face :init :vertices (list (float-vector -100.0 250.0 320.0) (float-vector -100.0 250.0 290.0) (float-vector -200.0 200.0 290.0) (float-vector -200.0 200.0 320.0)))
         (instance face :init :vertices (list (float-vector 100.0 250.0 320.0) (float-vector 100.0 250.0 290.0) (float-vector -100.0 250.0 290.0) (float-vector -100.0 250.0 320.0)))
         (instance face :init :vertices (list (float-vector 200.0 200.0 320.0) (float-vector 200.0 200.0 290.0) (float-vector 100.0 250.0 290.0) (float-vector 100.0 250.0 320.0)))
         (instance face :init :vertices (list (float-vector 250.0 100.0 320.0) (float-vector 250.0 100.0 290.0) (float-vector 200.0 200.0 290.0) (float-vector 200.0 200.0 320.0)))
         (instance face :init :vertices (list (float-vector 250.0 -150.0 320.0) (float-vector 250.0 -150.0 290.0) (float-vector 250.0 100.0 290.0) (float-vector 250.0 100.0 320.0)))
         (instance face :init :vertices (list (float-vector 150.0 -250.0 320.0) (float-vector 150.0 -250.0 290.0) (float-vector 250.0 -150.0 290.0) (float-vector 250.0 -150.0 320.0)))
         (instance face :init :vertices (list (float-vector -150.0 -250.0 320.0) (float-vector -150.0 -250.0 290.0) (float-vector 150.0 -250.0 290.0) (float-vector 150.0 -250.0 320.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 125.0 250.0 880.0) (float-vector 0.0 250.0 880.0) (float-vector -125.0 250.0 880.0) (float-vector -225.0 220.0 830.0) (float-vector -225.0 180.0 480.0) (float-vector -175.0 200.0 460.0) (float-vector -175.0 250.0 310.0) (float-vector 175.0 250.0 310.0) (float-vector 175.0 200.0 460.0) (float-vector 225.0 180.0 480.0) (float-vector 225.0 220.0 830.0)))
         (instance face :init :vertices (list (float-vector 0.0 300.0 880.0) (float-vector 125.0 300.0 880.0) (float-vector 225.0 270.0 830.0) (float-vector 225.0 230.0 480.0) (float-vector 175.0 250.0 460.0) (float-vector 175.0 300.0 310.0) (float-vector -175.0 300.0 310.0) (float-vector -175.0 250.0 460.0) (float-vector -225.0 230.0 480.0) (float-vector -225.0 270.0 830.0) (float-vector -125.0 300.0 880.0)))
         (instance face :init :vertices (list (float-vector 125.0 250.0 880.0) (float-vector 125.0 300.0 880.0) (float-vector 0.0 300.0 880.0) (float-vector 0.0 250.0 880.0)))
         (instance face :init :vertices (list (float-vector 225.0 220.0 830.0) (float-vector 225.0 270.0 830.0) (float-vector 125.0 300.0 880.0) (float-vector 125.0 250.0 880.0)))
         (instance face :init :vertices (list (float-vector 225.0 180.0 480.0) (float-vector 225.0 230.0 480.0) (float-vector 225.0 270.0 830.0) (float-vector 225.0 220.0 830.0)))
         (instance face :init :vertices (list (float-vector 175.0 200.0 460.0) (float-vector 175.0 250.0 460.0) (float-vector 225.0 230.0 480.0) (float-vector 225.0 180.0 480.0)))
         (instance face :init :vertices (list (float-vector 175.0 250.0 310.0) (float-vector 175.0 300.0 310.0) (float-vector 175.0 250.0 460.0) (float-vector 175.0 200.0 460.0)))
         (instance face :init :vertices (list (float-vector -175.0 250.0 310.0) (float-vector -175.0 300.0 310.0) (float-vector 175.0 300.0 310.0) (float-vector 175.0 250.0 310.0)))
         (instance face :init :vertices (list (float-vector -175.0 200.0 460.0) (float-vector -175.0 250.0 460.0) (float-vector -175.0 300.0 310.0) (float-vector -175.0 250.0 310.0)))
         (instance face :init :vertices (list (float-vector -225.0 180.0 480.0) (float-vector -225.0 230.0 480.0) (float-vector -175.0 250.0 460.0) (float-vector -175.0 200.0 460.0)))
         (instance face :init :vertices (list (float-vector -225.0 220.0 830.0) (float-vector -225.0 270.0 830.0) (float-vector -225.0 230.0 480.0) (float-vector -225.0 180.0 480.0)))
         (instance face :init :vertices (list (float-vector -125.0 250.0 880.0) (float-vector -125.0 300.0 880.0) (float-vector -225.0 270.0 830.0) (float-vector -225.0 220.0 830.0)))
         (instance face :init :vertices (list (float-vector 0.0 250.0 880.0) (float-vector 0.0 300.0 880.0) (float-vector -125.0 300.0 880.0) (float-vector -125.0 250.0 880.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 125.0 300.0 880.0) (float-vector 0.0 300.0 880.0) (float-vector -125.0 300.0 880.0) (float-vector -225.0 270.0 830.0) (float-vector -225.0 230.0 480.0) (float-vector -175.0 250.0 460.0) (float-vector -175.0 300.0 310.0) (float-vector 175.0 300.0 310.0) (float-vector 175.0 250.0 460.0) (float-vector 225.0 230.0 480.0) (float-vector 225.0 270.0 830.0)))
         (instance face :init :vertices (list (float-vector 0.0 305.0 880.0) (float-vector 125.0 305.0 880.0) (float-vector 225.0 275.0 830.0) (float-vector 225.0 235.0 480.0) (float-vector 175.0 255.0 460.0) (float-vector 175.0 305.0 310.0) (float-vector -175.0 305.0 310.0) (float-vector -175.0 255.0 460.0) (float-vector -225.0 235.0 480.0) (float-vector -225.0 275.0 830.0) (float-vector -125.0 305.0 880.0)))
         (instance face :init :vertices (list (float-vector 125.0 300.0 880.0) (float-vector 125.0 305.0 880.0) (float-vector 0.0 305.0 880.0) (float-vector 0.0 300.0 880.0)))
         (instance face :init :vertices (list (float-vector 225.0 270.0 830.0) (float-vector 225.0 275.0 830.0) (float-vector 125.0 305.0 880.0) (float-vector 125.0 300.0 880.0)))
         (instance face :init :vertices (list (float-vector 225.0 230.0 480.0) (float-vector 225.0 235.0 480.0) (float-vector 225.0 275.0 830.0) (float-vector 225.0 270.0 830.0)))
         (instance face :init :vertices (list (float-vector 175.0 250.0 460.0) (float-vector 175.0 255.0 460.0) (float-vector 225.0 235.0 480.0) (float-vector 225.0 230.0 480.0)))
         (instance face :init :vertices (list (float-vector 175.0 300.0 310.0) (float-vector 175.0 305.0 310.0) (float-vector 175.0 255.0 460.0) (float-vector 175.0 250.0 460.0)))
         (instance face :init :vertices (list (float-vector -175.0 300.0 310.0) (float-vector -175.0 305.0 310.0) (float-vector 175.0 305.0 310.0) (float-vector 175.0 300.0 310.0)))
         (instance face :init :vertices (list (float-vector -175.0 250.0 460.0) (float-vector -175.0 255.0 460.0) (float-vector -175.0 305.0 310.0) (float-vector -175.0 300.0 310.0)))
         (instance face :init :vertices (list (float-vector -225.0 230.0 480.0) (float-vector -225.0 235.0 480.0) (float-vector -175.0 255.0 460.0) (float-vector -175.0 250.0 460.0)))
         (instance face :init :vertices (list (float-vector -225.0 270.0 830.0) (float-vector -225.0 275.0 830.0) (float-vector -225.0 235.0 480.0) (float-vector -225.0 230.0 480.0)))
         (instance face :init :vertices (list (float-vector -125.0 300.0 880.0) (float-vector -125.0 305.0 880.0) (float-vector -225.0 275.0 830.0) (float-vector -225.0 270.0 830.0)))
         (instance face :init :vertices (list (float-vector 0.0 300.0 880.0) (float-vector 0.0 305.0 880.0) (float-vector -125.0 305.0 880.0) (float-vector -125.0 300.0 880.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray15)
     (send (elt bc 1) :set-color :gray15)
     (send (elt bc 2) :set-color :gray15)
     (send (elt bc 3) :set-color :gray15)
     (send (elt bc 4) :set-color :gray15)
     (send (elt bc 5) :set-color :gray15)
     (send (elt bc 6) :set-color :gray15)
     (send (elt bc 7) :set-color :gray15)
     (send (elt bc 8) :set-color :gray15)
     (send (elt bc 9) :set-color :gray15)
     (send (elt bc 10) :set-color :gray15)
     (send (elt bc 11) :set-color :gray15)
     (send (elt bc 12) :set-color :gray5)
     (send (elt bc 13) :set-color :gray15)
     (send (elt bc 14) :set-color :red)
     (send (elt bc 15) :set-color :gray5)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73a3-village-chair-0-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 205.0 260.0 800.0) :rot #2f((2.220446e-16 1.0 0.0) (-1.0 2.220446e-16 0.0) (0.0 0.0 1.0)) :name ":larm"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector -205.0 260.0 800.0) :rot #2f((2.220446e-16 1.0 0.0) (-1.0 2.220446e-16 0.0) (0.0 0.0 1.0)) :name ":rarm"))
     (send blink0 :assoc handle1)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1) args))
  (:handle-larm (&rest args) (forward-message-to handle0 args))
  (:handle-rarm (&rest args) (forward-message-to handle1 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73a3-village-chair-0 (&rest args) (instance* room73a3-village-chair-0-object :init args))
;; (format *error-output* "(instance room73a3-village-chair-0-object :init) for generating model~%")
