;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room610-fridge-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1
         joint0 joint1 joint2 joint3 joint4 joint5 ))
(defmethod room610-fridge-object
  (:init
   (&rest args &key (name "room610-fridge") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 294.0 342.5 1833.0) (float-vector -344.0 342.5 1833.0) (float-vector -344.0 -342.5 1833.0) (float-vector 294.0 -342.5 1833.0)))
         (instance face :init :vertices (list (float-vector -344.0 342.5 1823.0) (float-vector 294.0 342.5 1823.0) (float-vector 294.0 -342.5 1823.0) (float-vector -344.0 -342.5 1823.0)))
         (instance face :init :vertices (list (float-vector 294.0 342.5 1833.0) (float-vector 294.0 342.5 1823.0) (float-vector -344.0 342.5 1823.0) (float-vector -344.0 342.5 1833.0)))
         (instance face :init :vertices (list (float-vector 294.0 -342.5 1833.0) (float-vector 294.0 -342.5 1823.0) (float-vector 294.0 342.5 1823.0) (float-vector 294.0 342.5 1833.0)))
         (instance face :init :vertices (list (float-vector -344.0 -342.5 1833.0) (float-vector -344.0 -342.5 1823.0) (float-vector 294.0 -342.5 1823.0) (float-vector 294.0 -342.5 1833.0)))
         (instance face :init :vertices (list (float-vector -344.0 342.5 1833.0) (float-vector -344.0 342.5 1823.0) (float-vector -344.0 -342.5 1823.0) (float-vector -344.0 -342.5 1833.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 294.0 342.5 10.0) (float-vector -344.0 342.5 10.0) (float-vector -344.0 -342.5 10.0) (float-vector 294.0 -342.5 10.0)))
         (instance face :init :vertices (list (float-vector -344.0 342.5 0.0) (float-vector 294.0 342.5 0.0) (float-vector 294.0 -342.5 0.0) (float-vector -344.0 -342.5 0.0)))
         (instance face :init :vertices (list (float-vector 294.0 342.5 10.0) (float-vector 294.0 342.5 0.0) (float-vector -344.0 342.5 0.0) (float-vector -344.0 342.5 10.0)))
         (instance face :init :vertices (list (float-vector 294.0 -342.5 10.0) (float-vector 294.0 -342.5 0.0) (float-vector 294.0 342.5 0.0) (float-vector 294.0 342.5 10.0)))
         (instance face :init :vertices (list (float-vector -344.0 -342.5 10.0) (float-vector -344.0 -342.5 0.0) (float-vector 294.0 -342.5 0.0) (float-vector 294.0 -342.5 10.0)))
         (instance face :init :vertices (list (float-vector -344.0 342.5 10.0) (float-vector -344.0 342.5 0.0) (float-vector -344.0 -342.5 0.0) (float-vector -344.0 -342.5 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -334.0 332.5 1822.5) (float-vector -344.0 332.5 1822.5) (float-vector -344.0 -332.5 1822.5) (float-vector -334.0 -332.5 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 332.5 9.5) (float-vector -334.0 332.5 9.5) (float-vector -334.0 -332.5 9.5) (float-vector -344.0 -332.5 9.5)))
         (instance face :init :vertices (list (float-vector -334.0 332.5 1822.5) (float-vector -334.0 332.5 9.5) (float-vector -344.0 332.5 9.5) (float-vector -344.0 332.5 1822.5)))
         (instance face :init :vertices (list (float-vector -334.0 -332.5 1822.5) (float-vector -334.0 -332.5 9.5) (float-vector -334.0 332.5 9.5) (float-vector -334.0 332.5 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 -332.5 1822.5) (float-vector -344.0 -332.5 9.5) (float-vector -334.0 -332.5 9.5) (float-vector -334.0 -332.5 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 332.5 1822.5) (float-vector -344.0 332.5 9.5) (float-vector -344.0 -332.5 9.5) (float-vector -344.0 -332.5 1822.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 294.0 342.0 1822.5) (float-vector -344.0 342.0 1822.5) (float-vector -344.0 332.0 1822.5) (float-vector 294.0 332.0 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 342.0 9.5) (float-vector 294.0 342.0 9.5) (float-vector 294.0 332.0 9.5) (float-vector -344.0 332.0 9.5)))
         (instance face :init :vertices (list (float-vector 294.0 342.0 1822.5) (float-vector 294.0 342.0 9.5) (float-vector -344.0 342.0 9.5) (float-vector -344.0 342.0 1822.5)))
         (instance face :init :vertices (list (float-vector 294.0 332.0 1822.5) (float-vector 294.0 332.0 9.5) (float-vector 294.0 342.0 9.5) (float-vector 294.0 342.0 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 332.0 1822.5) (float-vector -344.0 332.0 9.5) (float-vector 294.0 332.0 9.5) (float-vector 294.0 332.0 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 342.0 1822.5) (float-vector -344.0 342.0 9.5) (float-vector -344.0 332.0 9.5) (float-vector -344.0 332.0 1822.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 294.0 -332.0 1822.5) (float-vector -344.0 -332.0 1822.5) (float-vector -344.0 -342.0 1822.5) (float-vector 294.0 -342.0 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 -332.0 9.5) (float-vector 294.0 -332.0 9.5) (float-vector 294.0 -342.0 9.5) (float-vector -344.0 -342.0 9.5)))
         (instance face :init :vertices (list (float-vector 294.0 -332.0 1822.5) (float-vector 294.0 -332.0 9.5) (float-vector -344.0 -332.0 9.5) (float-vector -344.0 -332.0 1822.5)))
         (instance face :init :vertices (list (float-vector 294.0 -342.0 1822.5) (float-vector 294.0 -342.0 9.5) (float-vector 294.0 -332.0 9.5) (float-vector 294.0 -332.0 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 -342.0 1822.5) (float-vector -344.0 -342.0 9.5) (float-vector 294.0 -342.0 9.5) (float-vector 294.0 -342.0 1822.5)))
         (instance face :init :vertices (list (float-vector -344.0 -332.0 1822.5) (float-vector -344.0 -332.0 9.5) (float-vector -344.0 -342.0 9.5) (float-vector -344.0 -342.0 1822.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 294.0 332.5 430.0) (float-vector -334.0 332.5 430.0) (float-vector -334.0 -332.5 430.0) (float-vector 294.0 -332.5 430.0)))
         (instance face :init :vertices (list (float-vector -334.0 332.5 420.0) (float-vector 294.0 332.5 420.0) (float-vector 294.0 -332.5 420.0) (float-vector -334.0 -332.5 420.0)))
         (instance face :init :vertices (list (float-vector 294.0 332.5 430.0) (float-vector 294.0 332.5 420.0) (float-vector -334.0 332.5 420.0) (float-vector -334.0 332.5 430.0)))
         (instance face :init :vertices (list (float-vector 294.0 -332.5 430.0) (float-vector 294.0 -332.5 420.0) (float-vector 294.0 332.5 420.0) (float-vector 294.0 332.5 430.0)))
         (instance face :init :vertices (list (float-vector -334.0 -332.5 430.0) (float-vector -334.0 -332.5 420.0) (float-vector 294.0 -332.5 420.0) (float-vector 294.0 -332.5 430.0)))
         (instance face :init :vertices (list (float-vector -334.0 332.5 430.0) (float-vector -334.0 332.5 420.0) (float-vector -334.0 -332.5 420.0) (float-vector -334.0 -332.5 430.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 294.0 332.5 800.0) (float-vector -334.0 332.5 800.0) (float-vector -334.0 -332.5 800.0) (float-vector 294.0 -332.5 800.0)))
         (instance face :init :vertices (list (float-vector -334.0 332.5 790.0) (float-vector 294.0 332.5 790.0) (float-vector 294.0 -332.5 790.0) (float-vector -334.0 -332.5 790.0)))
         (instance face :init :vertices (list (float-vector 294.0 332.5 800.0) (float-vector 294.0 332.5 790.0) (float-vector -334.0 332.5 790.0) (float-vector -334.0 332.5 800.0)))
         (instance face :init :vertices (list (float-vector 294.0 -332.5 800.0) (float-vector 294.0 -332.5 790.0) (float-vector 294.0 332.5 790.0) (float-vector 294.0 332.5 800.0)))
         (instance face :init :vertices (list (float-vector -334.0 -332.5 800.0) (float-vector -334.0 -332.5 790.0) (float-vector 294.0 -332.5 790.0) (float-vector 294.0 -332.5 800.0)))
         (instance face :init :vertices (list (float-vector -334.0 332.5 800.0) (float-vector -334.0 332.5 790.0) (float-vector -334.0 -332.5 790.0) (float-vector -334.0 -332.5 800.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 294.0 332.5 1010.0) (float-vector -334.0 332.5 1010.0) (float-vector -334.0 -332.5 1010.0) (float-vector 294.0 -332.5 1010.0)))
         (instance face :init :vertices (list (float-vector -334.0 332.5 1000.0) (float-vector 294.0 332.5 1000.0) (float-vector 294.0 -332.5 1000.0) (float-vector -334.0 -332.5 1000.0)))
         (instance face :init :vertices (list (float-vector 294.0 332.5 1010.0) (float-vector 294.0 332.5 1000.0) (float-vector -334.0 332.5 1000.0) (float-vector -334.0 332.5 1010.0)))
         (instance face :init :vertices (list (float-vector 294.0 -332.5 1010.0) (float-vector 294.0 -332.5 1000.0) (float-vector 294.0 332.5 1000.0) (float-vector 294.0 332.5 1010.0)))
         (instance face :init :vertices (list (float-vector -334.0 -332.5 1010.0) (float-vector -334.0 -332.5 1000.0) (float-vector 294.0 -332.5 1000.0) (float-vector 294.0 -332.5 1010.0)))
         (instance face :init :vertices (list (float-vector -334.0 332.5 1010.0) (float-vector -334.0 332.5 1000.0) (float-vector -334.0 -332.5 1000.0) (float-vector -334.0 -332.5 1010.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color :white)
     (send (elt bc 5) :set-color :white)
     (send (elt bc 6) :set-color :white)
     (send (elt bc 7) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-fridge-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -294.0 292.5 -157.5) (float-vector -294.0 -292.5 -157.5) (float-vector -294.0 -292.5 157.5) (float-vector -294.0 292.5 157.5)))
         (instance face :init :vertices (list (float-vector 294.0 -292.5 -157.5) (float-vector 294.0 -292.5 157.5) (float-vector -294.0 -292.5 157.5) (float-vector -294.0 -292.5 -157.5)))
         (instance face :init :vertices (list (float-vector 294.0 292.5 -157.5) (float-vector 294.0 292.5 157.5) (float-vector 294.0 242.5 157.5) (float-vector 294.0 242.5 -107.5) (float-vector 294.0 -242.5 -107.5) (float-vector 294.0 -242.5 157.5) (float-vector 294.0 -292.5 157.5) (float-vector 294.0 -292.5 -157.5)))
         (instance face :init :vertices (list (float-vector -294.0 292.5 157.5) (float-vector -294.0 -292.5 157.5) (float-vector 294.0 -292.5 157.5) (float-vector 294.0 -242.5 157.5) (float-vector -244.0 -242.5 157.5) (float-vector -244.0 242.5 157.5) (float-vector 294.0 242.5 157.5) (float-vector 294.0 292.5 157.5)))
         (instance face :init :vertices (list (float-vector 294.0 292.5 -157.5) (float-vector 294.0 -292.5 -157.5) (float-vector -294.0 -292.5 -157.5) (float-vector -294.0 292.5 -157.5)))
         (instance face :init :vertices (list (float-vector -294.0 292.5 -157.5) (float-vector -294.0 292.5 157.5) (float-vector 294.0 292.5 157.5) (float-vector 294.0 292.5 -157.5)))
         (instance face :init :vertices (list (float-vector -244.0 242.5 157.5) (float-vector -244.0 -242.5 157.5) (float-vector -244.0 -242.5 -107.5) (float-vector -244.0 242.5 -107.5)))
         (instance face :init :vertices (list (float-vector -244.0 -242.5 -107.5) (float-vector -244.0 -242.5 157.5) (float-vector 294.0 -242.5 157.5) (float-vector 294.0 -242.5 -107.5)))
         (instance face :init :vertices (list (float-vector 294.0 242.5 -107.5) (float-vector 294.0 242.5 157.5) (float-vector -244.0 242.5 157.5) (float-vector -244.0 242.5 -107.5)))
         (instance face :init :vertices (list (float-vector -244.0 242.5 -107.5) (float-vector -244.0 -242.5 -107.5) (float-vector 294.0 -242.5 -107.5) (float-vector 294.0 242.5 -107.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 344.0 342.5 207.5) (float-vector 294.0 342.5 207.5) (float-vector 294.0 -342.5 207.5) (float-vector 344.0 -342.5 207.5)))
         (instance face :init :vertices (list (float-vector 294.0 342.5 -157.5) (float-vector 344.0 342.5 -157.5) (float-vector 344.0 -342.5 -157.5) (float-vector 294.0 -342.5 -157.5)))
         (instance face :init :vertices (list (float-vector 344.0 342.5 207.5) (float-vector 344.0 342.5 -157.5) (float-vector 294.0 342.5 -157.5) (float-vector 294.0 342.5 207.5)))
         (instance face :init :vertices (list (float-vector 344.0 -342.5 207.5) (float-vector 344.0 -342.5 -157.5) (float-vector 344.0 342.5 -157.5) (float-vector 344.0 342.5 207.5)))
         (instance face :init :vertices (list (float-vector 294.0 -342.5 207.5) (float-vector 294.0 -342.5 -157.5) (float-vector 344.0 -342.5 -157.5) (float-vector 344.0 -342.5 207.5)))
         (instance face :init :vertices (list (float-vector 294.0 342.5 207.5) (float-vector 294.0 342.5 -157.5) (float-vector 294.0 -342.5 -157.5) (float-vector 294.0 -342.5 207.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-fridge-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-fridge-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -294.0 292.5 -157.5) (float-vector -294.0 -292.5 -157.5) (float-vector -294.0 -292.5 157.5) (float-vector -294.0 292.5 157.5)))
         (instance face :init :vertices (list (float-vector 294.0 -292.5 -157.5) (float-vector 294.0 -292.5 157.5) (float-vector -294.0 -292.5 157.5) (float-vector -294.0 -292.5 -157.5)))
         (instance face :init :vertices (list (float-vector 294.0 292.5 -157.5) (float-vector 294.0 292.5 157.5) (float-vector 294.0 242.5 157.5) (float-vector 294.0 242.5 -107.5) (float-vector 294.0 -242.5 -107.5) (float-vector 294.0 -242.5 157.5) (float-vector 294.0 -292.5 157.5) (float-vector 294.0 -292.5 -157.5)))
         (instance face :init :vertices (list (float-vector -294.0 292.5 157.5) (float-vector -294.0 -292.5 157.5) (float-vector 294.0 -292.5 157.5) (float-vector 294.0 -242.5 157.5) (float-vector -244.0 -242.5 157.5) (float-vector -244.0 242.5 157.5) (float-vector 294.0 242.5 157.5) (float-vector 294.0 292.5 157.5)))
         (instance face :init :vertices (list (float-vector 294.0 292.5 -157.5) (float-vector 294.0 -292.5 -157.5) (float-vector -294.0 -292.5 -157.5) (float-vector -294.0 292.5 -157.5)))
         (instance face :init :vertices (list (float-vector -294.0 292.5 -157.5) (float-vector -294.0 292.5 157.5) (float-vector 294.0 292.5 157.5) (float-vector 294.0 292.5 -157.5)))
         (instance face :init :vertices (list (float-vector -244.0 242.5 157.5) (float-vector -244.0 -242.5 157.5) (float-vector -244.0 -242.5 -107.5) (float-vector -244.0 242.5 -107.5)))
         (instance face :init :vertices (list (float-vector -244.0 -242.5 -107.5) (float-vector -244.0 -242.5 157.5) (float-vector 294.0 -242.5 157.5) (float-vector 294.0 -242.5 -107.5)))
         (instance face :init :vertices (list (float-vector 294.0 242.5 -107.5) (float-vector 294.0 242.5 157.5) (float-vector -244.0 242.5 157.5) (float-vector -244.0 242.5 -107.5)))
         (instance face :init :vertices (list (float-vector -244.0 242.5 -107.5) (float-vector -244.0 -242.5 -107.5) (float-vector 294.0 -242.5 -107.5) (float-vector 294.0 242.5 -107.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 344.0 342.5 207.5) (float-vector 294.0 342.5 207.5) (float-vector 294.0 -342.5 207.5) (float-vector 344.0 -342.5 207.5)))
         (instance face :init :vertices (list (float-vector 294.0 342.5 -157.5) (float-vector 344.0 342.5 -157.5) (float-vector 344.0 -342.5 -157.5) (float-vector 294.0 -342.5 -157.5)))
         (instance face :init :vertices (list (float-vector 344.0 342.5 207.5) (float-vector 344.0 342.5 -157.5) (float-vector 294.0 342.5 -157.5) (float-vector 294.0 342.5 207.5)))
         (instance face :init :vertices (list (float-vector 344.0 -342.5 207.5) (float-vector 344.0 -342.5 -157.5) (float-vector 344.0 342.5 -157.5) (float-vector 344.0 342.5 207.5)))
         (instance face :init :vertices (list (float-vector 294.0 -342.5 207.5) (float-vector 294.0 -342.5 -157.5) (float-vector 344.0 -342.5 -157.5) (float-vector 344.0 -342.5 207.5)))
         (instance face :init :vertices (list (float-vector 294.0 342.5 207.5) (float-vector 294.0 342.5 -157.5) (float-vector 294.0 -342.5 -157.5) (float-vector 294.0 -342.5 207.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-fridge-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-fridge-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -294.0 121.0 -77.5) (float-vector -294.0 -121.0 -77.5) (float-vector -294.0 -121.0 77.5) (float-vector -294.0 121.0 77.5)))
         (instance face :init :vertices (list (float-vector 294.0 -121.0 -77.5) (float-vector 294.0 -121.0 77.5) (float-vector -294.0 -121.0 77.5) (float-vector -294.0 -121.0 -77.5)))
         (instance face :init :vertices (list (float-vector 294.0 121.0 -77.5) (float-vector 294.0 121.0 77.5) (float-vector 294.0 71.0 77.5) (float-vector 294.0 71.0 -27.5) (float-vector 294.0 -71.0 -27.5) (float-vector 294.0 -71.0 77.5) (float-vector 294.0 -121.0 77.5) (float-vector 294.0 -121.0 -77.5)))
         (instance face :init :vertices (list (float-vector -294.0 121.0 77.5) (float-vector -294.0 -121.0 77.5) (float-vector 294.0 -121.0 77.5) (float-vector 294.0 -71.0 77.5) (float-vector -244.0 -71.0 77.5) (float-vector -244.0 71.0 77.5) (float-vector 294.0 71.0 77.5) (float-vector 294.0 121.0 77.5)))
         (instance face :init :vertices (list (float-vector 294.0 121.0 -77.5) (float-vector 294.0 -121.0 -77.5) (float-vector -294.0 -121.0 -77.5) (float-vector -294.0 121.0 -77.5)))
         (instance face :init :vertices (list (float-vector -294.0 121.0 -77.5) (float-vector -294.0 121.0 77.5) (float-vector 294.0 121.0 77.5) (float-vector 294.0 121.0 -77.5)))
         (instance face :init :vertices (list (float-vector -244.0 71.0 77.5) (float-vector -244.0 -71.0 77.5) (float-vector -244.0 -71.0 -27.5) (float-vector -244.0 71.0 -27.5)))
         (instance face :init :vertices (list (float-vector -244.0 -71.0 -27.5) (float-vector -244.0 -71.0 77.5) (float-vector 294.0 -71.0 77.5) (float-vector 294.0 -71.0 -27.5)))
         (instance face :init :vertices (list (float-vector 294.0 71.0 -27.5) (float-vector 294.0 71.0 77.5) (float-vector -244.0 71.0 77.5) (float-vector -244.0 71.0 -27.5)))
         (instance face :init :vertices (list (float-vector -244.0 71.0 -27.5) (float-vector -244.0 -71.0 -27.5) (float-vector 294.0 -71.0 -27.5) (float-vector 294.0 71.0 -27.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 344.0 171.0 127.5) (float-vector 294.0 171.0 127.5) (float-vector 294.0 -171.0 127.5) (float-vector 344.0 -171.0 127.5)))
         (instance face :init :vertices (list (float-vector 294.0 171.0 -77.5) (float-vector 344.0 171.0 -77.5) (float-vector 344.0 -171.0 -77.5) (float-vector 294.0 -171.0 -77.5)))
         (instance face :init :vertices (list (float-vector 344.0 171.0 127.5) (float-vector 344.0 171.0 -77.5) (float-vector 294.0 171.0 -77.5) (float-vector 294.0 171.0 127.5)))
         (instance face :init :vertices (list (float-vector 344.0 -171.0 127.5) (float-vector 344.0 -171.0 -77.5) (float-vector 344.0 171.0 -77.5) (float-vector 344.0 171.0 127.5)))
         (instance face :init :vertices (list (float-vector 294.0 -171.0 127.5) (float-vector 294.0 -171.0 -77.5) (float-vector 344.0 -171.0 -77.5) (float-vector 344.0 -171.0 127.5)))
         (instance face :init :vertices (list (float-vector 294.0 171.0 127.5) (float-vector 294.0 171.0 -77.5) (float-vector 294.0 -171.0 -77.5) (float-vector 294.0 -171.0 127.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-fridge-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-fridge-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -294.0 121.0 -77.5) (float-vector -294.0 -121.0 -77.5) (float-vector -294.0 -121.0 77.5) (float-vector -294.0 121.0 77.5)))
         (instance face :init :vertices (list (float-vector 294.0 -121.0 -77.5) (float-vector 294.0 -121.0 77.5) (float-vector -294.0 -121.0 77.5) (float-vector -294.0 -121.0 -77.5)))
         (instance face :init :vertices (list (float-vector 294.0 121.0 -77.5) (float-vector 294.0 121.0 77.5) (float-vector 294.0 71.0 77.5) (float-vector 294.0 71.0 -27.5) (float-vector 294.0 -71.0 -27.5) (float-vector 294.0 -71.0 77.5) (float-vector 294.0 -121.0 77.5) (float-vector 294.0 -121.0 -77.5)))
         (instance face :init :vertices (list (float-vector -294.0 121.0 77.5) (float-vector -294.0 -121.0 77.5) (float-vector 294.0 -121.0 77.5) (float-vector 294.0 -71.0 77.5) (float-vector -244.0 -71.0 77.5) (float-vector -244.0 71.0 77.5) (float-vector 294.0 71.0 77.5) (float-vector 294.0 121.0 77.5)))
         (instance face :init :vertices (list (float-vector 294.0 121.0 -77.5) (float-vector 294.0 -121.0 -77.5) (float-vector -294.0 -121.0 -77.5) (float-vector -294.0 121.0 -77.5)))
         (instance face :init :vertices (list (float-vector -294.0 121.0 -77.5) (float-vector -294.0 121.0 77.5) (float-vector 294.0 121.0 77.5) (float-vector 294.0 121.0 -77.5)))
         (instance face :init :vertices (list (float-vector -244.0 71.0 77.5) (float-vector -244.0 -71.0 77.5) (float-vector -244.0 -71.0 -27.5) (float-vector -244.0 71.0 -27.5)))
         (instance face :init :vertices (list (float-vector -244.0 -71.0 -27.5) (float-vector -244.0 -71.0 77.5) (float-vector 294.0 -71.0 77.5) (float-vector 294.0 -71.0 -27.5)))
         (instance face :init :vertices (list (float-vector 294.0 71.0 -27.5) (float-vector 294.0 71.0 77.5) (float-vector -244.0 71.0 77.5) (float-vector -244.0 71.0 -27.5)))
         (instance face :init :vertices (list (float-vector -244.0 71.0 -27.5) (float-vector -244.0 -71.0 -27.5) (float-vector 294.0 -71.0 -27.5) (float-vector 294.0 71.0 -27.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 344.0 171.0 127.5) (float-vector 294.0 171.0 127.5) (float-vector 294.0 -171.0 127.5) (float-vector 344.0 -171.0 127.5)))
         (instance face :init :vertices (list (float-vector 294.0 171.0 -77.5) (float-vector 344.0 171.0 -77.5) (float-vector 344.0 -171.0 -77.5) (float-vector 294.0 -171.0 -77.5)))
         (instance face :init :vertices (list (float-vector 344.0 171.0 127.5) (float-vector 344.0 171.0 -77.5) (float-vector 294.0 171.0 -77.5) (float-vector 294.0 171.0 127.5)))
         (instance face :init :vertices (list (float-vector 344.0 -171.0 127.5) (float-vector 344.0 -171.0 -77.5) (float-vector 344.0 171.0 -77.5) (float-vector 344.0 171.0 127.5)))
         (instance face :init :vertices (list (float-vector 294.0 -171.0 127.5) (float-vector 294.0 -171.0 -77.5) (float-vector 344.0 -171.0 -77.5) (float-vector 344.0 -171.0 127.5)))
         (instance face :init :vertices (list (float-vector 294.0 171.0 127.5) (float-vector 294.0 171.0 -77.5) (float-vector 294.0 -171.0 -77.5) (float-vector 294.0 -171.0 127.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-fridge-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-fridge-bodyset6
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.0 317.0 824.5) (float-vector -25.0 317.0 824.5) (float-vector -25.0 -25.0 824.5) (float-vector 25.0 -25.0 824.5)))
         (instance face :init :vertices (list (float-vector -25.0 317.0 -0.5) (float-vector 25.0 317.0 -0.5) (float-vector 25.0 -25.0 -0.5) (float-vector -25.0 -25.0 -0.5)))
         (instance face :init :vertices (list (float-vector 25.0 317.0 824.5) (float-vector 25.0 317.0 -0.5) (float-vector -25.0 317.0 -0.5) (float-vector -25.0 317.0 824.5)))
         (instance face :init :vertices (list (float-vector 25.0 -25.0 824.5) (float-vector 25.0 -25.0 -0.5) (float-vector 25.0 317.0 -0.5) (float-vector 25.0 317.0 824.5)))
         (instance face :init :vertices (list (float-vector -25.0 -25.0 824.5) (float-vector -25.0 -25.0 -0.5) (float-vector 25.0 -25.0 -0.5) (float-vector 25.0 -25.0 824.5)))
         (instance face :init :vertices (list (float-vector -25.0 317.0 824.5) (float-vector -25.0 317.0 -0.5) (float-vector -25.0 -25.0 -0.5) (float-vector -25.0 -25.0 824.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-fridge-bodyset6 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-fridge-bodyset7
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.0 25.0 824.5) (float-vector -25.0 25.0 824.5) (float-vector -25.0 -317.0 824.5) (float-vector 25.0 -317.0 824.5)))
         (instance face :init :vertices (list (float-vector -25.0 25.0 -0.5) (float-vector 25.0 25.0 -0.5) (float-vector 25.0 -317.0 -0.5) (float-vector -25.0 -317.0 -0.5)))
         (instance face :init :vertices (list (float-vector 25.0 25.0 824.5) (float-vector 25.0 25.0 -0.5) (float-vector -25.0 25.0 -0.5) (float-vector -25.0 25.0 824.5)))
         (instance face :init :vertices (list (float-vector 25.0 -317.0 824.5) (float-vector 25.0 -317.0 -0.5) (float-vector 25.0 25.0 -0.5) (float-vector 25.0 25.0 824.5)))
         (instance face :init :vertices (list (float-vector -25.0 -317.0 824.5) (float-vector -25.0 -317.0 -0.5) (float-vector 25.0 -317.0 -0.5) (float-vector 25.0 -317.0 824.5)))
         (instance face :init :vertices (list (float-vector -25.0 25.0 824.5) (float-vector -25.0 25.0 -0.5) (float-vector -25.0 -317.0 -0.5) (float-vector -25.0 -317.0 824.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-fridge-bodyset7 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 319.0 317.0 1000.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 319.0 -317.0 1000.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 -171.0 867.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink4 :newcoords (make-coords :pos (float-vector 4.547474e-13 171.0 867.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector 0.0 0.0 577.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink5)
     (send blink6 :newcoords (make-coords :pos (float-vector 0.0 0.0 207.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink6)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :door-upper-left
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :door-upper-left :axis :z 
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :door-upper-right
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink2 :name :door-upper-right :axis :-z
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :drawer-middle-right
     (setq joint2 (instance linear-joint :init
			     :parent-link blink0 :child-link blink3 :name :drawer-middle-right :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  688.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-middle-left
     (setq joint3 (instance linear-joint :init
			     :parent-link blink0 :child-link blink4 :name :drawer-middle-left :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  688.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-lower1
     (setq joint4 (instance linear-joint :init
			     :parent-link blink0 :child-link blink5 :name :drawer-lower1 :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  688.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-lower2
     (setq joint5 (instance linear-joint :init
			     :parent-link blink0 :child-link blink6 :name :drawer-lower2 :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  688.0 :max-joint-velocity 0.785398 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle1"))
     (send blink0 :assoc handle1)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:door-upper-left (&rest args) (forward-message-to joint0 args))
  (:door-upper-right (&rest args) (forward-message-to joint1 args))
  (:drawer-middle-right (&rest args) (forward-message-to joint2 args))
  (:drawer-middle-left (&rest args) (forward-message-to joint3 args))
  (:drawer-lower1 (&rest args) (forward-message-to joint4 args))
  (:drawer-lower2 (&rest args) (forward-message-to joint5 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:handle-handle1 (&rest args) (forward-message-to handle1 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room610-fridge (&rest args) (instance* room610-fridge-object :init args))
;; (format *error-output* "(instance room610-fridge-object :init) for generating model~%")
