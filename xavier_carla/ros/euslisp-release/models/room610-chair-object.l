;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room610-chair-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1 handle2 handle3 handle4 handle5
         ))
(defmethod room610-chair-object
  (:init
   (&rest args &key (name "room610-chair") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room610-chair-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -225.0 -220.0 340.0) (float-vector -155.0 -220.0 340.0) (float-vector -215.0 -220.0 555.0) (float-vector -305.0 -220.0 820.0) (float-vector -330.0 -220.0 840.0) (float-vector -345.0 -220.0 835.0) (float-vector -350.0 -220.0 820.0) (float-vector -270.0 -220.0 550.0)))
         (instance face :init :vertices (list (float-vector -155.0 220.0 340.0) (float-vector -225.0 220.0 340.0) (float-vector -270.0 220.0 550.0) (float-vector -350.0 220.0 820.0) (float-vector -345.0 220.0 835.0) (float-vector -330.0 220.0 840.0) (float-vector -305.0 220.0 820.0) (float-vector -215.0 220.0 555.0)))
         (instance face :init :vertices (list (float-vector -225.0 -220.0 340.0) (float-vector -225.0 220.0 340.0) (float-vector -155.0 220.0 340.0) (float-vector -155.0 -220.0 340.0)))
         (instance face :init :vertices (list (float-vector -270.0 -220.0 550.0) (float-vector -270.0 220.0 550.0) (float-vector -225.0 220.0 340.0) (float-vector -225.0 -220.0 340.0)))
         (instance face :init :vertices (list (float-vector -350.0 -220.0 820.0) (float-vector -350.0 220.0 820.0) (float-vector -270.0 220.0 550.0) (float-vector -270.0 -220.0 550.0)))
         (instance face :init :vertices (list (float-vector -345.0 -220.0 835.0) (float-vector -345.0 220.0 835.0) (float-vector -350.0 220.0 820.0) (float-vector -350.0 -220.0 820.0)))
         (instance face :init :vertices (list (float-vector -330.0 -220.0 840.0) (float-vector -330.0 220.0 840.0) (float-vector -345.0 220.0 835.0) (float-vector -345.0 -220.0 835.0)))
         (instance face :init :vertices (list (float-vector -305.0 -220.0 820.0) (float-vector -305.0 220.0 820.0) (float-vector -330.0 220.0 840.0) (float-vector -330.0 -220.0 840.0)))
         (instance face :init :vertices (list (float-vector -215.0 -220.0 555.0) (float-vector -215.0 220.0 555.0) (float-vector -305.0 220.0 820.0) (float-vector -305.0 -220.0 820.0)))
         (instance face :init :vertices (list (float-vector -155.0 -220.0 340.0) (float-vector -155.0 220.0 340.0) (float-vector -215.0 220.0 555.0) (float-vector -215.0 -220.0 555.0)))
         (instance face :init :vertices (list (float-vector -220.0 -240.0 415.0) (float-vector -220.0 -240.0 340.0) (float-vector 220.0 -240.0 340.0) (float-vector 220.0 -240.0 440.0) (float-vector 70.0 -240.0 435.0) (float-vector -20.0 -240.0 415.0)))
         (instance face :init :vertices (list (float-vector -220.0 240.0 340.0) (float-vector -220.0 240.0 415.0) (float-vector -20.0 240.0 415.0) (float-vector 70.0 240.0 435.0) (float-vector 220.0 240.0 440.0) (float-vector 220.0 240.0 340.0)))
         (instance face :init :vertices (list (float-vector -220.0 -240.0 415.0) (float-vector -220.0 240.0 415.0) (float-vector -220.0 240.0 340.0) (float-vector -220.0 -240.0 340.0)))
         (instance face :init :vertices (list (float-vector -20.0 -240.0 415.0) (float-vector -20.0 240.0 415.0) (float-vector -220.0 240.0 415.0) (float-vector -220.0 -240.0 415.0)))
         (instance face :init :vertices (list (float-vector 70.0 -240.0 435.0) (float-vector 70.0 240.0 435.0) (float-vector -20.0 240.0 415.0) (float-vector -20.0 -240.0 415.0)))
         (instance face :init :vertices (list (float-vector 220.0 -240.0 440.0) (float-vector 220.0 240.0 440.0) (float-vector 70.0 240.0 435.0) (float-vector 70.0 -240.0 435.0)))
         (instance face :init :vertices (list (float-vector 220.0 -240.0 340.0) (float-vector 220.0 240.0 340.0) (float-vector 220.0 240.0 440.0) (float-vector 220.0 -240.0 440.0)))
         (instance face :init :vertices (list (float-vector -220.0 -240.0 340.0) (float-vector -220.0 240.0 340.0) (float-vector 220.0 240.0 340.0) (float-vector 220.0 -240.0 340.0)))
         (instance face :init :vertices (list (float-vector 245.49 250.0 420.0) (float-vector 247.5 257.5 420.0) (float-vector 245.49 265.0 420.0) (float-vector 240.0 270.49 420.0) (float-vector 232.5 272.5 420.0) (float-vector 225.0 270.49 420.0) (float-vector 219.51 265.0 420.0) (float-vector 217.5 257.5 420.0) (float-vector 219.51 250.0 420.0) (float-vector 225.0 244.51 420.0) (float-vector 232.5 242.5 420.0) (float-vector 240.0 244.51 420.0)))
         (instance face :init :vertices (list (float-vector 247.5 257.5 0.0) (float-vector 245.49 250.0 0.0) (float-vector 240.0 244.51 0.0) (float-vector 232.5 242.5 0.0) (float-vector 225.0 244.51 0.0) (float-vector 219.51 250.0 0.0) (float-vector 217.5 257.5 0.0) (float-vector 219.51 265.0 0.0) (float-vector 225.0 270.49 0.0) (float-vector 232.5 272.5 0.0) (float-vector 240.0 270.49 0.0) (float-vector 245.49 265.0 0.0)))
         (instance face :init :vertices (list (float-vector 245.49 250.0 420.0) (float-vector 245.49 250.0 0.0) (float-vector 247.5 257.5 0.0) (float-vector 247.5 257.5 420.0)))
         (instance face :init :vertices (list (float-vector 240.0 244.51 420.0) (float-vector 240.0 244.51 0.0) (float-vector 245.49 250.0 0.0) (float-vector 245.49 250.0 420.0)))
         (instance face :init :vertices (list (float-vector 232.5 242.5 420.0) (float-vector 232.5 242.5 0.0) (float-vector 240.0 244.51 0.0) (float-vector 240.0 244.51 420.0)))
         (instance face :init :vertices (list (float-vector 225.0 244.51 420.0) (float-vector 225.0 244.51 0.0) (float-vector 232.5 242.5 0.0) (float-vector 232.5 242.5 420.0)))
         (instance face :init :vertices (list (float-vector 219.51 250.0 420.0) (float-vector 219.51 250.0 0.0) (float-vector 225.0 244.51 0.0) (float-vector 225.0 244.51 420.0)))
         (instance face :init :vertices (list (float-vector 217.5 257.5 420.0) (float-vector 217.5 257.5 0.0) (float-vector 219.51 250.0 0.0) (float-vector 219.51 250.0 420.0)))
         (instance face :init :vertices (list (float-vector 219.51 265.0 420.0) (float-vector 219.51 265.0 0.0) (float-vector 217.5 257.5 0.0) (float-vector 217.5 257.5 420.0)))
         (instance face :init :vertices (list (float-vector 225.0 270.49 420.0) (float-vector 225.0 270.49 0.0) (float-vector 219.51 265.0 0.0) (float-vector 219.51 265.0 420.0)))
         (instance face :init :vertices (list (float-vector 232.5 272.5 420.0) (float-vector 232.5 272.5 0.0) (float-vector 225.0 270.49 0.0) (float-vector 225.0 270.49 420.0)))
         (instance face :init :vertices (list (float-vector 240.0 270.49 420.0) (float-vector 240.0 270.49 0.0) (float-vector 232.5 272.5 0.0) (float-vector 232.5 272.5 420.0)))
         (instance face :init :vertices (list (float-vector 245.49 265.0 420.0) (float-vector 245.49 265.0 0.0) (float-vector 240.0 270.49 0.0) (float-vector 240.0 270.49 420.0)))
         (instance face :init :vertices (list (float-vector 247.5 257.5 420.0) (float-vector 247.5 257.5 0.0) (float-vector 245.49 265.0 0.0) (float-vector 245.49 265.0 420.0)))
         (instance face :init :vertices (list (float-vector 245.49 -265.0 420.0) (float-vector 247.5 -257.5 420.0) (float-vector 245.49 -250.0 420.0) (float-vector 240.0 -244.51 420.0) (float-vector 232.5 -242.5 420.0) (float-vector 225.0 -244.51 420.0) (float-vector 219.51 -250.0 420.0) (float-vector 217.5 -257.5 420.0) (float-vector 219.51 -265.0 420.0) (float-vector 225.0 -270.49 420.0) (float-vector 232.5 -272.5 420.0) (float-vector 240.0 -270.49 420.0)))
         (instance face :init :vertices (list (float-vector 247.5 -257.5 0.0) (float-vector 245.49 -265.0 0.0) (float-vector 240.0 -270.49 0.0) (float-vector 232.5 -272.5 0.0) (float-vector 225.0 -270.49 0.0) (float-vector 219.51 -265.0 0.0) (float-vector 217.5 -257.5 0.0) (float-vector 219.51 -250.0 0.0) (float-vector 225.0 -244.51 0.0) (float-vector 232.5 -242.5 0.0) (float-vector 240.0 -244.51 0.0) (float-vector 245.49 -250.0 0.0)))
         (instance face :init :vertices (list (float-vector 245.49 -265.0 420.0) (float-vector 245.49 -265.0 0.0) (float-vector 247.5 -257.5 0.0) (float-vector 247.5 -257.5 420.0)))
         (instance face :init :vertices (list (float-vector 240.0 -270.49 420.0) (float-vector 240.0 -270.49 0.0) (float-vector 245.49 -265.0 0.0) (float-vector 245.49 -265.0 420.0)))
         (instance face :init :vertices (list (float-vector 232.5 -272.5 420.0) (float-vector 232.5 -272.5 0.0) (float-vector 240.0 -270.49 0.0) (float-vector 240.0 -270.49 420.0)))
         (instance face :init :vertices (list (float-vector 225.0 -270.49 420.0) (float-vector 225.0 -270.49 0.0) (float-vector 232.5 -272.5 0.0) (float-vector 232.5 -272.5 420.0)))
         (instance face :init :vertices (list (float-vector 219.51 -265.0 420.0) (float-vector 219.51 -265.0 0.0) (float-vector 225.0 -270.49 0.0) (float-vector 225.0 -270.49 420.0)))
         (instance face :init :vertices (list (float-vector 217.5 -257.5 420.0) (float-vector 217.5 -257.5 0.0) (float-vector 219.51 -265.0 0.0) (float-vector 219.51 -265.0 420.0)))
         (instance face :init :vertices (list (float-vector 219.51 -250.0 420.0) (float-vector 219.51 -250.0 0.0) (float-vector 217.5 -257.5 0.0) (float-vector 217.5 -257.5 420.0)))
         (instance face :init :vertices (list (float-vector 225.0 -244.51 420.0) (float-vector 225.0 -244.51 0.0) (float-vector 219.51 -250.0 0.0) (float-vector 219.51 -250.0 420.0)))
         (instance face :init :vertices (list (float-vector 232.5 -242.5 420.0) (float-vector 232.5 -242.5 0.0) (float-vector 225.0 -244.51 0.0) (float-vector 225.0 -244.51 420.0)))
         (instance face :init :vertices (list (float-vector 240.0 -244.51 420.0) (float-vector 240.0 -244.51 0.0) (float-vector 232.5 -242.5 0.0) (float-vector 232.5 -242.5 420.0)))
         (instance face :init :vertices (list (float-vector 245.49 -250.0 420.0) (float-vector 245.49 -250.0 0.0) (float-vector 240.0 -244.51 0.0) (float-vector 240.0 -244.51 420.0)))
         (instance face :init :vertices (list (float-vector 247.5 -257.5 420.0) (float-vector 247.5 -257.5 0.0) (float-vector 245.49 -250.0 0.0) (float-vector 245.49 -250.0 420.0)))
         (instance face :init :vertices (list (float-vector -219.51 180.0 420.0) (float-vector -217.5 187.5 420.0) (float-vector -219.51 195.0 420.0) (float-vector -225.0 200.49 420.0) (float-vector -232.5 202.5 420.0) (float-vector -240.0 200.49 420.0) (float-vector -245.49 195.0 420.0) (float-vector -247.5 187.5 420.0) (float-vector -245.49 180.0 420.0) (float-vector -240.0 174.51 420.0) (float-vector -232.5 172.5 420.0) (float-vector -225.0 174.51 420.0)))
         (instance face :init :vertices (list (float-vector -217.5 187.5 0.0) (float-vector -219.51 180.0 0.0) (float-vector -225.0 174.51 0.0) (float-vector -232.5 172.5 0.0) (float-vector -240.0 174.51 0.0) (float-vector -245.49 180.0 0.0) (float-vector -247.5 187.5 0.0) (float-vector -245.49 195.0 0.0) (float-vector -240.0 200.49 0.0) (float-vector -232.5 202.5 0.0) (float-vector -225.0 200.49 0.0) (float-vector -219.51 195.0 0.0)))
         (instance face :init :vertices (list (float-vector -219.51 180.0 420.0) (float-vector -219.51 180.0 0.0) (float-vector -217.5 187.5 0.0) (float-vector -217.5 187.5 420.0)))
         (instance face :init :vertices (list (float-vector -225.0 174.51 420.0) (float-vector -225.0 174.51 0.0) (float-vector -219.51 180.0 0.0) (float-vector -219.51 180.0 420.0)))
         (instance face :init :vertices (list (float-vector -232.5 172.5 420.0) (float-vector -232.5 172.5 0.0) (float-vector -225.0 174.51 0.0) (float-vector -225.0 174.51 420.0)))
         (instance face :init :vertices (list (float-vector -240.0 174.51 420.0) (float-vector -240.0 174.51 0.0) (float-vector -232.5 172.5 0.0) (float-vector -232.5 172.5 420.0)))
         (instance face :init :vertices (list (float-vector -245.49 180.0 420.0) (float-vector -245.49 180.0 0.0) (float-vector -240.0 174.51 0.0) (float-vector -240.0 174.51 420.0)))
         (instance face :init :vertices (list (float-vector -247.5 187.5 420.0) (float-vector -247.5 187.5 0.0) (float-vector -245.49 180.0 0.0) (float-vector -245.49 180.0 420.0)))
         (instance face :init :vertices (list (float-vector -245.49 195.0 420.0) (float-vector -245.49 195.0 0.0) (float-vector -247.5 187.5 0.0) (float-vector -247.5 187.5 420.0)))
         (instance face :init :vertices (list (float-vector -240.0 200.49 420.0) (float-vector -240.0 200.49 0.0) (float-vector -245.49 195.0 0.0) (float-vector -245.49 195.0 420.0)))
         (instance face :init :vertices (list (float-vector -232.5 202.5 420.0) (float-vector -232.5 202.5 0.0) (float-vector -240.0 200.49 0.0) (float-vector -240.0 200.49 420.0)))
         (instance face :init :vertices (list (float-vector -225.0 200.49 420.0) (float-vector -225.0 200.49 0.0) (float-vector -232.5 202.5 0.0) (float-vector -232.5 202.5 420.0)))
         (instance face :init :vertices (list (float-vector -219.51 195.0 420.0) (float-vector -219.51 195.0 0.0) (float-vector -225.0 200.49 0.0) (float-vector -225.0 200.49 420.0)))
         (instance face :init :vertices (list (float-vector -217.5 187.5 420.0) (float-vector -217.5 187.5 0.0) (float-vector -219.51 195.0 0.0) (float-vector -219.51 195.0 420.0)))
         (instance face :init :vertices (list (float-vector -219.51 -195.0 420.0) (float-vector -217.5 -187.5 420.0) (float-vector -219.51 -180.0 420.0) (float-vector -225.0 -174.51 420.0) (float-vector -232.5 -172.5 420.0) (float-vector -240.0 -174.51 420.0) (float-vector -245.49 -180.0 420.0) (float-vector -247.5 -187.5 420.0) (float-vector -245.49 -195.0 420.0) (float-vector -240.0 -200.49 420.0) (float-vector -232.5 -202.5 420.0) (float-vector -225.0 -200.49 420.0)))
         (instance face :init :vertices (list (float-vector -217.5 -187.5 0.0) (float-vector -219.51 -195.0 0.0) (float-vector -225.0 -200.49 0.0) (float-vector -232.5 -202.5 0.0) (float-vector -240.0 -200.49 0.0) (float-vector -245.49 -195.0 0.0) (float-vector -247.5 -187.5 0.0) (float-vector -245.49 -180.0 0.0) (float-vector -240.0 -174.51 0.0) (float-vector -232.5 -172.5 0.0) (float-vector -225.0 -174.51 0.0) (float-vector -219.51 -180.0 0.0)))
         (instance face :init :vertices (list (float-vector -219.51 -195.0 420.0) (float-vector -219.51 -195.0 0.0) (float-vector -217.5 -187.5 0.0) (float-vector -217.5 -187.5 420.0)))
         (instance face :init :vertices (list (float-vector -225.0 -200.49 420.0) (float-vector -225.0 -200.49 0.0) (float-vector -219.51 -195.0 0.0) (float-vector -219.51 -195.0 420.0)))
         (instance face :init :vertices (list (float-vector -232.5 -202.5 420.0) (float-vector -232.5 -202.5 0.0) (float-vector -225.0 -200.49 0.0) (float-vector -225.0 -200.49 420.0)))
         (instance face :init :vertices (list (float-vector -240.0 -200.49 420.0) (float-vector -240.0 -200.49 0.0) (float-vector -232.5 -202.5 0.0) (float-vector -232.5 -202.5 420.0)))
         (instance face :init :vertices (list (float-vector -245.49 -195.0 420.0) (float-vector -245.49 -195.0 0.0) (float-vector -240.0 -200.49 0.0) (float-vector -240.0 -200.49 420.0)))
         (instance face :init :vertices (list (float-vector -247.5 -187.5 420.0) (float-vector -247.5 -187.5 0.0) (float-vector -245.49 -195.0 0.0) (float-vector -245.49 -195.0 420.0)))
         (instance face :init :vertices (list (float-vector -245.49 -180.0 420.0) (float-vector -245.49 -180.0 0.0) (float-vector -247.5 -187.5 0.0) (float-vector -247.5 -187.5 420.0)))
         (instance face :init :vertices (list (float-vector -240.0 -174.51 420.0) (float-vector -240.0 -174.51 0.0) (float-vector -245.49 -180.0 0.0) (float-vector -245.49 -180.0 420.0)))
         (instance face :init :vertices (list (float-vector -232.5 -172.5 420.0) (float-vector -232.5 -172.5 0.0) (float-vector -240.0 -174.51 0.0) (float-vector -240.0 -174.51 420.0)))
         (instance face :init :vertices (list (float-vector -225.0 -174.51 420.0) (float-vector -225.0 -174.51 0.0) (float-vector -232.5 -172.5 0.0) (float-vector -232.5 -172.5 420.0)))
         (instance face :init :vertices (list (float-vector -219.51 -180.0 420.0) (float-vector -219.51 -180.0 0.0) (float-vector -225.0 -174.51 0.0) (float-vector -225.0 -174.51 420.0)))
         (instance face :init :vertices (list (float-vector -217.5 -187.5 420.0) (float-vector -217.5 -187.5 0.0) (float-vector -219.51 -180.0 0.0) (float-vector -219.51 -180.0 420.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-chair-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector -300.0 160.0 750.0) :rot #2f((-5.551115e-17 0.939693 -0.34202) (-1.0 -1.110223e-16 2.775558e-17) (-2.775558e-17 0.34202 0.939693)) :name ":side-larm"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector -300.0 -160.0 750.0) :rot #2f((-5.551115e-17 -0.939693 -0.34202) (1.0 -1.110223e-16 -2.775558e-17) (-2.775558e-17 -0.34202 0.939693)) :name ":side-rarm"))
     (send blink0 :assoc handle1)
     (setq handle2 (make-cascoords :pos (float-vector -300.0 0.0 830.0) :rot #2f((0.5 0.866025 -1.110223e-16) (1.110223e-16 -1.665335e-16 -1.0) (-0.866025 0.5 -1.665335e-16)) :name ":above-larm"))
     (send blink0 :assoc handle2)
     (setq handle3 (make-cascoords :pos (float-vector -330.0 0.0 830.0) :rot #2f((0.5 -0.866025 -1.110223e-16) (-1.110223e-16 -1.665335e-16 1.0) (-0.866025 -0.5 -1.665335e-16)) :name ":above-rarm"))
     (send blink0 :assoc handle3)
     (setq handle4 (make-cascoords :pos (float-vector -370.0 0.0 850.0) :rot #2f((0.5 0.866025 -1.110223e-16) (1.110223e-16 -1.665335e-16 -1.0) (-0.866025 0.5 -1.665335e-16)) :name ":above-cloth-larm"))
     (send blink0 :assoc handle4)
     (setq handle5 (make-cascoords :pos (float-vector -370.0 0.0 850.0) :rot #2f((0.5 -0.866025 -1.110223e-16) (-1.110223e-16 -1.665335e-16 1.0) (-0.866025 -0.5 -1.665335e-16)) :name ":above-cloth-rarm"))
     (send blink0 :assoc handle5)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1 handle2 handle3 handle4 handle5) args))
  (:handle-side-larm (&rest args) (forward-message-to handle0 args))
  (:handle-side-rarm (&rest args) (forward-message-to handle1 args))
  (:handle-above-larm (&rest args) (forward-message-to handle2 args))
  (:handle-above-rarm (&rest args) (forward-message-to handle3 args))
  (:handle-above-cloth-larm (&rest args) (forward-message-to handle4 args))
  (:handle-above-cloth-rarm (&rest args) (forward-message-to handle5 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room610-chair (&rest args) (instance* room610-chair-object :init args))
;; (format *error-output* "(instance room610-chair-object :init) for generating model~%")
