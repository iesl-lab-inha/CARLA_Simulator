;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room602-kitchen-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1 handle2 handle3 handle4
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 ))
(defmethod room602-kitchen-object
  (:init
   (&rest args &key (name "room602-kitchen") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -66.6173 1106.5 1010.0) (float-vector -63.0 1120.0 1010.0) (float-vector -66.6173 1133.5 1010.0) (float-vector -76.5 1143.38 1010.0) (float-vector -90.0 1147.0 1010.0) (float-vector -103.5 1143.38 1010.0) (float-vector -113.383 1133.5 1010.0) (float-vector -117.0 1120.0 1010.0) (float-vector -113.383 1106.5 1010.0) (float-vector -103.5 1096.62 1010.0) (float-vector -90.0 1093.0 1010.0) (float-vector -76.5 1096.62 1010.0)))
         (instance face :init :vertices (list (float-vector -63.0 1120.0 840.0) (float-vector -66.6173 1106.5 840.0) (float-vector -76.5 1096.62 840.0) (float-vector -90.0 1093.0 840.0) (float-vector -103.5 1096.62 840.0) (float-vector -113.383 1106.5 840.0) (float-vector -117.0 1120.0 840.0) (float-vector -113.383 1133.5 840.0) (float-vector -103.5 1143.38 840.0) (float-vector -90.0 1147.0 840.0) (float-vector -76.5 1143.38 840.0) (float-vector -66.6173 1133.5 840.0)))
         (instance face :init :vertices (list (float-vector -66.6173 1106.5 1010.0) (float-vector -66.6173 1106.5 840.0) (float-vector -63.0 1120.0 840.0) (float-vector -63.0 1120.0 1010.0)))
         (instance face :init :vertices (list (float-vector -76.5 1096.62 1010.0) (float-vector -76.5 1096.62 840.0) (float-vector -66.6173 1106.5 840.0) (float-vector -66.6173 1106.5 1010.0)))
         (instance face :init :vertices (list (float-vector -90.0 1093.0 1010.0) (float-vector -90.0 1093.0 840.0) (float-vector -76.5 1096.62 840.0) (float-vector -76.5 1096.62 1010.0)))
         (instance face :init :vertices (list (float-vector -103.5 1096.62 1010.0) (float-vector -103.5 1096.62 840.0) (float-vector -90.0 1093.0 840.0) (float-vector -90.0 1093.0 1010.0)))
         (instance face :init :vertices (list (float-vector -113.383 1106.5 1010.0) (float-vector -113.383 1106.5 840.0) (float-vector -103.5 1096.62 840.0) (float-vector -103.5 1096.62 1010.0)))
         (instance face :init :vertices (list (float-vector -117.0 1120.0 1010.0) (float-vector -117.0 1120.0 840.0) (float-vector -113.383 1106.5 840.0) (float-vector -113.383 1106.5 1010.0)))
         (instance face :init :vertices (list (float-vector -113.383 1133.5 1010.0) (float-vector -113.383 1133.5 840.0) (float-vector -117.0 1120.0 840.0) (float-vector -117.0 1120.0 1010.0)))
         (instance face :init :vertices (list (float-vector -103.5 1143.38 1010.0) (float-vector -103.5 1143.38 840.0) (float-vector -113.383 1133.5 840.0) (float-vector -113.383 1133.5 1010.0)))
         (instance face :init :vertices (list (float-vector -90.0 1147.0 1010.0) (float-vector -90.0 1147.0 840.0) (float-vector -103.5 1143.38 840.0) (float-vector -103.5 1143.38 1010.0)))
         (instance face :init :vertices (list (float-vector -76.5 1143.38 1010.0) (float-vector -76.5 1143.38 840.0) (float-vector -90.0 1147.0 840.0) (float-vector -90.0 1147.0 1010.0)))
         (instance face :init :vertices (list (float-vector -66.6173 1133.5 1010.0) (float-vector -66.6173 1133.5 840.0) (float-vector -76.5 1143.38 840.0) (float-vector -76.5 1143.38 1010.0)))
         (instance face :init :vertices (list (float-vector -63.0 1120.0 1010.0) (float-vector -63.0 1120.0 840.0) (float-vector -66.6173 1133.5 840.0) (float-vector -66.6173 1133.5 1010.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 310.0 855.0) (float-vector -340.0 310.0 855.0) (float-vector -340.0 -1200.0 855.0) (float-vector 340.0 -1200.0 855.0)))
         (instance face :init :vertices (list (float-vector -340.0 310.0 795.0) (float-vector 340.0 310.0 795.0) (float-vector 340.0 -1200.0 795.0) (float-vector -340.0 -1200.0 795.0)))
         (instance face :init :vertices (list (float-vector 340.0 310.0 855.0) (float-vector 340.0 310.0 795.0) (float-vector -340.0 310.0 795.0) (float-vector -340.0 310.0 855.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1200.0 855.0) (float-vector 340.0 -1200.0 795.0) (float-vector 340.0 310.0 795.0) (float-vector 340.0 310.0 855.0)))
         (instance face :init :vertices (list (float-vector -340.0 -1200.0 855.0) (float-vector -340.0 -1200.0 795.0) (float-vector 340.0 -1200.0 795.0) (float-vector 340.0 -1200.0 855.0)))
         (instance face :init :vertices (list (float-vector -340.0 310.0 855.0) (float-vector -340.0 310.0 795.0) (float-vector -340.0 -1200.0 795.0) (float-vector -340.0 -1200.0 855.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 360.0 825.0) (float-vector 202.515 360.985 825.0) (float-vector 214.721 363.915 825.0) (float-vector 226.319 368.719 825.0) (float-vector 237.023 375.279 825.0) (float-vector 246.569 383.431 825.0) (float-vector 254.721 392.977 825.0) (float-vector 261.281 403.681 825.0) (float-vector 266.085 415.279 825.0) (float-vector 269.015 427.485 825.0) (float-vector 270.0 440.0 825.0) (float-vector 270.0 1090.0 825.0) (float-vector 269.015 1102.51 825.0) (float-vector 266.085 1114.72 825.0) (float-vector 261.281 1126.32 825.0) (float-vector 254.721 1137.02 825.0) (float-vector 246.569 1146.57 825.0) (float-vector 237.023 1154.72 825.0) (float-vector 226.319 1161.28 825.0) (float-vector 214.721 1166.08 825.0) (float-vector 202.515 1169.02 825.0) (float-vector 190.0 1170.0 825.0) (float-vector -190.0 1170.0 825.0) (float-vector -202.515 1169.02 825.0) (float-vector -214.721 1166.08 825.0) (float-vector -226.319 1161.28 825.0) (float-vector -237.023 1154.72 825.0) (float-vector -246.569 1146.57 825.0) (float-vector -254.721 1137.02 825.0) (float-vector -261.281 1126.32 825.0) (float-vector -266.085 1114.72 825.0) (float-vector -269.015 1102.51 825.0) (float-vector -270.0 1090.0 825.0) (float-vector -270.0 440.0 825.0) (float-vector -269.015 427.485 825.0) (float-vector -266.085 415.279 825.0) (float-vector -261.281 403.681 825.0) (float-vector -254.721 392.977 825.0) (float-vector -246.569 383.431 825.0) (float-vector -237.023 375.279 825.0) (float-vector -226.319 368.719 825.0) (float-vector -214.721 363.915 825.0) (float-vector -202.515 360.985 825.0) (float-vector -190.0 360.0 825.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -246.934 907.452 825.0) (float-vector -237.813 945.445 825.0) (float-vector -222.861 981.544 825.0) (float-vector -202.445 1014.86 825.0) (float-vector -177.07 1044.57 825.0) (float-vector -147.359 1069.95 825.0) (float-vector -114.044 1090.36 825.0) (float-vector -77.9452 1105.31 825.0) (float-vector -39.9522 1114.43 825.0) (float-vector -1.0 1117.5 825.0) (float-vector 1.0 1117.5 825.0) (float-vector 39.9522 1114.43 825.0) (float-vector 77.9452 1105.31 825.0) (float-vector 114.044 1090.36 825.0) (float-vector 147.359 1069.95 825.0) (float-vector 177.07 1044.57 825.0) (float-vector 202.445 1014.86 825.0) (float-vector 222.861 981.544 825.0) (float-vector 237.813 945.445 825.0) (float-vector 246.934 907.452 825.0) (float-vector 250.0 868.5 825.0) (float-vector 250.0 452.5 825.0) (float-vector 249.261 443.114 825.0) (float-vector 247.063 433.959 825.0) (float-vector 243.46 425.261 825.0) (float-vector 238.541 417.233 825.0) (float-vector 232.426 410.074 825.0) (float-vector 225.267 403.959 825.0) (float-vector 217.239 399.04 825.0) (float-vector 208.541 395.437 825.0) (float-vector 199.386 393.239 825.0) (float-vector 190.0 392.5 825.0) (float-vector -190.0 392.5 825.0) (float-vector -199.386 393.239 825.0) (float-vector -208.541 395.437 825.0) (float-vector -217.239 399.04 825.0) (float-vector -225.267 403.959 825.0) (float-vector -232.426 410.074 825.0) (float-vector -238.541 417.233 825.0) (float-vector -243.46 425.261 825.0) (float-vector -247.063 433.959 825.0) (float-vector -249.261 443.114 825.0) (float-vector -250.0 452.5 825.0) (float-vector -250.0 868.5 825.0)))
))
         (instance face :init :vertices (list (float-vector 190.0 360.0 825.0) (float-vector -190.0 360.0 825.0) (float-vector -190.0 360.0 855.0) (float-vector 190.0 360.0 855.0)))
         (instance face :init :vertices (list (float-vector -190.0 360.0 855.0) (float-vector -190.0 360.0 825.0) (float-vector -202.515 360.985 825.0) (float-vector -202.515 360.985 855.0)))
         (instance face :init :vertices (list (float-vector -202.515 360.985 855.0) (float-vector -202.515 360.985 825.0) (float-vector -214.721 363.915 825.0) (float-vector -214.721 363.915 855.0)))
         (instance face :init :vertices (list (float-vector -214.721 363.915 855.0) (float-vector -214.721 363.915 825.0) (float-vector -226.319 368.719 825.0) (float-vector -226.319 368.719 855.0)))
         (instance face :init :vertices (list (float-vector -226.319 368.719 855.0) (float-vector -226.319 368.719 825.0) (float-vector -237.023 375.279 825.0) (float-vector -237.023 375.279 855.0)))
         (instance face :init :vertices (list (float-vector -237.023 375.279 855.0) (float-vector -237.023 375.279 825.0) (float-vector -246.569 383.431 825.0) (float-vector -246.569 383.431 855.0)))
         (instance face :init :vertices (list (float-vector -246.569 383.431 855.0) (float-vector -246.569 383.431 825.0) (float-vector -254.721 392.977 825.0) (float-vector -254.721 392.977 855.0)))
         (instance face :init :vertices (list (float-vector -254.721 392.977 855.0) (float-vector -254.721 392.977 825.0) (float-vector -261.281 403.681 825.0) (float-vector -261.281 403.681 855.0)))
         (instance face :init :vertices (list (float-vector -261.281 403.681 855.0) (float-vector -261.281 403.681 825.0) (float-vector -266.085 415.279 825.0) (float-vector -266.085 415.279 855.0)))
         (instance face :init :vertices (list (float-vector -266.085 415.279 855.0) (float-vector -266.085 415.279 825.0) (float-vector -269.015 427.485 825.0) (float-vector -269.015 427.485 855.0)))
         (instance face :init :vertices (list (float-vector -269.015 427.485 855.0) (float-vector -269.015 427.485 825.0) (float-vector -270.0 440.0 825.0) (float-vector -270.0 440.0 855.0)))
         (instance face :init :vertices (list (float-vector -270.0 440.0 855.0) (float-vector -270.0 440.0 825.0) (float-vector -270.0 1090.0 825.0) (float-vector -270.0 1090.0 855.0)))
         (instance face :init :vertices (list (float-vector -270.0 1090.0 855.0) (float-vector -270.0 1090.0 825.0) (float-vector -269.015 1102.51 825.0) (float-vector -269.015 1102.51 855.0)))
         (instance face :init :vertices (list (float-vector -269.015 1102.51 855.0) (float-vector -269.015 1102.51 825.0) (float-vector -266.085 1114.72 825.0) (float-vector -266.085 1114.72 855.0)))
         (instance face :init :vertices (list (float-vector -266.085 1114.72 855.0) (float-vector -266.085 1114.72 825.0) (float-vector -261.281 1126.32 825.0) (float-vector -261.281 1126.32 855.0)))
         (instance face :init :vertices (list (float-vector -261.281 1126.32 855.0) (float-vector -261.281 1126.32 825.0) (float-vector -254.721 1137.02 825.0) (float-vector -254.721 1137.02 855.0)))
         (instance face :init :vertices (list (float-vector -254.721 1137.02 855.0) (float-vector -254.721 1137.02 825.0) (float-vector -246.569 1146.57 825.0) (float-vector -246.569 1146.57 855.0)))
         (instance face :init :vertices (list (float-vector -246.569 1146.57 855.0) (float-vector -246.569 1146.57 825.0) (float-vector -237.023 1154.72 825.0) (float-vector -237.023 1154.72 855.0)))
         (instance face :init :vertices (list (float-vector -237.023 1154.72 855.0) (float-vector -237.023 1154.72 825.0) (float-vector -226.319 1161.28 825.0) (float-vector -226.319 1161.28 855.0)))
         (instance face :init :vertices (list (float-vector -226.319 1161.28 855.0) (float-vector -226.319 1161.28 825.0) (float-vector -214.721 1166.08 825.0) (float-vector -214.721 1166.08 855.0)))
         (instance face :init :vertices (list (float-vector -214.721 1166.08 855.0) (float-vector -214.721 1166.08 825.0) (float-vector -202.515 1169.02 825.0) (float-vector -202.515 1169.02 855.0)))
         (instance face :init :vertices (list (float-vector -202.515 1169.02 855.0) (float-vector -202.515 1169.02 825.0) (float-vector -190.0 1170.0 825.0) (float-vector -190.0 1170.0 855.0)))
         (instance face :init :vertices (list (float-vector -190.0 1170.0 855.0) (float-vector -190.0 1170.0 825.0) (float-vector 190.0 1170.0 825.0) (float-vector 190.0 1170.0 855.0)))
         (instance face :init :vertices (list (float-vector 190.0 1170.0 855.0) (float-vector 190.0 1170.0 825.0) (float-vector 202.515 1169.02 825.0) (float-vector 202.515 1169.02 855.0)))
         (instance face :init :vertices (list (float-vector 202.515 1169.02 855.0) (float-vector 202.515 1169.02 825.0) (float-vector 214.721 1166.08 825.0) (float-vector 214.721 1166.08 855.0)))
         (instance face :init :vertices (list (float-vector 214.721 1166.08 855.0) (float-vector 214.721 1166.08 825.0) (float-vector 226.319 1161.28 825.0) (float-vector 226.319 1161.28 855.0)))
         (instance face :init :vertices (list (float-vector 226.319 1161.28 855.0) (float-vector 226.319 1161.28 825.0) (float-vector 237.023 1154.72 825.0) (float-vector 237.023 1154.72 855.0)))
         (instance face :init :vertices (list (float-vector 237.023 1154.72 855.0) (float-vector 237.023 1154.72 825.0) (float-vector 246.569 1146.57 825.0) (float-vector 246.569 1146.57 855.0)))
         (instance face :init :vertices (list (float-vector 246.569 1146.57 855.0) (float-vector 246.569 1146.57 825.0) (float-vector 254.721 1137.02 825.0) (float-vector 254.721 1137.02 855.0)))
         (instance face :init :vertices (list (float-vector 254.721 1137.02 855.0) (float-vector 254.721 1137.02 825.0) (float-vector 261.281 1126.32 825.0) (float-vector 261.281 1126.32 855.0)))
         (instance face :init :vertices (list (float-vector 261.281 1126.32 855.0) (float-vector 261.281 1126.32 825.0) (float-vector 266.085 1114.72 825.0) (float-vector 266.085 1114.72 855.0)))
         (instance face :init :vertices (list (float-vector 266.085 1114.72 855.0) (float-vector 266.085 1114.72 825.0) (float-vector 269.015 1102.51 825.0) (float-vector 269.015 1102.51 855.0)))
         (instance face :init :vertices (list (float-vector 269.015 1102.51 855.0) (float-vector 269.015 1102.51 825.0) (float-vector 270.0 1090.0 825.0) (float-vector 270.0 1090.0 855.0)))
         (instance face :init :vertices (list (float-vector 270.0 1090.0 855.0) (float-vector 270.0 1090.0 825.0) (float-vector 270.0 440.0 825.0) (float-vector 270.0 440.0 855.0)))
         (instance face :init :vertices (list (float-vector 270.0 440.0 855.0) (float-vector 270.0 440.0 825.0) (float-vector 269.015 427.485 825.0) (float-vector 269.015 427.485 855.0)))
         (instance face :init :vertices (list (float-vector 269.015 427.485 855.0) (float-vector 269.015 427.485 825.0) (float-vector 266.085 415.279 825.0) (float-vector 266.085 415.279 855.0)))
         (instance face :init :vertices (list (float-vector 266.085 415.279 855.0) (float-vector 266.085 415.279 825.0) (float-vector 261.281 403.681 825.0) (float-vector 261.281 403.681 855.0)))
         (instance face :init :vertices (list (float-vector 261.281 403.681 855.0) (float-vector 261.281 403.681 825.0) (float-vector 254.721 392.977 825.0) (float-vector 254.721 392.977 855.0)))
         (instance face :init :vertices (list (float-vector 254.721 392.977 855.0) (float-vector 254.721 392.977 825.0) (float-vector 246.569 383.431 825.0) (float-vector 246.569 383.431 855.0)))
         (instance face :init :vertices (list (float-vector 246.569 383.431 855.0) (float-vector 246.569 383.431 825.0) (float-vector 237.023 375.279 825.0) (float-vector 237.023 375.279 855.0)))
         (instance face :init :vertices (list (float-vector 237.023 375.279 855.0) (float-vector 237.023 375.279 825.0) (float-vector 226.319 368.719 825.0) (float-vector 226.319 368.719 855.0)))
         (instance face :init :vertices (list (float-vector 226.319 368.719 855.0) (float-vector 226.319 368.719 825.0) (float-vector 214.721 363.915 825.0) (float-vector 214.721 363.915 855.0)))
         (instance face :init :vertices (list (float-vector 214.721 363.915 855.0) (float-vector 214.721 363.915 825.0) (float-vector 202.515 360.985 825.0) (float-vector 202.515 360.985 855.0)))
         (instance face :init :vertices (list (float-vector 202.515 360.985 855.0) (float-vector 202.515 360.985 825.0) (float-vector 190.0 360.0 825.0) (float-vector 190.0 360.0 855.0)))
         (instance face :init :vertices (list (float-vector -340.0 1200.0 625.0) (float-vector -340.0 1200.0 855.0) (float-vector 340.0 1200.0 855.0) (float-vector 340.0 1200.0 625.0)))
         (instance face :init :vertices (list (float-vector -340.0 1200.0 625.0) (float-vector 340.0 1200.0 625.0) (float-vector 340.0 310.0 625.0) (float-vector -340.0 310.0 625.0)))
         (instance face :init :vertices (list (float-vector 340.0 1200.0 855.0) (float-vector -340.0 1200.0 855.0) (float-vector -340.0 310.0 855.0) (float-vector 340.0 310.0 855.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 190.0 360.0 855.0) (float-vector -190.0 360.0 855.0) (float-vector -202.515 360.985 855.0) (float-vector -214.721 363.915 855.0) (float-vector -226.319 368.719 855.0) (float-vector -237.023 375.279 855.0) (float-vector -246.569 383.431 855.0) (float-vector -254.721 392.977 855.0) (float-vector -261.281 403.681 855.0) (float-vector -266.085 415.279 855.0) (float-vector -269.015 427.485 855.0) (float-vector -270.0 440.0 855.0) (float-vector -270.0 1090.0 855.0) (float-vector -269.015 1102.51 855.0) (float-vector -266.085 1114.72 855.0) (float-vector -261.281 1126.32 855.0) (float-vector -254.721 1137.02 855.0) (float-vector -246.569 1146.57 855.0) (float-vector -237.023 1154.72 855.0) (float-vector -226.319 1161.28 855.0) (float-vector -214.721 1166.08 855.0) (float-vector -202.515 1169.02 855.0) (float-vector -190.0 1170.0 855.0) (float-vector 190.0 1170.0 855.0) (float-vector 202.515 1169.02 855.0) (float-vector 214.721 1166.08 855.0) (float-vector 226.319 1161.28 855.0) (float-vector 237.023 1154.72 855.0) (float-vector 246.569 1146.57 855.0) (float-vector 254.721 1137.02 855.0) (float-vector 261.281 1126.32 855.0) (float-vector 266.085 1114.72 855.0) (float-vector 269.015 1102.51 855.0) (float-vector 270.0 1090.0 855.0) (float-vector 270.0 440.0 855.0) (float-vector 269.015 427.485 855.0) (float-vector 266.085 415.279 855.0) (float-vector 261.281 403.681 855.0) (float-vector 254.721 392.977 855.0) (float-vector 246.569 383.431 855.0) (float-vector 237.023 375.279 855.0) (float-vector 226.319 368.719 855.0) (float-vector 214.721 363.915 855.0) (float-vector 202.515 360.985 855.0)))
))
         (instance face :init :vertices (list (float-vector 340.0 310.0 625.0) (float-vector 340.0 1200.0 625.0) (float-vector 340.0 1200.0 855.0) (float-vector 340.0 310.0 855.0)))
         (instance face :init :vertices (list (float-vector -340.0 310.0 855.0) (float-vector -340.0 1200.0 855.0) (float-vector -340.0 1200.0 625.0) (float-vector -340.0 310.0 625.0)))
         (instance face :init :vertices (list (float-vector -340.0 310.0 625.0) (float-vector 340.0 310.0 625.0) (float-vector 340.0 310.0 855.0) (float-vector -340.0 310.0 855.0)))
         (instance face :init :vertices (list (float-vector -250.0 452.5 825.0) (float-vector -249.261 443.114 825.0) (float-vector -249.261 443.114 675.0) (float-vector -250.0 452.5 675.0)))
         (instance face :init :vertices (list (float-vector -249.261 443.114 675.0) (float-vector -249.261 443.114 825.0) (float-vector -247.063 433.959 825.0) (float-vector -247.063 433.959 675.0)))
         (instance face :init :vertices (list (float-vector -247.063 433.959 675.0) (float-vector -247.063 433.959 825.0) (float-vector -243.46 425.261 825.0) (float-vector -243.46 425.261 675.0)))
         (instance face :init :vertices (list (float-vector -243.46 425.261 675.0) (float-vector -243.46 425.261 825.0) (float-vector -238.541 417.233 825.0) (float-vector -238.541 417.233 675.0)))
         (instance face :init :vertices (list (float-vector -238.541 417.233 675.0) (float-vector -238.541 417.233 825.0) (float-vector -232.426 410.074 825.0) (float-vector -232.426 410.074 675.0)))
         (instance face :init :vertices (list (float-vector -232.426 410.074 675.0) (float-vector -232.426 410.074 825.0) (float-vector -225.267 403.959 825.0) (float-vector -225.267 403.959 675.0)))
         (instance face :init :vertices (list (float-vector -225.267 403.959 675.0) (float-vector -225.267 403.959 825.0) (float-vector -217.239 399.04 825.0) (float-vector -217.239 399.04 675.0)))
         (instance face :init :vertices (list (float-vector -217.239 399.04 675.0) (float-vector -217.239 399.04 825.0) (float-vector -208.541 395.437 825.0) (float-vector -208.541 395.437 675.0)))
         (instance face :init :vertices (list (float-vector -208.541 395.437 675.0) (float-vector -208.541 395.437 825.0) (float-vector -199.386 393.239 825.0) (float-vector -199.386 393.239 675.0)))
         (instance face :init :vertices (list (float-vector -199.386 393.239 675.0) (float-vector -199.386 393.239 825.0) (float-vector -190.0 392.5 825.0) (float-vector -190.0 392.5 675.0)))
         (instance face :init :vertices (list (float-vector -190.0 392.5 675.0) (float-vector -190.0 392.5 825.0) (float-vector 190.0 392.5 825.0) (float-vector 190.0 392.5 675.0)))
         (instance face :init :vertices (list (float-vector 190.0 392.5 675.0) (float-vector 190.0 392.5 825.0) (float-vector 199.386 393.239 825.0) (float-vector 199.386 393.239 675.0)))
         (instance face :init :vertices (list (float-vector 199.386 393.239 675.0) (float-vector 199.386 393.239 825.0) (float-vector 208.541 395.437 825.0) (float-vector 208.541 395.437 675.0)))
         (instance face :init :vertices (list (float-vector 208.541 395.437 675.0) (float-vector 208.541 395.437 825.0) (float-vector 217.239 399.04 825.0) (float-vector 217.239 399.04 675.0)))
         (instance face :init :vertices (list (float-vector 217.239 399.04 675.0) (float-vector 217.239 399.04 825.0) (float-vector 225.267 403.959 825.0) (float-vector 225.267 403.959 675.0)))
         (instance face :init :vertices (list (float-vector 225.267 403.959 675.0) (float-vector 225.267 403.959 825.0) (float-vector 232.426 410.074 825.0) (float-vector 232.426 410.074 675.0)))
         (instance face :init :vertices (list (float-vector 232.426 410.074 675.0) (float-vector 232.426 410.074 825.0) (float-vector 238.541 417.233 825.0) (float-vector 238.541 417.233 675.0)))
         (instance face :init :vertices (list (float-vector 238.541 417.233 675.0) (float-vector 238.541 417.233 825.0) (float-vector 243.46 425.261 825.0) (float-vector 243.46 425.261 675.0)))
         (instance face :init :vertices (list (float-vector 243.46 425.261 675.0) (float-vector 243.46 425.261 825.0) (float-vector 247.063 433.959 825.0) (float-vector 247.063 433.959 675.0)))
         (instance face :init :vertices (list (float-vector 247.063 433.959 675.0) (float-vector 247.063 433.959 825.0) (float-vector 249.261 443.114 825.0) (float-vector 249.261 443.114 675.0)))
         (instance face :init :vertices (list (float-vector 249.261 443.114 675.0) (float-vector 249.261 443.114 825.0) (float-vector 250.0 452.5 825.0) (float-vector 250.0 452.5 675.0)))
         (instance face :init :vertices (list (float-vector 250.0 452.5 675.0) (float-vector 250.0 452.5 825.0) (float-vector 250.0 868.5 825.0) (float-vector 250.0 868.5 675.0)))
         (instance face :init :vertices (list (float-vector 250.0 868.5 675.0) (float-vector 250.0 868.5 825.0) (float-vector 246.934 907.452 825.0) (float-vector 246.934 907.452 675.0)))
         (instance face :init :vertices (list (float-vector 246.934 907.452 675.0) (float-vector 246.934 907.452 825.0) (float-vector 237.813 945.445 825.0) (float-vector 237.813 945.445 675.0)))
         (instance face :init :vertices (list (float-vector 237.813 945.445 675.0) (float-vector 237.813 945.445 825.0) (float-vector 222.861 981.544 825.0) (float-vector 222.861 981.544 675.0)))
         (instance face :init :vertices (list (float-vector 222.861 981.544 675.0) (float-vector 222.861 981.544 825.0) (float-vector 202.445 1014.86 825.0) (float-vector 202.445 1014.86 675.0)))
         (instance face :init :vertices (list (float-vector 202.445 1014.86 675.0) (float-vector 202.445 1014.86 825.0) (float-vector 177.07 1044.57 825.0) (float-vector 177.07 1044.57 675.0)))
         (instance face :init :vertices (list (float-vector 177.07 1044.57 675.0) (float-vector 177.07 1044.57 825.0) (float-vector 147.359 1069.95 825.0) (float-vector 147.359 1069.95 675.0)))
         (instance face :init :vertices (list (float-vector 147.359 1069.95 675.0) (float-vector 147.359 1069.95 825.0) (float-vector 114.044 1090.36 825.0) (float-vector 114.044 1090.36 675.0)))
         (instance face :init :vertices (list (float-vector 114.044 1090.36 675.0) (float-vector 114.044 1090.36 825.0) (float-vector 77.9452 1105.31 825.0) (float-vector 77.9452 1105.31 675.0)))
         (instance face :init :vertices (list (float-vector 77.9452 1105.31 675.0) (float-vector 77.9452 1105.31 825.0) (float-vector 39.9522 1114.43 825.0) (float-vector 39.9522 1114.43 675.0)))
         (instance face :init :vertices (list (float-vector 39.9522 1114.43 675.0) (float-vector 39.9522 1114.43 825.0) (float-vector 1.0 1117.5 825.0) (float-vector 1.0 1117.5 675.0)))
         (instance face :init :vertices (list (float-vector 1.0 1117.5 675.0) (float-vector 1.0 1117.5 825.0) (float-vector -1.0 1117.5 825.0) (float-vector -1.0 1117.5 675.0)))
         (instance face :init :vertices (list (float-vector -1.0 1117.5 675.0) (float-vector -1.0 1117.5 825.0) (float-vector -39.9522 1114.43 825.0) (float-vector -39.9522 1114.43 675.0)))
         (instance face :init :vertices (list (float-vector -39.9522 1114.43 675.0) (float-vector -39.9522 1114.43 825.0) (float-vector -77.9452 1105.31 825.0) (float-vector -77.9452 1105.31 675.0)))
         (instance face :init :vertices (list (float-vector -77.9452 1105.31 675.0) (float-vector -77.9452 1105.31 825.0) (float-vector -114.044 1090.36 825.0) (float-vector -114.044 1090.36 675.0)))
         (instance face :init :vertices (list (float-vector -114.044 1090.36 675.0) (float-vector -114.044 1090.36 825.0) (float-vector -147.359 1069.95 825.0) (float-vector -147.359 1069.95 675.0)))
         (instance face :init :vertices (list (float-vector -147.359 1069.95 675.0) (float-vector -147.359 1069.95 825.0) (float-vector -177.07 1044.57 825.0) (float-vector -177.07 1044.57 675.0)))
         (instance face :init :vertices (list (float-vector -177.07 1044.57 675.0) (float-vector -177.07 1044.57 825.0) (float-vector -202.445 1014.86 825.0) (float-vector -202.445 1014.86 675.0)))
         (instance face :init :vertices (list (float-vector -202.445 1014.86 675.0) (float-vector -202.445 1014.86 825.0) (float-vector -222.861 981.544 825.0) (float-vector -222.861 981.544 675.0)))
         (instance face :init :vertices (list (float-vector -222.861 981.544 675.0) (float-vector -222.861 981.544 825.0) (float-vector -237.813 945.445 825.0) (float-vector -237.813 945.445 675.0)))
         (instance face :init :vertices (list (float-vector -237.813 945.445 675.0) (float-vector -237.813 945.445 825.0) (float-vector -246.934 907.452 825.0) (float-vector -246.934 907.452 675.0)))
         (instance face :init :vertices (list (float-vector -246.934 907.452 675.0) (float-vector -246.934 907.452 825.0) (float-vector -250.0 868.5 825.0) (float-vector -250.0 868.5 675.0)))
         (instance face :init :vertices (list (float-vector -250.0 868.5 675.0) (float-vector -250.0 868.5 825.0) (float-vector -250.0 452.5 825.0) (float-vector -250.0 452.5 675.0)))
         (instance face :init :vertices (list (float-vector -250.0 452.5 675.0) (float-vector -249.261 443.114 675.0) (float-vector -247.063 433.959 675.0) (float-vector -243.46 425.261 675.0) (float-vector -238.541 417.233 675.0) (float-vector -232.426 410.074 675.0) (float-vector -225.267 403.959 675.0) (float-vector -217.239 399.04 675.0) (float-vector -208.541 395.437 675.0) (float-vector -199.386 393.239 675.0) (float-vector -190.0 392.5 675.0) (float-vector 190.0 392.5 675.0) (float-vector 199.386 393.239 675.0) (float-vector 208.541 395.437 675.0) (float-vector 217.239 399.04 675.0) (float-vector 225.267 403.959 675.0) (float-vector 232.426 410.074 675.0) (float-vector 238.541 417.233 675.0) (float-vector 243.46 425.261 675.0) (float-vector 247.063 433.959 675.0) (float-vector 249.261 443.114 675.0) (float-vector 250.0 452.5 675.0) (float-vector 250.0 868.5 675.0) (float-vector 246.934 907.452 675.0) (float-vector 237.813 945.445 675.0) (float-vector 222.861 981.544 675.0) (float-vector 202.445 1014.86 675.0) (float-vector 177.07 1044.57 675.0) (float-vector 147.359 1069.95 675.0) (float-vector 114.044 1090.36 675.0) (float-vector 77.9452 1105.31 675.0) (float-vector 39.9522 1114.43 675.0) (float-vector 1.0 1117.5 675.0) (float-vector -1.0 1117.5 675.0) (float-vector -39.9522 1114.43 675.0) (float-vector -77.9452 1105.31 675.0) (float-vector -114.044 1090.36 675.0) (float-vector -147.359 1069.95 675.0) (float-vector -177.07 1044.57 675.0) (float-vector -202.445 1014.86 675.0) (float-vector -222.861 981.544 675.0) (float-vector -237.813 945.445 675.0) (float-vector -246.934 907.452 675.0) (float-vector -250.0 868.5 675.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 342.5 -612.5 732.5) (float-vector 337.5 -612.5 732.5) (float-vector 337.5 -617.5 732.5) (float-vector 342.5 -617.5 732.5)))
         (instance face :init :vertices (list (float-vector 337.5 -612.5 727.5) (float-vector 342.5 -612.5 727.5) (float-vector 342.5 -617.5 727.5) (float-vector 337.5 -617.5 727.5)))
         (instance face :init :vertices (list (float-vector 342.5 -612.5 732.5) (float-vector 342.5 -612.5 727.5) (float-vector 337.5 -612.5 727.5) (float-vector 337.5 -612.5 732.5)))
         (instance face :init :vertices (list (float-vector 342.5 -617.5 732.5) (float-vector 342.5 -617.5 727.5) (float-vector 342.5 -612.5 727.5) (float-vector 342.5 -612.5 732.5)))
         (instance face :init :vertices (list (float-vector 337.5 -617.5 732.5) (float-vector 337.5 -617.5 727.5) (float-vector 342.5 -617.5 727.5) (float-vector 342.5 -617.5 732.5)))
         (instance face :init :vertices (list (float-vector 337.5 -612.5 732.5) (float-vector 337.5 -612.5 727.5) (float-vector 337.5 -617.5 727.5) (float-vector 337.5 -617.5 732.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 342.5 -547.5 752.5) (float-vector 337.5 -547.5 752.5) (float-vector 337.5 -552.5 752.5) (float-vector 342.5 -552.5 752.5)))
         (instance face :init :vertices (list (float-vector 337.5 -547.5 747.5) (float-vector 342.5 -547.5 747.5) (float-vector 342.5 -552.5 747.5) (float-vector 337.5 -552.5 747.5)))
         (instance face :init :vertices (list (float-vector 342.5 -547.5 752.5) (float-vector 342.5 -547.5 747.5) (float-vector 337.5 -547.5 747.5) (float-vector 337.5 -547.5 752.5)))
         (instance face :init :vertices (list (float-vector 342.5 -552.5 752.5) (float-vector 342.5 -552.5 747.5) (float-vector 342.5 -547.5 747.5) (float-vector 342.5 -547.5 752.5)))
         (instance face :init :vertices (list (float-vector 337.5 -552.5 752.5) (float-vector 337.5 -552.5 747.5) (float-vector 342.5 -552.5 747.5) (float-vector 342.5 -552.5 752.5)))
         (instance face :init :vertices (list (float-vector 337.5 -547.5 752.5) (float-vector 337.5 -547.5 747.5) (float-vector 337.5 -552.5 747.5) (float-vector 337.5 -552.5 752.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 342.5 -482.5 732.5) (float-vector 337.5 -482.5 732.5) (float-vector 337.5 -487.5 732.5) (float-vector 342.5 -487.5 732.5)))
         (instance face :init :vertices (list (float-vector 337.5 -482.5 727.5) (float-vector 342.5 -482.5 727.5) (float-vector 342.5 -487.5 727.5) (float-vector 337.5 -487.5 727.5)))
         (instance face :init :vertices (list (float-vector 342.5 -482.5 732.5) (float-vector 342.5 -482.5 727.5) (float-vector 337.5 -482.5 727.5) (float-vector 337.5 -482.5 732.5)))
         (instance face :init :vertices (list (float-vector 342.5 -487.5 732.5) (float-vector 342.5 -487.5 727.5) (float-vector 342.5 -482.5 727.5) (float-vector 342.5 -482.5 732.5)))
         (instance face :init :vertices (list (float-vector 337.5 -487.5 732.5) (float-vector 337.5 -487.5 727.5) (float-vector 342.5 -487.5 727.5) (float-vector 342.5 -487.5 732.5)))
         (instance face :init :vertices (list (float-vector 337.5 -482.5 732.5) (float-vector 337.5 -482.5 727.5) (float-vector 337.5 -487.5 727.5) (float-vector 337.5 -487.5 732.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 -950.0 805.0) (float-vector 290.0 -950.0 805.0) (float-vector 290.0 -1150.0 805.0) (float-vector 340.0 -1150.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -950.0 625.0) (float-vector 340.0 -950.0 625.0) (float-vector 340.0 -1150.0 625.0) (float-vector 290.0 -1150.0 625.0)))
         (instance face :init :vertices (list (float-vector 340.0 -950.0 805.0) (float-vector 340.0 -950.0 625.0) (float-vector 290.0 -950.0 625.0) (float-vector 290.0 -950.0 805.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1150.0 805.0) (float-vector 340.0 -1150.0 625.0) (float-vector 340.0 -950.0 625.0) (float-vector 340.0 -950.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -1150.0 805.0) (float-vector 290.0 -1150.0 625.0) (float-vector 340.0 -1150.0 625.0) (float-vector 340.0 -1150.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -950.0 805.0) (float-vector 290.0 -950.0 625.0) (float-vector 290.0 -1150.0 625.0) (float-vector 290.0 -1150.0 805.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 -660.0 805.0) (float-vector 290.0 -660.0 805.0) (float-vector 290.0 -950.0 805.0) (float-vector 340.0 -950.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -660.0 775.0) (float-vector 340.0 -660.0 775.0) (float-vector 340.0 -950.0 775.0) (float-vector 290.0 -950.0 775.0)))
         (instance face :init :vertices (list (float-vector 340.0 -660.0 805.0) (float-vector 340.0 -660.0 775.0) (float-vector 290.0 -660.0 775.0) (float-vector 290.0 -660.0 805.0)))
         (instance face :init :vertices (list (float-vector 340.0 -950.0 805.0) (float-vector 340.0 -950.0 775.0) (float-vector 340.0 -660.0 775.0) (float-vector 340.0 -660.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -950.0 805.0) (float-vector 290.0 -950.0 775.0) (float-vector 340.0 -950.0 775.0) (float-vector 340.0 -950.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -660.0 805.0) (float-vector 290.0 -660.0 775.0) (float-vector 290.0 -950.0 775.0) (float-vector 290.0 -950.0 805.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 -400.0 805.0) (float-vector 290.0 -400.0 805.0) (float-vector 290.0 -660.0 805.0) (float-vector 340.0 -660.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -400.0 625.0) (float-vector 340.0 -400.0 625.0) (float-vector 340.0 -660.0 625.0) (float-vector 290.0 -660.0 625.0)))
         (instance face :init :vertices (list (float-vector 340.0 -400.0 805.0) (float-vector 340.0 -400.0 625.0) (float-vector 290.0 -400.0 625.0) (float-vector 290.0 -400.0 805.0)))
         (instance face :init :vertices (list (float-vector 340.0 -660.0 805.0) (float-vector 340.0 -660.0 625.0) (float-vector 340.0 -400.0 625.0) (float-vector 340.0 -400.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -660.0 805.0) (float-vector 290.0 -660.0 625.0) (float-vector 340.0 -660.0 625.0) (float-vector 340.0 -660.0 805.0)))
         (instance face :init :vertices (list (float-vector 290.0 -400.0 805.0) (float-vector 290.0 -400.0 625.0) (float-vector 290.0 -660.0 625.0) (float-vector 290.0 -660.0 805.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 300.0 -385.5 869.5) (float-vector -200.0 -385.5 869.5) (float-vector -200.0 -1120.5 869.5) (float-vector 300.0 -1120.5 869.5)))
         (instance face :init :vertices (list (float-vector -200.0 -385.5 854.5) (float-vector 300.0 -385.5 854.5) (float-vector 300.0 -1120.5 854.5) (float-vector -200.0 -1120.5 854.5)))
         (instance face :init :vertices (list (float-vector 300.0 -385.5 869.5) (float-vector 300.0 -385.5 854.5) (float-vector -200.0 -385.5 854.5) (float-vector -200.0 -385.5 869.5)))
         (instance face :init :vertices (list (float-vector 300.0 -1120.5 869.5) (float-vector 300.0 -1120.5 854.5) (float-vector 300.0 -385.5 854.5) (float-vector 300.0 -385.5 869.5)))
         (instance face :init :vertices (list (float-vector -200.0 -1120.5 869.5) (float-vector -200.0 -1120.5 854.5) (float-vector 300.0 -1120.5 854.5) (float-vector 300.0 -1120.5 869.5)))
         (instance face :init :vertices (list (float-vector -200.0 -385.5 869.5) (float-vector -200.0 -385.5 854.5) (float-vector -200.0 -1120.5 854.5) (float-vector -200.0 -1120.5 869.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 -398.0 625.0) (float-vector -355.0 -1148.0 625.0) (float-vector -355.0 -1148.0 805.0) (float-vector -355.0 -398.0 805.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 -403.0 630.0) (float-vector -355.0 -403.0 760.0) (float-vector -355.0 -1143.0 760.0) (float-vector -355.0 -1143.0 630.0)))
))
         (instance face :init :vertices (list (float-vector -305.0 -1148.0 625.0) (float-vector -305.0 -1148.0 805.0) (float-vector -355.0 -1148.0 805.0) (float-vector -355.0 -1148.0 625.0)))
         (instance face :init :vertices (list (float-vector -305.0 -398.0 625.0) (float-vector -305.0 -398.0 805.0) (float-vector -305.0 -1148.0 805.0) (float-vector -305.0 -1148.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 -398.0 805.0) (float-vector -355.0 -1148.0 805.0) (float-vector -305.0 -1148.0 805.0) (float-vector -305.0 -398.0 805.0)))
         (instance face :init :vertices (list (float-vector -305.0 -398.0 625.0) (float-vector -305.0 -1148.0 625.0) (float-vector -355.0 -1148.0 625.0) (float-vector -355.0 -398.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 -398.0 625.0) (float-vector -355.0 -398.0 805.0) (float-vector -305.0 -398.0 805.0) (float-vector -305.0 -398.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 -1143.0 630.0) (float-vector -355.0 -1143.0 760.0) (float-vector -322.0 -1143.0 760.0) (float-vector -322.0 -1143.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 -1143.0 630.0) (float-vector -322.0 -1143.0 760.0) (float-vector -322.0 -403.0 760.0) (float-vector -322.0 -403.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 -403.0 760.0) (float-vector -322.0 -1143.0 760.0) (float-vector -355.0 -1143.0 760.0) (float-vector -355.0 -403.0 760.0)))
         (instance face :init :vertices (list (float-vector -322.0 -403.0 630.0) (float-vector -322.0 -403.0 760.0) (float-vector -355.0 -403.0 760.0) (float-vector -355.0 -403.0 630.0)))
         (instance face :init :vertices (list (float-vector -355.0 -403.0 630.0) (float-vector -355.0 -1143.0 630.0) (float-vector -322.0 -1143.0 630.0) (float-vector -322.0 -403.0 630.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 -403.0 760.0) (float-vector -350.0 -403.0 760.0) (float-vector -350.0 -1143.0 760.0) (float-vector -310.0 -1143.0 760.0)))
         (instance face :init :vertices (list (float-vector -350.0 -403.0 630.0) (float-vector -310.0 -403.0 630.0) (float-vector -310.0 -1143.0 630.0) (float-vector -350.0 -1143.0 630.0)))
         (instance face :init :vertices (list (float-vector -310.0 -403.0 760.0) (float-vector -310.0 -403.0 630.0) (float-vector -350.0 -403.0 630.0) (float-vector -350.0 -403.0 760.0)))
         (instance face :init :vertices (list (float-vector -310.0 -1143.0 760.0) (float-vector -310.0 -1143.0 630.0) (float-vector -310.0 -403.0 630.0) (float-vector -310.0 -403.0 760.0)))
         (instance face :init :vertices (list (float-vector -350.0 -1143.0 760.0) (float-vector -350.0 -1143.0 630.0) (float-vector -310.0 -1143.0 630.0) (float-vector -310.0 -1143.0 760.0)))
         (instance face :init :vertices (list (float-vector -350.0 -403.0 760.0) (float-vector -350.0 -403.0 630.0) (float-vector -350.0 -1143.0 630.0) (float-vector -350.0 -1143.0 760.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 305.0 1148.0 625.0) (float-vector 305.0 308.0 625.0) (float-vector 305.0 308.0 795.0) (float-vector 305.0 1148.0 795.0)))
         (instance face :init :vertices (list (float-vector 355.0 308.0 625.0) (float-vector 355.0 308.0 795.0) (float-vector 305.0 308.0 795.0) (float-vector 305.0 308.0 625.0)))
         (instance face :init :vertices (list (float-vector 355.0 1148.0 625.0) (float-vector 355.0 1148.0 795.0) (float-vector 355.0 308.0 795.0) (float-vector 355.0 308.0 625.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 355.0 313.0 630.0) (float-vector 355.0 313.0 750.0) (float-vector 355.0 1143.0 750.0) (float-vector 355.0 1143.0 630.0)))
))
         (instance face :init :vertices (list (float-vector 305.0 1148.0 795.0) (float-vector 305.0 308.0 795.0) (float-vector 355.0 308.0 795.0) (float-vector 355.0 1148.0 795.0)))
         (instance face :init :vertices (list (float-vector 355.0 1148.0 625.0) (float-vector 355.0 308.0 625.0) (float-vector 305.0 308.0 625.0) (float-vector 305.0 1148.0 625.0)))
         (instance face :init :vertices (list (float-vector 305.0 1148.0 625.0) (float-vector 305.0 1148.0 795.0) (float-vector 355.0 1148.0 795.0) (float-vector 355.0 1148.0 625.0)))
         (instance face :init :vertices (list (float-vector 322.0 1143.0 750.0) (float-vector 322.0 313.0 750.0) (float-vector 322.0 313.0 630.0) (float-vector 322.0 1143.0 630.0)))
         (instance face :init :vertices (list (float-vector 322.0 313.0 630.0) (float-vector 322.0 313.0 750.0) (float-vector 355.0 313.0 750.0) (float-vector 355.0 313.0 630.0)))
         (instance face :init :vertices (list (float-vector 355.0 1143.0 750.0) (float-vector 355.0 313.0 750.0) (float-vector 322.0 313.0 750.0) (float-vector 322.0 1143.0 750.0)))
         (instance face :init :vertices (list (float-vector 355.0 1143.0 630.0) (float-vector 355.0 1143.0 750.0) (float-vector 322.0 1143.0 750.0) (float-vector 322.0 1143.0 630.0)))
         (instance face :init :vertices (list (float-vector 322.0 1143.0 630.0) (float-vector 322.0 313.0 630.0) (float-vector 355.0 313.0 630.0) (float-vector 355.0 1143.0 630.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 350.0 1143.0 750.0) (float-vector 310.0 1143.0 750.0) (float-vector 310.0 313.0 750.0) (float-vector 350.0 313.0 750.0)))
         (instance face :init :vertices (list (float-vector 310.0 1143.0 630.0) (float-vector 350.0 1143.0 630.0) (float-vector 350.0 313.0 630.0) (float-vector 310.0 313.0 630.0)))
         (instance face :init :vertices (list (float-vector 350.0 1143.0 750.0) (float-vector 350.0 1143.0 630.0) (float-vector 310.0 1143.0 630.0) (float-vector 310.0 1143.0 750.0)))
         (instance face :init :vertices (list (float-vector 350.0 313.0 750.0) (float-vector 350.0 313.0 630.0) (float-vector 350.0 1143.0 630.0) (float-vector 350.0 1143.0 750.0)))
         (instance face :init :vertices (list (float-vector 310.0 313.0 750.0) (float-vector 310.0 313.0 630.0) (float-vector 350.0 313.0 630.0) (float-vector 350.0 313.0 750.0)))
         (instance face :init :vertices (list (float-vector 310.0 1143.0 750.0) (float-vector 310.0 1143.0 630.0) (float-vector 310.0 313.0 630.0) (float-vector 310.0 313.0 750.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 1148.0 625.0) (float-vector -355.0 308.0 625.0) (float-vector -355.0 308.0 795.0) (float-vector -355.0 1148.0 795.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 1143.0 630.0) (float-vector -355.0 1143.0 750.0) (float-vector -355.0 313.0 750.0) (float-vector -355.0 313.0 630.0)))
))
         (instance face :init :vertices (list (float-vector -305.0 308.0 625.0) (float-vector -305.0 308.0 795.0) (float-vector -355.0 308.0 795.0) (float-vector -355.0 308.0 625.0)))
         (instance face :init :vertices (list (float-vector -305.0 1148.0 625.0) (float-vector -305.0 1148.0 795.0) (float-vector -305.0 308.0 795.0) (float-vector -305.0 308.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 1148.0 795.0) (float-vector -355.0 308.0 795.0) (float-vector -305.0 308.0 795.0) (float-vector -305.0 1148.0 795.0)))
         (instance face :init :vertices (list (float-vector -305.0 1148.0 625.0) (float-vector -305.0 308.0 625.0) (float-vector -355.0 308.0 625.0) (float-vector -355.0 1148.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 1148.0 625.0) (float-vector -355.0 1148.0 795.0) (float-vector -305.0 1148.0 795.0) (float-vector -305.0 1148.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 313.0 630.0) (float-vector -355.0 313.0 750.0) (float-vector -322.0 313.0 750.0) (float-vector -322.0 313.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 313.0 630.0) (float-vector -322.0 313.0 750.0) (float-vector -322.0 1143.0 750.0) (float-vector -322.0 1143.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 1143.0 750.0) (float-vector -322.0 313.0 750.0) (float-vector -355.0 313.0 750.0) (float-vector -355.0 1143.0 750.0)))
         (instance face :init :vertices (list (float-vector -322.0 1143.0 630.0) (float-vector -322.0 1143.0 750.0) (float-vector -355.0 1143.0 750.0) (float-vector -355.0 1143.0 630.0)))
         (instance face :init :vertices (list (float-vector -355.0 1143.0 630.0) (float-vector -355.0 313.0 630.0) (float-vector -322.0 313.0 630.0) (float-vector -322.0 1143.0 630.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 1143.0 750.0) (float-vector -350.0 1143.0 750.0) (float-vector -350.0 313.0 750.0) (float-vector -310.0 313.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 1143.0 630.0) (float-vector -310.0 1143.0 630.0) (float-vector -310.0 313.0 630.0) (float-vector -350.0 313.0 630.0)))
         (instance face :init :vertices (list (float-vector -310.0 1143.0 750.0) (float-vector -310.0 1143.0 630.0) (float-vector -350.0 1143.0 630.0) (float-vector -350.0 1143.0 750.0)))
         (instance face :init :vertices (list (float-vector -310.0 313.0 750.0) (float-vector -310.0 313.0 630.0) (float-vector -310.0 1143.0 630.0) (float-vector -310.0 1143.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 313.0 750.0) (float-vector -350.0 313.0 630.0) (float-vector -310.0 313.0 630.0) (float-vector -310.0 313.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 1143.0 750.0) (float-vector -350.0 1143.0 630.0) (float-vector -350.0 313.0 630.0) (float-vector -350.0 313.0 750.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 306.0 625.0) (float-vector -355.0 -294.0 625.0) (float-vector -355.0 -294.0 795.0) (float-vector -355.0 306.0 795.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 301.0 630.0) (float-vector -355.0 301.0 750.0) (float-vector -355.0 -289.0 750.0) (float-vector -355.0 -289.0 630.0)))
))
         (instance face :init :vertices (list (float-vector -305.0 -294.0 625.0) (float-vector -305.0 -294.0 795.0) (float-vector -355.0 -294.0 795.0) (float-vector -355.0 -294.0 625.0)))
         (instance face :init :vertices (list (float-vector -305.0 306.0 625.0) (float-vector -305.0 306.0 795.0) (float-vector -305.0 -294.0 795.0) (float-vector -305.0 -294.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 306.0 795.0) (float-vector -355.0 -294.0 795.0) (float-vector -305.0 -294.0 795.0) (float-vector -305.0 306.0 795.0)))
         (instance face :init :vertices (list (float-vector -305.0 306.0 625.0) (float-vector -305.0 -294.0 625.0) (float-vector -355.0 -294.0 625.0) (float-vector -355.0 306.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 306.0 625.0) (float-vector -355.0 306.0 795.0) (float-vector -305.0 306.0 795.0) (float-vector -305.0 306.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 -289.0 630.0) (float-vector -355.0 -289.0 750.0) (float-vector -322.0 -289.0 750.0) (float-vector -322.0 -289.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 -289.0 630.0) (float-vector -322.0 -289.0 750.0) (float-vector -322.0 301.0 750.0) (float-vector -322.0 301.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 301.0 750.0) (float-vector -322.0 -289.0 750.0) (float-vector -355.0 -289.0 750.0) (float-vector -355.0 301.0 750.0)))
         (instance face :init :vertices (list (float-vector -322.0 301.0 630.0) (float-vector -322.0 301.0 750.0) (float-vector -355.0 301.0 750.0) (float-vector -355.0 301.0 630.0)))
         (instance face :init :vertices (list (float-vector -355.0 301.0 630.0) (float-vector -355.0 -289.0 630.0) (float-vector -322.0 -289.0 630.0) (float-vector -322.0 301.0 630.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 301.0 750.0) (float-vector -350.0 301.0 750.0) (float-vector -350.0 -289.0 750.0) (float-vector -310.0 -289.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 301.0 630.0) (float-vector -310.0 301.0 630.0) (float-vector -310.0 -289.0 630.0) (float-vector -350.0 -289.0 630.0)))
         (instance face :init :vertices (list (float-vector -310.0 301.0 750.0) (float-vector -310.0 301.0 630.0) (float-vector -350.0 301.0 630.0) (float-vector -350.0 301.0 750.0)))
         (instance face :init :vertices (list (float-vector -310.0 -289.0 750.0) (float-vector -310.0 -289.0 630.0) (float-vector -310.0 301.0 630.0) (float-vector -310.0 301.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 -289.0 750.0) (float-vector -350.0 -289.0 630.0) (float-vector -310.0 -289.0 630.0) (float-vector -310.0 -289.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 301.0 750.0) (float-vector -350.0 301.0 630.0) (float-vector -350.0 -289.0 630.0) (float-vector -350.0 -289.0 750.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 -286.0 625.0) (float-vector -355.0 -406.0 625.0) (float-vector -355.0 -406.0 795.0) (float-vector -355.0 -286.0 795.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 -291.0 630.0) (float-vector -355.0 -291.0 750.0) (float-vector -355.0 -401.0 750.0) (float-vector -355.0 -401.0 630.0)))
))
         (instance face :init :vertices (list (float-vector -305.0 -406.0 625.0) (float-vector -305.0 -406.0 795.0) (float-vector -355.0 -406.0 795.0) (float-vector -355.0 -406.0 625.0)))
         (instance face :init :vertices (list (float-vector -305.0 -286.0 625.0) (float-vector -305.0 -286.0 795.0) (float-vector -305.0 -406.0 795.0) (float-vector -305.0 -406.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 -286.0 795.0) (float-vector -355.0 -406.0 795.0) (float-vector -305.0 -406.0 795.0) (float-vector -305.0 -286.0 795.0)))
         (instance face :init :vertices (list (float-vector -305.0 -286.0 625.0) (float-vector -305.0 -406.0 625.0) (float-vector -355.0 -406.0 625.0) (float-vector -355.0 -286.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 -286.0 625.0) (float-vector -355.0 -286.0 795.0) (float-vector -305.0 -286.0 795.0) (float-vector -305.0 -286.0 625.0)))
         (instance face :init :vertices (list (float-vector -355.0 -401.0 630.0) (float-vector -355.0 -401.0 750.0) (float-vector -322.0 -401.0 750.0) (float-vector -322.0 -401.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 -401.0 630.0) (float-vector -322.0 -401.0 750.0) (float-vector -322.0 -291.0 750.0) (float-vector -322.0 -291.0 630.0)))
         (instance face :init :vertices (list (float-vector -322.0 -291.0 750.0) (float-vector -322.0 -401.0 750.0) (float-vector -355.0 -401.0 750.0) (float-vector -355.0 -291.0 750.0)))
         (instance face :init :vertices (list (float-vector -322.0 -291.0 630.0) (float-vector -322.0 -291.0 750.0) (float-vector -355.0 -291.0 750.0) (float-vector -355.0 -291.0 630.0)))
         (instance face :init :vertices (list (float-vector -355.0 -291.0 630.0) (float-vector -355.0 -401.0 630.0) (float-vector -322.0 -401.0 630.0) (float-vector -322.0 -291.0 630.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 -291.0 750.0) (float-vector -350.0 -291.0 750.0) (float-vector -350.0 -401.0 750.0) (float-vector -310.0 -401.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 -291.0 630.0) (float-vector -310.0 -291.0 630.0) (float-vector -310.0 -401.0 630.0) (float-vector -350.0 -401.0 630.0)))
         (instance face :init :vertices (list (float-vector -310.0 -291.0 750.0) (float-vector -310.0 -291.0 630.0) (float-vector -350.0 -291.0 630.0) (float-vector -350.0 -291.0 750.0)))
         (instance face :init :vertices (list (float-vector -310.0 -401.0 750.0) (float-vector -310.0 -401.0 630.0) (float-vector -310.0 -291.0 630.0) (float-vector -310.0 -291.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 -401.0 750.0) (float-vector -350.0 -401.0 630.0) (float-vector -310.0 -401.0 630.0) (float-vector -310.0 -401.0 750.0)))
         (instance face :init :vertices (list (float-vector -350.0 -291.0 750.0) (float-vector -350.0 -291.0 630.0) (float-vector -350.0 -401.0 630.0) (float-vector -350.0 -401.0 750.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 978.0 235.0) (float-vector -355.0 228.0 235.0) (float-vector -355.0 228.0 625.0) (float-vector -355.0 978.0 625.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 973.0 240.0) (float-vector -355.0 973.0 580.0) (float-vector -355.0 233.0 580.0) (float-vector -355.0 233.0 240.0)))
))
         (instance face :init :vertices (list (float-vector -305.0 228.0 235.0) (float-vector -305.0 228.0 625.0) (float-vector -355.0 228.0 625.0) (float-vector -355.0 228.0 235.0)))
         (instance face :init :vertices (list (float-vector -305.0 978.0 235.0) (float-vector -305.0 978.0 625.0) (float-vector -305.0 228.0 625.0) (float-vector -305.0 228.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 978.0 625.0) (float-vector -355.0 228.0 625.0) (float-vector -305.0 228.0 625.0) (float-vector -305.0 978.0 625.0)))
         (instance face :init :vertices (list (float-vector -305.0 978.0 235.0) (float-vector -305.0 228.0 235.0) (float-vector -355.0 228.0 235.0) (float-vector -355.0 978.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 978.0 235.0) (float-vector -355.0 978.0 625.0) (float-vector -305.0 978.0 625.0) (float-vector -305.0 978.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 233.0 240.0) (float-vector -355.0 233.0 580.0) (float-vector -322.0 233.0 580.0) (float-vector -322.0 233.0 240.0)))
         (instance face :init :vertices (list (float-vector -322.0 233.0 240.0) (float-vector -322.0 233.0 580.0) (float-vector -322.0 973.0 580.0) (float-vector -322.0 973.0 240.0)))
         (instance face :init :vertices (list (float-vector -322.0 973.0 580.0) (float-vector -322.0 233.0 580.0) (float-vector -355.0 233.0 580.0) (float-vector -355.0 973.0 580.0)))
         (instance face :init :vertices (list (float-vector -322.0 973.0 240.0) (float-vector -322.0 973.0 580.0) (float-vector -355.0 973.0 580.0) (float-vector -355.0 973.0 240.0)))
         (instance face :init :vertices (list (float-vector -355.0 973.0 240.0) (float-vector -355.0 233.0 240.0) (float-vector -322.0 233.0 240.0) (float-vector -322.0 973.0 240.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 973.0 580.0) (float-vector -350.0 973.0 580.0) (float-vector -350.0 233.0 580.0) (float-vector -310.0 233.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 973.0 240.0) (float-vector -310.0 973.0 240.0) (float-vector -310.0 233.0 240.0) (float-vector -350.0 233.0 240.0)))
         (instance face :init :vertices (list (float-vector -310.0 973.0 580.0) (float-vector -310.0 973.0 240.0) (float-vector -350.0 973.0 240.0) (float-vector -350.0 973.0 580.0)))
         (instance face :init :vertices (list (float-vector -310.0 233.0 580.0) (float-vector -310.0 233.0 240.0) (float-vector -310.0 973.0 240.0) (float-vector -310.0 973.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 233.0 580.0) (float-vector -350.0 233.0 240.0) (float-vector -310.0 233.0 240.0) (float-vector -310.0 233.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 973.0 580.0) (float-vector -350.0 973.0 240.0) (float-vector -350.0 233.0 240.0) (float-vector -350.0 233.0 580.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 226.0 235.0) (float-vector -355.0 -224.0 235.0) (float-vector -355.0 -224.0 625.0) (float-vector -355.0 226.0 625.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 221.0 240.0) (float-vector -355.0 221.0 580.0) (float-vector -355.0 -219.0 580.0) (float-vector -355.0 -219.0 240.0)))
))
         (instance face :init :vertices (list (float-vector -305.0 -224.0 235.0) (float-vector -305.0 -224.0 625.0) (float-vector -355.0 -224.0 625.0) (float-vector -355.0 -224.0 235.0)))
         (instance face :init :vertices (list (float-vector -305.0 226.0 235.0) (float-vector -305.0 226.0 625.0) (float-vector -305.0 -224.0 625.0) (float-vector -305.0 -224.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 226.0 625.0) (float-vector -355.0 -224.0 625.0) (float-vector -305.0 -224.0 625.0) (float-vector -305.0 226.0 625.0)))
         (instance face :init :vertices (list (float-vector -305.0 226.0 235.0) (float-vector -305.0 -224.0 235.0) (float-vector -355.0 -224.0 235.0) (float-vector -355.0 226.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 226.0 235.0) (float-vector -355.0 226.0 625.0) (float-vector -305.0 226.0 625.0) (float-vector -305.0 226.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 -219.0 240.0) (float-vector -355.0 -219.0 580.0) (float-vector -322.0 -219.0 580.0) (float-vector -322.0 -219.0 240.0)))
         (instance face :init :vertices (list (float-vector -322.0 -219.0 240.0) (float-vector -322.0 -219.0 580.0) (float-vector -322.0 221.0 580.0) (float-vector -322.0 221.0 240.0)))
         (instance face :init :vertices (list (float-vector -322.0 221.0 580.0) (float-vector -322.0 -219.0 580.0) (float-vector -355.0 -219.0 580.0) (float-vector -355.0 221.0 580.0)))
         (instance face :init :vertices (list (float-vector -322.0 221.0 240.0) (float-vector -322.0 221.0 580.0) (float-vector -355.0 221.0 580.0) (float-vector -355.0 221.0 240.0)))
         (instance face :init :vertices (list (float-vector -355.0 221.0 240.0) (float-vector -355.0 -219.0 240.0) (float-vector -322.0 -219.0 240.0) (float-vector -322.0 221.0 240.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 221.0 580.0) (float-vector -350.0 221.0 580.0) (float-vector -350.0 -219.0 580.0) (float-vector -310.0 -219.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 221.0 240.0) (float-vector -310.0 221.0 240.0) (float-vector -310.0 -219.0 240.0) (float-vector -350.0 -219.0 240.0)))
         (instance face :init :vertices (list (float-vector -310.0 221.0 580.0) (float-vector -310.0 221.0 240.0) (float-vector -350.0 221.0 240.0) (float-vector -350.0 221.0 580.0)))
         (instance face :init :vertices (list (float-vector -310.0 -219.0 580.0) (float-vector -310.0 -219.0 240.0) (float-vector -310.0 221.0 240.0) (float-vector -310.0 221.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 -219.0 580.0) (float-vector -350.0 -219.0 240.0) (float-vector -310.0 -219.0 240.0) (float-vector -310.0 -219.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 221.0 580.0) (float-vector -350.0 221.0 240.0) (float-vector -350.0 -219.0 240.0) (float-vector -350.0 -219.0 580.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 -226.0 235.0) (float-vector -355.0 -976.0 235.0) (float-vector -355.0 -976.0 625.0) (float-vector -355.0 -226.0 625.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 -231.0 240.0) (float-vector -355.0 -231.0 580.0) (float-vector -355.0 -971.0 580.0) (float-vector -355.0 -971.0 240.0)))
))
         (instance face :init :vertices (list (float-vector -305.0 -976.0 235.0) (float-vector -305.0 -976.0 625.0) (float-vector -355.0 -976.0 625.0) (float-vector -355.0 -976.0 235.0)))
         (instance face :init :vertices (list (float-vector -305.0 -226.0 235.0) (float-vector -305.0 -226.0 625.0) (float-vector -305.0 -976.0 625.0) (float-vector -305.0 -976.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 -226.0 625.0) (float-vector -355.0 -976.0 625.0) (float-vector -305.0 -976.0 625.0) (float-vector -305.0 -226.0 625.0)))
         (instance face :init :vertices (list (float-vector -305.0 -226.0 235.0) (float-vector -305.0 -976.0 235.0) (float-vector -355.0 -976.0 235.0) (float-vector -355.0 -226.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 -226.0 235.0) (float-vector -355.0 -226.0 625.0) (float-vector -305.0 -226.0 625.0) (float-vector -305.0 -226.0 235.0)))
         (instance face :init :vertices (list (float-vector -355.0 -971.0 240.0) (float-vector -355.0 -971.0 580.0) (float-vector -322.0 -971.0 580.0) (float-vector -322.0 -971.0 240.0)))
         (instance face :init :vertices (list (float-vector -322.0 -971.0 240.0) (float-vector -322.0 -971.0 580.0) (float-vector -322.0 -231.0 580.0) (float-vector -322.0 -231.0 240.0)))
         (instance face :init :vertices (list (float-vector -322.0 -231.0 580.0) (float-vector -322.0 -971.0 580.0) (float-vector -355.0 -971.0 580.0) (float-vector -355.0 -231.0 580.0)))
         (instance face :init :vertices (list (float-vector -322.0 -231.0 240.0) (float-vector -322.0 -231.0 580.0) (float-vector -355.0 -231.0 580.0) (float-vector -355.0 -231.0 240.0)))
         (instance face :init :vertices (list (float-vector -355.0 -231.0 240.0) (float-vector -355.0 -971.0 240.0) (float-vector -322.0 -971.0 240.0) (float-vector -322.0 -231.0 240.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 -231.0 580.0) (float-vector -350.0 -231.0 580.0) (float-vector -350.0 -971.0 580.0) (float-vector -310.0 -971.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 -231.0 240.0) (float-vector -310.0 -231.0 240.0) (float-vector -310.0 -971.0 240.0) (float-vector -350.0 -971.0 240.0)))
         (instance face :init :vertices (list (float-vector -310.0 -231.0 580.0) (float-vector -310.0 -231.0 240.0) (float-vector -350.0 -231.0 240.0) (float-vector -350.0 -231.0 580.0)))
         (instance face :init :vertices (list (float-vector -310.0 -971.0 580.0) (float-vector -310.0 -971.0 240.0) (float-vector -310.0 -231.0 240.0) (float-vector -310.0 -231.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 -971.0 580.0) (float-vector -350.0 -971.0 240.0) (float-vector -310.0 -971.0 240.0) (float-vector -310.0 -971.0 580.0)))
         (instance face :init :vertices (list (float-vector -350.0 -231.0 580.0) (float-vector -350.0 -231.0 240.0) (float-vector -350.0 -971.0 240.0) (float-vector -350.0 -971.0 580.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 1148.0 59.5) (float-vector -355.0 978.0 59.5) (float-vector -355.0 978.0 624.5) (float-vector -355.0 1148.0 624.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 1143.0 64.5) (float-vector -355.0 1143.0 579.5) (float-vector -355.0 983.0 579.5) (float-vector -355.0 983.0 64.5)))
))
         (instance face :init :vertices (list (float-vector -305.0 978.0 59.5) (float-vector -305.0 978.0 624.5) (float-vector -355.0 978.0 624.5) (float-vector -355.0 978.0 59.5)))
         (instance face :init :vertices (list (float-vector -305.0 1148.0 59.5) (float-vector -305.0 1148.0 624.5) (float-vector -305.0 978.0 624.5) (float-vector -305.0 978.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 1148.0 624.5) (float-vector -355.0 978.0 624.5) (float-vector -305.0 978.0 624.5) (float-vector -305.0 1148.0 624.5)))
         (instance face :init :vertices (list (float-vector -305.0 1148.0 59.5) (float-vector -305.0 978.0 59.5) (float-vector -355.0 978.0 59.5) (float-vector -355.0 1148.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 1148.0 59.5) (float-vector -355.0 1148.0 624.5) (float-vector -305.0 1148.0 624.5) (float-vector -305.0 1148.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 983.0 64.5) (float-vector -355.0 983.0 579.5) (float-vector -322.0 983.0 579.5) (float-vector -322.0 983.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 983.0 64.5) (float-vector -322.0 983.0 579.5) (float-vector -322.0 1143.0 579.5) (float-vector -322.0 1143.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 1143.0 579.5) (float-vector -322.0 983.0 579.5) (float-vector -355.0 983.0 579.5) (float-vector -355.0 1143.0 579.5)))
         (instance face :init :vertices (list (float-vector -322.0 1143.0 64.5) (float-vector -322.0 1143.0 579.5) (float-vector -355.0 1143.0 579.5) (float-vector -355.0 1143.0 64.5)))
         (instance face :init :vertices (list (float-vector -355.0 1143.0 64.5) (float-vector -355.0 983.0 64.5) (float-vector -322.0 983.0 64.5) (float-vector -322.0 1143.0 64.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 1143.0 579.5) (float-vector -350.0 1143.0 579.5) (float-vector -350.0 983.0 579.5) (float-vector -310.0 983.0 579.5)))
         (instance face :init :vertices (list (float-vector -350.0 1143.0 64.5) (float-vector -310.0 1143.0 64.5) (float-vector -310.0 983.0 64.5) (float-vector -350.0 983.0 64.5)))
         (instance face :init :vertices (list (float-vector -310.0 1143.0 579.5) (float-vector -310.0 1143.0 64.5) (float-vector -350.0 1143.0 64.5) (float-vector -350.0 1143.0 579.5)))
         (instance face :init :vertices (list (float-vector -310.0 983.0 579.5) (float-vector -310.0 983.0 64.5) (float-vector -310.0 1143.0 64.5) (float-vector -310.0 1143.0 579.5)))
         (instance face :init :vertices (list (float-vector -350.0 983.0 579.5) (float-vector -350.0 983.0 64.5) (float-vector -310.0 983.0 64.5) (float-vector -310.0 983.0 579.5)))
         (instance face :init :vertices (list (float-vector -350.0 1143.0 579.5) (float-vector -350.0 1143.0 64.5) (float-vector -350.0 983.0 64.5) (float-vector -350.0 983.0 579.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 -978.0 59.5) (float-vector -355.0 -1148.0 59.5) (float-vector -355.0 -1148.0 624.5) (float-vector -355.0 -978.0 624.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 -983.0 64.5) (float-vector -355.0 -983.0 579.5) (float-vector -355.0 -1143.0 579.5) (float-vector -355.0 -1143.0 64.5)))
))
         (instance face :init :vertices (list (float-vector -305.0 -1148.0 59.5) (float-vector -305.0 -1148.0 624.5) (float-vector -355.0 -1148.0 624.5) (float-vector -355.0 -1148.0 59.5)))
         (instance face :init :vertices (list (float-vector -305.0 -978.0 59.5) (float-vector -305.0 -978.0 624.5) (float-vector -305.0 -1148.0 624.5) (float-vector -305.0 -1148.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 -978.0 624.5) (float-vector -355.0 -1148.0 624.5) (float-vector -305.0 -1148.0 624.5) (float-vector -305.0 -978.0 624.5)))
         (instance face :init :vertices (list (float-vector -305.0 -978.0 59.5) (float-vector -305.0 -1148.0 59.5) (float-vector -355.0 -1148.0 59.5) (float-vector -355.0 -978.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 -978.0 59.5) (float-vector -355.0 -978.0 624.5) (float-vector -305.0 -978.0 624.5) (float-vector -305.0 -978.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 -1143.0 64.5) (float-vector -355.0 -1143.0 579.5) (float-vector -322.0 -1143.0 579.5) (float-vector -322.0 -1143.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 -1143.0 64.5) (float-vector -322.0 -1143.0 579.5) (float-vector -322.0 -983.0 579.5) (float-vector -322.0 -983.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 -983.0 579.5) (float-vector -322.0 -1143.0 579.5) (float-vector -355.0 -1143.0 579.5) (float-vector -355.0 -983.0 579.5)))
         (instance face :init :vertices (list (float-vector -322.0 -983.0 64.5) (float-vector -322.0 -983.0 579.5) (float-vector -355.0 -983.0 579.5) (float-vector -355.0 -983.0 64.5)))
         (instance face :init :vertices (list (float-vector -355.0 -983.0 64.5) (float-vector -355.0 -1143.0 64.5) (float-vector -322.0 -1143.0 64.5) (float-vector -322.0 -983.0 64.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 -983.0 579.5) (float-vector -350.0 -983.0 579.5) (float-vector -350.0 -1143.0 579.5) (float-vector -310.0 -1143.0 579.5)))
         (instance face :init :vertices (list (float-vector -350.0 -983.0 64.5) (float-vector -310.0 -983.0 64.5) (float-vector -310.0 -1143.0 64.5) (float-vector -350.0 -1143.0 64.5)))
         (instance face :init :vertices (list (float-vector -310.0 -983.0 579.5) (float-vector -310.0 -983.0 64.5) (float-vector -350.0 -983.0 64.5) (float-vector -350.0 -983.0 579.5)))
         (instance face :init :vertices (list (float-vector -310.0 -1143.0 579.5) (float-vector -310.0 -1143.0 64.5) (float-vector -310.0 -983.0 64.5) (float-vector -310.0 -983.0 579.5)))
         (instance face :init :vertices (list (float-vector -350.0 -1143.0 579.5) (float-vector -350.0 -1143.0 64.5) (float-vector -310.0 -1143.0 64.5) (float-vector -310.0 -1143.0 579.5)))
         (instance face :init :vertices (list (float-vector -350.0 -983.0 579.5) (float-vector -350.0 -983.0 64.5) (float-vector -350.0 -1143.0 64.5) (float-vector -350.0 -1143.0 579.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 976.0 59.5) (float-vector -355.0 -74.0 59.5) (float-vector -355.0 -74.0 234.5) (float-vector -355.0 976.0 234.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 971.0 64.5) (float-vector -355.0 971.0 189.5) (float-vector -355.0 -69.0 189.5) (float-vector -355.0 -69.0 64.5)))
))
         (instance face :init :vertices (list (float-vector -305.0 -74.0 59.5) (float-vector -305.0 -74.0 234.5) (float-vector -355.0 -74.0 234.5) (float-vector -355.0 -74.0 59.5)))
         (instance face :init :vertices (list (float-vector -305.0 976.0 59.5) (float-vector -305.0 976.0 234.5) (float-vector -305.0 -74.0 234.5) (float-vector -305.0 -74.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 976.0 234.5) (float-vector -355.0 -74.0 234.5) (float-vector -305.0 -74.0 234.5) (float-vector -305.0 976.0 234.5)))
         (instance face :init :vertices (list (float-vector -305.0 976.0 59.5) (float-vector -305.0 -74.0 59.5) (float-vector -355.0 -74.0 59.5) (float-vector -355.0 976.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 976.0 59.5) (float-vector -355.0 976.0 234.5) (float-vector -305.0 976.0 234.5) (float-vector -305.0 976.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 -69.0 64.5) (float-vector -355.0 -69.0 189.5) (float-vector -322.0 -69.0 189.5) (float-vector -322.0 -69.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 -69.0 64.5) (float-vector -322.0 -69.0 189.5) (float-vector -322.0 971.0 189.5) (float-vector -322.0 971.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 971.0 189.5) (float-vector -322.0 -69.0 189.5) (float-vector -355.0 -69.0 189.5) (float-vector -355.0 971.0 189.5)))
         (instance face :init :vertices (list (float-vector -322.0 971.0 64.5) (float-vector -322.0 971.0 189.5) (float-vector -355.0 971.0 189.5) (float-vector -355.0 971.0 64.5)))
         (instance face :init :vertices (list (float-vector -355.0 971.0 64.5) (float-vector -355.0 -69.0 64.5) (float-vector -322.0 -69.0 64.5) (float-vector -322.0 971.0 64.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 971.0 189.5) (float-vector -350.0 971.0 189.5) (float-vector -350.0 -69.0 189.5) (float-vector -310.0 -69.0 189.5)))
         (instance face :init :vertices (list (float-vector -350.0 971.0 64.5) (float-vector -310.0 971.0 64.5) (float-vector -310.0 -69.0 64.5) (float-vector -350.0 -69.0 64.5)))
         (instance face :init :vertices (list (float-vector -310.0 971.0 189.5) (float-vector -310.0 971.0 64.5) (float-vector -350.0 971.0 64.5) (float-vector -350.0 971.0 189.5)))
         (instance face :init :vertices (list (float-vector -310.0 -69.0 189.5) (float-vector -310.0 -69.0 64.5) (float-vector -310.0 971.0 64.5) (float-vector -310.0 971.0 189.5)))
         (instance face :init :vertices (list (float-vector -350.0 -69.0 189.5) (float-vector -350.0 -69.0 64.5) (float-vector -310.0 -69.0 64.5) (float-vector -310.0 -69.0 189.5)))
         (instance face :init :vertices (list (float-vector -350.0 971.0 189.5) (float-vector -350.0 971.0 64.5) (float-vector -350.0 -69.0 64.5) (float-vector -350.0 -69.0 189.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -355.0 -74.0 59.5) (float-vector -355.0 -974.0 59.5) (float-vector -355.0 -974.0 234.5) (float-vector -355.0 -74.0 234.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -355.0 -79.0 64.5) (float-vector -355.0 -79.0 189.5) (float-vector -355.0 -969.0 189.5) (float-vector -355.0 -969.0 64.5)))
))
         (instance face :init :vertices (list (float-vector -305.0 -974.0 59.5) (float-vector -305.0 -974.0 234.5) (float-vector -355.0 -974.0 234.5) (float-vector -355.0 -974.0 59.5)))
         (instance face :init :vertices (list (float-vector -305.0 -74.0 59.5) (float-vector -305.0 -74.0 234.5) (float-vector -305.0 -974.0 234.5) (float-vector -305.0 -974.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 -74.0 234.5) (float-vector -355.0 -974.0 234.5) (float-vector -305.0 -974.0 234.5) (float-vector -305.0 -74.0 234.5)))
         (instance face :init :vertices (list (float-vector -305.0 -74.0 59.5) (float-vector -305.0 -974.0 59.5) (float-vector -355.0 -974.0 59.5) (float-vector -355.0 -74.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 -74.0 59.5) (float-vector -355.0 -74.0 234.5) (float-vector -305.0 -74.0 234.5) (float-vector -305.0 -74.0 59.5)))
         (instance face :init :vertices (list (float-vector -355.0 -969.0 64.5) (float-vector -355.0 -969.0 189.5) (float-vector -322.0 -969.0 189.5) (float-vector -322.0 -969.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 -969.0 64.5) (float-vector -322.0 -969.0 189.5) (float-vector -322.0 -79.0 189.5) (float-vector -322.0 -79.0 64.5)))
         (instance face :init :vertices (list (float-vector -322.0 -79.0 189.5) (float-vector -322.0 -969.0 189.5) (float-vector -355.0 -969.0 189.5) (float-vector -355.0 -79.0 189.5)))
         (instance face :init :vertices (list (float-vector -322.0 -79.0 64.5) (float-vector -322.0 -79.0 189.5) (float-vector -355.0 -79.0 189.5) (float-vector -355.0 -79.0 64.5)))
         (instance face :init :vertices (list (float-vector -355.0 -79.0 64.5) (float-vector -355.0 -969.0 64.5) (float-vector -322.0 -969.0 64.5) (float-vector -322.0 -79.0 64.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -310.0 -79.0 189.5) (float-vector -350.0 -79.0 189.5) (float-vector -350.0 -969.0 189.5) (float-vector -310.0 -969.0 189.5)))
         (instance face :init :vertices (list (float-vector -350.0 -79.0 64.5) (float-vector -310.0 -79.0 64.5) (float-vector -310.0 -969.0 64.5) (float-vector -350.0 -969.0 64.5)))
         (instance face :init :vertices (list (float-vector -310.0 -79.0 189.5) (float-vector -310.0 -79.0 64.5) (float-vector -350.0 -79.0 64.5) (float-vector -350.0 -79.0 189.5)))
         (instance face :init :vertices (list (float-vector -310.0 -969.0 189.5) (float-vector -310.0 -969.0 64.5) (float-vector -310.0 -79.0 64.5) (float-vector -310.0 -79.0 189.5)))
         (instance face :init :vertices (list (float-vector -350.0 -969.0 189.5) (float-vector -350.0 -969.0 64.5) (float-vector -310.0 -969.0 64.5) (float-vector -310.0 -969.0 189.5)))
         (instance face :init :vertices (list (float-vector -350.0 -79.0 189.5) (float-vector -350.0 -79.0 64.5) (float-vector -350.0 -969.0 64.5) (float-vector -350.0 -969.0 189.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 1200.0 60.0) (float-vector -340.0 1200.0 60.0) (float-vector -340.0 -1200.0 60.0) (float-vector 340.0 -1200.0 60.0)))
         (instance face :init :vertices (list (float-vector -340.0 1200.0 0.0) (float-vector 340.0 1200.0 0.0) (float-vector 340.0 -1200.0 0.0) (float-vector -340.0 -1200.0 0.0)))
         (instance face :init :vertices (list (float-vector 340.0 1200.0 60.0) (float-vector 340.0 1200.0 0.0) (float-vector -340.0 1200.0 0.0) (float-vector -340.0 1200.0 60.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1200.0 60.0) (float-vector 340.0 -1200.0 0.0) (float-vector 340.0 1200.0 0.0) (float-vector 340.0 1200.0 60.0)))
         (instance face :init :vertices (list (float-vector -340.0 -1200.0 60.0) (float-vector -340.0 -1200.0 0.0) (float-vector 340.0 -1200.0 0.0) (float-vector 340.0 -1200.0 60.0)))
         (instance face :init :vertices (list (float-vector -340.0 1200.0 60.0) (float-vector -340.0 1200.0 0.0) (float-vector -340.0 -1200.0 0.0) (float-vector -340.0 -1200.0 60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -290.0 1150.0 854.5) (float-vector -340.0 1150.0 854.5) (float-vector -340.0 -1150.0 854.5) (float-vector -290.0 -1150.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 1150.0 59.5) (float-vector -290.0 1150.0 59.5) (float-vector -290.0 -1150.0 59.5) (float-vector -340.0 -1150.0 59.5)))
         (instance face :init :vertices (list (float-vector -290.0 1150.0 854.5) (float-vector -290.0 1150.0 59.5) (float-vector -340.0 1150.0 59.5) (float-vector -340.0 1150.0 854.5)))
         (instance face :init :vertices (list (float-vector -290.0 -1150.0 854.5) (float-vector -290.0 -1150.0 59.5) (float-vector -290.0 1150.0 59.5) (float-vector -290.0 1150.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 -1150.0 854.5) (float-vector -340.0 -1150.0 59.5) (float-vector -290.0 -1150.0 59.5) (float-vector -290.0 -1150.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 1150.0 854.5) (float-vector -340.0 1150.0 59.5) (float-vector -340.0 -1150.0 59.5) (float-vector -340.0 -1150.0 854.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 1200.0 854.5) (float-vector -340.0 1200.0 854.5) (float-vector -340.0 1150.0 854.5) (float-vector 340.0 1150.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 1200.0 59.5) (float-vector 340.0 1200.0 59.5) (float-vector 340.0 1150.0 59.5) (float-vector -340.0 1150.0 59.5)))
         (instance face :init :vertices (list (float-vector 340.0 1200.0 854.5) (float-vector 340.0 1200.0 59.5) (float-vector -340.0 1200.0 59.5) (float-vector -340.0 1200.0 854.5)))
         (instance face :init :vertices (list (float-vector 340.0 1150.0 854.5) (float-vector 340.0 1150.0 59.5) (float-vector 340.0 1200.0 59.5) (float-vector 340.0 1200.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 1150.0 854.5) (float-vector -340.0 1150.0 59.5) (float-vector 340.0 1150.0 59.5) (float-vector 340.0 1150.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 1200.0 854.5) (float-vector -340.0 1200.0 59.5) (float-vector -340.0 1150.0 59.5) (float-vector -340.0 1150.0 854.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 -1150.0 854.5) (float-vector -340.0 -1150.0 854.5) (float-vector -340.0 -1200.0 854.5) (float-vector 340.0 -1200.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 -1150.0 59.5) (float-vector 340.0 -1150.0 59.5) (float-vector 340.0 -1200.0 59.5) (float-vector -340.0 -1200.0 59.5)))
         (instance face :init :vertices (list (float-vector 340.0 -1150.0 854.5) (float-vector 340.0 -1150.0 59.5) (float-vector -340.0 -1150.0 59.5) (float-vector -340.0 -1150.0 854.5)))
         (instance face :init :vertices (list (float-vector 340.0 -1200.0 854.5) (float-vector 340.0 -1200.0 59.5) (float-vector 340.0 -1150.0 59.5) (float-vector 340.0 -1150.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 -1200.0 854.5) (float-vector -340.0 -1200.0 59.5) (float-vector 340.0 -1200.0 59.5) (float-vector 340.0 -1200.0 854.5)))
         (instance face :init :vertices (list (float-vector -340.0 -1150.0 854.5) (float-vector -340.0 -1150.0 59.5) (float-vector -340.0 -1200.0 59.5) (float-vector -340.0 -1200.0 854.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 1150.0 50.0) (float-vector -290.0 1150.0 50.0) (float-vector -290.0 -1150.0 50.0) (float-vector 340.0 -1150.0 50.0)))
         (instance face :init :vertices (list (float-vector -290.0 1150.0 0.0) (float-vector 340.0 1150.0 0.0) (float-vector 340.0 -1150.0 0.0) (float-vector -290.0 -1150.0 0.0)))
         (instance face :init :vertices (list (float-vector 340.0 1150.0 50.0) (float-vector 340.0 1150.0 0.0) (float-vector -290.0 1150.0 0.0) (float-vector -290.0 1150.0 50.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1150.0 50.0) (float-vector 340.0 -1150.0 0.0) (float-vector 340.0 1150.0 0.0) (float-vector 340.0 1150.0 50.0)))
         (instance face :init :vertices (list (float-vector -290.0 -1150.0 50.0) (float-vector -290.0 -1150.0 0.0) (float-vector 340.0 -1150.0 0.0) (float-vector 340.0 -1150.0 50.0)))
         (instance face :init :vertices (list (float-vector -290.0 1150.0 50.0) (float-vector -290.0 1150.0 0.0) (float-vector -290.0 -1150.0 0.0) (float-vector -290.0 -1150.0 50.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     ;; paste texture sunwave-ih-top-face.jpg
     (send (elt bc 9) :paste-texture-to-face (elt (send (elt bc 9) :faces)0) :file "models/sunwave-ih-top-face.jpg")
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color :gray50)
     (send (elt bc 2) :set-color :gray50)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (send (elt bc 5) :set-color :gray)
     (send (elt bc 6) :set-color :gray60)
     (send (elt bc 7) :set-color :gray60)
     (send (elt bc 8) :set-color :gray60)
     (send (elt bc 9) :set-color :gray80)
     (send (elt bc 10) :set-color :gray60)
     (send (elt bc 11) :set-color :red3)
     (send (elt bc 12) :set-color :gray60)
     (send (elt bc 13) :set-color :red3)
     (send (elt bc 14) :set-color :gray60)
     (send (elt bc 15) :set-color :red3)
     (send (elt bc 16) :set-color :gray60)
     (send (elt bc 17) :set-color :red3)
     (send (elt bc 18) :set-color :gray60)
     (send (elt bc 19) :set-color :red3)
     (send (elt bc 20) :set-color :gray60)
     (send (elt bc 21) :set-color :red3)
     (send (elt bc 22) :set-color :gray60)
     (send (elt bc 23) :set-color :red3)
     (send (elt bc 24) :set-color :gray60)
     (send (elt bc 25) :set-color :red3)
     (send (elt bc 26) :set-color :gray60)
     (send (elt bc 27) :set-color :red3)
     (send (elt bc 28) :set-color :gray60)
     (send (elt bc 29) :set-color :red3)
     (send (elt bc 30) :set-color :gray60)
     (send (elt bc 31) :set-color :red3)
     (send (elt bc 32) :set-color :gray60)
     (send (elt bc 33) :set-color :red3)
     (send (elt bc 34) :set-color :gray50)
     (send (elt bc 35) :set-color :gray50)
     (send (elt bc 36) :set-color :gray50)
     (send (elt bc 37) :set-color :gray50)
     (send (elt bc 38) :set-color :gray50)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -295.0 430.0 -77.5) (float-vector -295.0 -430.0 -77.5) (float-vector -295.0 -430.0 77.5) (float-vector -295.0 430.0 77.5)))
         (instance face :init :vertices (list (float-vector 295.0 -430.0 -77.5) (float-vector 295.0 -430.0 77.5) (float-vector -295.0 -430.0 77.5) (float-vector -295.0 -430.0 -77.5)))
         (instance face :init :vertices (list (float-vector 295.0 430.0 -77.5) (float-vector 295.0 430.0 77.5) (float-vector 295.0 420.0 77.5) (float-vector 295.0 420.0 -67.5) (float-vector 295.0 -420.0 -67.5) (float-vector 295.0 -420.0 77.5) (float-vector 295.0 -430.0 77.5) (float-vector 295.0 -430.0 -77.5)))
         (instance face :init :vertices (list (float-vector -295.0 430.0 77.5) (float-vector -295.0 -430.0 77.5) (float-vector 295.0 -430.0 77.5) (float-vector 295.0 -420.0 77.5) (float-vector -285.0 -420.0 77.5) (float-vector -285.0 420.0 77.5) (float-vector 295.0 420.0 77.5) (float-vector 295.0 430.0 77.5)))
         (instance face :init :vertices (list (float-vector 295.0 430.0 -77.5) (float-vector 295.0 -430.0 -77.5) (float-vector -295.0 -430.0 -77.5) (float-vector -295.0 430.0 -77.5)))
         (instance face :init :vertices (list (float-vector -295.0 430.0 -77.5) (float-vector -295.0 430.0 77.5) (float-vector 295.0 430.0 77.5) (float-vector 295.0 430.0 -77.5)))
         (instance face :init :vertices (list (float-vector -285.0 420.0 77.5) (float-vector -285.0 -420.0 77.5) (float-vector -285.0 -420.0 -67.5) (float-vector -285.0 420.0 -67.5)))
         (instance face :init :vertices (list (float-vector -285.0 -420.0 -67.5) (float-vector -285.0 -420.0 77.5) (float-vector 295.0 -420.0 77.5) (float-vector 295.0 -420.0 -67.5)))
         (instance face :init :vertices (list (float-vector 295.0 420.0 -67.5) (float-vector 295.0 420.0 77.5) (float-vector -285.0 420.0 77.5) (float-vector -285.0 420.0 -67.5)))
         (instance face :init :vertices (list (float-vector -285.0 420.0 -67.5) (float-vector -285.0 -420.0 -67.5) (float-vector 295.0 -420.0 -67.5) (float-vector 295.0 420.0 -67.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 330.0 445.0 -72.5) (float-vector 297.0 445.0 -72.5) (float-vector 297.0 -445.0 -72.5) (float-vector 330.0 -445.0 -72.5)))
         (instance face :init :vertices (list (float-vector 297.0 445.0 52.5) (float-vector 297.0 445.0 -72.5) (float-vector 330.0 445.0 -72.5) (float-vector 330.0 445.0 52.5)))
         (instance face :init :vertices (list (float-vector 297.0 -445.0 52.5) (float-vector 297.0 445.0 52.5) (float-vector 330.0 445.0 52.5) (float-vector 330.0 -445.0 52.5)))
         (instance face :init :vertices (list (float-vector 297.0 -445.0 52.5) (float-vector 297.0 -445.0 -72.5) (float-vector 297.0 445.0 -72.5) (float-vector 297.0 445.0 52.5)))
         (instance face :init :vertices (list (float-vector 330.0 -445.0 52.5) (float-vector 330.0 -445.0 -72.5) (float-vector 297.0 -445.0 -72.5) (float-vector 297.0 -445.0 52.5)))
         (instance face :init :vertices (list (float-vector 280.0 -450.0 97.5) (float-vector 280.0 -450.0 -77.5) (float-vector 330.0 -450.0 -77.5) (float-vector 330.0 -450.0 57.0) (float-vector 305.0 -450.0 57.0) (float-vector 305.0 -450.0 87.0) (float-vector 325.0 -450.0 87.0) (float-vector 325.0 -450.0 74.5) (float-vector 330.0 -450.0 74.5) (float-vector 330.0 -450.0 97.5)))
         (instance face :init :vertices (list (float-vector 280.0 450.0 -77.5) (float-vector 280.0 -450.0 -77.5) (float-vector 280.0 -450.0 97.5) (float-vector 280.0 450.0 97.5)))
         (instance face :init :vertices (list (float-vector 330.0 450.0 97.5) (float-vector 330.0 -450.0 97.5) (float-vector 330.0 -450.0 74.5) (float-vector 330.0 450.0 74.5)))
         (instance face :init :vertices (list (float-vector 330.0 450.0 57.0) (float-vector 330.0 -450.0 57.0) (float-vector 330.0 -450.0 -77.5) (float-vector 330.0 450.0 -77.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 330.0 -445.0 -72.5) (float-vector 330.0 -445.0 52.5) (float-vector 330.0 445.0 52.5) (float-vector 330.0 445.0 -72.5)))
))
         (instance face :init :vertices (list (float-vector 330.0 450.0 97.5) (float-vector 280.0 450.0 97.5) (float-vector 280.0 -450.0 97.5) (float-vector 330.0 -450.0 97.5)))
         (instance face :init :vertices (list (float-vector 280.0 450.0 -77.5) (float-vector 330.0 450.0 -77.5) (float-vector 330.0 -450.0 -77.5) (float-vector 280.0 -450.0 -77.5)))
         (instance face :init :vertices (list (float-vector 305.0 450.0 57.0) (float-vector 330.0 450.0 57.0) (float-vector 330.0 450.0 -77.5) (float-vector 280.0 450.0 -77.5) (float-vector 280.0 450.0 97.5) (float-vector 330.0 450.0 97.5) (float-vector 330.0 450.0 74.5) (float-vector 325.0 450.0 74.5) (float-vector 325.0 450.0 87.0) (float-vector 305.0 450.0 87.0)))
         (instance face :init :vertices (list (float-vector 305.0 -450.0 87.0) (float-vector 305.0 450.0 87.0) (float-vector 325.0 450.0 87.0) (float-vector 325.0 -450.0 87.0)))
         (instance face :init :vertices (list (float-vector 305.0 450.0 57.0) (float-vector 305.0 -450.0 57.0) (float-vector 330.0 -450.0 57.0) (float-vector 330.0 450.0 57.0)))
         (instance face :init :vertices (list (float-vector 305.0 -450.0 57.0) (float-vector 305.0 450.0 57.0) (float-vector 305.0 450.0 87.0) (float-vector 305.0 -450.0 87.0)))
         (instance face :init :vertices (list (float-vector 325.0 450.0 87.0) (float-vector 325.0 450.0 74.5) (float-vector 325.0 -450.0 74.5) (float-vector 325.0 -450.0 87.0)))
         (instance face :init :vertices (list (float-vector 325.0 450.0 74.5) (float-vector 330.0 450.0 74.5) (float-vector 330.0 -450.0 74.5) (float-vector 325.0 -450.0 74.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 325.0 445.0 52.5) (float-vector 285.0 445.0 52.5) (float-vector 285.0 -445.0 52.5) (float-vector 325.0 -445.0 52.5)))
         (instance face :init :vertices (list (float-vector 285.0 445.0 -72.5) (float-vector 325.0 445.0 -72.5) (float-vector 325.0 -445.0 -72.5) (float-vector 285.0 -445.0 -72.5)))
         (instance face :init :vertices (list (float-vector 325.0 445.0 52.5) (float-vector 325.0 445.0 -72.5) (float-vector 285.0 445.0 -72.5) (float-vector 285.0 445.0 52.5)))
         (instance face :init :vertices (list (float-vector 325.0 -445.0 52.5) (float-vector 325.0 -445.0 -72.5) (float-vector 325.0 445.0 -72.5) (float-vector 325.0 445.0 52.5)))
         (instance face :init :vertices (list (float-vector 285.0 -445.0 52.5) (float-vector 285.0 -445.0 -72.5) (float-vector 325.0 -445.0 -72.5) (float-vector 325.0 -445.0 52.5)))
         (instance face :init :vertices (list (float-vector 285.0 445.0 52.5) (float-vector 285.0 445.0 -72.5) (float-vector 285.0 -445.0 -72.5) (float-vector 285.0 -445.0 52.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :gray60)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -295.0 505.0 -77.5) (float-vector -295.0 -505.0 -77.5) (float-vector -295.0 -505.0 77.5) (float-vector -295.0 505.0 77.5)))
         (instance face :init :vertices (list (float-vector 295.0 -505.0 -77.5) (float-vector 295.0 -505.0 77.5) (float-vector -295.0 -505.0 77.5) (float-vector -295.0 -505.0 -77.5)))
         (instance face :init :vertices (list (float-vector 295.0 505.0 -77.5) (float-vector 295.0 505.0 77.5) (float-vector 295.0 495.0 77.5) (float-vector 295.0 495.0 -67.5) (float-vector 295.0 -495.0 -67.5) (float-vector 295.0 -495.0 77.5) (float-vector 295.0 -505.0 77.5) (float-vector 295.0 -505.0 -77.5)))
         (instance face :init :vertices (list (float-vector -295.0 505.0 77.5) (float-vector -295.0 -505.0 77.5) (float-vector 295.0 -505.0 77.5) (float-vector 295.0 -495.0 77.5) (float-vector -285.0 -495.0 77.5) (float-vector -285.0 495.0 77.5) (float-vector 295.0 495.0 77.5) (float-vector 295.0 505.0 77.5)))
         (instance face :init :vertices (list (float-vector 295.0 505.0 -77.5) (float-vector 295.0 -505.0 -77.5) (float-vector -295.0 -505.0 -77.5) (float-vector -295.0 505.0 -77.5)))
         (instance face :init :vertices (list (float-vector -295.0 505.0 -77.5) (float-vector -295.0 505.0 77.5) (float-vector 295.0 505.0 77.5) (float-vector 295.0 505.0 -77.5)))
         (instance face :init :vertices (list (float-vector -285.0 495.0 77.5) (float-vector -285.0 -495.0 77.5) (float-vector -285.0 -495.0 -67.5) (float-vector -285.0 495.0 -67.5)))
         (instance face :init :vertices (list (float-vector -285.0 -495.0 -67.5) (float-vector -285.0 -495.0 77.5) (float-vector 295.0 -495.0 77.5) (float-vector 295.0 -495.0 -67.5)))
         (instance face :init :vertices (list (float-vector 295.0 495.0 -67.5) (float-vector 295.0 495.0 77.5) (float-vector -285.0 495.0 77.5) (float-vector -285.0 495.0 -67.5)))
         (instance face :init :vertices (list (float-vector -285.0 495.0 -67.5) (float-vector -285.0 -495.0 -67.5) (float-vector 295.0 -495.0 -67.5) (float-vector 295.0 495.0 -67.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 330.0 520.0 -72.5) (float-vector 297.0 520.0 -72.5) (float-vector 297.0 -520.0 -72.5) (float-vector 330.0 -520.0 -72.5)))
         (instance face :init :vertices (list (float-vector 297.0 520.0 52.5) (float-vector 297.0 520.0 -72.5) (float-vector 330.0 520.0 -72.5) (float-vector 330.0 520.0 52.5)))
         (instance face :init :vertices (list (float-vector 297.0 -520.0 52.5) (float-vector 297.0 520.0 52.5) (float-vector 330.0 520.0 52.5) (float-vector 330.0 -520.0 52.5)))
         (instance face :init :vertices (list (float-vector 297.0 -520.0 52.5) (float-vector 297.0 -520.0 -72.5) (float-vector 297.0 520.0 -72.5) (float-vector 297.0 520.0 52.5)))
         (instance face :init :vertices (list (float-vector 330.0 -520.0 52.5) (float-vector 330.0 -520.0 -72.5) (float-vector 297.0 -520.0 -72.5) (float-vector 297.0 -520.0 52.5)))
         (instance face :init :vertices (list (float-vector 280.0 -525.0 97.5) (float-vector 280.0 -525.0 -77.5) (float-vector 330.0 -525.0 -77.5) (float-vector 330.0 -525.0 57.0) (float-vector 305.0 -525.0 57.0) (float-vector 305.0 -525.0 87.0) (float-vector 325.0 -525.0 87.0) (float-vector 325.0 -525.0 74.5) (float-vector 330.0 -525.0 74.5) (float-vector 330.0 -525.0 97.5)))
         (instance face :init :vertices (list (float-vector 280.0 525.0 -77.5) (float-vector 280.0 -525.0 -77.5) (float-vector 280.0 -525.0 97.5) (float-vector 280.0 525.0 97.5)))
         (instance face :init :vertices (list (float-vector 330.0 525.0 97.5) (float-vector 330.0 -525.0 97.5) (float-vector 330.0 -525.0 74.5) (float-vector 330.0 525.0 74.5)))
         (instance face :init :vertices (list (float-vector 330.0 525.0 57.0) (float-vector 330.0 -525.0 57.0) (float-vector 330.0 -525.0 -77.5) (float-vector 330.0 525.0 -77.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 330.0 -520.0 -72.5) (float-vector 330.0 -520.0 52.5) (float-vector 330.0 520.0 52.5) (float-vector 330.0 520.0 -72.5)))
))
         (instance face :init :vertices (list (float-vector 330.0 525.0 97.5) (float-vector 280.0 525.0 97.5) (float-vector 280.0 -525.0 97.5) (float-vector 330.0 -525.0 97.5)))
         (instance face :init :vertices (list (float-vector 280.0 525.0 -77.5) (float-vector 330.0 525.0 -77.5) (float-vector 330.0 -525.0 -77.5) (float-vector 280.0 -525.0 -77.5)))
         (instance face :init :vertices (list (float-vector 305.0 525.0 57.0) (float-vector 330.0 525.0 57.0) (float-vector 330.0 525.0 -77.5) (float-vector 280.0 525.0 -77.5) (float-vector 280.0 525.0 97.5) (float-vector 330.0 525.0 97.5) (float-vector 330.0 525.0 74.5) (float-vector 325.0 525.0 74.5) (float-vector 325.0 525.0 87.0) (float-vector 305.0 525.0 87.0)))
         (instance face :init :vertices (list (float-vector 305.0 -525.0 87.0) (float-vector 305.0 525.0 87.0) (float-vector 325.0 525.0 87.0) (float-vector 325.0 -525.0 87.0)))
         (instance face :init :vertices (list (float-vector 305.0 525.0 57.0) (float-vector 305.0 -525.0 57.0) (float-vector 330.0 -525.0 57.0) (float-vector 330.0 525.0 57.0)))
         (instance face :init :vertices (list (float-vector 305.0 -525.0 57.0) (float-vector 305.0 525.0 57.0) (float-vector 305.0 525.0 87.0) (float-vector 305.0 -525.0 87.0)))
         (instance face :init :vertices (list (float-vector 325.0 525.0 87.0) (float-vector 325.0 525.0 74.5) (float-vector 325.0 -525.0 74.5) (float-vector 325.0 -525.0 87.0)))
         (instance face :init :vertices (list (float-vector 325.0 525.0 74.5) (float-vector 330.0 525.0 74.5) (float-vector 330.0 -525.0 74.5) (float-vector 325.0 -525.0 74.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 325.0 520.0 52.5) (float-vector 285.0 520.0 52.5) (float-vector 285.0 -520.0 52.5) (float-vector 325.0 -520.0 52.5)))
         (instance face :init :vertices (list (float-vector 285.0 520.0 -72.5) (float-vector 325.0 520.0 -72.5) (float-vector 325.0 -520.0 -72.5) (float-vector 285.0 -520.0 -72.5)))
         (instance face :init :vertices (list (float-vector 325.0 520.0 52.5) (float-vector 325.0 520.0 -72.5) (float-vector 285.0 520.0 -72.5) (float-vector 285.0 520.0 52.5)))
         (instance face :init :vertices (list (float-vector 325.0 -520.0 52.5) (float-vector 325.0 -520.0 -72.5) (float-vector 325.0 520.0 -72.5) (float-vector 325.0 520.0 52.5)))
         (instance face :init :vertices (list (float-vector 285.0 -520.0 52.5) (float-vector 285.0 -520.0 -72.5) (float-vector 325.0 -520.0 -72.5) (float-vector 325.0 -520.0 52.5)))
         (instance face :init :vertices (list (float-vector 285.0 520.0 52.5) (float-vector 285.0 520.0 -72.5) (float-vector 285.0 -520.0 -72.5) (float-vector 285.0 -520.0 52.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :gray60)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.0 140.0 4.5) (float-vector -8.0 140.0 4.5) (float-vector -8.0 -20.0 4.5) (float-vector 25.0 -20.0 4.5)))
         (instance face :init :vertices (list (float-vector -8.0 140.0 519.5) (float-vector -8.0 140.0 4.5) (float-vector 25.0 140.0 4.5) (float-vector 25.0 140.0 519.5)))
         (instance face :init :vertices (list (float-vector -8.0 -20.0 519.5) (float-vector -8.0 140.0 519.5) (float-vector 25.0 140.0 519.5) (float-vector 25.0 -20.0 519.5)))
         (instance face :init :vertices (list (float-vector -8.0 -20.0 519.5) (float-vector -8.0 -20.0 4.5) (float-vector -8.0 140.0 4.5) (float-vector -8.0 140.0 519.5)))
         (instance face :init :vertices (list (float-vector 25.0 -20.0 519.5) (float-vector 25.0 -20.0 4.5) (float-vector -8.0 -20.0 4.5) (float-vector -8.0 -20.0 519.5)))
         (instance face :init :vertices (list (float-vector -25.0 -25.0 564.5) (float-vector -25.0 -25.0 -0.5) (float-vector 25.0 -25.0 -0.5) (float-vector 25.0 -25.0 524.0) (float-vector 0.0 -25.0 524.0) (float-vector 0.0 -25.0 554.0) (float-vector 20.0 -25.0 554.0) (float-vector 20.0 -25.0 541.5) (float-vector 25.0 -25.0 541.5) (float-vector 25.0 -25.0 564.5)))
         (instance face :init :vertices (list (float-vector -25.0 145.0 -0.5) (float-vector -25.0 -25.0 -0.5) (float-vector -25.0 -25.0 564.5) (float-vector -25.0 145.0 564.5)))
         (instance face :init :vertices (list (float-vector 25.0 145.0 564.5) (float-vector 25.0 -25.0 564.5) (float-vector 25.0 -25.0 541.5) (float-vector 25.0 145.0 541.5)))
         (instance face :init :vertices (list (float-vector 25.0 145.0 524.0) (float-vector 25.0 -25.0 524.0) (float-vector 25.0 -25.0 -0.5) (float-vector 25.0 145.0 -0.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 25.0 -20.0 4.5) (float-vector 25.0 -20.0 519.5) (float-vector 25.0 140.0 519.5) (float-vector 25.0 140.0 4.5)))
))
         (instance face :init :vertices (list (float-vector 25.0 145.0 564.5) (float-vector -25.0 145.0 564.5) (float-vector -25.0 -25.0 564.5) (float-vector 25.0 -25.0 564.5)))
         (instance face :init :vertices (list (float-vector -25.0 145.0 -0.5) (float-vector 25.0 145.0 -0.5) (float-vector 25.0 -25.0 -0.5) (float-vector -25.0 -25.0 -0.5)))
         (instance face :init :vertices (list (float-vector 0.0 145.0 524.0) (float-vector 25.0 145.0 524.0) (float-vector 25.0 145.0 -0.5) (float-vector -25.0 145.0 -0.5) (float-vector -25.0 145.0 564.5) (float-vector 25.0 145.0 564.5) (float-vector 25.0 145.0 541.5) (float-vector 20.0 145.0 541.5) (float-vector 20.0 145.0 554.0) (float-vector 0.0 145.0 554.0)))
         (instance face :init :vertices (list (float-vector 0.0 -25.0 554.0) (float-vector 0.0 145.0 554.0) (float-vector 20.0 145.0 554.0) (float-vector 20.0 -25.0 554.0)))
         (instance face :init :vertices (list (float-vector 0.0 145.0 524.0) (float-vector 0.0 -25.0 524.0) (float-vector 25.0 -25.0 524.0) (float-vector 25.0 145.0 524.0)))
         (instance face :init :vertices (list (float-vector 0.0 -25.0 524.0) (float-vector 0.0 145.0 524.0) (float-vector 0.0 145.0 554.0) (float-vector 0.0 -25.0 554.0)))
         (instance face :init :vertices (list (float-vector 20.0 145.0 554.0) (float-vector 20.0 145.0 541.5) (float-vector 20.0 -25.0 541.5) (float-vector 20.0 -25.0 554.0)))
         (instance face :init :vertices (list (float-vector 20.0 145.0 541.5) (float-vector 25.0 145.0 541.5) (float-vector 25.0 -25.0 541.5) (float-vector 20.0 -25.0 541.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 20.0 140.0 519.5) (float-vector -20.0 140.0 519.5) (float-vector -20.0 -20.0 519.5) (float-vector 20.0 -20.0 519.5)))
         (instance face :init :vertices (list (float-vector -20.0 140.0 4.5) (float-vector 20.0 140.0 4.5) (float-vector 20.0 -20.0 4.5) (float-vector -20.0 -20.0 4.5)))
         (instance face :init :vertices (list (float-vector 20.0 140.0 519.5) (float-vector 20.0 140.0 4.5) (float-vector -20.0 140.0 4.5) (float-vector -20.0 140.0 519.5)))
         (instance face :init :vertices (list (float-vector 20.0 -20.0 519.5) (float-vector 20.0 -20.0 4.5) (float-vector 20.0 140.0 4.5) (float-vector 20.0 140.0 519.5)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 519.5) (float-vector -20.0 -20.0 4.5) (float-vector 20.0 -20.0 4.5) (float-vector 20.0 -20.0 519.5)))
         (instance face :init :vertices (list (float-vector -20.0 140.0 519.5) (float-vector -20.0 140.0 4.5) (float-vector -20.0 -20.0 4.5) (float-vector -20.0 -20.0 519.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray60)
     (send (elt bc 1) :set-color :red3)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.0 20.0 4.5) (float-vector -8.0 20.0 4.5) (float-vector -8.0 -140.0 4.5) (float-vector 25.0 -140.0 4.5)))
         (instance face :init :vertices (list (float-vector -8.0 20.0 519.5) (float-vector -8.0 20.0 4.5) (float-vector 25.0 20.0 4.5) (float-vector 25.0 20.0 519.5)))
         (instance face :init :vertices (list (float-vector -8.0 -140.0 519.5) (float-vector -8.0 20.0 519.5) (float-vector 25.0 20.0 519.5) (float-vector 25.0 -140.0 519.5)))
         (instance face :init :vertices (list (float-vector -8.0 -140.0 519.5) (float-vector -8.0 -140.0 4.5) (float-vector -8.0 20.0 4.5) (float-vector -8.0 20.0 519.5)))
         (instance face :init :vertices (list (float-vector 25.0 -140.0 519.5) (float-vector 25.0 -140.0 4.5) (float-vector -8.0 -140.0 4.5) (float-vector -8.0 -140.0 519.5)))
         (instance face :init :vertices (list (float-vector -25.0 -145.0 564.5) (float-vector -25.0 -145.0 -0.5) (float-vector 25.0 -145.0 -0.5) (float-vector 25.0 -145.0 524.0) (float-vector 0.0 -145.0 524.0) (float-vector 0.0 -145.0 554.0) (float-vector 20.0 -145.0 554.0) (float-vector 20.0 -145.0 541.5) (float-vector 25.0 -145.0 541.5) (float-vector 25.0 -145.0 564.5)))
         (instance face :init :vertices (list (float-vector -25.0 25.0 -0.5) (float-vector -25.0 -145.0 -0.5) (float-vector -25.0 -145.0 564.5) (float-vector -25.0 25.0 564.5)))
         (instance face :init :vertices (list (float-vector 25.0 25.0 564.5) (float-vector 25.0 -145.0 564.5) (float-vector 25.0 -145.0 541.5) (float-vector 25.0 25.0 541.5)))
         (instance face :init :vertices (list (float-vector 25.0 25.0 524.0) (float-vector 25.0 -145.0 524.0) (float-vector 25.0 -145.0 -0.5) (float-vector 25.0 25.0 -0.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 25.0 -140.0 4.5) (float-vector 25.0 -140.0 519.5) (float-vector 25.0 20.0 519.5) (float-vector 25.0 20.0 4.5)))
))
         (instance face :init :vertices (list (float-vector 25.0 25.0 564.5) (float-vector -25.0 25.0 564.5) (float-vector -25.0 -145.0 564.5) (float-vector 25.0 -145.0 564.5)))
         (instance face :init :vertices (list (float-vector -25.0 25.0 -0.5) (float-vector 25.0 25.0 -0.5) (float-vector 25.0 -145.0 -0.5) (float-vector -25.0 -145.0 -0.5)))
         (instance face :init :vertices (list (float-vector 0.0 25.0 524.0) (float-vector 25.0 25.0 524.0) (float-vector 25.0 25.0 -0.5) (float-vector -25.0 25.0 -0.5) (float-vector -25.0 25.0 564.5) (float-vector 25.0 25.0 564.5) (float-vector 25.0 25.0 541.5) (float-vector 20.0 25.0 541.5) (float-vector 20.0 25.0 554.0) (float-vector 0.0 25.0 554.0)))
         (instance face :init :vertices (list (float-vector 0.0 -145.0 554.0) (float-vector 0.0 25.0 554.0) (float-vector 20.0 25.0 554.0) (float-vector 20.0 -145.0 554.0)))
         (instance face :init :vertices (list (float-vector 0.0 25.0 524.0) (float-vector 0.0 -145.0 524.0) (float-vector 25.0 -145.0 524.0) (float-vector 25.0 25.0 524.0)))
         (instance face :init :vertices (list (float-vector 0.0 -145.0 524.0) (float-vector 0.0 25.0 524.0) (float-vector 0.0 25.0 554.0) (float-vector 0.0 -145.0 554.0)))
         (instance face :init :vertices (list (float-vector 20.0 25.0 554.0) (float-vector 20.0 25.0 541.5) (float-vector 20.0 -145.0 541.5) (float-vector 20.0 -145.0 554.0)))
         (instance face :init :vertices (list (float-vector 20.0 25.0 541.5) (float-vector 25.0 25.0 541.5) (float-vector 25.0 -145.0 541.5) (float-vector 20.0 -145.0 541.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 20.0 20.0 519.5) (float-vector -20.0 20.0 519.5) (float-vector -20.0 -140.0 519.5) (float-vector 20.0 -140.0 519.5)))
         (instance face :init :vertices (list (float-vector -20.0 20.0 4.5) (float-vector 20.0 20.0 4.5) (float-vector 20.0 -140.0 4.5) (float-vector -20.0 -140.0 4.5)))
         (instance face :init :vertices (list (float-vector 20.0 20.0 519.5) (float-vector 20.0 20.0 4.5) (float-vector -20.0 20.0 4.5) (float-vector -20.0 20.0 519.5)))
         (instance face :init :vertices (list (float-vector 20.0 -140.0 519.5) (float-vector 20.0 -140.0 4.5) (float-vector 20.0 20.0 4.5) (float-vector 20.0 20.0 519.5)))
         (instance face :init :vertices (list (float-vector -20.0 -140.0 519.5) (float-vector -20.0 -140.0 4.5) (float-vector 20.0 -140.0 4.5) (float-vector 20.0 -140.0 519.5)))
         (instance face :init :vertices (list (float-vector -20.0 20.0 519.5) (float-vector -20.0 20.0 4.5) (float-vector -20.0 -140.0 4.5) (float-vector -20.0 -140.0 519.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray60)
     (send (elt bc 1) :set-color :red3)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset6
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 325.0 -170.0) (float-vector -265.0 -325.0 -170.0) (float-vector -265.0 -325.0 170.0) (float-vector -265.0 325.0 170.0)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 -170.0) (float-vector 265.0 -325.0 170.0) (float-vector -265.0 -325.0 170.0) (float-vector -265.0 -325.0 -170.0)))
         (instance face :init :vertices (list (float-vector 265.0 325.0 -170.0) (float-vector 265.0 325.0 170.0) (float-vector 265.0 315.0 170.0) (float-vector 265.0 315.0 -160.0) (float-vector 265.0 -315.0 -160.0) (float-vector 265.0 -315.0 170.0) (float-vector 265.0 -325.0 170.0) (float-vector 265.0 -325.0 -170.0)))
         (instance face :init :vertices (list (float-vector -265.0 325.0 170.0) (float-vector -265.0 -325.0 170.0) (float-vector 265.0 -325.0 170.0) (float-vector 265.0 -315.0 170.0) (float-vector -255.0 -315.0 170.0) (float-vector -255.0 315.0 170.0) (float-vector 265.0 315.0 170.0) (float-vector 265.0 325.0 170.0)))
         (instance face :init :vertices (list (float-vector 265.0 325.0 -170.0) (float-vector 265.0 -325.0 -170.0) (float-vector -265.0 -325.0 -170.0) (float-vector -265.0 325.0 -170.0)))
         (instance face :init :vertices (list (float-vector -265.0 325.0 -170.0) (float-vector -265.0 325.0 170.0) (float-vector 265.0 325.0 170.0) (float-vector 265.0 325.0 -170.0)))
         (instance face :init :vertices (list (float-vector -255.0 315.0 170.0) (float-vector -255.0 -315.0 170.0) (float-vector -255.0 -315.0 -160.0) (float-vector -255.0 315.0 -160.0)))
         (instance face :init :vertices (list (float-vector -255.0 -315.0 -160.0) (float-vector -255.0 -315.0 170.0) (float-vector 265.0 -315.0 170.0) (float-vector 265.0 -315.0 -160.0)))
         (instance face :init :vertices (list (float-vector 265.0 315.0 -160.0) (float-vector 265.0 315.0 170.0) (float-vector -255.0 315.0 170.0) (float-vector -255.0 315.0 -160.0)))
         (instance face :init :vertices (list (float-vector -255.0 315.0 -160.0) (float-vector -255.0 -315.0 -160.0) (float-vector 265.0 -315.0 -160.0) (float-vector 265.0 315.0 -160.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 370.0 -165.0) (float-vector 282.0 370.0 -165.0) (float-vector 282.0 -370.0 -165.0) (float-vector 315.0 -370.0 -165.0)))
         (instance face :init :vertices (list (float-vector 282.0 370.0 175.0) (float-vector 282.0 370.0 -165.0) (float-vector 315.0 370.0 -165.0) (float-vector 315.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 282.0 -370.0 175.0) (float-vector 282.0 370.0 175.0) (float-vector 315.0 370.0 175.0) (float-vector 315.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 282.0 -370.0 175.0) (float-vector 282.0 -370.0 -165.0) (float-vector 282.0 370.0 -165.0) (float-vector 282.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 315.0 -370.0 175.0) (float-vector 315.0 -370.0 -165.0) (float-vector 282.0 -370.0 -165.0) (float-vector 282.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 265.0 -375.0 220.0) (float-vector 265.0 -375.0 -170.0) (float-vector 315.0 -375.0 -170.0) (float-vector 315.0 -375.0 180.0) (float-vector 290.0 -375.0 180.0) (float-vector 290.0 -375.0 210.0) (float-vector 310.0 -375.0 210.0) (float-vector 310.0 -375.0 197.5) (float-vector 315.0 -375.0 197.5) (float-vector 315.0 -375.0 220.0)))
         (instance face :init :vertices (list (float-vector 265.0 375.0 -170.0) (float-vector 265.0 -375.0 -170.0) (float-vector 265.0 -375.0 220.0) (float-vector 265.0 375.0 220.0)))
         (instance face :init :vertices (list (float-vector 315.0 375.0 220.0) (float-vector 315.0 -375.0 220.0) (float-vector 315.0 -375.0 197.5) (float-vector 315.0 375.0 197.5)))
         (instance face :init :vertices (list (float-vector 315.0 375.0 180.0) (float-vector 315.0 -375.0 180.0) (float-vector 315.0 -375.0 -170.0) (float-vector 315.0 375.0 -170.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 315.0 -370.0 -165.0) (float-vector 315.0 -370.0 175.0) (float-vector 315.0 370.0 175.0) (float-vector 315.0 370.0 -165.0)))
))
         (instance face :init :vertices (list (float-vector 315.0 375.0 220.0) (float-vector 265.0 375.0 220.0) (float-vector 265.0 -375.0 220.0) (float-vector 315.0 -375.0 220.0)))
         (instance face :init :vertices (list (float-vector 265.0 375.0 -170.0) (float-vector 315.0 375.0 -170.0) (float-vector 315.0 -375.0 -170.0) (float-vector 265.0 -375.0 -170.0)))
         (instance face :init :vertices (list (float-vector 290.0 375.0 180.0) (float-vector 315.0 375.0 180.0) (float-vector 315.0 375.0 -170.0) (float-vector 265.0 375.0 -170.0) (float-vector 265.0 375.0 220.0) (float-vector 315.0 375.0 220.0) (float-vector 315.0 375.0 197.5) (float-vector 310.0 375.0 197.5) (float-vector 310.0 375.0 210.0) (float-vector 290.0 375.0 210.0)))
         (instance face :init :vertices (list (float-vector 290.0 -375.0 210.0) (float-vector 290.0 375.0 210.0) (float-vector 310.0 375.0 210.0) (float-vector 310.0 -375.0 210.0)))
         (instance face :init :vertices (list (float-vector 290.0 375.0 180.0) (float-vector 290.0 -375.0 180.0) (float-vector 315.0 -375.0 180.0) (float-vector 315.0 375.0 180.0)))
         (instance face :init :vertices (list (float-vector 290.0 -375.0 180.0) (float-vector 290.0 375.0 180.0) (float-vector 290.0 375.0 210.0) (float-vector 290.0 -375.0 210.0)))
         (instance face :init :vertices (list (float-vector 310.0 375.0 210.0) (float-vector 310.0 375.0 197.5) (float-vector 310.0 -375.0 197.5) (float-vector 310.0 -375.0 210.0)))
         (instance face :init :vertices (list (float-vector 310.0 375.0 197.5) (float-vector 315.0 375.0 197.5) (float-vector 315.0 -375.0 197.5) (float-vector 310.0 -375.0 197.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 370.0 175.0) (float-vector 270.0 370.0 175.0) (float-vector 270.0 -370.0 175.0) (float-vector 310.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 370.0 -165.0) (float-vector 310.0 370.0 -165.0) (float-vector 310.0 -370.0 -165.0) (float-vector 270.0 -370.0 -165.0)))
         (instance face :init :vertices (list (float-vector 310.0 370.0 175.0) (float-vector 310.0 370.0 -165.0) (float-vector 270.0 370.0 -165.0) (float-vector 270.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 310.0 -370.0 175.0) (float-vector 310.0 -370.0 -165.0) (float-vector 310.0 370.0 -165.0) (float-vector 310.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 -370.0 175.0) (float-vector 270.0 -370.0 -165.0) (float-vector 310.0 -370.0 -165.0) (float-vector 310.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 370.0 175.0) (float-vector 270.0 370.0 -165.0) (float-vector 270.0 -370.0 -165.0) (float-vector 270.0 -370.0 175.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :red3)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset6 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset7
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 175.0 -170.0) (float-vector -265.0 -175.0 -170.0) (float-vector -265.0 -175.0 170.0) (float-vector -265.0 175.0 170.0)))
         (instance face :init :vertices (list (float-vector 265.0 -175.0 -170.0) (float-vector 265.0 -175.0 170.0) (float-vector -265.0 -175.0 170.0) (float-vector -265.0 -175.0 -170.0)))
         (instance face :init :vertices (list (float-vector 265.0 175.0 -170.0) (float-vector 265.0 175.0 170.0) (float-vector 265.0 165.0 170.0) (float-vector 265.0 165.0 -160.0) (float-vector 265.0 -165.0 -160.0) (float-vector 265.0 -165.0 170.0) (float-vector 265.0 -175.0 170.0) (float-vector 265.0 -175.0 -170.0)))
         (instance face :init :vertices (list (float-vector -265.0 175.0 170.0) (float-vector -265.0 -175.0 170.0) (float-vector 265.0 -175.0 170.0) (float-vector 265.0 -165.0 170.0) (float-vector -255.0 -165.0 170.0) (float-vector -255.0 165.0 170.0) (float-vector 265.0 165.0 170.0) (float-vector 265.0 175.0 170.0)))
         (instance face :init :vertices (list (float-vector 265.0 175.0 -170.0) (float-vector 265.0 -175.0 -170.0) (float-vector -265.0 -175.0 -170.0) (float-vector -265.0 175.0 -170.0)))
         (instance face :init :vertices (list (float-vector -265.0 175.0 -170.0) (float-vector -265.0 175.0 170.0) (float-vector 265.0 175.0 170.0) (float-vector 265.0 175.0 -170.0)))
         (instance face :init :vertices (list (float-vector -255.0 165.0 170.0) (float-vector -255.0 -165.0 170.0) (float-vector -255.0 -165.0 -160.0) (float-vector -255.0 165.0 -160.0)))
         (instance face :init :vertices (list (float-vector -255.0 -165.0 -160.0) (float-vector -255.0 -165.0 170.0) (float-vector 265.0 -165.0 170.0) (float-vector 265.0 -165.0 -160.0)))
         (instance face :init :vertices (list (float-vector 265.0 165.0 -160.0) (float-vector 265.0 165.0 170.0) (float-vector -255.0 165.0 170.0) (float-vector -255.0 165.0 -160.0)))
         (instance face :init :vertices (list (float-vector -255.0 165.0 -160.0) (float-vector -255.0 -165.0 -160.0) (float-vector 265.0 -165.0 -160.0) (float-vector 265.0 165.0 -160.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 220.0 -165.0) (float-vector 282.0 220.0 -165.0) (float-vector 282.0 -220.0 -165.0) (float-vector 315.0 -220.0 -165.0)))
         (instance face :init :vertices (list (float-vector 282.0 220.0 175.0) (float-vector 282.0 220.0 -165.0) (float-vector 315.0 220.0 -165.0) (float-vector 315.0 220.0 175.0)))
         (instance face :init :vertices (list (float-vector 282.0 -220.0 175.0) (float-vector 282.0 220.0 175.0) (float-vector 315.0 220.0 175.0) (float-vector 315.0 -220.0 175.0)))
         (instance face :init :vertices (list (float-vector 282.0 -220.0 175.0) (float-vector 282.0 -220.0 -165.0) (float-vector 282.0 220.0 -165.0) (float-vector 282.0 220.0 175.0)))
         (instance face :init :vertices (list (float-vector 315.0 -220.0 175.0) (float-vector 315.0 -220.0 -165.0) (float-vector 282.0 -220.0 -165.0) (float-vector 282.0 -220.0 175.0)))
         (instance face :init :vertices (list (float-vector 265.0 -225.0 220.0) (float-vector 265.0 -225.0 -170.0) (float-vector 315.0 -225.0 -170.0) (float-vector 315.0 -225.0 180.0) (float-vector 290.0 -225.0 180.0) (float-vector 290.0 -225.0 210.0) (float-vector 310.0 -225.0 210.0) (float-vector 310.0 -225.0 197.5) (float-vector 315.0 -225.0 197.5) (float-vector 315.0 -225.0 220.0)))
         (instance face :init :vertices (list (float-vector 265.0 225.0 -170.0) (float-vector 265.0 -225.0 -170.0) (float-vector 265.0 -225.0 220.0) (float-vector 265.0 225.0 220.0)))
         (instance face :init :vertices (list (float-vector 315.0 225.0 220.0) (float-vector 315.0 -225.0 220.0) (float-vector 315.0 -225.0 197.5) (float-vector 315.0 225.0 197.5)))
         (instance face :init :vertices (list (float-vector 315.0 225.0 180.0) (float-vector 315.0 -225.0 180.0) (float-vector 315.0 -225.0 -170.0) (float-vector 315.0 225.0 -170.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 315.0 -220.0 -165.0) (float-vector 315.0 -220.0 175.0) (float-vector 315.0 220.0 175.0) (float-vector 315.0 220.0 -165.0)))
))
         (instance face :init :vertices (list (float-vector 315.0 225.0 220.0) (float-vector 265.0 225.0 220.0) (float-vector 265.0 -225.0 220.0) (float-vector 315.0 -225.0 220.0)))
         (instance face :init :vertices (list (float-vector 265.0 225.0 -170.0) (float-vector 315.0 225.0 -170.0) (float-vector 315.0 -225.0 -170.0) (float-vector 265.0 -225.0 -170.0)))
         (instance face :init :vertices (list (float-vector 290.0 225.0 180.0) (float-vector 315.0 225.0 180.0) (float-vector 315.0 225.0 -170.0) (float-vector 265.0 225.0 -170.0) (float-vector 265.0 225.0 220.0) (float-vector 315.0 225.0 220.0) (float-vector 315.0 225.0 197.5) (float-vector 310.0 225.0 197.5) (float-vector 310.0 225.0 210.0) (float-vector 290.0 225.0 210.0)))
         (instance face :init :vertices (list (float-vector 290.0 -225.0 210.0) (float-vector 290.0 225.0 210.0) (float-vector 310.0 225.0 210.0) (float-vector 310.0 -225.0 210.0)))
         (instance face :init :vertices (list (float-vector 290.0 225.0 180.0) (float-vector 290.0 -225.0 180.0) (float-vector 315.0 -225.0 180.0) (float-vector 315.0 225.0 180.0)))
         (instance face :init :vertices (list (float-vector 290.0 -225.0 180.0) (float-vector 290.0 225.0 180.0) (float-vector 290.0 225.0 210.0) (float-vector 290.0 -225.0 210.0)))
         (instance face :init :vertices (list (float-vector 310.0 225.0 210.0) (float-vector 310.0 225.0 197.5) (float-vector 310.0 -225.0 197.5) (float-vector 310.0 -225.0 210.0)))
         (instance face :init :vertices (list (float-vector 310.0 225.0 197.5) (float-vector 315.0 225.0 197.5) (float-vector 315.0 -225.0 197.5) (float-vector 310.0 -225.0 197.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 220.0 175.0) (float-vector 270.0 220.0 175.0) (float-vector 270.0 -220.0 175.0) (float-vector 310.0 -220.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 220.0 -165.0) (float-vector 310.0 220.0 -165.0) (float-vector 310.0 -220.0 -165.0) (float-vector 270.0 -220.0 -165.0)))
         (instance face :init :vertices (list (float-vector 310.0 220.0 175.0) (float-vector 310.0 220.0 -165.0) (float-vector 270.0 220.0 -165.0) (float-vector 270.0 220.0 175.0)))
         (instance face :init :vertices (list (float-vector 310.0 -220.0 175.0) (float-vector 310.0 -220.0 -165.0) (float-vector 310.0 220.0 -165.0) (float-vector 310.0 220.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 -220.0 175.0) (float-vector 270.0 -220.0 -165.0) (float-vector 310.0 -220.0 -165.0) (float-vector 310.0 -220.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 220.0 175.0) (float-vector 270.0 220.0 -165.0) (float-vector 270.0 -220.0 -165.0) (float-vector 270.0 -220.0 175.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :red3)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset7 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset8
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 325.0 -170.0) (float-vector -265.0 -325.0 -170.0) (float-vector -265.0 -325.0 170.0) (float-vector -265.0 325.0 170.0)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 -170.0) (float-vector 265.0 -325.0 170.0) (float-vector -265.0 -325.0 170.0) (float-vector -265.0 -325.0 -170.0)))
         (instance face :init :vertices (list (float-vector 265.0 325.0 -170.0) (float-vector 265.0 325.0 170.0) (float-vector 265.0 315.0 170.0) (float-vector 265.0 315.0 -160.0) (float-vector 265.0 -315.0 -160.0) (float-vector 265.0 -315.0 170.0) (float-vector 265.0 -325.0 170.0) (float-vector 265.0 -325.0 -170.0)))
         (instance face :init :vertices (list (float-vector -265.0 325.0 170.0) (float-vector -265.0 -325.0 170.0) (float-vector 265.0 -325.0 170.0) (float-vector 265.0 -315.0 170.0) (float-vector -255.0 -315.0 170.0) (float-vector -255.0 315.0 170.0) (float-vector 265.0 315.0 170.0) (float-vector 265.0 325.0 170.0)))
         (instance face :init :vertices (list (float-vector 265.0 325.0 -170.0) (float-vector 265.0 -325.0 -170.0) (float-vector -265.0 -325.0 -170.0) (float-vector -265.0 325.0 -170.0)))
         (instance face :init :vertices (list (float-vector -265.0 325.0 -170.0) (float-vector -265.0 325.0 170.0) (float-vector 265.0 325.0 170.0) (float-vector 265.0 325.0 -170.0)))
         (instance face :init :vertices (list (float-vector -255.0 315.0 170.0) (float-vector -255.0 -315.0 170.0) (float-vector -255.0 -315.0 -160.0) (float-vector -255.0 315.0 -160.0)))
         (instance face :init :vertices (list (float-vector -255.0 -315.0 -160.0) (float-vector -255.0 -315.0 170.0) (float-vector 265.0 -315.0 170.0) (float-vector 265.0 -315.0 -160.0)))
         (instance face :init :vertices (list (float-vector 265.0 315.0 -160.0) (float-vector 265.0 315.0 170.0) (float-vector -255.0 315.0 170.0) (float-vector -255.0 315.0 -160.0)))
         (instance face :init :vertices (list (float-vector -255.0 315.0 -160.0) (float-vector -255.0 -315.0 -160.0) (float-vector 265.0 -315.0 -160.0) (float-vector 265.0 315.0 -160.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 370.0 -165.0) (float-vector 282.0 370.0 -165.0) (float-vector 282.0 -370.0 -165.0) (float-vector 315.0 -370.0 -165.0)))
         (instance face :init :vertices (list (float-vector 282.0 370.0 175.0) (float-vector 282.0 370.0 -165.0) (float-vector 315.0 370.0 -165.0) (float-vector 315.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 282.0 -370.0 175.0) (float-vector 282.0 370.0 175.0) (float-vector 315.0 370.0 175.0) (float-vector 315.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 282.0 -370.0 175.0) (float-vector 282.0 -370.0 -165.0) (float-vector 282.0 370.0 -165.0) (float-vector 282.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 315.0 -370.0 175.0) (float-vector 315.0 -370.0 -165.0) (float-vector 282.0 -370.0 -165.0) (float-vector 282.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 265.0 -375.0 220.0) (float-vector 265.0 -375.0 -170.0) (float-vector 315.0 -375.0 -170.0) (float-vector 315.0 -375.0 180.0) (float-vector 290.0 -375.0 180.0) (float-vector 290.0 -375.0 210.0) (float-vector 310.0 -375.0 210.0) (float-vector 310.0 -375.0 197.5) (float-vector 315.0 -375.0 197.5) (float-vector 315.0 -375.0 220.0)))
         (instance face :init :vertices (list (float-vector 265.0 375.0 -170.0) (float-vector 265.0 -375.0 -170.0) (float-vector 265.0 -375.0 220.0) (float-vector 265.0 375.0 220.0)))
         (instance face :init :vertices (list (float-vector 315.0 375.0 220.0) (float-vector 315.0 -375.0 220.0) (float-vector 315.0 -375.0 197.5) (float-vector 315.0 375.0 197.5)))
         (instance face :init :vertices (list (float-vector 315.0 375.0 180.0) (float-vector 315.0 -375.0 180.0) (float-vector 315.0 -375.0 -170.0) (float-vector 315.0 375.0 -170.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 315.0 -370.0 -165.0) (float-vector 315.0 -370.0 175.0) (float-vector 315.0 370.0 175.0) (float-vector 315.0 370.0 -165.0)))
))
         (instance face :init :vertices (list (float-vector 315.0 375.0 220.0) (float-vector 265.0 375.0 220.0) (float-vector 265.0 -375.0 220.0) (float-vector 315.0 -375.0 220.0)))
         (instance face :init :vertices (list (float-vector 265.0 375.0 -170.0) (float-vector 315.0 375.0 -170.0) (float-vector 315.0 -375.0 -170.0) (float-vector 265.0 -375.0 -170.0)))
         (instance face :init :vertices (list (float-vector 290.0 375.0 180.0) (float-vector 315.0 375.0 180.0) (float-vector 315.0 375.0 -170.0) (float-vector 265.0 375.0 -170.0) (float-vector 265.0 375.0 220.0) (float-vector 315.0 375.0 220.0) (float-vector 315.0 375.0 197.5) (float-vector 310.0 375.0 197.5) (float-vector 310.0 375.0 210.0) (float-vector 290.0 375.0 210.0)))
         (instance face :init :vertices (list (float-vector 290.0 -375.0 210.0) (float-vector 290.0 375.0 210.0) (float-vector 310.0 375.0 210.0) (float-vector 310.0 -375.0 210.0)))
         (instance face :init :vertices (list (float-vector 290.0 375.0 180.0) (float-vector 290.0 -375.0 180.0) (float-vector 315.0 -375.0 180.0) (float-vector 315.0 375.0 180.0)))
         (instance face :init :vertices (list (float-vector 290.0 -375.0 180.0) (float-vector 290.0 375.0 180.0) (float-vector 290.0 375.0 210.0) (float-vector 290.0 -375.0 210.0)))
         (instance face :init :vertices (list (float-vector 310.0 375.0 210.0) (float-vector 310.0 375.0 197.5) (float-vector 310.0 -375.0 197.5) (float-vector 310.0 -375.0 210.0)))
         (instance face :init :vertices (list (float-vector 310.0 375.0 197.5) (float-vector 315.0 375.0 197.5) (float-vector 315.0 -375.0 197.5) (float-vector 310.0 -375.0 197.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 370.0 175.0) (float-vector 270.0 370.0 175.0) (float-vector 270.0 -370.0 175.0) (float-vector 310.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 370.0 -165.0) (float-vector 310.0 370.0 -165.0) (float-vector 310.0 -370.0 -165.0) (float-vector 270.0 -370.0 -165.0)))
         (instance face :init :vertices (list (float-vector 310.0 370.0 175.0) (float-vector 310.0 370.0 -165.0) (float-vector 270.0 370.0 -165.0) (float-vector 270.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 310.0 -370.0 175.0) (float-vector 310.0 -370.0 -165.0) (float-vector 310.0 370.0 -165.0) (float-vector 310.0 370.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 -370.0 175.0) (float-vector 270.0 -370.0 -165.0) (float-vector 310.0 -370.0 -165.0) (float-vector 310.0 -370.0 175.0)))
         (instance face :init :vertices (list (float-vector 270.0 370.0 175.0) (float-vector 270.0 370.0 -165.0) (float-vector 270.0 -370.0 -165.0) (float-vector 270.0 -370.0 175.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :red3)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset8 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset9
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -295.0 40.0 -75.0) (float-vector -295.0 -40.0 -75.0) (float-vector -295.0 -40.0 75.0) (float-vector -295.0 40.0 75.0)))
         (instance face :init :vertices (list (float-vector 295.0 -40.0 -75.0) (float-vector 295.0 -40.0 75.0) (float-vector -295.0 -40.0 75.0) (float-vector -295.0 -40.0 -75.0)))
         (instance face :init :vertices (list (float-vector 295.0 40.0 -75.0) (float-vector 295.0 40.0 75.0) (float-vector 295.0 30.0 75.0) (float-vector 295.0 30.0 -65.0) (float-vector 295.0 -30.0 -65.0) (float-vector 295.0 -30.0 75.0) (float-vector 295.0 -40.0 75.0) (float-vector 295.0 -40.0 -75.0)))
         (instance face :init :vertices (list (float-vector -295.0 40.0 75.0) (float-vector -295.0 -40.0 75.0) (float-vector 295.0 -40.0 75.0) (float-vector 295.0 -30.0 75.0) (float-vector -285.0 -30.0 75.0) (float-vector -285.0 30.0 75.0) (float-vector 295.0 30.0 75.0) (float-vector 295.0 40.0 75.0)))
         (instance face :init :vertices (list (float-vector 295.0 40.0 -75.0) (float-vector 295.0 -40.0 -75.0) (float-vector -295.0 -40.0 -75.0) (float-vector -295.0 40.0 -75.0)))
         (instance face :init :vertices (list (float-vector -295.0 40.0 -75.0) (float-vector -295.0 40.0 75.0) (float-vector 295.0 40.0 75.0) (float-vector 295.0 40.0 -75.0)))
         (instance face :init :vertices (list (float-vector -285.0 30.0 75.0) (float-vector -285.0 -30.0 75.0) (float-vector -285.0 -30.0 -65.0) (float-vector -285.0 30.0 -65.0)))
         (instance face :init :vertices (list (float-vector -285.0 -30.0 -65.0) (float-vector -285.0 -30.0 75.0) (float-vector 295.0 -30.0 75.0) (float-vector 295.0 -30.0 -65.0)))
         (instance face :init :vertices (list (float-vector 295.0 30.0 -65.0) (float-vector 295.0 30.0 75.0) (float-vector -285.0 30.0 75.0) (float-vector -285.0 30.0 -65.0)))
         (instance face :init :vertices (list (float-vector -285.0 30.0 -65.0) (float-vector -285.0 -30.0 -65.0) (float-vector 295.0 -30.0 -65.0) (float-vector 295.0 30.0 -65.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 330.0 55.0 -70.0) (float-vector 297.0 55.0 -70.0) (float-vector 297.0 -55.0 -70.0) (float-vector 330.0 -55.0 -70.0)))
         (instance face :init :vertices (list (float-vector 297.0 55.0 50.0) (float-vector 297.0 55.0 -70.0) (float-vector 330.0 55.0 -70.0) (float-vector 330.0 55.0 50.0)))
         (instance face :init :vertices (list (float-vector 297.0 -55.0 50.0) (float-vector 297.0 55.0 50.0) (float-vector 330.0 55.0 50.0) (float-vector 330.0 -55.0 50.0)))
         (instance face :init :vertices (list (float-vector 297.0 -55.0 50.0) (float-vector 297.0 -55.0 -70.0) (float-vector 297.0 55.0 -70.0) (float-vector 297.0 55.0 50.0)))
         (instance face :init :vertices (list (float-vector 330.0 -55.0 50.0) (float-vector 330.0 -55.0 -70.0) (float-vector 297.0 -55.0 -70.0) (float-vector 297.0 -55.0 50.0)))
         (instance face :init :vertices (list (float-vector 280.0 -60.0 95.0) (float-vector 280.0 -60.0 -75.0) (float-vector 330.0 -60.0 -75.0) (float-vector 330.0 -60.0 55.0) (float-vector 305.0 -60.0 55.0) (float-vector 305.0 -60.0 85.0) (float-vector 325.0 -60.0 85.0) (float-vector 325.0 -60.0 72.5) (float-vector 330.0 -60.0 72.5) (float-vector 330.0 -60.0 95.0)))
         (instance face :init :vertices (list (float-vector 280.0 60.0 -75.0) (float-vector 280.0 -60.0 -75.0) (float-vector 280.0 -60.0 95.0) (float-vector 280.0 60.0 95.0)))
         (instance face :init :vertices (list (float-vector 330.0 60.0 95.0) (float-vector 330.0 -60.0 95.0) (float-vector 330.0 -60.0 72.5) (float-vector 330.0 60.0 72.5)))
         (instance face :init :vertices (list (float-vector 330.0 60.0 55.0) (float-vector 330.0 -60.0 55.0) (float-vector 330.0 -60.0 -75.0) (float-vector 330.0 60.0 -75.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 330.0 -55.0 -70.0) (float-vector 330.0 -55.0 50.0) (float-vector 330.0 55.0 50.0) (float-vector 330.0 55.0 -70.0)))
))
         (instance face :init :vertices (list (float-vector 330.0 60.0 95.0) (float-vector 280.0 60.0 95.0) (float-vector 280.0 -60.0 95.0) (float-vector 330.0 -60.0 95.0)))
         (instance face :init :vertices (list (float-vector 280.0 60.0 -75.0) (float-vector 330.0 60.0 -75.0) (float-vector 330.0 -60.0 -75.0) (float-vector 280.0 -60.0 -75.0)))
         (instance face :init :vertices (list (float-vector 305.0 60.0 55.0) (float-vector 330.0 60.0 55.0) (float-vector 330.0 60.0 -75.0) (float-vector 280.0 60.0 -75.0) (float-vector 280.0 60.0 95.0) (float-vector 330.0 60.0 95.0) (float-vector 330.0 60.0 72.5) (float-vector 325.0 60.0 72.5) (float-vector 325.0 60.0 85.0) (float-vector 305.0 60.0 85.0)))
         (instance face :init :vertices (list (float-vector 305.0 -60.0 85.0) (float-vector 305.0 60.0 85.0) (float-vector 325.0 60.0 85.0) (float-vector 325.0 -60.0 85.0)))
         (instance face :init :vertices (list (float-vector 305.0 60.0 55.0) (float-vector 305.0 -60.0 55.0) (float-vector 330.0 -60.0 55.0) (float-vector 330.0 60.0 55.0)))
         (instance face :init :vertices (list (float-vector 305.0 -60.0 55.0) (float-vector 305.0 60.0 55.0) (float-vector 305.0 60.0 85.0) (float-vector 305.0 -60.0 85.0)))
         (instance face :init :vertices (list (float-vector 325.0 60.0 85.0) (float-vector 325.0 60.0 72.5) (float-vector 325.0 -60.0 72.5) (float-vector 325.0 -60.0 85.0)))
         (instance face :init :vertices (list (float-vector 325.0 60.0 72.5) (float-vector 330.0 60.0 72.5) (float-vector 330.0 -60.0 72.5) (float-vector 325.0 -60.0 72.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 325.0 55.0 50.0) (float-vector 285.0 55.0 50.0) (float-vector 285.0 -55.0 50.0) (float-vector 325.0 -55.0 50.0)))
         (instance face :init :vertices (list (float-vector 285.0 55.0 -70.0) (float-vector 325.0 55.0 -70.0) (float-vector 325.0 -55.0 -70.0) (float-vector 285.0 -55.0 -70.0)))
         (instance face :init :vertices (list (float-vector 325.0 55.0 50.0) (float-vector 325.0 55.0 -70.0) (float-vector 285.0 55.0 -70.0) (float-vector 285.0 55.0 50.0)))
         (instance face :init :vertices (list (float-vector 325.0 -55.0 50.0) (float-vector 325.0 -55.0 -70.0) (float-vector 325.0 55.0 -70.0) (float-vector 325.0 55.0 50.0)))
         (instance face :init :vertices (list (float-vector 285.0 -55.0 50.0) (float-vector 285.0 -55.0 -70.0) (float-vector 325.0 -55.0 -70.0) (float-vector 325.0 -55.0 50.0)))
         (instance face :init :vertices (list (float-vector 285.0 55.0 50.0) (float-vector 285.0 55.0 -70.0) (float-vector 285.0 -55.0 -70.0) (float-vector 285.0 -55.0 50.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :gray60)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset9 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset10
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 250.0 -60.0) (float-vector -265.0 -250.0 -60.0) (float-vector -265.0 -250.0 60.0) (float-vector -265.0 250.0 60.0)))
         (instance face :init :vertices (list (float-vector 265.0 -250.0 -60.0) (float-vector 265.0 -250.0 60.0) (float-vector -265.0 -250.0 60.0) (float-vector -265.0 -250.0 -60.0)))
         (instance face :init :vertices (list (float-vector 265.0 250.0 -60.0) (float-vector 265.0 250.0 60.0) (float-vector 265.0 240.0 60.0) (float-vector 265.0 240.0 -50.0) (float-vector 265.0 -240.0 -50.0) (float-vector 265.0 -240.0 60.0) (float-vector 265.0 -250.0 60.0) (float-vector 265.0 -250.0 -60.0)))
         (instance face :init :vertices (list (float-vector -265.0 250.0 60.0) (float-vector -265.0 -250.0 60.0) (float-vector 265.0 -250.0 60.0) (float-vector 265.0 -240.0 60.0) (float-vector -255.0 -240.0 60.0) (float-vector -255.0 240.0 60.0) (float-vector 265.0 240.0 60.0) (float-vector 265.0 250.0 60.0)))
         (instance face :init :vertices (list (float-vector 265.0 250.0 -60.0) (float-vector 265.0 -250.0 -60.0) (float-vector -265.0 -250.0 -60.0) (float-vector -265.0 250.0 -60.0)))
         (instance face :init :vertices (list (float-vector -265.0 250.0 -60.0) (float-vector -265.0 250.0 60.0) (float-vector 265.0 250.0 60.0) (float-vector 265.0 250.0 -60.0)))
         (instance face :init :vertices (list (float-vector -255.0 240.0 60.0) (float-vector -255.0 -240.0 60.0) (float-vector -255.0 -240.0 -50.0) (float-vector -255.0 240.0 -50.0)))
         (instance face :init :vertices (list (float-vector -255.0 -240.0 -50.0) (float-vector -255.0 -240.0 60.0) (float-vector 265.0 -240.0 60.0) (float-vector 265.0 -240.0 -50.0)))
         (instance face :init :vertices (list (float-vector 265.0 240.0 -50.0) (float-vector 265.0 240.0 60.0) (float-vector -255.0 240.0 60.0) (float-vector -255.0 240.0 -50.0)))
         (instance face :init :vertices (list (float-vector -255.0 240.0 -50.0) (float-vector -255.0 -240.0 -50.0) (float-vector 265.0 -240.0 -50.0) (float-vector 265.0 240.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 295.0 -55.0) (float-vector 282.0 295.0 -55.0) (float-vector 282.0 -295.0 -55.0) (float-vector 315.0 -295.0 -55.0)))
         (instance face :init :vertices (list (float-vector 282.0 295.0 65.0) (float-vector 282.0 295.0 -55.0) (float-vector 315.0 295.0 -55.0) (float-vector 315.0 295.0 65.0)))
         (instance face :init :vertices (list (float-vector 282.0 -295.0 65.0) (float-vector 282.0 295.0 65.0) (float-vector 315.0 295.0 65.0) (float-vector 315.0 -295.0 65.0)))
         (instance face :init :vertices (list (float-vector 282.0 -295.0 65.0) (float-vector 282.0 -295.0 -55.0) (float-vector 282.0 295.0 -55.0) (float-vector 282.0 295.0 65.0)))
         (instance face :init :vertices (list (float-vector 315.0 -295.0 65.0) (float-vector 315.0 -295.0 -55.0) (float-vector 282.0 -295.0 -55.0) (float-vector 282.0 -295.0 65.0)))
         (instance face :init :vertices (list (float-vector 265.0 -300.0 110.0) (float-vector 265.0 -300.0 -60.0) (float-vector 315.0 -300.0 -60.0) (float-vector 315.0 -300.0 70.0) (float-vector 290.0 -300.0 70.0) (float-vector 290.0 -300.0 100.0) (float-vector 310.0 -300.0 100.0) (float-vector 310.0 -300.0 87.5) (float-vector 315.0 -300.0 87.5) (float-vector 315.0 -300.0 110.0)))
         (instance face :init :vertices (list (float-vector 265.0 300.0 -60.0) (float-vector 265.0 -300.0 -60.0) (float-vector 265.0 -300.0 110.0) (float-vector 265.0 300.0 110.0)))
         (instance face :init :vertices (list (float-vector 315.0 300.0 110.0) (float-vector 315.0 -300.0 110.0) (float-vector 315.0 -300.0 87.5) (float-vector 315.0 300.0 87.5)))
         (instance face :init :vertices (list (float-vector 315.0 300.0 70.0) (float-vector 315.0 -300.0 70.0) (float-vector 315.0 -300.0 -60.0) (float-vector 315.0 300.0 -60.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 315.0 -295.0 -55.0) (float-vector 315.0 -295.0 65.0) (float-vector 315.0 295.0 65.0) (float-vector 315.0 295.0 -55.0)))
))
         (instance face :init :vertices (list (float-vector 315.0 300.0 110.0) (float-vector 265.0 300.0 110.0) (float-vector 265.0 -300.0 110.0) (float-vector 315.0 -300.0 110.0)))
         (instance face :init :vertices (list (float-vector 265.0 300.0 -60.0) (float-vector 315.0 300.0 -60.0) (float-vector 315.0 -300.0 -60.0) (float-vector 265.0 -300.0 -60.0)))
         (instance face :init :vertices (list (float-vector 290.0 300.0 70.0) (float-vector 315.0 300.0 70.0) (float-vector 315.0 300.0 -60.0) (float-vector 265.0 300.0 -60.0) (float-vector 265.0 300.0 110.0) (float-vector 315.0 300.0 110.0) (float-vector 315.0 300.0 87.5) (float-vector 310.0 300.0 87.5) (float-vector 310.0 300.0 100.0) (float-vector 290.0 300.0 100.0)))
         (instance face :init :vertices (list (float-vector 290.0 -300.0 100.0) (float-vector 290.0 300.0 100.0) (float-vector 310.0 300.0 100.0) (float-vector 310.0 -300.0 100.0)))
         (instance face :init :vertices (list (float-vector 290.0 300.0 70.0) (float-vector 290.0 -300.0 70.0) (float-vector 315.0 -300.0 70.0) (float-vector 315.0 300.0 70.0)))
         (instance face :init :vertices (list (float-vector 290.0 -300.0 70.0) (float-vector 290.0 300.0 70.0) (float-vector 290.0 300.0 100.0) (float-vector 290.0 -300.0 100.0)))
         (instance face :init :vertices (list (float-vector 310.0 300.0 100.0) (float-vector 310.0 300.0 87.5) (float-vector 310.0 -300.0 87.5) (float-vector 310.0 -300.0 100.0)))
         (instance face :init :vertices (list (float-vector 310.0 300.0 87.5) (float-vector 315.0 300.0 87.5) (float-vector 315.0 -300.0 87.5) (float-vector 310.0 -300.0 87.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 295.0 65.0) (float-vector 270.0 295.0 65.0) (float-vector 270.0 -295.0 65.0) (float-vector 310.0 -295.0 65.0)))
         (instance face :init :vertices (list (float-vector 270.0 295.0 -55.0) (float-vector 310.0 295.0 -55.0) (float-vector 310.0 -295.0 -55.0) (float-vector 270.0 -295.0 -55.0)))
         (instance face :init :vertices (list (float-vector 310.0 295.0 65.0) (float-vector 310.0 295.0 -55.0) (float-vector 270.0 295.0 -55.0) (float-vector 270.0 295.0 65.0)))
         (instance face :init :vertices (list (float-vector 310.0 -295.0 65.0) (float-vector 310.0 -295.0 -55.0) (float-vector 310.0 295.0 -55.0) (float-vector 310.0 295.0 65.0)))
         (instance face :init :vertices (list (float-vector 270.0 -295.0 65.0) (float-vector 270.0 -295.0 -55.0) (float-vector 310.0 -295.0 -55.0) (float-vector 310.0 -295.0 65.0)))
         (instance face :init :vertices (list (float-vector 270.0 295.0 65.0) (float-vector 270.0 295.0 -55.0) (float-vector 270.0 -295.0 -55.0) (float-vector 270.0 -295.0 65.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :red3)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset10 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset11
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 95.0 -50.0) (float-vector -265.0 -95.0 -50.0) (float-vector -265.0 -95.0 50.0) (float-vector -265.0 95.0 50.0)))
         (instance face :init :vertices (list (float-vector 265.0 -95.0 -50.0) (float-vector 265.0 -95.0 50.0) (float-vector -265.0 -95.0 50.0) (float-vector -265.0 -95.0 -50.0)))
         (instance face :init :vertices (list (float-vector 265.0 95.0 -50.0) (float-vector 265.0 95.0 50.0) (float-vector 265.0 45.0 50.0) (float-vector 265.0 45.0 0.0) (float-vector 265.0 -45.0 0.0) (float-vector 265.0 -45.0 50.0) (float-vector 265.0 -95.0 50.0) (float-vector 265.0 -95.0 -50.0)))
         (instance face :init :vertices (list (float-vector -265.0 95.0 50.0) (float-vector -265.0 -95.0 50.0) (float-vector 265.0 -95.0 50.0) (float-vector 265.0 -45.0 50.0) (float-vector -215.0 -45.0 50.0) (float-vector -215.0 45.0 50.0) (float-vector 265.0 45.0 50.0) (float-vector 265.0 95.0 50.0)))
         (instance face :init :vertices (list (float-vector 265.0 95.0 -50.0) (float-vector 265.0 -95.0 -50.0) (float-vector -265.0 -95.0 -50.0) (float-vector -265.0 95.0 -50.0)))
         (instance face :init :vertices (list (float-vector -265.0 95.0 -50.0) (float-vector -265.0 95.0 50.0) (float-vector 265.0 95.0 50.0) (float-vector 265.0 95.0 -50.0)))
         (instance face :init :vertices (list (float-vector -215.0 45.0 50.0) (float-vector -215.0 -45.0 50.0) (float-vector -215.0 -45.0 0.0) (float-vector -215.0 45.0 0.0)))
         (instance face :init :vertices (list (float-vector -215.0 -45.0 0.0) (float-vector -215.0 -45.0 50.0) (float-vector 265.0 -45.0 50.0) (float-vector 265.0 -45.0 0.0)))
         (instance face :init :vertices (list (float-vector 265.0 45.0 0.0) (float-vector 265.0 45.0 50.0) (float-vector -215.0 45.0 50.0) (float-vector -215.0 45.0 0.0)))
         (instance face :init :vertices (list (float-vector -215.0 45.0 0.0) (float-vector -215.0 -45.0 0.0) (float-vector 265.0 -45.0 0.0) (float-vector 265.0 45.0 0.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 140.0 -45.0) (float-vector 282.0 140.0 -45.0) (float-vector 282.0 -140.0 -45.0) (float-vector 315.0 -140.0 -45.0)))
         (instance face :init :vertices (list (float-vector 282.0 140.0 55.0) (float-vector 282.0 140.0 -45.0) (float-vector 315.0 140.0 -45.0) (float-vector 315.0 140.0 55.0)))
         (instance face :init :vertices (list (float-vector 282.0 -140.0 55.0) (float-vector 282.0 140.0 55.0) (float-vector 315.0 140.0 55.0) (float-vector 315.0 -140.0 55.0)))
         (instance face :init :vertices (list (float-vector 282.0 -140.0 55.0) (float-vector 282.0 -140.0 -45.0) (float-vector 282.0 140.0 -45.0) (float-vector 282.0 140.0 55.0)))
         (instance face :init :vertices (list (float-vector 315.0 -140.0 55.0) (float-vector 315.0 -140.0 -45.0) (float-vector 282.0 -140.0 -45.0) (float-vector 282.0 -140.0 55.0)))
         (instance face :init :vertices (list (float-vector 265.0 -145.0 100.0) (float-vector 265.0 -145.0 -50.0) (float-vector 315.0 -145.0 -50.0) (float-vector 315.0 -145.0 60.0) (float-vector 290.0 -145.0 60.0) (float-vector 290.0 -145.0 90.0) (float-vector 310.0 -145.0 90.0) (float-vector 310.0 -145.0 77.5) (float-vector 315.0 -145.0 77.5) (float-vector 315.0 -145.0 100.0)))
         (instance face :init :vertices (list (float-vector 265.0 145.0 -50.0) (float-vector 265.0 -145.0 -50.0) (float-vector 265.0 -145.0 100.0) (float-vector 265.0 145.0 100.0)))
         (instance face :init :vertices (list (float-vector 315.0 145.0 100.0) (float-vector 315.0 -145.0 100.0) (float-vector 315.0 -145.0 77.5) (float-vector 315.0 145.0 77.5)))
         (instance face :init :vertices (list (float-vector 315.0 145.0 60.0) (float-vector 315.0 -145.0 60.0) (float-vector 315.0 -145.0 -50.0) (float-vector 315.0 145.0 -50.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 315.0 -140.0 -45.0) (float-vector 315.0 -140.0 55.0) (float-vector 315.0 140.0 55.0) (float-vector 315.0 140.0 -45.0)))
))
         (instance face :init :vertices (list (float-vector 315.0 145.0 100.0) (float-vector 265.0 145.0 100.0) (float-vector 265.0 -145.0 100.0) (float-vector 315.0 -145.0 100.0)))
         (instance face :init :vertices (list (float-vector 265.0 145.0 -50.0) (float-vector 315.0 145.0 -50.0) (float-vector 315.0 -145.0 -50.0) (float-vector 265.0 -145.0 -50.0)))
         (instance face :init :vertices (list (float-vector 290.0 145.0 60.0) (float-vector 315.0 145.0 60.0) (float-vector 315.0 145.0 -50.0) (float-vector 265.0 145.0 -50.0) (float-vector 265.0 145.0 100.0) (float-vector 315.0 145.0 100.0) (float-vector 315.0 145.0 77.5) (float-vector 310.0 145.0 77.5) (float-vector 310.0 145.0 90.0) (float-vector 290.0 145.0 90.0)))
         (instance face :init :vertices (list (float-vector 290.0 -145.0 90.0) (float-vector 290.0 145.0 90.0) (float-vector 310.0 145.0 90.0) (float-vector 310.0 -145.0 90.0)))
         (instance face :init :vertices (list (float-vector 290.0 145.0 60.0) (float-vector 290.0 -145.0 60.0) (float-vector 315.0 -145.0 60.0) (float-vector 315.0 145.0 60.0)))
         (instance face :init :vertices (list (float-vector 290.0 -145.0 60.0) (float-vector 290.0 145.0 60.0) (float-vector 290.0 145.0 90.0) (float-vector 290.0 -145.0 90.0)))
         (instance face :init :vertices (list (float-vector 310.0 145.0 90.0) (float-vector 310.0 145.0 77.5) (float-vector 310.0 -145.0 77.5) (float-vector 310.0 -145.0 90.0)))
         (instance face :init :vertices (list (float-vector 310.0 145.0 77.5) (float-vector 315.0 145.0 77.5) (float-vector 315.0 -145.0 77.5) (float-vector 310.0 -145.0 77.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 140.0 55.0) (float-vector 270.0 140.0 55.0) (float-vector 270.0 -140.0 55.0) (float-vector 310.0 -140.0 55.0)))
         (instance face :init :vertices (list (float-vector 270.0 140.0 -45.0) (float-vector 310.0 140.0 -45.0) (float-vector 310.0 -140.0 -45.0) (float-vector 270.0 -140.0 -45.0)))
         (instance face :init :vertices (list (float-vector 310.0 140.0 55.0) (float-vector 310.0 140.0 -45.0) (float-vector 270.0 140.0 -45.0) (float-vector 270.0 140.0 55.0)))
         (instance face :init :vertices (list (float-vector 310.0 -140.0 55.0) (float-vector 310.0 -140.0 -45.0) (float-vector 310.0 140.0 -45.0) (float-vector 310.0 140.0 55.0)))
         (instance face :init :vertices (list (float-vector 270.0 -140.0 55.0) (float-vector 270.0 -140.0 -45.0) (float-vector 310.0 -140.0 -45.0) (float-vector 310.0 -140.0 55.0)))
         (instance face :init :vertices (list (float-vector 270.0 140.0 55.0) (float-vector 270.0 140.0 -45.0) (float-vector 270.0 -140.0 -45.0) (float-vector 270.0 -140.0 55.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :gray20)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset11 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of 'tap-tube
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 241.188 -8.5 182.25) (float-vector 242.327 0.0 180.278) (float-vector 241.188 8.5 182.25) (float-vector 238.077 14.7224 187.639) (float-vector 233.827 17.0 195.0) (float-vector 229.577 14.7224 202.361) (float-vector 226.466 8.5 207.75) (float-vector 225.327 0.0 209.722) (float-vector 226.466 -8.5 207.75) (float-vector 229.577 -14.7224 202.361) (float-vector 233.827 -17.0 195.0) (float-vector 238.077 -14.7224 187.639)))
         (instance face :init :vertices (list (float-vector 8.5 0.0 45.2776) (float-vector 7.36122 -8.5 47.25) (float-vector 4.25 -14.7224 52.6388) (float-vector 0.0 -17.0 60.0) (float-vector -4.25 -14.7224 67.3612) (float-vector -7.36122 -8.5 72.75) (float-vector -8.5 0.0 74.7224) (float-vector -7.36122 8.5 72.75) (float-vector -4.25 14.7224 67.3612) (float-vector 0.0 17.0 60.0) (float-vector 4.25 14.7224 52.6388) (float-vector 7.36122 8.5 47.25)))
         (instance face :init :vertices (list (float-vector 241.188 -8.5 182.25) (float-vector 7.36122 -8.5 47.25) (float-vector 8.5 0.0 45.2776) (float-vector 242.327 0.0 180.278)))
         (instance face :init :vertices (list (float-vector 238.077 -14.7224 187.639) (float-vector 4.25 -14.7224 52.6388) (float-vector 7.36122 -8.5 47.25) (float-vector 241.188 -8.5 182.25)))
         (instance face :init :vertices (list (float-vector 233.827 -17.0 195.0) (float-vector 0.0 -17.0 60.0) (float-vector 4.25 -14.7224 52.6388) (float-vector 238.077 -14.7224 187.639)))
         (instance face :init :vertices (list (float-vector 229.577 -14.7224 202.361) (float-vector -4.25 -14.7224 67.3612) (float-vector 0.0 -17.0 60.0) (float-vector 233.827 -17.0 195.0)))
         (instance face :init :vertices (list (float-vector 226.466 -8.5 207.75) (float-vector -7.36122 -8.5 72.75) (float-vector -4.25 -14.7224 67.3612) (float-vector 229.577 -14.7224 202.361)))
         (instance face :init :vertices (list (float-vector 225.327 0.0 209.722) (float-vector -8.5 0.0 74.7224) (float-vector -7.36122 -8.5 72.75) (float-vector 226.466 -8.5 207.75)))
         (instance face :init :vertices (list (float-vector 226.466 8.5 207.75) (float-vector -7.36122 8.5 72.75) (float-vector -8.5 0.0 74.7224) (float-vector 225.327 0.0 209.722)))
         (instance face :init :vertices (list (float-vector 229.577 14.7224 202.361) (float-vector -4.25 14.7224 67.3612) (float-vector -7.36122 8.5 72.75) (float-vector 226.466 8.5 207.75)))
         (instance face :init :vertices (list (float-vector 233.827 17.0 195.0) (float-vector 0.0 17.0 60.0) (float-vector -4.25 14.7224 67.3612) (float-vector 229.577 14.7224 202.361)))
         (instance face :init :vertices (list (float-vector 238.077 14.7224 187.639) (float-vector 4.25 14.7224 52.6388) (float-vector 0.0 17.0 60.0) (float-vector 233.827 17.0 195.0)))
         (instance face :init :vertices (list (float-vector 241.188 8.5 182.25) (float-vector 7.36122 8.5 47.25) (float-vector 4.25 14.7224 52.6388) (float-vector 238.077 14.7224 187.639)))
         (instance face :init :vertices (list (float-vector 242.327 0.0 180.278) (float-vector 8.5 0.0 45.2776) (float-vector 7.36122 8.5 47.25) (float-vector 241.188 8.5 182.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 259.808 -15.0 220.0) (float-vector 263.827 0.0 220.0) (float-vector 259.808 15.0 220.0) (float-vector 248.827 25.9808 220.0) (float-vector 233.827 30.0 220.0) (float-vector 218.827 25.9808 220.0) (float-vector 207.846 15.0 220.0) (float-vector 203.827 0.0 220.0) (float-vector 207.846 -15.0 220.0) (float-vector 218.827 -25.9808 220.0) (float-vector 233.827 -30.0 220.0) (float-vector 248.827 -25.9808 220.0)))
         (instance face :init :vertices (list (float-vector 263.827 0.0 165.0) (float-vector 259.808 -15.0 165.0) (float-vector 248.827 -25.9808 165.0) (float-vector 233.827 -30.0 165.0) (float-vector 218.827 -25.9808 165.0) (float-vector 207.846 -15.0 165.0) (float-vector 203.827 0.0 165.0) (float-vector 207.846 15.0 165.0) (float-vector 218.827 25.9808 165.0) (float-vector 233.827 30.0 165.0) (float-vector 248.827 25.9808 165.0) (float-vector 259.808 15.0 165.0)))
         (instance face :init :vertices (list (float-vector 259.808 -15.0 220.0) (float-vector 259.808 -15.0 165.0) (float-vector 263.827 0.0 165.0) (float-vector 263.827 0.0 220.0)))
         (instance face :init :vertices (list (float-vector 248.827 -25.9808 220.0) (float-vector 248.827 -25.9808 165.0) (float-vector 259.808 -15.0 165.0) (float-vector 259.808 -15.0 220.0)))
         (instance face :init :vertices (list (float-vector 233.827 -30.0 220.0) (float-vector 233.827 -30.0 165.0) (float-vector 248.827 -25.9808 165.0) (float-vector 248.827 -25.9808 220.0)))
         (instance face :init :vertices (list (float-vector 218.827 -25.9808 220.0) (float-vector 218.827 -25.9808 165.0) (float-vector 233.827 -30.0 165.0) (float-vector 233.827 -30.0 220.0)))
         (instance face :init :vertices (list (float-vector 207.846 -15.0 220.0) (float-vector 207.846 -15.0 165.0) (float-vector 218.827 -25.9808 165.0) (float-vector 218.827 -25.9808 220.0)))
         (instance face :init :vertices (list (float-vector 203.827 0.0 220.0) (float-vector 203.827 0.0 165.0) (float-vector 207.846 -15.0 165.0) (float-vector 207.846 -15.0 220.0)))
         (instance face :init :vertices (list (float-vector 207.846 15.0 220.0) (float-vector 207.846 15.0 165.0) (float-vector 203.827 0.0 165.0) (float-vector 203.827 0.0 220.0)))
         (instance face :init :vertices (list (float-vector 218.827 25.9808 220.0) (float-vector 218.827 25.9808 165.0) (float-vector 207.846 15.0 165.0) (float-vector 207.846 15.0 220.0)))
         (instance face :init :vertices (list (float-vector 233.827 30.0 220.0) (float-vector 233.827 30.0 165.0) (float-vector 218.827 25.9808 165.0) (float-vector 218.827 25.9808 220.0)))
         (instance face :init :vertices (list (float-vector 248.827 25.9808 220.0) (float-vector 248.827 25.9808 165.0) (float-vector 233.827 30.0 165.0) (float-vector 233.827 30.0 220.0)))
         (instance face :init :vertices (list (float-vector 259.808 15.0 220.0) (float-vector 259.808 15.0 165.0) (float-vector 248.827 25.9808 165.0) (float-vector 248.827 25.9808 220.0)))
         (instance face :init :vertices (list (float-vector 263.827 0.0 220.0) (float-vector 263.827 0.0 165.0) (float-vector 259.808 15.0 165.0) (float-vector 259.808 15.0 220.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (setq blink17 (instance bodyset-link :init (make-cascoords) :bodies bc :name 'tap-tube :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of 'tap-handle-body
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 125.0 25.0 5.0) (float-vector 0.0 25.0 5.0) (float-vector -4.547474e-13 -25.0 5.0) (float-vector 125.0 -25.0 5.0)))
         (instance face :init :vertices (list (float-vector -9.094947e-13 25.0 -5.0) (float-vector 125.0 25.0 -5.0) (float-vector 125.0 -25.0 -5.0) (float-vector -4.547474e-13 -25.0 -5.0)))
         (instance face :init :vertices (list (float-vector 125.0 25.0 5.0) (float-vector 125.0 25.0 -5.0) (float-vector -9.094947e-13 25.0 -5.0) (float-vector 0.0 25.0 5.0)))
         (instance face :init :vertices (list (float-vector 125.0 -25.0 5.0) (float-vector 125.0 -25.0 -5.0) (float-vector 125.0 25.0 -5.0) (float-vector 125.0 25.0 5.0)))
         (instance face :init :vertices (list (float-vector -4.547474e-13 -25.0 5.0) (float-vector -4.547474e-13 -25.0 -5.0) (float-vector 125.0 -25.0 -5.0) (float-vector 125.0 -25.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 25.0 5.0) (float-vector -9.094947e-13 25.0 -5.0) (float-vector -4.547474e-13 -25.0 -5.0) (float-vector -4.547474e-13 -25.0 5.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (setq blink18 (instance bodyset-link :init (make-cascoords) :bodies bc :name 'tap-handle-body :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset12
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 2.5 2.5 2.5) (float-vector -2.5 2.5 2.5) (float-vector -2.5 -2.5 2.5) (float-vector 2.5 -2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 2.5 -2.5) (float-vector 2.5 2.5 -2.5) (float-vector 2.5 -2.5 -2.5) (float-vector -2.5 -2.5 -2.5)))
         (instance face :init :vertices (list (float-vector 2.5 2.5 2.5) (float-vector 2.5 2.5 -2.5) (float-vector -2.5 2.5 -2.5) (float-vector -2.5 2.5 2.5)))
         (instance face :init :vertices (list (float-vector 2.5 -2.5 2.5) (float-vector 2.5 -2.5 -2.5) (float-vector 2.5 2.5 -2.5) (float-vector 2.5 2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 -2.5 2.5) (float-vector -2.5 -2.5 -2.5) (float-vector 2.5 -2.5 -2.5) (float-vector 2.5 -2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 2.5 2.5) (float-vector -2.5 2.5 -2.5) (float-vector -2.5 -2.5 -2.5) (float-vector -2.5 -2.5 2.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset12 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset13
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 17.3205 -10.0 30.0) (float-vector 20.0 0.0 30.0) (float-vector 17.3205 10.0 30.0) (float-vector 10.0 17.3205 30.0) (float-vector -1.136868e-13 20.0 30.0) (float-vector -10.0 17.3205 30.0) (float-vector -17.3205 10.0 30.0) (float-vector -20.0 0.0 30.0) (float-vector -17.3205 -10.0 30.0) (float-vector -10.0 -17.3205 30.0) (float-vector 0.0 -20.0 30.0) (float-vector 10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 0.0) (float-vector 17.3205 -10.0 0.0) (float-vector 10.0 -17.3205 0.0) (float-vector 0.0 -20.0 0.0) (float-vector -10.0 -17.3205 0.0) (float-vector -17.3205 -10.0 0.0) (float-vector -20.0 0.0 0.0) (float-vector -17.3205 10.0 0.0) (float-vector -10.0 17.3205 0.0) (float-vector 0.0 20.0 0.0) (float-vector 10.0 17.3205 0.0) (float-vector 17.3205 10.0 0.0)))
         (instance face :init :vertices (list (float-vector 17.3205 -10.0 30.0) (float-vector 17.3205 -10.0 0.0) (float-vector 20.0 0.0 0.0) (float-vector 20.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -17.3205 30.0) (float-vector 10.0 -17.3205 0.0) (float-vector 17.3205 -10.0 0.0) (float-vector 17.3205 -10.0 30.0)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 30.0) (float-vector 0.0 -20.0 0.0) (float-vector 10.0 -17.3205 0.0) (float-vector 10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 -17.3205 30.0) (float-vector -10.0 -17.3205 0.0) (float-vector 0.0 -20.0 0.0) (float-vector 0.0 -20.0 30.0)))
         (instance face :init :vertices (list (float-vector -17.3205 -10.0 30.0) (float-vector -17.3205 -10.0 0.0) (float-vector -10.0 -17.3205 0.0) (float-vector -10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector -20.0 0.0 30.0) (float-vector -20.0 0.0 0.0) (float-vector -17.3205 -10.0 0.0) (float-vector -17.3205 -10.0 30.0)))
         (instance face :init :vertices (list (float-vector -17.3205 10.0 30.0) (float-vector -17.3205 10.0 0.0) (float-vector -20.0 0.0 0.0) (float-vector -20.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 17.3205 30.0) (float-vector -10.0 17.3205 0.0) (float-vector -17.3205 10.0 0.0) (float-vector -17.3205 10.0 30.0)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 20.0 30.0) (float-vector 0.0 20.0 0.0) (float-vector -10.0 17.3205 0.0) (float-vector -10.0 17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 17.3205 30.0) (float-vector 10.0 17.3205 0.0) (float-vector 0.0 20.0 0.0) (float-vector -1.136868e-13 20.0 30.0)))
         (instance face :init :vertices (list (float-vector 17.3205 10.0 30.0) (float-vector 17.3205 10.0 0.0) (float-vector 10.0 17.3205 0.0) (float-vector 10.0 17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 20.0 0.0 0.0) (float-vector 17.3205 10.0 0.0) (float-vector 17.3205 10.0 30.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset13 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset14
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 2.5 2.5 2.5) (float-vector -2.5 2.5 2.5) (float-vector -2.5 -2.5 2.5) (float-vector 2.5 -2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 2.5 -2.5) (float-vector 2.5 2.5 -2.5) (float-vector 2.5 -2.5 -2.5) (float-vector -2.5 -2.5 -2.5)))
         (instance face :init :vertices (list (float-vector 2.5 2.5 2.5) (float-vector 2.5 2.5 -2.5) (float-vector -2.5 2.5 -2.5) (float-vector -2.5 2.5 2.5)))
         (instance face :init :vertices (list (float-vector 2.5 -2.5 2.5) (float-vector 2.5 -2.5 -2.5) (float-vector 2.5 2.5 -2.5) (float-vector 2.5 2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 -2.5 2.5) (float-vector -2.5 -2.5 -2.5) (float-vector 2.5 -2.5 -2.5) (float-vector 2.5 -2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 2.5 2.5) (float-vector -2.5 2.5 -2.5) (float-vector -2.5 -2.5 -2.5) (float-vector -2.5 -2.5 2.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset14 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset15
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 17.3205 -10.0 30.0) (float-vector 20.0 0.0 30.0) (float-vector 17.3205 10.0 30.0) (float-vector 10.0 17.3205 30.0) (float-vector 0.0 20.0 30.0) (float-vector -10.0 17.3205 30.0) (float-vector -17.3205 10.0 30.0) (float-vector -20.0 0.0 30.0) (float-vector -17.3205 -10.0 30.0) (float-vector -10.0 -17.3205 30.0) (float-vector 0.0 -20.0 30.0) (float-vector 10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 0.0) (float-vector 17.3205 -10.0 0.0) (float-vector 10.0 -17.3205 0.0) (float-vector 0.0 -20.0 0.0) (float-vector -10.0 -17.3205 0.0) (float-vector -17.3205 -10.0 0.0) (float-vector -20.0 0.0 0.0) (float-vector -17.3205 10.0 0.0) (float-vector -10.0 17.3205 0.0) (float-vector 0.0 20.0 0.0) (float-vector 10.0 17.3205 0.0) (float-vector 17.3205 10.0 0.0)))
         (instance face :init :vertices (list (float-vector 17.3205 -10.0 30.0) (float-vector 17.3205 -10.0 0.0) (float-vector 20.0 0.0 0.0) (float-vector 20.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -17.3205 30.0) (float-vector 10.0 -17.3205 0.0) (float-vector 17.3205 -10.0 0.0) (float-vector 17.3205 -10.0 30.0)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 30.0) (float-vector 0.0 -20.0 0.0) (float-vector 10.0 -17.3205 0.0) (float-vector 10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 -17.3205 30.0) (float-vector -10.0 -17.3205 0.0) (float-vector 0.0 -20.0 0.0) (float-vector 0.0 -20.0 30.0)))
         (instance face :init :vertices (list (float-vector -17.3205 -10.0 30.0) (float-vector -17.3205 -10.0 0.0) (float-vector -10.0 -17.3205 0.0) (float-vector -10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector -20.0 0.0 30.0) (float-vector -20.0 0.0 0.0) (float-vector -17.3205 -10.0 0.0) (float-vector -17.3205 -10.0 30.0)))
         (instance face :init :vertices (list (float-vector -17.3205 10.0 30.0) (float-vector -17.3205 10.0 0.0) (float-vector -20.0 0.0 0.0) (float-vector -20.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 17.3205 30.0) (float-vector -10.0 17.3205 0.0) (float-vector -17.3205 10.0 0.0) (float-vector -17.3205 10.0 30.0)))
         (instance face :init :vertices (list (float-vector 0.0 20.0 30.0) (float-vector 0.0 20.0 0.0) (float-vector -10.0 17.3205 0.0) (float-vector -10.0 17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 17.3205 30.0) (float-vector 10.0 17.3205 0.0) (float-vector 0.0 20.0 0.0) (float-vector 0.0 20.0 30.0)))
         (instance face :init :vertices (list (float-vector 17.3205 10.0 30.0) (float-vector 17.3205 10.0 0.0) (float-vector 10.0 17.3205 0.0) (float-vector 10.0 17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 20.0 0.0 0.0) (float-vector 17.3205 10.0 0.0) (float-vector 17.3205 10.0 30.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset15 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset16
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 2.5 2.5 2.5) (float-vector -2.5 2.5 2.5) (float-vector -2.5 -2.5 2.5) (float-vector 2.5 -2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 2.5 -2.5) (float-vector 2.5 2.5 -2.5) (float-vector 2.5 -2.5 -2.5) (float-vector -2.5 -2.5 -2.5)))
         (instance face :init :vertices (list (float-vector 2.5 2.5 2.5) (float-vector 2.5 2.5 -2.5) (float-vector -2.5 2.5 -2.5) (float-vector -2.5 2.5 2.5)))
         (instance face :init :vertices (list (float-vector 2.5 -2.5 2.5) (float-vector 2.5 -2.5 -2.5) (float-vector 2.5 2.5 -2.5) (float-vector 2.5 2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 -2.5 2.5) (float-vector -2.5 -2.5 -2.5) (float-vector 2.5 -2.5 -2.5) (float-vector 2.5 -2.5 2.5)))
         (instance face :init :vertices (list (float-vector -2.5 2.5 2.5) (float-vector -2.5 2.5 -2.5) (float-vector -2.5 -2.5 -2.5) (float-vector -2.5 -2.5 2.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset16 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-kitchen-bodyset17
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 17.3205 -10.0 30.0) (float-vector 20.0 0.0 30.0) (float-vector 17.3205 10.0 30.0) (float-vector 10.0 17.3205 30.0) (float-vector 0.0 20.0 30.0) (float-vector -10.0 17.3205 30.0) (float-vector -17.3205 10.0 30.0) (float-vector -20.0 0.0 30.0) (float-vector -17.3205 -10.0 30.0) (float-vector -10.0 -17.3205 30.0) (float-vector 0.0 -20.0 30.0) (float-vector 10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 0.0) (float-vector 17.3205 -10.0 0.0) (float-vector 10.0 -17.3205 0.0) (float-vector 0.0 -20.0 0.0) (float-vector -10.0 -17.3205 0.0) (float-vector -17.3205 -10.0 0.0) (float-vector -20.0 0.0 0.0) (float-vector -17.3205 10.0 0.0) (float-vector -10.0 17.3205 0.0) (float-vector 0.0 20.0 0.0) (float-vector 10.0 17.3205 0.0) (float-vector 17.3205 10.0 0.0)))
         (instance face :init :vertices (list (float-vector 17.3205 -10.0 30.0) (float-vector 17.3205 -10.0 0.0) (float-vector 20.0 0.0 0.0) (float-vector 20.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -17.3205 30.0) (float-vector 10.0 -17.3205 0.0) (float-vector 17.3205 -10.0 0.0) (float-vector 17.3205 -10.0 30.0)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 30.0) (float-vector 0.0 -20.0 0.0) (float-vector 10.0 -17.3205 0.0) (float-vector 10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 -17.3205 30.0) (float-vector -10.0 -17.3205 0.0) (float-vector 0.0 -20.0 0.0) (float-vector 0.0 -20.0 30.0)))
         (instance face :init :vertices (list (float-vector -17.3205 -10.0 30.0) (float-vector -17.3205 -10.0 0.0) (float-vector -10.0 -17.3205 0.0) (float-vector -10.0 -17.3205 30.0)))
         (instance face :init :vertices (list (float-vector -20.0 0.0 30.0) (float-vector -20.0 0.0 0.0) (float-vector -17.3205 -10.0 0.0) (float-vector -17.3205 -10.0 30.0)))
         (instance face :init :vertices (list (float-vector -17.3205 10.0 30.0) (float-vector -17.3205 10.0 0.0) (float-vector -20.0 0.0 0.0) (float-vector -20.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 17.3205 30.0) (float-vector -10.0 17.3205 0.0) (float-vector -17.3205 10.0 0.0) (float-vector -17.3205 10.0 30.0)))
         (instance face :init :vertices (list (float-vector 0.0 20.0 30.0) (float-vector 0.0 20.0 0.0) (float-vector -10.0 17.3205 0.0) (float-vector -10.0 17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 17.3205 30.0) (float-vector 10.0 17.3205 0.0) (float-vector 0.0 20.0 0.0) (float-vector 0.0 20.0 30.0)))
         (instance face :init :vertices (list (float-vector 17.3205 10.0 30.0) (float-vector 17.3205 10.0 0.0) (float-vector 10.0 17.3205 0.0) (float-vector 10.0 17.3205 30.0)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 20.0 0.0 0.0) (float-vector 17.3205 10.0 0.0) (float-vector 17.3205 10.0 30.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-kitchen-bodyset17 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink16 :newcoords (make-coords :pos (float-vector 5.0 0.0 0.0) :rot #2f((2.220446e-16 1.232595e-32 -1.0) (1.224647e-16 -1.0 1.232595e-32) (-1.0 -1.224647e-16 -2.220446e-16))))
     (send blink15 :assoc blink16)
     (send blink14 :newcoords (make-coords :pos (float-vector 5.0 0.0 0.0) :rot #2f((2.220446e-16 1.232595e-32 -1.0) (1.224647e-16 -1.0 1.232595e-32) (-1.0 -1.224647e-16 -2.220446e-16))))
     (send blink13 :assoc blink14)
     (send blink12 :newcoords (make-coords :pos (float-vector 5.0 0.0 0.0) :rot #2f((2.220446e-16 1.232595e-32 -1.0) (1.224647e-16 -1.0 1.232595e-32) (-1.0 -1.224647e-16 -2.220446e-16))))
     (send blink11 :assoc blink12)
     (send blink11 :newcoords (make-coords :pos (float-vector 340.0 -485.0 730.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink11)
     (send blink13 :newcoords (make-coords :pos (float-vector 340.0 -550.0 750.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink13)
     (send blink15 :newcoords (make-coords :pos (float-vector 340.0 -615.0 730.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink15)
     (send blink18 :newcoords (make-coords :pos (float-vector -82.6664 1112.67 1005.31) :rot #2f((0.624338 0.707107 -0.331967) (-0.624338 0.707107 0.331967) (0.469472 0.0 0.882948))))
     (send blink0 :assoc blink18)
     (send blink17 :newcoords (make-coords :pos (float-vector -90.0 1120.0 840.0) :rot #2f((7.216450e-16 1.0 0.0) (-1.0 7.216450e-16 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink17)
     (send blink10 :newcoords (make-coords :pos (float-vector 25.0 -805.0 660.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink10)
     (send blink9 :newcoords (make-coords :pos (float-vector 25.0 6.0 685.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink9)
     (send blink8 :newcoords (make-coords :pos (float-vector 25.0 -346.0 700.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink8)
     (send blink7 :newcoords (make-coords :pos (float-vector 25.0 603.0 405.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink7)
     (send blink6 :newcoords (make-coords :pos (float-vector 25.0 1.0 405.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector 25.0 -601.0 405.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink5)
     (send blink4 :newcoords (make-coords :pos (float-vector 315.0 1123.0 60.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink3 :newcoords (make-coords :pos (float-vector 315.0 -1123.0 60.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector 25.0 451.0 137.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink1 :newcoords (make-coords :pos (float-vector 25.0 -524.0 137.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :left-bottom-drawer
     (setq joint0 (instance linear-joint :init
			     :parent-link blink0 :child-link blink1 :name :left-bottom-drawer :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :right-bottom-drawer
     (setq joint1 (instance linear-joint :init
			     :parent-link blink0 :child-link blink2 :name :right-bottom-drawer :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :left-side-door
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink3 :name :left-side-door :axis :-z
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :right-side-door
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :right-side-door :axis :z 
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :left-middle-drawer
     (setq joint4 (instance linear-joint :init
			     :parent-link blink0 :child-link blink5 :name :left-middle-drawer :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :center-middle-drawer
     (setq joint5 (instance linear-joint :init
			     :parent-link blink0 :child-link blink6 :name :center-middle-drawer :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :right-middle-drawer
     (setq joint6 (instance linear-joint :init
			     :parent-link blink0 :child-link blink7 :name :right-middle-drawer :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :left-top-drawer
     (setq joint7 (instance linear-joint :init
			     :parent-link blink0 :child-link blink8 :name :left-top-drawer :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :center-top-drawer
     (setq joint8 (instance linear-joint :init
			     :parent-link blink0 :child-link blink9 :name :center-top-drawer :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer
     (setq joint9 (instance linear-joint :init
			     :parent-link blink0 :child-link blink10 :name :drawer    :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  630.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :button0-body-joint-1
     (setq joint10 (instance linear-joint :init
			     :parent-link blink0 :child-link blink11 :name :button0-body-joint-1 :axis (float-vector 1.0 0.0 0.0)
			     :min  -90.0 :max   90.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :button0-body-joint-2
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink12 :name :button0-body-joint-2 :axis :z 
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :button1-body-joint-1
     (setq joint12 (instance linear-joint :init
			     :parent-link blink0 :child-link blink13 :name :button1-body-joint-1 :axis (float-vector 1.0 0.0 0.0)
			     :min  -90.0 :max   90.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :button1-body-joint-2
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink14 :name :button1-body-joint-2 :axis :z 
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :button2-body-joint-1
     (setq joint14 (instance linear-joint :init
			     :parent-link blink0 :child-link blink15 :name :button2-body-joint-1 :axis (float-vector 1.0 0.0 0.0)
			     :min  -90.0 :max   90.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :button2-body-joint-2
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink15 :child-link blink16 :name :button2-body-joint-2 :axis :z 
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :tap-tube-joint
     (setq joint16 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink17 :name :tap-tube-joint :axis :z 
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :tap-handle-joint
     (setq joint17 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink18 :name :tap-handle-joint :axis :y 
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector 395.0 -485.0 730.0) :rot #2f((-1.0 1.740739e-32 -8.881784e-16) (9.136310e-32 -1.0 -1.224647e-16) (-8.881784e-16 -1.224647e-16 1.0)) :name "handle1"))
     (send blink12 :assoc handle1)
     (setq handle2 (make-cascoords :pos (float-vector 395.0 -550.0 750.0) :rot #2f((-1.0 1.740739e-32 -8.881784e-16) (9.136310e-32 -1.0 -1.224647e-16) (-8.881784e-16 -1.224647e-16 1.0)) :name "handle2"))
     (send blink14 :assoc handle2)
     (setq handle3 (make-cascoords :pos (float-vector 395.0 -615.0 730.0) :rot #2f((-1.0 1.740739e-32 -8.881784e-16) (9.136310e-32 -1.0 -1.224647e-16) (-8.881784e-16 -1.224647e-16 1.0)) :name "handle3"))
     (send blink16 :assoc handle3)
     (setq handle4 (make-cascoords :pos (float-vector -4.62411 1034.62 1063.99) :rot #2f((0.707107 -5.551115e-16 0.707107) (-0.707107 -2.498002e-16 0.707107) (-1.665335e-16 -1.0 -5.273559e-16)) :name "handle-of-tap"))
     (send blink18 :assoc handle4)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:left-bottom-drawer (&rest args) (forward-message-to joint0 args))
  (:right-bottom-drawer (&rest args) (forward-message-to joint1 args))
  (:left-side-door (&rest args) (forward-message-to joint2 args))
  (:right-side-door (&rest args) (forward-message-to joint3 args))
  (:left-middle-drawer (&rest args) (forward-message-to joint4 args))
  (:center-middle-drawer (&rest args) (forward-message-to joint5 args))
  (:right-middle-drawer (&rest args) (forward-message-to joint6 args))
  (:left-top-drawer (&rest args) (forward-message-to joint7 args))
  (:center-top-drawer (&rest args) (forward-message-to joint8 args))
  (:drawer (&rest args) (forward-message-to joint9 args))
  (:button0-body-joint-1 (&rest args) (forward-message-to joint10 args))
  (:button0-body-joint-2 (&rest args) (forward-message-to joint11 args))
  (:button1-body-joint-1 (&rest args) (forward-message-to joint12 args))
  (:button1-body-joint-2 (&rest args) (forward-message-to joint13 args))
  (:button2-body-joint-1 (&rest args) (forward-message-to joint14 args))
  (:button2-body-joint-2 (&rest args) (forward-message-to joint15 args))
  (:tap-tube-joint (&rest args) (forward-message-to joint16 args))
  (:tap-handle-joint (&rest args) (forward-message-to joint17 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1 handle2 handle3 handle4) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:handle-handle1 (&rest args) (forward-message-to handle1 args))
  (:handle-handle2 (&rest args) (forward-message-to handle2 args))
  (:handle-handle3 (&rest args) (forward-message-to handle3 args))
  (:handle-handle-of-tap (&rest args) (forward-message-to handle4 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room602-kitchen (&rest args) (instance* room602-kitchen-object :init args))
;; (format *error-output* "(instance room602-kitchen-object :init) for generating model~%")
