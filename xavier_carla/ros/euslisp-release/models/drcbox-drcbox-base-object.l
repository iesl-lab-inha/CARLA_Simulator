;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass drcbox-drcbox-base-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod drcbox-drcbox-base-object
  (:init
   (&rest args &key (name "drcbox-drcbox-base") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :base
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -438.0 450.0 1887.0) (float-vector -450.0 450.0 1887.0) (float-vector -450.0 -450.0 1887.0) (float-vector -438.0 -450.0 1887.0)))
         (instance face :init :vertices (list (float-vector -450.0 450.0 89.0) (float-vector -438.0 450.0 89.0) (float-vector -438.0 -450.0 89.0) (float-vector -450.0 -450.0 89.0)))
         (instance face :init :vertices (list (float-vector -438.0 450.0 1887.0) (float-vector -438.0 450.0 89.0) (float-vector -450.0 450.0 89.0) (float-vector -450.0 450.0 1887.0)))
         (instance face :init :vertices (list (float-vector -438.0 -450.0 1887.0) (float-vector -438.0 -450.0 89.0) (float-vector -438.0 450.0 89.0) (float-vector -438.0 450.0 1887.0)))
         (instance face :init :vertices (list (float-vector -450.0 -450.0 1887.0) (float-vector -450.0 -450.0 89.0) (float-vector -438.0 -450.0 89.0) (float-vector -438.0 -450.0 1887.0)))
         (instance face :init :vertices (list (float-vector -450.0 450.0 1887.0) (float-vector -450.0 450.0 89.0) (float-vector -450.0 -450.0 89.0) (float-vector -450.0 -450.0 1887.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -450.0 462.0 1887.0) (float-vector -450.0 450.0 1887.0) (float-vector 450.0 450.0 1887.0) (float-vector 450.0 462.0 1887.0)))
         (instance face :init :vertices (list (float-vector -450.0 450.0 89.0) (float-vector -450.0 462.0 89.0) (float-vector 450.0 462.0 89.0) (float-vector 450.0 450.0 89.0)))
         (instance face :init :vertices (list (float-vector -450.0 462.0 1887.0) (float-vector -450.0 462.0 89.0) (float-vector -450.0 450.0 89.0) (float-vector -450.0 450.0 1887.0)))
         (instance face :init :vertices (list (float-vector 450.0 462.0 1887.0) (float-vector 450.0 462.0 89.0) (float-vector -450.0 462.0 89.0) (float-vector -450.0 462.0 1887.0)))
         (instance face :init :vertices (list (float-vector 450.0 450.0 1887.0) (float-vector 450.0 450.0 89.0) (float-vector 450.0 462.0 89.0) (float-vector 450.0 462.0 1887.0)))
         (instance face :init :vertices (list (float-vector -450.0 450.0 1887.0) (float-vector -450.0 450.0 89.0) (float-vector 450.0 450.0 89.0) (float-vector 450.0 450.0 1887.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 450.0 450.0 1887.0) (float-vector 438.0 450.0 1887.0) (float-vector 438.0 -450.0 1887.0) (float-vector 450.0 -450.0 1887.0)))
         (instance face :init :vertices (list (float-vector 438.0 450.0 89.0) (float-vector 450.0 450.0 89.0) (float-vector 450.0 -450.0 89.0) (float-vector 438.0 -450.0 89.0)))
         (instance face :init :vertices (list (float-vector 450.0 450.0 1887.0) (float-vector 450.0 450.0 89.0) (float-vector 438.0 450.0 89.0) (float-vector 438.0 450.0 1887.0)))
         (instance face :init :vertices (list (float-vector 450.0 -450.0 1887.0) (float-vector 450.0 -450.0 89.0) (float-vector 450.0 450.0 89.0) (float-vector 450.0 450.0 1887.0)))
         (instance face :init :vertices (list (float-vector 438.0 -450.0 1887.0) (float-vector 438.0 -450.0 89.0) (float-vector 450.0 -450.0 89.0) (float-vector 450.0 -450.0 1887.0)))
         (instance face :init :vertices (list (float-vector 438.0 450.0 1887.0) (float-vector 438.0 450.0 89.0) (float-vector 438.0 -450.0 89.0) (float-vector 438.0 -450.0 1887.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -450.0 -462.0 89.0) (float-vector 450.0 -462.0 89.0) (float-vector 450.0 -462.0 1887.0) (float-vector -450.0 -462.0 1887.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -330.0 -462.0 692.0) (float-vector -330.0 -462.0 1242.0) (float-vector 377.0 -462.0 1242.0) (float-vector 377.0 -462.0 692.0)))
))
         (instance face :init :vertices (list (float-vector 450.0 -450.0 89.0) (float-vector 450.0 -450.0 1887.0) (float-vector 450.0 -462.0 1887.0) (float-vector 450.0 -462.0 89.0)))
         (instance face :init :vertices (list (float-vector -450.0 -450.0 89.0) (float-vector -450.0 -450.0 1887.0) (float-vector 450.0 -450.0 1887.0) (float-vector 450.0 -450.0 89.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 377.0 -450.0 692.0) (float-vector 377.0 -450.0 1242.0) (float-vector -330.0 -450.0 1242.0) (float-vector -330.0 -450.0 692.0)))
))
         (instance face :init :vertices (list (float-vector -450.0 -462.0 1887.0) (float-vector 450.0 -462.0 1887.0) (float-vector 450.0 -450.0 1887.0) (float-vector -450.0 -450.0 1887.0)))
         (instance face :init :vertices (list (float-vector -450.0 -450.0 89.0) (float-vector 450.0 -450.0 89.0) (float-vector 450.0 -462.0 89.0) (float-vector -450.0 -462.0 89.0)))
         (instance face :init :vertices (list (float-vector -450.0 -462.0 89.0) (float-vector -450.0 -462.0 1887.0) (float-vector -450.0 -450.0 1887.0) (float-vector -450.0 -450.0 89.0)))
         (instance face :init :vertices (list (float-vector 377.0 -462.0 692.0) (float-vector 377.0 -462.0 1242.0) (float-vector 377.0 -450.0 1242.0) (float-vector 377.0 -450.0 692.0)))
         (instance face :init :vertices (list (float-vector -330.0 -450.0 1242.0) (float-vector 377.0 -450.0 1242.0) (float-vector 377.0 -462.0 1242.0) (float-vector -330.0 -462.0 1242.0)))
         (instance face :init :vertices (list (float-vector -330.0 -450.0 692.0) (float-vector -330.0 -450.0 1242.0) (float-vector -330.0 -462.0 1242.0) (float-vector -330.0 -462.0 692.0)))
         (instance face :init :vertices (list (float-vector -330.0 -462.0 692.0) (float-vector 377.0 -462.0 692.0) (float-vector 377.0 -450.0 692.0) (float-vector -330.0 -450.0 692.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -372.689 425.0 17.5) (float-vector -368.0 425.0 35.0) (float-vector -372.689 425.0 52.5) (float-vector -385.5 425.0 65.3109) (float-vector -403.0 425.0 70.0) (float-vector -420.5 425.0 65.3109) (float-vector -433.311 425.0 52.5) (float-vector -438.0 425.0 35.0) (float-vector -433.311 425.0 17.5) (float-vector -420.5 425.0 4.68911) (float-vector -403.0 425.0 2.131628e-14) (float-vector -385.5 425.0 4.68911)))
         (instance face :init :vertices (list (float-vector -368.0 450.0 35.0) (float-vector -372.689 450.0 17.5) (float-vector -385.5 450.0 4.68911) (float-vector -403.0 450.0 1.421085e-14) (float-vector -420.5 450.0 4.68911) (float-vector -433.311 450.0 17.5) (float-vector -438.0 450.0 35.0) (float-vector -433.311 450.0 52.5) (float-vector -420.5 450.0 65.3109) (float-vector -403.0 450.0 70.0) (float-vector -385.5 450.0 65.3109) (float-vector -372.689 450.0 52.5)))
         (instance face :init :vertices (list (float-vector -372.689 425.0 17.5) (float-vector -372.689 450.0 17.5) (float-vector -368.0 450.0 35.0) (float-vector -368.0 425.0 35.0)))
         (instance face :init :vertices (list (float-vector -385.5 425.0 4.68911) (float-vector -385.5 450.0 4.68911) (float-vector -372.689 450.0 17.5) (float-vector -372.689 425.0 17.5)))
         (instance face :init :vertices (list (float-vector -403.0 425.0 2.131628e-14) (float-vector -403.0 450.0 1.421085e-14) (float-vector -385.5 450.0 4.68911) (float-vector -385.5 425.0 4.68911)))
         (instance face :init :vertices (list (float-vector -420.5 425.0 4.68911) (float-vector -420.5 450.0 4.68911) (float-vector -403.0 450.0 1.421085e-14) (float-vector -403.0 425.0 2.131628e-14)))
         (instance face :init :vertices (list (float-vector -433.311 425.0 17.5) (float-vector -433.311 450.0 17.5) (float-vector -420.5 450.0 4.68911) (float-vector -420.5 425.0 4.68911)))
         (instance face :init :vertices (list (float-vector -438.0 425.0 35.0) (float-vector -438.0 450.0 35.0) (float-vector -433.311 450.0 17.5) (float-vector -433.311 425.0 17.5)))
         (instance face :init :vertices (list (float-vector -433.311 425.0 52.5) (float-vector -433.311 450.0 52.5) (float-vector -438.0 450.0 35.0) (float-vector -438.0 425.0 35.0)))
         (instance face :init :vertices (list (float-vector -420.5 425.0 65.3109) (float-vector -420.5 450.0 65.3109) (float-vector -433.311 450.0 52.5) (float-vector -433.311 425.0 52.5)))
         (instance face :init :vertices (list (float-vector -403.0 425.0 70.0) (float-vector -403.0 450.0 70.0) (float-vector -420.5 450.0 65.3109) (float-vector -420.5 425.0 65.3109)))
         (instance face :init :vertices (list (float-vector -385.5 425.0 65.3109) (float-vector -385.5 450.0 65.3109) (float-vector -403.0 450.0 70.0) (float-vector -403.0 425.0 70.0)))
         (instance face :init :vertices (list (float-vector -372.689 425.0 52.5) (float-vector -372.689 450.0 52.5) (float-vector -385.5 450.0 65.3109) (float-vector -385.5 425.0 65.3109)))
         (instance face :init :vertices (list (float-vector -368.0 425.0 35.0) (float-vector -368.0 450.0 35.0) (float-vector -372.689 450.0 52.5) (float-vector -372.689 425.0 52.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 433.311 425.0 17.5) (float-vector 438.0 425.0 35.0) (float-vector 433.311 425.0 52.5) (float-vector 420.5 425.0 65.3109) (float-vector 403.0 425.0 70.0) (float-vector 385.5 425.0 65.3109) (float-vector 372.689 425.0 52.5) (float-vector 368.0 425.0 35.0) (float-vector 372.689 425.0 17.5) (float-vector 385.5 425.0 4.68911) (float-vector 403.0 425.0 2.131628e-14) (float-vector 420.5 425.0 4.68911)))
         (instance face :init :vertices (list (float-vector 438.0 450.0 35.0) (float-vector 433.311 450.0 17.5) (float-vector 420.5 450.0 4.68911) (float-vector 403.0 450.0 1.421085e-14) (float-vector 385.5 450.0 4.68911) (float-vector 372.689 450.0 17.5) (float-vector 368.0 450.0 35.0) (float-vector 372.689 450.0 52.5) (float-vector 385.5 450.0 65.3109) (float-vector 403.0 450.0 70.0) (float-vector 420.5 450.0 65.3109) (float-vector 433.311 450.0 52.5)))
         (instance face :init :vertices (list (float-vector 433.311 425.0 17.5) (float-vector 433.311 450.0 17.5) (float-vector 438.0 450.0 35.0) (float-vector 438.0 425.0 35.0)))
         (instance face :init :vertices (list (float-vector 420.5 425.0 4.68911) (float-vector 420.5 450.0 4.68911) (float-vector 433.311 450.0 17.5) (float-vector 433.311 425.0 17.5)))
         (instance face :init :vertices (list (float-vector 403.0 425.0 2.131628e-14) (float-vector 403.0 450.0 1.421085e-14) (float-vector 420.5 450.0 4.68911) (float-vector 420.5 425.0 4.68911)))
         (instance face :init :vertices (list (float-vector 385.5 425.0 4.68911) (float-vector 385.5 450.0 4.68911) (float-vector 403.0 450.0 1.421085e-14) (float-vector 403.0 425.0 2.131628e-14)))
         (instance face :init :vertices (list (float-vector 372.689 425.0 17.5) (float-vector 372.689 450.0 17.5) (float-vector 385.5 450.0 4.68911) (float-vector 385.5 425.0 4.68911)))
         (instance face :init :vertices (list (float-vector 368.0 425.0 35.0) (float-vector 368.0 450.0 35.0) (float-vector 372.689 450.0 17.5) (float-vector 372.689 425.0 17.5)))
         (instance face :init :vertices (list (float-vector 372.689 425.0 52.5) (float-vector 372.689 450.0 52.5) (float-vector 368.0 450.0 35.0) (float-vector 368.0 425.0 35.0)))
         (instance face :init :vertices (list (float-vector 385.5 425.0 65.3109) (float-vector 385.5 450.0 65.3109) (float-vector 372.689 450.0 52.5) (float-vector 372.689 425.0 52.5)))
         (instance face :init :vertices (list (float-vector 403.0 425.0 70.0) (float-vector 403.0 450.0 70.0) (float-vector 385.5 450.0 65.3109) (float-vector 385.5 425.0 65.3109)))
         (instance face :init :vertices (list (float-vector 420.5 425.0 65.3109) (float-vector 420.5 450.0 65.3109) (float-vector 403.0 450.0 70.0) (float-vector 403.0 425.0 70.0)))
         (instance face :init :vertices (list (float-vector 433.311 425.0 52.5) (float-vector 433.311 450.0 52.5) (float-vector 420.5 450.0 65.3109) (float-vector 420.5 425.0 65.3109)))
         (instance face :init :vertices (list (float-vector 438.0 425.0 35.0) (float-vector 438.0 450.0 35.0) (float-vector 433.311 450.0 52.5) (float-vector 433.311 425.0 52.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -372.689 -450.0 17.5) (float-vector -368.0 -450.0 35.0) (float-vector -372.689 -450.0 52.5) (float-vector -385.5 -450.0 65.3109) (float-vector -403.0 -450.0 70.0) (float-vector -420.5 -450.0 65.3109) (float-vector -433.311 -450.0 52.5) (float-vector -438.0 -450.0 35.0) (float-vector -433.311 -450.0 17.5) (float-vector -420.5 -450.0 4.68911) (float-vector -403.0 -450.0 2.131628e-14) (float-vector -385.5 -450.0 4.68911)))
         (instance face :init :vertices (list (float-vector -368.0 -425.0 35.0) (float-vector -372.689 -425.0 17.5) (float-vector -385.5 -425.0 4.68911) (float-vector -403.0 -425.0 1.421085e-14) (float-vector -420.5 -425.0 4.68911) (float-vector -433.311 -425.0 17.5) (float-vector -438.0 -425.0 35.0) (float-vector -433.311 -425.0 52.5) (float-vector -420.5 -425.0 65.3109) (float-vector -403.0 -425.0 70.0) (float-vector -385.5 -425.0 65.3109) (float-vector -372.689 -425.0 52.5)))
         (instance face :init :vertices (list (float-vector -372.689 -450.0 17.5) (float-vector -372.689 -425.0 17.5) (float-vector -368.0 -425.0 35.0) (float-vector -368.0 -450.0 35.0)))
         (instance face :init :vertices (list (float-vector -385.5 -450.0 4.68911) (float-vector -385.5 -425.0 4.68911) (float-vector -372.689 -425.0 17.5) (float-vector -372.689 -450.0 17.5)))
         (instance face :init :vertices (list (float-vector -403.0 -450.0 2.131628e-14) (float-vector -403.0 -425.0 1.421085e-14) (float-vector -385.5 -425.0 4.68911) (float-vector -385.5 -450.0 4.68911)))
         (instance face :init :vertices (list (float-vector -420.5 -450.0 4.68911) (float-vector -420.5 -425.0 4.68911) (float-vector -403.0 -425.0 1.421085e-14) (float-vector -403.0 -450.0 2.131628e-14)))
         (instance face :init :vertices (list (float-vector -433.311 -450.0 17.5) (float-vector -433.311 -425.0 17.5) (float-vector -420.5 -425.0 4.68911) (float-vector -420.5 -450.0 4.68911)))
         (instance face :init :vertices (list (float-vector -438.0 -450.0 35.0) (float-vector -438.0 -425.0 35.0) (float-vector -433.311 -425.0 17.5) (float-vector -433.311 -450.0 17.5)))
         (instance face :init :vertices (list (float-vector -433.311 -450.0 52.5) (float-vector -433.311 -425.0 52.5) (float-vector -438.0 -425.0 35.0) (float-vector -438.0 -450.0 35.0)))
         (instance face :init :vertices (list (float-vector -420.5 -450.0 65.3109) (float-vector -420.5 -425.0 65.3109) (float-vector -433.311 -425.0 52.5) (float-vector -433.311 -450.0 52.5)))
         (instance face :init :vertices (list (float-vector -403.0 -450.0 70.0) (float-vector -403.0 -425.0 70.0) (float-vector -420.5 -425.0 65.3109) (float-vector -420.5 -450.0 65.3109)))
         (instance face :init :vertices (list (float-vector -385.5 -450.0 65.3109) (float-vector -385.5 -425.0 65.3109) (float-vector -403.0 -425.0 70.0) (float-vector -403.0 -450.0 70.0)))
         (instance face :init :vertices (list (float-vector -372.689 -450.0 52.5) (float-vector -372.689 -425.0 52.5) (float-vector -385.5 -425.0 65.3109) (float-vector -385.5 -450.0 65.3109)))
         (instance face :init :vertices (list (float-vector -368.0 -450.0 35.0) (float-vector -368.0 -425.0 35.0) (float-vector -372.689 -425.0 52.5) (float-vector -372.689 -450.0 52.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 433.311 -450.0 17.5) (float-vector 438.0 -450.0 35.0) (float-vector 433.311 -450.0 52.5) (float-vector 420.5 -450.0 65.3109) (float-vector 403.0 -450.0 70.0) (float-vector 385.5 -450.0 65.3109) (float-vector 372.689 -450.0 52.5) (float-vector 368.0 -450.0 35.0) (float-vector 372.689 -450.0 17.5) (float-vector 385.5 -450.0 4.68911) (float-vector 403.0 -450.0 2.131628e-14) (float-vector 420.5 -450.0 4.68911)))
         (instance face :init :vertices (list (float-vector 438.0 -425.0 35.0) (float-vector 433.311 -425.0 17.5) (float-vector 420.5 -425.0 4.68911) (float-vector 403.0 -425.0 1.421085e-14) (float-vector 385.5 -425.0 4.68911) (float-vector 372.689 -425.0 17.5) (float-vector 368.0 -425.0 35.0) (float-vector 372.689 -425.0 52.5) (float-vector 385.5 -425.0 65.3109) (float-vector 403.0 -425.0 70.0) (float-vector 420.5 -425.0 65.3109) (float-vector 433.311 -425.0 52.5)))
         (instance face :init :vertices (list (float-vector 433.311 -450.0 17.5) (float-vector 433.311 -425.0 17.5) (float-vector 438.0 -425.0 35.0) (float-vector 438.0 -450.0 35.0)))
         (instance face :init :vertices (list (float-vector 420.5 -450.0 4.68911) (float-vector 420.5 -425.0 4.68911) (float-vector 433.311 -425.0 17.5) (float-vector 433.311 -450.0 17.5)))
         (instance face :init :vertices (list (float-vector 403.0 -450.0 2.131628e-14) (float-vector 403.0 -425.0 1.421085e-14) (float-vector 420.5 -425.0 4.68911) (float-vector 420.5 -450.0 4.68911)))
         (instance face :init :vertices (list (float-vector 385.5 -450.0 4.68911) (float-vector 385.5 -425.0 4.68911) (float-vector 403.0 -425.0 1.421085e-14) (float-vector 403.0 -450.0 2.131628e-14)))
         (instance face :init :vertices (list (float-vector 372.689 -450.0 17.5) (float-vector 372.689 -425.0 17.5) (float-vector 385.5 -425.0 4.68911) (float-vector 385.5 -450.0 4.68911)))
         (instance face :init :vertices (list (float-vector 368.0 -450.0 35.0) (float-vector 368.0 -425.0 35.0) (float-vector 372.689 -425.0 17.5) (float-vector 372.689 -450.0 17.5)))
         (instance face :init :vertices (list (float-vector 372.689 -450.0 52.5) (float-vector 372.689 -425.0 52.5) (float-vector 368.0 -425.0 35.0) (float-vector 368.0 -450.0 35.0)))
         (instance face :init :vertices (list (float-vector 385.5 -450.0 65.3109) (float-vector 385.5 -425.0 65.3109) (float-vector 372.689 -425.0 52.5) (float-vector 372.689 -450.0 52.5)))
         (instance face :init :vertices (list (float-vector 403.0 -450.0 70.0) (float-vector 403.0 -425.0 70.0) (float-vector 385.5 -425.0 65.3109) (float-vector 385.5 -450.0 65.3109)))
         (instance face :init :vertices (list (float-vector 420.5 -450.0 65.3109) (float-vector 420.5 -425.0 65.3109) (float-vector 403.0 -425.0 70.0) (float-vector 403.0 -450.0 70.0)))
         (instance face :init :vertices (list (float-vector 433.311 -450.0 52.5) (float-vector 433.311 -425.0 52.5) (float-vector 420.5 -425.0 65.3109) (float-vector 420.5 -450.0 65.3109)))
         (instance face :init :vertices (list (float-vector 438.0 -450.0 35.0) (float-vector 438.0 -425.0 35.0) (float-vector 433.311 -425.0 52.5) (float-vector 433.311 -450.0 52.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :peru)
     (send (elt bc 1) :set-color :peru)
     (send (elt bc 2) :set-color :peru)
     (send (elt bc 3) :set-color :peru)
     (send (elt bc 4) :set-color :gray10)
     (send (elt bc 5) :set-color :gray10)
     (send (elt bc 6) :set-color :gray10)
     (send (elt bc 7) :set-color :gray10)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :base :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun drcbox-drcbox-base (&rest args) (instance* drcbox-drcbox-base-object :init args))
;; (format *error-output* "(instance drcbox-drcbox-base-object :init) for generating model~%")
