;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass bishamon-robot
  :super robot-model
  :slots (sensors
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 ))
(defmethod bishamon-robot
  (:init
   (&rest args &key (name "bishamon") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -85.0 148.5) (float-vector 10.0 -45.0 148.5) (float-vector -30.0 -45.0 148.5) (float-vector -30.0 -85.0 148.5)))
         (instance face :init :vertices (list (float-vector -30.0 -45.0 148.5) (float-vector -30.0 -45.0 128.5) (float-vector -30.0 -85.0 128.5) (float-vector -30.0 -85.0 148.5)))
         (instance face :init :vertices (list (float-vector -30.0 -45.0 128.5) (float-vector 10.0 -45.0 128.5) (float-vector 10.0 -85.0 128.5) (float-vector -30.0 -85.0 128.5)))
         (instance face :init :vertices (list (float-vector 10.0 -85.0 128.5) (float-vector 10.0 -85.0 148.5) (float-vector -30.0 -85.0 148.5) (float-vector -30.0 -85.0 128.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.5 -85.0 146.294) (float-vector 7.79423 -85.0 143.0) (float-vector 9.0 -85.0 138.5) (float-vector 7.79423 -85.0 134.0) (float-vector 4.5 -85.0 130.706) (float-vector 4.551914e-15 -85.0 129.5) (float-vector -4.5 -85.0 130.706) (float-vector -7.79423 -85.0 134.0) (float-vector -9.0 -85.0 138.5) (float-vector -7.79423 -85.0 143.0) (float-vector -4.5 -85.0 146.294) (float-vector 1.232348e-14 -85.0 147.5)))
))
         (instance face :init :vertices (list (float-vector 10.0 -45.0 128.5) (float-vector 10.0 -45.0 148.5) (float-vector 10.0 -85.0 148.5) (float-vector 10.0 -85.0 128.5)))
         (instance face :init :vertices (list (float-vector 10.0 -45.0 148.5) (float-vector 10.0 -45.0 128.5) (float-vector -30.0 -45.0 128.5) (float-vector -30.0 -45.0 148.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79423 -45.0 143.0) (float-vector 4.5 -45.0 146.294) (float-vector 1.454392e-14 -45.0 147.5) (float-vector -4.5 -45.0 146.294) (float-vector -7.79423 -45.0 143.0) (float-vector -9.0 -45.0 138.5) (float-vector -7.79423 -45.0 134.0) (float-vector -4.5 -45.0 130.706) (float-vector 6.772360e-15 -45.0 129.5) (float-vector 4.5 -45.0 130.706) (float-vector 7.79423 -45.0 134.0) (float-vector 9.0 -45.0 138.5)))
))
         (instance face :init :vertices (list (float-vector 1.221245e-14 -87.0 147.5) (float-vector 1.232348e-14 -85.0 147.5) (float-vector -4.5 -85.0 146.294) (float-vector -4.5 -87.0 146.294)))
         (instance face :init :vertices (list (float-vector 1.454392e-14 -45.0 147.5) (float-vector 1.465494e-14 -43.0 147.5) (float-vector -4.5 -43.0 146.294) (float-vector -4.5 -45.0 146.294)))
         (instance face :init :vertices (list (float-vector -7.79423 -85.0 143.0) (float-vector -7.79423 -87.0 143.0) (float-vector -4.5 -87.0 146.294) (float-vector -4.5 -85.0 146.294)))
         (instance face :init :vertices (list (float-vector -4.5 -43.0 146.294) (float-vector -7.79423 -43.0 143.0) (float-vector -7.79423 -45.0 143.0) (float-vector -4.5 -45.0 146.294)))
         (instance face :init :vertices (list (float-vector -9.0 -85.0 138.5) (float-vector -9.0 -87.0 138.5) (float-vector -7.79423 -87.0 143.0) (float-vector -7.79423 -85.0 143.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -43.0 143.0) (float-vector -9.0 -43.0 138.5) (float-vector -9.0 -45.0 138.5) (float-vector -7.79423 -45.0 143.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -85.0 134.0) (float-vector -7.79423 -87.0 134.0) (float-vector -9.0 -87.0 138.5) (float-vector -9.0 -85.0 138.5)))
         (instance face :init :vertices (list (float-vector -9.0 -43.0 138.5) (float-vector -7.79423 -43.0 134.0) (float-vector -7.79423 -45.0 134.0) (float-vector -9.0 -45.0 138.5)))
         (instance face :init :vertices (list (float-vector -4.5 -85.0 130.706) (float-vector -4.5 -87.0 130.706) (float-vector -7.79423 -87.0 134.0) (float-vector -7.79423 -85.0 134.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -43.0 134.0) (float-vector -4.5 -43.0 130.706) (float-vector -4.5 -45.0 130.706) (float-vector -7.79423 -45.0 134.0)))
         (instance face :init :vertices (list (float-vector 4.551914e-15 -85.0 129.5) (float-vector 4.440892e-15 -87.0 129.5) (float-vector -4.5 -87.0 130.706) (float-vector -4.5 -85.0 130.706)))
         (instance face :init :vertices (list (float-vector -4.5 -43.0 130.706) (float-vector 6.883383e-15 -43.0 129.5) (float-vector 6.772360e-15 -45.0 129.5) (float-vector -4.5 -45.0 130.706)))
         (instance face :init :vertices (list (float-vector 4.5 -85.0 130.706) (float-vector 4.5 -87.0 130.706) (float-vector 4.440892e-15 -87.0 129.5) (float-vector 4.551914e-15 -85.0 129.5)))
         (instance face :init :vertices (list (float-vector 6.883383e-15 -43.0 129.5) (float-vector 4.5 -43.0 130.706) (float-vector 4.5 -45.0 130.706) (float-vector 6.772360e-15 -45.0 129.5)))
         (instance face :init :vertices (list (float-vector 7.79423 -85.0 134.0) (float-vector 7.79423 -87.0 134.0) (float-vector 4.5 -87.0 130.706) (float-vector 4.5 -85.0 130.706)))
         (instance face :init :vertices (list (float-vector 4.5 -43.0 130.706) (float-vector 7.79423 -43.0 134.0) (float-vector 7.79423 -45.0 134.0) (float-vector 4.5 -45.0 130.706)))
         (instance face :init :vertices (list (float-vector 9.0 -85.0 138.5) (float-vector 9.0 -87.0 138.5) (float-vector 7.79423 -87.0 134.0) (float-vector 7.79423 -85.0 134.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -43.0 134.0) (float-vector 9.0 -43.0 138.5) (float-vector 9.0 -45.0 138.5) (float-vector 7.79423 -45.0 134.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -85.0 143.0) (float-vector 7.79423 -87.0 143.0) (float-vector 9.0 -87.0 138.5) (float-vector 9.0 -85.0 138.5)))
         (instance face :init :vertices (list (float-vector 9.0 -43.0 138.5) (float-vector 7.79423 -43.0 143.0) (float-vector 7.79423 -45.0 143.0) (float-vector 9.0 -45.0 138.5)))
         (instance face :init :vertices (list (float-vector 4.5 -85.0 146.294) (float-vector 4.5 -87.0 146.294) (float-vector 7.79423 -87.0 143.0) (float-vector 7.79423 -85.0 143.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -43.0 143.0) (float-vector 4.5 -43.0 146.294) (float-vector 4.5 -45.0 146.294) (float-vector 7.79423 -45.0 143.0)))
         (instance face :init :vertices (list (float-vector 4.5 -87.0 146.294) (float-vector 1.221245e-14 -87.0 147.5) (float-vector -4.5 -87.0 146.294) (float-vector -7.79423 -87.0 143.0) (float-vector -9.0 -87.0 138.5) (float-vector -7.79423 -87.0 134.0) (float-vector -4.5 -87.0 130.706) (float-vector 4.440892e-15 -87.0 129.5) (float-vector 4.5 -87.0 130.706) (float-vector 7.79423 -87.0 134.0) (float-vector 9.0 -87.0 138.5) (float-vector 7.79423 -87.0 143.0)))
         (instance face :init :vertices (list (float-vector 1.221245e-14 -87.0 147.5) (float-vector 4.5 -87.0 146.294) (float-vector 4.5 -85.0 146.294) (float-vector 1.232348e-14 -85.0 147.5)))
         (instance face :init :vertices (list (float-vector 4.5 -43.0 146.294) (float-vector 1.465494e-14 -43.0 147.5) (float-vector 1.454392e-14 -45.0 147.5) (float-vector 4.5 -45.0 146.294)))
         (instance face :init :vertices (list (float-vector 1.465494e-14 -43.0 147.5) (float-vector 4.5 -43.0 146.294) (float-vector 7.79423 -43.0 143.0) (float-vector 9.0 -43.0 138.5) (float-vector 7.79423 -43.0 134.0) (float-vector 4.5 -43.0 130.706) (float-vector 6.883383e-15 -43.0 129.5) (float-vector -4.5 -43.0 130.706) (float-vector -7.79423 -43.0 134.0) (float-vector -9.0 -43.0 138.5) (float-vector -7.79423 -43.0 143.0) (float-vector -4.5 -43.0 146.294)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 45.0 148.5) (float-vector 10.0 85.0 148.5) (float-vector -30.0 85.0 148.5) (float-vector -30.0 45.0 148.5)))
         (instance face :init :vertices (list (float-vector -30.0 85.0 148.5) (float-vector -30.0 85.0 128.5) (float-vector -30.0 45.0 128.5) (float-vector -30.0 45.0 148.5)))
         (instance face :init :vertices (list (float-vector -30.0 85.0 128.5) (float-vector 10.0 85.0 128.5) (float-vector 10.0 45.0 128.5) (float-vector -30.0 45.0 128.5)))
         (instance face :init :vertices (list (float-vector 10.0 45.0 128.5) (float-vector 10.0 45.0 148.5) (float-vector -30.0 45.0 148.5) (float-vector -30.0 45.0 128.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.5 45.0 146.294) (float-vector 7.79423 45.0 143.0) (float-vector 9.0 45.0 138.5) (float-vector 7.79423 45.0 134.0) (float-vector 4.5 45.0 130.706) (float-vector -2.431388e-14 45.0 129.5) (float-vector -4.5 45.0 130.706) (float-vector -7.79423 45.0 134.0) (float-vector -9.0 45.0 138.5) (float-vector -7.79423 45.0 143.0) (float-vector -4.5 45.0 146.294) (float-vector -1.654232e-14 45.0 147.5)))
))
         (instance face :init :vertices (list (float-vector 10.0 85.0 128.5) (float-vector 10.0 85.0 148.5) (float-vector 10.0 45.0 148.5) (float-vector 10.0 45.0 128.5)))
         (instance face :init :vertices (list (float-vector 10.0 85.0 148.5) (float-vector 10.0 85.0 128.5) (float-vector -30.0 85.0 128.5) (float-vector -30.0 85.0 148.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79423 85.0 143.0) (float-vector 4.5 85.0 146.294) (float-vector -1.432188e-14 85.0 147.5) (float-vector -4.5 85.0 146.294) (float-vector -7.79423 85.0 143.0) (float-vector -9.0 85.0 138.5) (float-vector -7.79423 85.0 134.0) (float-vector -4.5 85.0 130.706) (float-vector -2.209344e-14 85.0 129.5) (float-vector 4.5 85.0 130.706) (float-vector 7.79423 85.0 134.0) (float-vector 9.0 85.0 138.5)))
))
         (instance face :init :vertices (list (float-vector -1.665335e-14 43.0 147.5) (float-vector -1.654232e-14 45.0 147.5) (float-vector -4.5 45.0 146.294) (float-vector -4.5 43.0 146.294)))
         (instance face :init :vertices (list (float-vector -1.432188e-14 85.0 147.5) (float-vector -1.421085e-14 87.0 147.5) (float-vector -4.5 87.0 146.294) (float-vector -4.5 85.0 146.294)))
         (instance face :init :vertices (list (float-vector -7.79423 45.0 143.0) (float-vector -7.79423 43.0 143.0) (float-vector -4.5 43.0 146.294) (float-vector -4.5 45.0 146.294)))
         (instance face :init :vertices (list (float-vector -4.5 87.0 146.294) (float-vector -7.79423 87.0 143.0) (float-vector -7.79423 85.0 143.0) (float-vector -4.5 85.0 146.294)))
         (instance face :init :vertices (list (float-vector -9.0 45.0 138.5) (float-vector -9.0 43.0 138.5) (float-vector -7.79423 43.0 143.0) (float-vector -7.79423 45.0 143.0)))
         (instance face :init :vertices (list (float-vector -7.79423 87.0 143.0) (float-vector -9.0 87.0 138.5) (float-vector -9.0 85.0 138.5) (float-vector -7.79423 85.0 143.0)))
         (instance face :init :vertices (list (float-vector -7.79423 45.0 134.0) (float-vector -7.79423 43.0 134.0) (float-vector -9.0 43.0 138.5) (float-vector -9.0 45.0 138.5)))
         (instance face :init :vertices (list (float-vector -9.0 87.0 138.5) (float-vector -7.79423 87.0 134.0) (float-vector -7.79423 85.0 134.0) (float-vector -9.0 85.0 138.5)))
         (instance face :init :vertices (list (float-vector -4.5 45.0 130.706) (float-vector -4.5 43.0 130.706) (float-vector -7.79423 43.0 134.0) (float-vector -7.79423 45.0 134.0)))
         (instance face :init :vertices (list (float-vector -7.79423 87.0 134.0) (float-vector -4.5 87.0 130.706) (float-vector -4.5 85.0 130.706) (float-vector -7.79423 85.0 134.0)))
         (instance face :init :vertices (list (float-vector -2.431388e-14 45.0 129.5) (float-vector -2.442491e-14 43.0 129.5) (float-vector -4.5 43.0 130.706) (float-vector -4.5 45.0 130.706)))
         (instance face :init :vertices (list (float-vector -4.5 87.0 130.706) (float-vector -2.198242e-14 87.0 129.5) (float-vector -2.209344e-14 85.0 129.5) (float-vector -4.5 85.0 130.706)))
         (instance face :init :vertices (list (float-vector 4.5 45.0 130.706) (float-vector 4.5 43.0 130.706) (float-vector -2.442491e-14 43.0 129.5) (float-vector -2.431388e-14 45.0 129.5)))
         (instance face :init :vertices (list (float-vector -2.198242e-14 87.0 129.5) (float-vector 4.5 87.0 130.706) (float-vector 4.5 85.0 130.706) (float-vector -2.209344e-14 85.0 129.5)))
         (instance face :init :vertices (list (float-vector 7.79423 45.0 134.0) (float-vector 7.79423 43.0 134.0) (float-vector 4.5 43.0 130.706) (float-vector 4.5 45.0 130.706)))
         (instance face :init :vertices (list (float-vector 4.5 87.0 130.706) (float-vector 7.79423 87.0 134.0) (float-vector 7.79423 85.0 134.0) (float-vector 4.5 85.0 130.706)))
         (instance face :init :vertices (list (float-vector 9.0 45.0 138.5) (float-vector 9.0 43.0 138.5) (float-vector 7.79423 43.0 134.0) (float-vector 7.79423 45.0 134.0)))
         (instance face :init :vertices (list (float-vector 7.79423 87.0 134.0) (float-vector 9.0 87.0 138.5) (float-vector 9.0 85.0 138.5) (float-vector 7.79423 85.0 134.0)))
         (instance face :init :vertices (list (float-vector 7.79423 45.0 143.0) (float-vector 7.79423 43.0 143.0) (float-vector 9.0 43.0 138.5) (float-vector 9.0 45.0 138.5)))
         (instance face :init :vertices (list (float-vector 9.0 87.0 138.5) (float-vector 7.79423 87.0 143.0) (float-vector 7.79423 85.0 143.0) (float-vector 9.0 85.0 138.5)))
         (instance face :init :vertices (list (float-vector 4.5 45.0 146.294) (float-vector 4.5 43.0 146.294) (float-vector 7.79423 43.0 143.0) (float-vector 7.79423 45.0 143.0)))
         (instance face :init :vertices (list (float-vector 7.79423 87.0 143.0) (float-vector 4.5 87.0 146.294) (float-vector 4.5 85.0 146.294) (float-vector 7.79423 85.0 143.0)))
         (instance face :init :vertices (list (float-vector 4.5 43.0 146.294) (float-vector -1.665335e-14 43.0 147.5) (float-vector -4.5 43.0 146.294) (float-vector -7.79423 43.0 143.0) (float-vector -9.0 43.0 138.5) (float-vector -7.79423 43.0 134.0) (float-vector -4.5 43.0 130.706) (float-vector -2.442491e-14 43.0 129.5) (float-vector 4.5 43.0 130.706) (float-vector 7.79423 43.0 134.0) (float-vector 9.0 43.0 138.5) (float-vector 7.79423 43.0 143.0)))
         (instance face :init :vertices (list (float-vector -1.665335e-14 43.0 147.5) (float-vector 4.5 43.0 146.294) (float-vector 4.5 45.0 146.294) (float-vector -1.654232e-14 45.0 147.5)))
         (instance face :init :vertices (list (float-vector 4.5 87.0 146.294) (float-vector -1.421085e-14 87.0 147.5) (float-vector -1.432188e-14 85.0 147.5) (float-vector 4.5 85.0 146.294)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 87.0 147.5) (float-vector 4.5 87.0 146.294) (float-vector 7.79423 87.0 143.0) (float-vector 9.0 87.0 138.5) (float-vector 7.79423 87.0 134.0) (float-vector 4.5 87.0 130.706) (float-vector -2.198242e-14 87.0 129.5) (float-vector -4.5 87.0 130.706) (float-vector -7.79423 87.0 134.0) (float-vector -9.0 87.0 138.5) (float-vector -7.79423 87.0 143.0) (float-vector -4.5 87.0 146.294)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 8.0 15.1 158.5) (float-vector 8.0 -15.1 158.5) (float-vector 8.0 -15.1 127.5) (float-vector 8.0 15.1 127.5)))
         (instance face :init :vertices (list (float-vector 8.0 -15.1 127.5) (float-vector -8.0 -15.1 127.5) (float-vector -8.0 15.1 127.5) (float-vector 8.0 15.1 127.5)))
         (instance face :init :vertices (list (float-vector -8.0 -15.1 127.5) (float-vector -8.0 -15.1 158.5) (float-vector -8.0 15.1 158.5) (float-vector -8.0 15.1 127.5)))
         (instance face :init :vertices (list (float-vector -8.0 15.1 158.5) (float-vector 8.0 15.1 158.5) (float-vector 8.0 15.1 127.5) (float-vector -8.0 15.1 127.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.06218 15.1 154.0) (float-vector 3.5 15.1 156.562) (float-vector -1.196583e-14 15.1 157.5) (float-vector -3.5 15.1 156.562) (float-vector -6.06218 15.1 154.0) (float-vector -7.0 15.1 150.5) (float-vector -6.06218 15.1 147.0) (float-vector -3.5 15.1 144.438) (float-vector 1.590054e-15 15.1 143.5) (float-vector 3.5 15.1 144.438) (float-vector 6.06218 15.1 147.0) (float-vector 7.0 15.1 150.5)))
))
         (instance face :init :vertices (list (float-vector -8.0 -15.1 158.5) (float-vector 8.0 -15.1 158.5) (float-vector 8.0 15.1 158.5) (float-vector -8.0 15.1 158.5)))
         (instance face :init :vertices (list (float-vector 8.0 -15.1 158.5) (float-vector -8.0 -15.1 158.5) (float-vector -8.0 -15.1 127.5) (float-vector 8.0 -15.1 127.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 3.5 -15.1 156.562) (float-vector 6.06218 -15.1 154.0) (float-vector 7.0 -15.1 150.5) (float-vector 6.06218 -15.1 147.0) (float-vector 3.5 -15.1 144.438) (float-vector 8.702573e-15 -15.1 143.5) (float-vector -3.5 -15.1 144.438) (float-vector -6.06218 -15.1 147.0) (float-vector -7.0 -15.1 150.5) (float-vector -6.06218 -15.1 154.0) (float-vector -3.5 -15.1 156.562) (float-vector -4.853307e-15 -15.1 157.5)))
))
         (instance face :init :vertices (list (float-vector 7.0 17.1 150.5) (float-vector 7.0 15.1 150.5) (float-vector 6.06218 15.1 147.0) (float-vector 6.06218 17.1 147.0)))
         (instance face :init :vertices (list (float-vector 7.0 -15.1 150.5) (float-vector 7.0 -17.1 150.5) (float-vector 6.06218 -17.1 147.0) (float-vector 6.06218 -15.1 147.0)))
         (instance face :init :vertices (list (float-vector 3.5 15.1 144.438) (float-vector 3.5 17.1 144.438) (float-vector 6.06218 17.1 147.0) (float-vector 6.06218 15.1 147.0)))
         (instance face :init :vertices (list (float-vector 6.06218 -17.1 147.0) (float-vector 3.5 -17.1 144.438) (float-vector 3.5 -15.1 144.438) (float-vector 6.06218 -15.1 147.0)))
         (instance face :init :vertices (list (float-vector 1.590054e-15 15.1 143.5) (float-vector 1.119026e-15 17.1 143.5) (float-vector 3.5 17.1 144.438) (float-vector 3.5 15.1 144.438)))
         (instance face :init :vertices (list (float-vector 3.5 -17.1 144.438) (float-vector 9.173600e-15 -17.1 143.5) (float-vector 8.702573e-15 -15.1 143.5) (float-vector 3.5 -15.1 144.438)))
         (instance face :init :vertices (list (float-vector -3.5 15.1 144.438) (float-vector -3.5 17.1 144.438) (float-vector 1.119026e-15 17.1 143.5) (float-vector 1.590054e-15 15.1 143.5)))
         (instance face :init :vertices (list (float-vector 9.173600e-15 -17.1 143.5) (float-vector -3.5 -17.1 144.438) (float-vector -3.5 -15.1 144.438) (float-vector 8.702573e-15 -15.1 143.5)))
         (instance face :init :vertices (list (float-vector -6.06218 15.1 147.0) (float-vector -6.06218 17.1 147.0) (float-vector -3.5 17.1 144.438) (float-vector -3.5 15.1 144.438)))
         (instance face :init :vertices (list (float-vector -3.5 -17.1 144.438) (float-vector -6.06218 -17.1 147.0) (float-vector -6.06218 -15.1 147.0) (float-vector -3.5 -15.1 144.438)))
         (instance face :init :vertices (list (float-vector -7.0 15.1 150.5) (float-vector -7.0 17.1 150.5) (float-vector -6.06218 17.1 147.0) (float-vector -6.06218 15.1 147.0)))
         (instance face :init :vertices (list (float-vector -6.06218 -17.1 147.0) (float-vector -7.0 -17.1 150.5) (float-vector -7.0 -15.1 150.5) (float-vector -6.06218 -15.1 147.0)))
         (instance face :init :vertices (list (float-vector -6.06218 15.1 154.0) (float-vector -6.06218 17.1 154.0) (float-vector -7.0 17.1 150.5) (float-vector -7.0 15.1 150.5)))
         (instance face :init :vertices (list (float-vector -7.0 -17.1 150.5) (float-vector -6.06218 -17.1 154.0) (float-vector -6.06218 -15.1 154.0) (float-vector -7.0 -15.1 150.5)))
         (instance face :init :vertices (list (float-vector -3.5 15.1 156.562) (float-vector -3.5 17.1 156.562) (float-vector -6.06218 17.1 154.0) (float-vector -6.06218 15.1 154.0)))
         (instance face :init :vertices (list (float-vector -6.06218 -17.1 154.0) (float-vector -3.5 -17.1 156.562) (float-vector -3.5 -15.1 156.562) (float-vector -6.06218 -15.1 154.0)))
         (instance face :init :vertices (list (float-vector -1.196583e-14 15.1 157.5) (float-vector -1.243685e-14 17.1 157.5) (float-vector -3.5 17.1 156.562) (float-vector -3.5 15.1 156.562)))
         (instance face :init :vertices (list (float-vector -3.5 -17.1 156.562) (float-vector -4.382279e-15 -17.1 157.5) (float-vector -4.853307e-15 -15.1 157.5) (float-vector -3.5 -15.1 156.562)))
         (instance face :init :vertices (list (float-vector 3.5 15.1 156.562) (float-vector 3.5 17.1 156.562) (float-vector -1.243685e-14 17.1 157.5) (float-vector -1.196583e-14 15.1 157.5)))
         (instance face :init :vertices (list (float-vector -4.382279e-15 -17.1 157.5) (float-vector 3.5 -17.1 156.562) (float-vector 3.5 -15.1 156.562) (float-vector -4.853307e-15 -15.1 157.5)))
         (instance face :init :vertices (list (float-vector 6.06218 15.1 154.0) (float-vector 6.06218 17.1 154.0) (float-vector 3.5 17.1 156.562) (float-vector 3.5 15.1 156.562)))
         (instance face :init :vertices (list (float-vector 3.5 -17.1 156.562) (float-vector 6.06218 -17.1 154.0) (float-vector 6.06218 -15.1 154.0) (float-vector 3.5 -15.1 156.562)))
         (instance face :init :vertices (list (float-vector 6.06218 17.1 154.0) (float-vector 7.0 17.1 150.5) (float-vector 6.06218 17.1 147.0) (float-vector 3.5 17.1 144.438) (float-vector 1.119026e-15 17.1 143.5) (float-vector -3.5 17.1 144.438) (float-vector -6.06218 17.1 147.0) (float-vector -7.0 17.1 150.5) (float-vector -6.06218 17.1 154.0) (float-vector -3.5 17.1 156.562) (float-vector -1.243685e-14 17.1 157.5) (float-vector 3.5 17.1 156.562)))
         (instance face :init :vertices (list (float-vector 7.0 17.1 150.5) (float-vector 6.06218 17.1 154.0) (float-vector 6.06218 15.1 154.0) (float-vector 7.0 15.1 150.5)))
         (instance face :init :vertices (list (float-vector 6.06218 -17.1 154.0) (float-vector 7.0 -17.1 150.5) (float-vector 7.0 -15.1 150.5) (float-vector 6.06218 -15.1 154.0)))
         (instance face :init :vertices (list (float-vector 7.0 -17.1 150.5) (float-vector 6.06218 -17.1 154.0) (float-vector 3.5 -17.1 156.562) (float-vector -4.382279e-15 -17.1 157.5) (float-vector -3.5 -17.1 156.562) (float-vector -6.06218 -17.1 154.0) (float-vector -7.0 -17.1 150.5) (float-vector -6.06218 -17.1 147.0) (float-vector -3.5 -17.1 144.438) (float-vector 9.173600e-15 -17.1 143.5) (float-vector 3.5 -17.1 144.438) (float-vector 6.06218 -17.1 147.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.0 -5.0 6.5) (float-vector 5.0 5.0 6.5) (float-vector -5.0 5.0 6.5) (float-vector -5.0 -5.0 6.5)))
         (instance face :init :vertices (list (float-vector 5.0 5.0 -3.5) (float-vector 5.0 -5.0 -3.5) (float-vector -5.0 -5.0 -3.5) (float-vector -5.0 5.0 -3.5)))
         (instance face :init :vertices (list (float-vector 5.0 -5.0 6.5) (float-vector 5.0 -5.0 -3.5) (float-vector 5.0 5.0 -3.5) (float-vector 5.0 5.0 6.5)))
         (instance face :init :vertices (list (float-vector -5.0 -5.0 6.5) (float-vector -5.0 -5.0 -3.5) (float-vector 5.0 -5.0 -3.5) (float-vector 5.0 -5.0 6.5)))
         (instance face :init :vertices (list (float-vector -5.0 5.0 6.5) (float-vector -5.0 5.0 -3.5) (float-vector -5.0 -5.0 -3.5) (float-vector -5.0 -5.0 6.5)))
         (instance face :init :vertices (list (float-vector 5.0 5.0 6.5) (float-vector 5.0 5.0 -3.5) (float-vector -5.0 5.0 -3.5) (float-vector -5.0 5.0 6.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.0 31.0 1.5) (float-vector 12.0 31.0 32.5) (float-vector 12.0 -31.0 32.5) (float-vector 12.0 -31.0 1.5) (float-vector 12.0 -29.0 1.5) (float-vector 12.0 -29.0 30.5) (float-vector 12.0 29.0 30.5) (float-vector 12.0 29.0 1.5)))
         (instance face :init :vertices (list (float-vector -12.0 31.0 32.5) (float-vector -12.0 -31.0 32.5) (float-vector 12.0 -31.0 32.5) (float-vector 12.0 31.0 32.5)))
         (instance face :init :vertices (list (float-vector -12.0 31.0 1.5) (float-vector -12.0 29.0 1.5) (float-vector -12.0 29.0 30.5) (float-vector -12.0 -29.0 30.5) (float-vector -12.0 -29.0 1.5) (float-vector -12.0 -31.0 1.5) (float-vector -12.0 -31.0 32.5) (float-vector -12.0 31.0 32.5)))
         (instance face :init :vertices (list (float-vector -8.48528 -31.0 -6.98528) (float-vector -12.0 -31.0 1.5) (float-vector -12.0 -29.0 1.5) (float-vector -8.48528 -29.0 -6.98528)))
         (instance face :init :vertices (list (float-vector -8.48528 31.0 -6.98528) (float-vector -8.48528 29.0 -6.98528) (float-vector -12.0 29.0 1.5) (float-vector -12.0 31.0 1.5)))
         (instance face :init :vertices (list (float-vector 4.867287e-15 -31.0 -10.5) (float-vector -8.48528 -31.0 -6.98528) (float-vector -8.48528 -29.0 -6.98528) (float-vector 4.553268e-15 -29.0 -10.5)))
         (instance face :init :vertices (list (float-vector -4.867287e-15 31.0 -10.5) (float-vector -4.553268e-15 29.0 -10.5) (float-vector -8.48528 29.0 -6.98528) (float-vector -8.48528 31.0 -6.98528)))
         (instance face :init :vertices (list (float-vector 8.48528 -31.0 -6.98528) (float-vector 4.867287e-15 -31.0 -10.5) (float-vector 4.553268e-15 -29.0 -10.5) (float-vector 8.48528 -29.0 -6.98528)))
         (instance face :init :vertices (list (float-vector 8.48528 31.0 -6.98528) (float-vector 8.48528 29.0 -6.98528) (float-vector -4.553268e-15 29.0 -10.5) (float-vector -4.867287e-15 31.0 -10.5)))
         (instance face :init :vertices (list (float-vector 12.0 -31.0 1.5) (float-vector 12.0 -31.0 32.5) (float-vector -12.0 -31.0 32.5) (float-vector -12.0 -31.0 1.5) (float-vector -8.48528 -31.0 -6.98528) (float-vector 4.867287e-15 -31.0 -10.5) (float-vector 8.48528 -31.0 -6.98528)))
         (instance face :init :vertices (list (float-vector 8.48528 31.0 -6.98528) (float-vector -4.867287e-15 31.0 -10.5) (float-vector -8.48528 31.0 -6.98528) (float-vector -12.0 31.0 1.5) (float-vector -12.0 31.0 32.5) (float-vector 12.0 31.0 32.5) (float-vector 12.0 31.0 1.5)))
         (instance face :init :vertices (list (float-vector 8.48528 -31.0 -6.98528) (float-vector 8.48528 -29.0 -6.98528) (float-vector 12.0 -29.0 1.5) (float-vector 12.0 -31.0 1.5)))
         (instance face :init :vertices (list (float-vector 12.0 31.0 1.5) (float-vector 12.0 29.0 1.5) (float-vector 8.48528 29.0 -6.98528) (float-vector 8.48528 31.0 -6.98528)))
         (instance face :init :vertices (list (float-vector 12.0 -29.0 30.5) (float-vector 12.0 -29.0 1.5) (float-vector 8.48528 -29.0 -6.98528) (float-vector 4.553268e-15 -29.0 -10.5) (float-vector -8.48528 -29.0 -6.98528) (float-vector -12.0 -29.0 1.5) (float-vector -12.0 -29.0 30.5)))
         (instance face :init :vertices (list (float-vector 12.0 29.0 30.5) (float-vector 12.0 -29.0 30.5) (float-vector -12.0 -29.0 30.5) (float-vector -12.0 29.0 30.5)))
         (instance face :init :vertices (list (float-vector -12.0 29.0 30.5) (float-vector -12.0 29.0 1.5) (float-vector -8.48528 29.0 -6.98528) (float-vector -4.553268e-15 29.0 -10.5) (float-vector 8.48528 29.0 -6.98528) (float-vector 12.0 29.0 1.5) (float-vector 12.0 29.0 30.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -75.0 115.5) (float-vector 30.0 75.0 115.5) (float-vector -30.0 75.0 115.5) (float-vector -30.0 -75.0 115.5)))
         (instance face :init :vertices (list (float-vector 30.0 75.0 32.5) (float-vector 30.0 -75.0 32.5) (float-vector -30.0 -75.0 32.5) (float-vector -30.0 75.0 32.5)))
         (instance face :init :vertices (list (float-vector 30.0 -75.0 115.5) (float-vector 30.0 -75.0 32.5) (float-vector 30.0 75.0 32.5) (float-vector 30.0 75.0 115.5)))
         (instance face :init :vertices (list (float-vector -30.0 -75.0 115.5) (float-vector -30.0 -75.0 32.5) (float-vector 30.0 -75.0 32.5) (float-vector 30.0 -75.0 115.5)))
         (instance face :init :vertices (list (float-vector -30.0 75.0 115.5) (float-vector -30.0 75.0 32.5) (float-vector -30.0 -75.0 32.5) (float-vector -30.0 -75.0 115.5)))
         (instance face :init :vertices (list (float-vector 30.0 75.0 115.5) (float-vector 30.0 75.0 32.5) (float-vector -30.0 75.0 32.5) (float-vector -30.0 75.0 115.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray40)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray90)
     (send (elt bc 5) :set-color :gray90)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 391.751 :centroid (float-vector -3.19583 2.197407e-15 97.1598) :inertia-tensor #2f((9.855711e+05 1.158128e-10 33896.7) (1.158128e-10 4.341677e+05 6.006101e-11) (33896.7 6.006101e-11 6.010103e+05))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -24.5) (float-vector 10.0 32.0 -24.5) (float-vector 10.0 32.0 24.5) (float-vector 10.0 0.0 24.5) (float-vector 10.0 0.0 22.5) (float-vector 10.0 30.0 22.5) (float-vector 10.0 30.0 -22.5) (float-vector 10.0 0.0 -22.5)))
         (instance face :init :vertices (list (float-vector -10.0 32.0 -24.5) (float-vector -10.0 32.0 24.5) (float-vector 10.0 32.0 24.5) (float-vector 10.0 32.0 -24.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -24.5) (float-vector -10.0 0.0 -22.5) (float-vector -10.0 30.0 -22.5) (float-vector -10.0 30.0 22.5) (float-vector -10.0 0.0 22.5) (float-vector -10.0 0.0 24.5) (float-vector -10.0 32.0 24.5) (float-vector -10.0 32.0 -24.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 24.5) (float-vector -10.0 0.0 24.5) (float-vector -10.0 0.0 22.5) (float-vector -7.07107 -7.07107 22.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -24.5) (float-vector -7.07107 -7.07107 -22.5) (float-vector -10.0 0.0 -22.5) (float-vector -10.0 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 24.5) (float-vector -7.07107 -7.07107 24.5) (float-vector -7.07107 -7.07107 22.5) (float-vector 0.0 -10.0 22.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -24.5) (float-vector 0.0 -10.0 -22.5) (float-vector -7.07107 -7.07107 -22.5) (float-vector -7.07107 -7.07107 -24.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 24.5) (float-vector 0.0 -10.0 24.5) (float-vector 0.0 -10.0 22.5) (float-vector 7.07107 -7.07107 22.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -24.5) (float-vector 7.07107 -7.07107 -22.5) (float-vector 0.0 -10.0 -22.5) (float-vector 0.0 -10.0 -24.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 24.5) (float-vector 10.0 32.0 24.5) (float-vector -10.0 32.0 24.5) (float-vector -10.0 0.0 24.5) (float-vector -7.07107 -7.07107 24.5) (float-vector 0.0 -10.0 24.5) (float-vector 7.07107 -7.07107 24.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -24.5) (float-vector 0.0 -10.0 -24.5) (float-vector -7.07107 -7.07107 -24.5) (float-vector -10.0 0.0 -24.5) (float-vector -10.0 32.0 -24.5) (float-vector 10.0 32.0 -24.5) (float-vector 10.0 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 24.5) (float-vector 7.07107 -7.07107 22.5) (float-vector 10.0 0.0 22.5) (float-vector 10.0 0.0 24.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -24.5) (float-vector 10.0 0.0 -22.5) (float-vector 7.07107 -7.07107 -22.5) (float-vector 7.07107 -7.07107 -24.5)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 22.5) (float-vector 10.0 0.0 22.5) (float-vector 7.07107 -7.07107 22.5) (float-vector 0.0 -10.0 22.5) (float-vector -7.07107 -7.07107 22.5) (float-vector -10.0 0.0 22.5) (float-vector -10.0 30.0 22.5)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -22.5) (float-vector 10.0 30.0 22.5) (float-vector -10.0 30.0 22.5) (float-vector -10.0 30.0 -22.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -22.5) (float-vector -10.0 0.0 -22.5) (float-vector -7.07107 -7.07107 -22.5) (float-vector 0.0 -10.0 -22.5) (float-vector 7.07107 -7.07107 -22.5) (float-vector 10.0 0.0 -22.5) (float-vector 10.0 30.0 -22.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 20.0 32.5) (float-vector 10.0 -20.0 32.5) (float-vector -30.0 -20.0 32.5) (float-vector -30.0 20.0 32.5)))
         (instance face :init :vertices (list (float-vector -30.0 -20.0 32.5) (float-vector -30.0 -20.0 52.5) (float-vector -30.0 20.0 52.5) (float-vector -30.0 20.0 32.5)))
         (instance face :init :vertices (list (float-vector -30.0 -20.0 52.5) (float-vector 10.0 -20.0 52.5) (float-vector 10.0 20.0 52.5) (float-vector -30.0 20.0 52.5)))
         (instance face :init :vertices (list (float-vector 10.0 20.0 52.5) (float-vector 10.0 20.0 32.5) (float-vector -30.0 20.0 32.5) (float-vector -30.0 20.0 52.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.5 20.0 34.7058) (float-vector 7.79423 20.0 38.0) (float-vector 9.0 20.0 42.5) (float-vector 7.79423 20.0 47.0) (float-vector 4.5 20.0 50.2942) (float-vector 0.0 20.0 51.5) (float-vector -4.5 20.0 50.2942) (float-vector -7.79423 20.0 47.0) (float-vector -9.0 20.0 42.5) (float-vector -7.79423 20.0 38.0) (float-vector -4.5 20.0 34.7058) (float-vector 0.0 20.0 33.5)))
))
         (instance face :init :vertices (list (float-vector 10.0 -20.0 52.5) (float-vector 10.0 -20.0 32.5) (float-vector 10.0 20.0 32.5) (float-vector 10.0 20.0 52.5)))
         (instance face :init :vertices (list (float-vector 10.0 -20.0 32.5) (float-vector 10.0 -20.0 52.5) (float-vector -30.0 -20.0 52.5) (float-vector -30.0 -20.0 32.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79423 -20.0 38.0) (float-vector 4.5 -20.0 34.7058) (float-vector 0.0 -20.0 33.5) (float-vector -4.5 -20.0 34.7058) (float-vector -7.79423 -20.0 38.0) (float-vector -9.0 -20.0 42.5) (float-vector -7.79423 -20.0 47.0) (float-vector -4.5 -20.0 50.2942) (float-vector 0.0 -20.0 51.5) (float-vector 4.5 -20.0 50.2942) (float-vector 7.79423 -20.0 47.0) (float-vector 9.0 -20.0 42.5)))
))
         (instance face :init :vertices (list (float-vector 0.0 22.0 33.5) (float-vector 0.0 20.0 33.5) (float-vector -4.5 20.0 34.7058) (float-vector -4.5 22.0 34.7058)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 33.5) (float-vector 0.0 -22.0 33.5) (float-vector -4.5 -22.0 34.7058) (float-vector -4.5 -20.0 34.7058)))
         (instance face :init :vertices (list (float-vector -7.79423 20.0 38.0) (float-vector -7.79423 22.0 38.0) (float-vector -4.5 22.0 34.7058) (float-vector -4.5 20.0 34.7058)))
         (instance face :init :vertices (list (float-vector -4.5 -22.0 34.7058) (float-vector -7.79423 -22.0 38.0) (float-vector -7.79423 -20.0 38.0) (float-vector -4.5 -20.0 34.7058)))
         (instance face :init :vertices (list (float-vector -9.0 20.0 42.5) (float-vector -9.0 22.0 42.5) (float-vector -7.79423 22.0 38.0) (float-vector -7.79423 20.0 38.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -22.0 38.0) (float-vector -9.0 -22.0 42.5) (float-vector -9.0 -20.0 42.5) (float-vector -7.79423 -20.0 38.0)))
         (instance face :init :vertices (list (float-vector -7.79423 20.0 47.0) (float-vector -7.79423 22.0 47.0) (float-vector -9.0 22.0 42.5) (float-vector -9.0 20.0 42.5)))
         (instance face :init :vertices (list (float-vector -9.0 -22.0 42.5) (float-vector -7.79423 -22.0 47.0) (float-vector -7.79423 -20.0 47.0) (float-vector -9.0 -20.0 42.5)))
         (instance face :init :vertices (list (float-vector -4.5 20.0 50.2942) (float-vector -4.5 22.0 50.2942) (float-vector -7.79423 22.0 47.0) (float-vector -7.79423 20.0 47.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -22.0 47.0) (float-vector -4.5 -22.0 50.2942) (float-vector -4.5 -20.0 50.2942) (float-vector -7.79423 -20.0 47.0)))
         (instance face :init :vertices (list (float-vector 0.0 20.0 51.5) (float-vector 0.0 22.0 51.5) (float-vector -4.5 22.0 50.2942) (float-vector -4.5 20.0 50.2942)))
         (instance face :init :vertices (list (float-vector -4.5 -22.0 50.2942) (float-vector 0.0 -22.0 51.5) (float-vector 0.0 -20.0 51.5) (float-vector -4.5 -20.0 50.2942)))
         (instance face :init :vertices (list (float-vector 4.5 20.0 50.2942) (float-vector 4.5 22.0 50.2942) (float-vector 0.0 22.0 51.5) (float-vector 0.0 20.0 51.5)))
         (instance face :init :vertices (list (float-vector 0.0 -22.0 51.5) (float-vector 4.5 -22.0 50.2942) (float-vector 4.5 -20.0 50.2942) (float-vector 0.0 -20.0 51.5)))
         (instance face :init :vertices (list (float-vector 7.79423 20.0 47.0) (float-vector 7.79423 22.0 47.0) (float-vector 4.5 22.0 50.2942) (float-vector 4.5 20.0 50.2942)))
         (instance face :init :vertices (list (float-vector 4.5 -22.0 50.2942) (float-vector 7.79423 -22.0 47.0) (float-vector 7.79423 -20.0 47.0) (float-vector 4.5 -20.0 50.2942)))
         (instance face :init :vertices (list (float-vector 9.0 20.0 42.5) (float-vector 9.0 22.0 42.5) (float-vector 7.79423 22.0 47.0) (float-vector 7.79423 20.0 47.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -22.0 47.0) (float-vector 9.0 -22.0 42.5) (float-vector 9.0 -20.0 42.5) (float-vector 7.79423 -20.0 47.0)))
         (instance face :init :vertices (list (float-vector 7.79423 20.0 38.0) (float-vector 7.79423 22.0 38.0) (float-vector 9.0 22.0 42.5) (float-vector 9.0 20.0 42.5)))
         (instance face :init :vertices (list (float-vector 9.0 -22.0 42.5) (float-vector 7.79423 -22.0 38.0) (float-vector 7.79423 -20.0 38.0) (float-vector 9.0 -20.0 42.5)))
         (instance face :init :vertices (list (float-vector 4.5 20.0 34.7058) (float-vector 4.5 22.0 34.7058) (float-vector 7.79423 22.0 38.0) (float-vector 7.79423 20.0 38.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -22.0 38.0) (float-vector 4.5 -22.0 34.7058) (float-vector 4.5 -20.0 34.7058) (float-vector 7.79423 -20.0 38.0)))
         (instance face :init :vertices (list (float-vector 4.5 22.0 34.7058) (float-vector 0.0 22.0 33.5) (float-vector -4.5 22.0 34.7058) (float-vector -7.79423 22.0 38.0) (float-vector -9.0 22.0 42.5) (float-vector -7.79423 22.0 47.0) (float-vector -4.5 22.0 50.2942) (float-vector 0.0 22.0 51.5) (float-vector 4.5 22.0 50.2942) (float-vector 7.79423 22.0 47.0) (float-vector 9.0 22.0 42.5) (float-vector 7.79423 22.0 38.0)))
         (instance face :init :vertices (list (float-vector 0.0 22.0 33.5) (float-vector 4.5 22.0 34.7058) (float-vector 4.5 20.0 34.7058) (float-vector 0.0 20.0 33.5)))
         (instance face :init :vertices (list (float-vector 4.5 -22.0 34.7058) (float-vector 0.0 -22.0 33.5) (float-vector 0.0 -20.0 33.5) (float-vector 4.5 -20.0 34.7058)))
         (instance face :init :vertices (list (float-vector 0.0 -22.0 33.5) (float-vector 4.5 -22.0 34.7058) (float-vector 7.79423 -22.0 38.0) (float-vector 9.0 -22.0 42.5) (float-vector 7.79423 -22.0 47.0) (float-vector 4.5 -22.0 50.2942) (float-vector 0.0 -22.0 51.5) (float-vector -4.5 -22.0 50.2942) (float-vector -7.79423 -22.0 47.0) (float-vector -9.0 -22.0 42.5) (float-vector -7.79423 -22.0 38.0) (float-vector -4.5 -22.0 34.7058)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 77.7994 :centroid (float-vector -8.04616 3.27903 35.2349) :inertia-tensor #2f((42660.0 -2052.63 4547.87) (-2052.63 37631.0 8988.64) (4547.87 8988.64 25192.8))))

     ;; definition of :rarm-shoulder-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 0.0 -24.5) (float-vector 11.5 40.0 -24.5) (float-vector 11.5 40.0 24.5) (float-vector 11.5 -5.684342e-14 24.5) (float-vector 11.5 -5.684342e-14 23.0) (float-vector 11.5 38.5 23.0) (float-vector 11.5 38.5 -23.0) (float-vector 11.5 0.0 -23.0)))
         (instance face :init :vertices (list (float-vector -11.5 40.0 -24.5) (float-vector -11.5 40.0 24.5) (float-vector 11.5 40.0 24.5) (float-vector 11.5 40.0 -24.5)))
         (instance face :init :vertices (list (float-vector -11.5 0.0 -24.5) (float-vector -11.5 0.0 -23.0) (float-vector -11.5 38.5 -23.0) (float-vector -11.5 38.5 23.0) (float-vector -11.5 -5.684342e-14 23.0) (float-vector -11.5 -5.684342e-14 24.5) (float-vector -11.5 40.0 24.5) (float-vector -11.5 40.0 -24.5)))
         (instance face :init :vertices (list (float-vector -8.13173 -8.13173 24.5) (float-vector -11.5 -5.684342e-14 24.5) (float-vector -11.5 -5.684342e-14 23.0) (float-vector -8.13173 -8.13173 23.0)))
         (instance face :init :vertices (list (float-vector -8.13173 -8.13173 -24.5) (float-vector -8.13173 -8.13173 -23.0) (float-vector -11.5 0.0 -23.0) (float-vector -11.5 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 0.0 -11.5 24.5) (float-vector -8.13173 -8.13173 24.5) (float-vector -8.13173 -8.13173 23.0) (float-vector 0.0 -11.5 23.0)))
         (instance face :init :vertices (list (float-vector 0.0 -11.5 -24.5) (float-vector 0.0 -11.5 -23.0) (float-vector -8.13173 -8.13173 -23.0) (float-vector -8.13173 -8.13173 -24.5)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 24.5) (float-vector 0.0 -11.5 24.5) (float-vector 0.0 -11.5 23.0) (float-vector 8.13173 -8.13173 23.0)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 -24.5) (float-vector 8.13173 -8.13173 -23.0) (float-vector 0.0 -11.5 -23.0) (float-vector 0.0 -11.5 -24.5)))
         (instance face :init :vertices (list (float-vector 11.5 -5.684342e-14 24.5) (float-vector 11.5 40.0 24.5) (float-vector -11.5 40.0 24.5) (float-vector -11.5 -5.684342e-14 24.5) (float-vector -8.13173 -8.13173 24.5) (float-vector 0.0 -11.5 24.5) (float-vector 8.13173 -8.13173 24.5)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 -24.5) (float-vector 0.0 -11.5 -24.5) (float-vector -8.13173 -8.13173 -24.5) (float-vector -11.5 0.0 -24.5) (float-vector -11.5 40.0 -24.5) (float-vector 11.5 40.0 -24.5) (float-vector 11.5 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 24.5) (float-vector 8.13173 -8.13173 23.0) (float-vector 11.5 -5.684342e-14 23.0) (float-vector 11.5 -5.684342e-14 24.5)))
         (instance face :init :vertices (list (float-vector 11.5 0.0 -24.5) (float-vector 11.5 0.0 -23.0) (float-vector 8.13173 -8.13173 -23.0) (float-vector 8.13173 -8.13173 -24.5)))
         (instance face :init :vertices (list (float-vector 11.5 38.5 23.0) (float-vector 11.5 -5.684342e-14 23.0) (float-vector 8.13173 -8.13173 23.0) (float-vector 0.0 -11.5 23.0) (float-vector -8.13173 -8.13173 23.0) (float-vector -11.5 -5.684342e-14 23.0) (float-vector -11.5 38.5 23.0)))
         (instance face :init :vertices (list (float-vector 11.5 38.5 -23.0) (float-vector 11.5 38.5 23.0) (float-vector -11.5 38.5 23.0) (float-vector -11.5 38.5 -23.0)))
         (instance face :init :vertices (list (float-vector -11.5 38.5 -23.0) (float-vector -11.5 0.0 -23.0) (float-vector -8.13173 -8.13173 -23.0) (float-vector 0.0 -11.5 -23.0) (float-vector 8.13173 -8.13173 -23.0) (float-vector 11.5 0.0 -23.0) (float-vector 11.5 38.5 -23.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.3 47.0 13.0) (float-vector -11.3 73.0 13.0) (float-vector -11.3 73.0 -31.7) (float-vector -11.3 47.0 -31.7)))
         (instance face :init :vertices (list (float-vector -11.3 73.0 -31.7) (float-vector 11.3 73.0 -31.7) (float-vector 11.3 47.0 -31.7) (float-vector -11.3 47.0 -31.7)))
         (instance face :init :vertices (list (float-vector 11.3 73.0 -31.7) (float-vector 11.3 73.0 13.0) (float-vector 11.3 47.0 13.0) (float-vector 11.3 47.0 -31.7)))
         (instance face :init :vertices (list (float-vector 11.3 47.0 13.0) (float-vector -11.3 47.0 13.0) (float-vector -11.3 47.0 -31.7) (float-vector 11.3 47.0 -31.7))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -8.92006 47.0 5.15) (float-vector -5.15 47.0 8.92006) (float-vector 2.842171e-14 47.0 10.3) (float-vector 5.15 47.0 8.92006) (float-vector 8.92006 47.0 5.15) (float-vector 10.3 47.0 -1.418874e-14) (float-vector 8.92006 47.0 -5.15) (float-vector 5.15 47.0 -8.92006) (float-vector 0.0 47.0 -10.3) (float-vector -5.15 47.0 -8.92006) (float-vector -8.92006 47.0 -5.15) (float-vector -10.3 47.0 -6.218542e-16)))
))
         (instance face :init :vertices (list (float-vector 11.3 73.0 13.0) (float-vector -11.3 73.0 13.0) (float-vector -11.3 47.0 13.0) (float-vector 11.3 47.0 13.0)))
         (instance face :init :vertices (list (float-vector -11.3 73.0 13.0) (float-vector 11.3 73.0 13.0) (float-vector 11.3 73.0 -31.7) (float-vector -11.3 73.0 -31.7))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.15 73.0 8.92006) (float-vector -8.92006 73.0 5.15) (float-vector -10.3 73.0 4.192649e-15) (float-vector -8.92006 73.0 -5.15) (float-vector -5.15 73.0 -8.92006) (float-vector 0.0 73.0 -10.3) (float-vector 5.15 73.0 -8.92006) (float-vector 8.92006 73.0 -5.15) (float-vector 10.3 73.0 -9.374238e-15) (float-vector 8.92006 73.0 5.15) (float-vector 5.15 73.0 8.92006) (float-vector 0.0 73.0 10.3)))
))
         (instance face :init :vertices (list (float-vector -10.3 45.0 -9.922006e-16) (float-vector -10.3 47.0 -6.218542e-16) (float-vector -8.92006 47.0 -5.15) (float-vector -8.92006 45.0 -5.15)))
         (instance face :init :vertices (list (float-vector -10.3 73.0 4.192649e-15) (float-vector -10.3 75.0 4.562995e-15) (float-vector -8.92006 75.0 -5.15) (float-vector -8.92006 73.0 -5.15)))
         (instance face :init :vertices (list (float-vector -5.15 47.0 -8.92006) (float-vector -5.15 45.0 -8.92006) (float-vector -8.92006 45.0 -5.15) (float-vector -8.92006 47.0 -5.15)))
         (instance face :init :vertices (list (float-vector -8.92006 75.0 -5.15) (float-vector -5.15 75.0 -8.92006) (float-vector -5.15 73.0 -8.92006) (float-vector -8.92006 73.0 -5.15)))
         (instance face :init :vertices (list (float-vector 0.0 47.0 -10.3) (float-vector 0.0 45.0 -10.3) (float-vector -5.15 45.0 -8.92006) (float-vector -5.15 47.0 -8.92006)))
         (instance face :init :vertices (list (float-vector -5.15 75.0 -8.92006) (float-vector 0.0 75.0 -10.3) (float-vector 0.0 73.0 -10.3) (float-vector -5.15 73.0 -8.92006)))
         (instance face :init :vertices (list (float-vector 5.15 47.0 -8.92006) (float-vector 5.15 45.0 -8.92006) (float-vector 0.0 45.0 -10.3) (float-vector 0.0 47.0 -10.3)))
         (instance face :init :vertices (list (float-vector 0.0 75.0 -10.3) (float-vector 5.15 75.0 -8.92006) (float-vector 5.15 73.0 -8.92006) (float-vector 0.0 73.0 -10.3)))
         (instance face :init :vertices (list (float-vector 8.92006 47.0 -5.15) (float-vector 8.92006 45.0 -5.15) (float-vector 5.15 45.0 -8.92006) (float-vector 5.15 47.0 -8.92006)))
         (instance face :init :vertices (list (float-vector 5.15 75.0 -8.92006) (float-vector 8.92006 75.0 -5.15) (float-vector 8.92006 73.0 -5.15) (float-vector 5.15 73.0 -8.92006)))
         (instance face :init :vertices (list (float-vector 10.3 47.0 -1.418874e-14) (float-vector 10.3 45.0 -1.455909e-14) (float-vector 8.92006 45.0 -5.15) (float-vector 8.92006 47.0 -5.15)))
         (instance face :init :vertices (list (float-vector 8.92006 75.0 -5.15) (float-vector 10.3 75.0 -9.003892e-15) (float-vector 10.3 73.0 -9.374238e-15) (float-vector 8.92006 73.0 -5.15)))
         (instance face :init :vertices (list (float-vector 8.92006 47.0 5.15) (float-vector 8.92006 45.0 5.15) (float-vector 10.3 45.0 -1.455909e-14) (float-vector 10.3 47.0 -1.418874e-14)))
         (instance face :init :vertices (list (float-vector 10.3 75.0 -9.003892e-15) (float-vector 8.92006 75.0 5.15) (float-vector 8.92006 73.0 5.15) (float-vector 10.3 73.0 -9.374238e-15)))
         (instance face :init :vertices (list (float-vector 5.15 47.0 8.92006) (float-vector 5.15 45.0 8.92006) (float-vector 8.92006 45.0 5.15) (float-vector 8.92006 47.0 5.15)))
         (instance face :init :vertices (list (float-vector 8.92006 75.0 5.15) (float-vector 5.15 75.0 8.92006) (float-vector 5.15 73.0 8.92006) (float-vector 8.92006 73.0 5.15)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 47.0 10.3) (float-vector 2.842171e-14 45.0 10.3) (float-vector 5.15 45.0 8.92006) (float-vector 5.15 47.0 8.92006)))
         (instance face :init :vertices (list (float-vector 5.15 75.0 8.92006) (float-vector 0.0 75.0 10.3) (float-vector 0.0 73.0 10.3) (float-vector 5.15 73.0 8.92006)))
         (instance face :init :vertices (list (float-vector -5.15 47.0 8.92006) (float-vector -5.15 45.0 8.92006) (float-vector 2.842171e-14 45.0 10.3) (float-vector 2.842171e-14 47.0 10.3)))
         (instance face :init :vertices (list (float-vector 0.0 75.0 10.3) (float-vector -5.15 75.0 8.92006) (float-vector -5.15 73.0 8.92006) (float-vector 0.0 73.0 10.3)))
         (instance face :init :vertices (list (float-vector -8.92006 47.0 5.15) (float-vector -8.92006 45.0 5.15) (float-vector -5.15 45.0 8.92006) (float-vector -5.15 47.0 8.92006)))
         (instance face :init :vertices (list (float-vector -5.15 75.0 8.92006) (float-vector -8.92006 75.0 5.15) (float-vector -8.92006 73.0 5.15) (float-vector -5.15 73.0 8.92006)))
         (instance face :init :vertices (list (float-vector -8.92006 45.0 5.15) (float-vector -10.3 45.0 -9.922006e-16) (float-vector -8.92006 45.0 -5.15) (float-vector -5.15 45.0 -8.92006) (float-vector 0.0 45.0 -10.3) (float-vector 5.15 45.0 -8.92006) (float-vector 8.92006 45.0 -5.15) (float-vector 10.3 45.0 -1.455909e-14) (float-vector 8.92006 45.0 5.15) (float-vector 5.15 45.0 8.92006) (float-vector 2.842171e-14 45.0 10.3) (float-vector -5.15 45.0 8.92006)))
         (instance face :init :vertices (list (float-vector -10.3 45.0 -9.922006e-16) (float-vector -8.92006 45.0 5.15) (float-vector -8.92006 47.0 5.15) (float-vector -10.3 47.0 -6.218542e-16)))
         (instance face :init :vertices (list (float-vector -8.92006 75.0 5.15) (float-vector -10.3 75.0 4.562995e-15) (float-vector -10.3 73.0 4.192649e-15) (float-vector -8.92006 73.0 5.15)))
         (instance face :init :vertices (list (float-vector -10.3 75.0 4.562995e-15) (float-vector -8.92006 75.0 5.15) (float-vector -5.15 75.0 8.92006) (float-vector 0.0 75.0 10.3) (float-vector 5.15 75.0 8.92006) (float-vector 8.92006 75.0 5.15) (float-vector 10.3 75.0 -9.003892e-15) (float-vector 8.92006 75.0 -5.15) (float-vector 5.15 75.0 -8.92006) (float-vector 0.0 75.0 -10.3) (float-vector -5.15 75.0 -8.92006) (float-vector -8.92006 75.0 -5.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-r :weight 59.2518 :centroid (float-vector 9.237056e-14 51.8163 -6.92328) :inertia-tensor #2f((34453.8 -2.643329e-12 -4.632801e-14) (-2.643329e-12 16834.8 3357.09) (-4.632801e-14 3357.09 22703.2))))

     ;; definition of :rarm-elbow-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.0 0.0 -16.0) (float-vector 12.0 20.0 -16.0) (float-vector 12.0 20.0 16.0) (float-vector 12.0 0.0 16.0) (float-vector 12.0 0.0 14.5) (float-vector 12.0 18.5 14.5) (float-vector 12.0 18.5 -14.5) (float-vector 12.0 0.0 -14.5)))
         (instance face :init :vertices (list (float-vector -12.0 20.0 -16.0) (float-vector -12.0 20.0 16.0) (float-vector 12.0 20.0 16.0) (float-vector 12.0 20.0 -16.0)))
         (instance face :init :vertices (list (float-vector -12.0 -2.842171e-14 -16.0) (float-vector -12.0 0.0 -14.5) (float-vector -12.0 18.5 -14.5) (float-vector -12.0 18.5 14.5) (float-vector -12.0 0.0 14.5) (float-vector -12.0 0.0 16.0) (float-vector -12.0 20.0 16.0) (float-vector -12.0 20.0 -16.0)))
         (instance face :init :vertices (list (float-vector -8.48528 -8.48528 16.0) (float-vector -12.0 0.0 16.0) (float-vector -12.0 0.0 14.5) (float-vector -8.48528 -8.48528 14.5)))
         (instance face :init :vertices (list (float-vector -8.48528 -8.48528 -16.0) (float-vector -8.48528 -8.48528 -14.5) (float-vector -12.0 0.0 -14.5) (float-vector -12.0 -2.842171e-14 -16.0)))
         (instance face :init :vertices (list (float-vector 0.0 -12.0 16.0) (float-vector -8.48528 -8.48528 16.0) (float-vector -8.48528 -8.48528 14.5) (float-vector 0.0 -12.0 14.5)))
         (instance face :init :vertices (list (float-vector 0.0 -12.0 -16.0) (float-vector 0.0 -12.0 -14.5) (float-vector -8.48528 -8.48528 -14.5) (float-vector -8.48528 -8.48528 -16.0)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 16.0) (float-vector 0.0 -12.0 16.0) (float-vector 0.0 -12.0 14.5) (float-vector 8.48528 -8.48528 14.5)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 -16.0) (float-vector 8.48528 -8.48528 -14.5) (float-vector 0.0 -12.0 -14.5) (float-vector 0.0 -12.0 -16.0)))
         (instance face :init :vertices (list (float-vector 12.0 0.0 16.0) (float-vector 12.0 20.0 16.0) (float-vector -12.0 20.0 16.0) (float-vector -12.0 0.0 16.0) (float-vector -8.48528 -8.48528 16.0) (float-vector 0.0 -12.0 16.0) (float-vector 8.48528 -8.48528 16.0)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 -16.0) (float-vector 0.0 -12.0 -16.0) (float-vector -8.48528 -8.48528 -16.0) (float-vector -12.0 -2.842171e-14 -16.0) (float-vector -12.0 20.0 -16.0) (float-vector 12.0 20.0 -16.0) (float-vector 12.0 0.0 -16.0)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 16.0) (float-vector 8.48528 -8.48528 14.5) (float-vector 12.0 0.0 14.5) (float-vector 12.0 0.0 16.0)))
         (instance face :init :vertices (list (float-vector 12.0 0.0 -16.0) (float-vector 12.0 0.0 -14.5) (float-vector 8.48528 -8.48528 -14.5) (float-vector 8.48528 -8.48528 -16.0)))
         (instance face :init :vertices (list (float-vector 12.0 18.5 14.5) (float-vector 12.0 0.0 14.5) (float-vector 8.48528 -8.48528 14.5) (float-vector 0.0 -12.0 14.5) (float-vector -8.48528 -8.48528 14.5) (float-vector -12.0 0.0 14.5) (float-vector -12.0 18.5 14.5)))
         (instance face :init :vertices (list (float-vector 12.0 18.5 -14.5) (float-vector 12.0 18.5 14.5) (float-vector -12.0 18.5 14.5) (float-vector -12.0 18.5 -14.5)))
         (instance face :init :vertices (list (float-vector -12.0 18.5 -14.5) (float-vector -12.0 0.0 -14.5) (float-vector -8.48528 -8.48528 -14.5) (float-vector 0.0 -12.0 -14.5) (float-vector 8.48528 -8.48528 -14.5) (float-vector 12.0 0.0 -14.5) (float-vector 12.0 18.5 -14.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -18.0 12.0 -37.0) (float-vector -18.0 12.0 -16.0) (float-vector 18.0 12.0 -16.0) (float-vector 18.0 12.0 -37.0) (float-vector 16.5 12.0 -37.0) (float-vector 16.5 12.0 -17.5) (float-vector -16.5 12.0 -17.5) (float-vector -16.5 12.0 -37.0)))
         (instance face :init :vertices (list (float-vector -18.0 -12.0 -16.0) (float-vector 18.0 -12.0 -16.0) (float-vector 18.0 12.0 -16.0) (float-vector -18.0 12.0 -16.0)))
         (instance face :init :vertices (list (float-vector -18.0 -12.0 -37.0) (float-vector -16.5 -12.0 -37.0) (float-vector -16.5 -12.0 -17.5) (float-vector 16.5 -12.0 -17.5) (float-vector 16.5 -12.0 -37.0) (float-vector 18.0 -12.0 -37.0) (float-vector 18.0 -12.0 -16.0) (float-vector -18.0 -12.0 -16.0)))
         (instance face :init :vertices (list (float-vector 18.0 -8.48528 -45.4853) (float-vector 18.0 -12.0 -37.0) (float-vector 16.5 -12.0 -37.0) (float-vector 16.5 -8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector -18.0 -8.48528 -45.4853) (float-vector -16.5 -8.48528 -45.4853) (float-vector -16.5 -12.0 -37.0) (float-vector -18.0 -12.0 -37.0)))
         (instance face :init :vertices (list (float-vector 18.0 0.0 -49.0) (float-vector 18.0 -8.48528 -45.4853) (float-vector 16.5 -8.48528 -45.4853) (float-vector 16.5 0.0 -49.0)))
         (instance face :init :vertices (list (float-vector -18.0 -2.842171e-14 -49.0) (float-vector -16.5 -2.842171e-14 -49.0) (float-vector -16.5 -8.48528 -45.4853) (float-vector -18.0 -8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector 18.0 8.48528 -45.4853) (float-vector 18.0 0.0 -49.0) (float-vector 16.5 0.0 -49.0) (float-vector 16.5 8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector -18.0 8.48528 -45.4853) (float-vector -16.5 8.48528 -45.4853) (float-vector -16.5 -2.842171e-14 -49.0) (float-vector -18.0 -2.842171e-14 -49.0)))
         (instance face :init :vertices (list (float-vector 18.0 12.0 -37.0) (float-vector 18.0 12.0 -16.0) (float-vector 18.0 -12.0 -16.0) (float-vector 18.0 -12.0 -37.0) (float-vector 18.0 -8.48528 -45.4853) (float-vector 18.0 0.0 -49.0) (float-vector 18.0 8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector -18.0 8.48528 -45.4853) (float-vector -18.0 -2.842171e-14 -49.0) (float-vector -18.0 -8.48528 -45.4853) (float-vector -18.0 -12.0 -37.0) (float-vector -18.0 -12.0 -16.0) (float-vector -18.0 12.0 -16.0) (float-vector -18.0 12.0 -37.0)))
         (instance face :init :vertices (list (float-vector 18.0 8.48528 -45.4853) (float-vector 16.5 8.48528 -45.4853) (float-vector 16.5 12.0 -37.0) (float-vector 18.0 12.0 -37.0)))
         (instance face :init :vertices (list (float-vector -18.0 12.0 -37.0) (float-vector -16.5 12.0 -37.0) (float-vector -16.5 8.48528 -45.4853) (float-vector -18.0 8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector 16.5 12.0 -17.5) (float-vector 16.5 12.0 -37.0) (float-vector 16.5 8.48528 -45.4853) (float-vector 16.5 0.0 -49.0) (float-vector 16.5 -8.48528 -45.4853) (float-vector 16.5 -12.0 -37.0) (float-vector 16.5 -12.0 -17.5)))
         (instance face :init :vertices (list (float-vector -16.5 12.0 -17.5) (float-vector 16.5 12.0 -17.5) (float-vector 16.5 -12.0 -17.5) (float-vector -16.5 -12.0 -17.5)))
         (instance face :init :vertices (list (float-vector -16.5 -12.0 -17.5) (float-vector -16.5 -12.0 -37.0) (float-vector -16.5 -8.48528 -45.4853) (float-vector -16.5 -2.842171e-14 -49.0) (float-vector -16.5 8.48528 -45.4853) (float-vector -16.5 12.0 -37.0) (float-vector -16.5 12.0 -17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-y :weight 17.2959 :centroid (float-vector 1.492140e-13 4.92471 -13.3505) :inertia-tensor #2f((7175.37 3.187351e-13 9.063772e-13) (3.187351e-13 7791.82 -1137.16) (9.063772e-13 -1137.16 4181.31))))

     ;; definition of :rarm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.3 -13.0 13.0) (float-vector 11.3 -13.0 -13.0) (float-vector 11.3 31.7 -13.0) (float-vector 11.3 31.7 13.0)))
         (instance face :init :vertices (list (float-vector 11.3 31.7 -13.0) (float-vector -11.3 31.7 -13.0) (float-vector -11.3 31.7 13.0) (float-vector 11.3 31.7 13.0)))
         (instance face :init :vertices (list (float-vector -11.3 31.7 -13.0) (float-vector -11.3 -13.0 -13.0) (float-vector -11.3 -13.0 13.0) (float-vector -11.3 31.7 13.0)))
         (instance face :init :vertices (list (float-vector -11.3 -13.0 13.0) (float-vector 11.3 -13.0 13.0) (float-vector 11.3 31.7 13.0) (float-vector -11.3 31.7 13.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 8.92006 -5.15 13.0) (float-vector 5.15 -8.92006 13.0) (float-vector 0.0 -10.3 13.0) (float-vector -5.15 -8.92006 13.0) (float-vector -8.92006 -5.15 13.0) (float-vector -10.3 0.0 13.0) (float-vector -8.92006 5.15 13.0) (float-vector -5.15 8.92006 13.0) (float-vector 2.842171e-14 10.3 13.0) (float-vector 5.15 8.92006 13.0) (float-vector 8.92006 5.15 13.0) (float-vector 10.3 0.0 13.0)))
))
         (instance face :init :vertices (list (float-vector -11.3 -13.0 -13.0) (float-vector 11.3 -13.0 -13.0) (float-vector 11.3 -13.0 13.0) (float-vector -11.3 -13.0 13.0)))
         (instance face :init :vertices (list (float-vector 11.3 -13.0 -13.0) (float-vector -11.3 -13.0 -13.0) (float-vector -11.3 31.7 -13.0) (float-vector 11.3 31.7 -13.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.15 -8.92006 -13.0) (float-vector 8.92006 -5.15 -13.0) (float-vector 10.3 -2.842171e-14 -13.0) (float-vector 8.92006 5.15 -13.0) (float-vector 5.15 8.92006 -13.0) (float-vector 2.842171e-14 10.3 -13.0) (float-vector -5.15 8.92006 -13.0) (float-vector -8.92006 5.15 -13.0) (float-vector -10.3 0.0 -13.0) (float-vector -8.92006 -5.15 -13.0) (float-vector -5.15 -8.92006 -13.0) (float-vector 0.0 -10.3 -13.0)))
))
         (instance face :init :vertices (list (float-vector 10.3 -2.842171e-14 15.0) (float-vector 10.3 0.0 13.0) (float-vector 8.92006 5.15 13.0) (float-vector 8.92006 5.15 15.0)))
         (instance face :init :vertices (list (float-vector 10.3 -2.842171e-14 -13.0) (float-vector 10.3 -2.842171e-14 -15.0) (float-vector 8.92006 5.15 -15.0) (float-vector 8.92006 5.15 -13.0)))
         (instance face :init :vertices (list (float-vector 5.15 8.92006 13.0) (float-vector 5.15 8.92006 15.0) (float-vector 8.92006 5.15 15.0) (float-vector 8.92006 5.15 13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 5.15 -15.0) (float-vector 5.15 8.92006 -15.0) (float-vector 5.15 8.92006 -13.0) (float-vector 8.92006 5.15 -13.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 10.3 13.0) (float-vector 2.842171e-14 10.3 15.0) (float-vector 5.15 8.92006 15.0) (float-vector 5.15 8.92006 13.0)))
         (instance face :init :vertices (list (float-vector 5.15 8.92006 -15.0) (float-vector 2.842171e-14 10.3 -15.0) (float-vector 2.842171e-14 10.3 -13.0) (float-vector 5.15 8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector -5.15 8.92006 13.0) (float-vector -5.15 8.92006 15.0) (float-vector 2.842171e-14 10.3 15.0) (float-vector 2.842171e-14 10.3 13.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 10.3 -15.0) (float-vector -5.15 8.92006 -15.0) (float-vector -5.15 8.92006 -13.0) (float-vector 2.842171e-14 10.3 -13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 5.15 13.0) (float-vector -8.92006 5.15 15.0) (float-vector -5.15 8.92006 15.0) (float-vector -5.15 8.92006 13.0)))
         (instance face :init :vertices (list (float-vector -5.15 8.92006 -15.0) (float-vector -8.92006 5.15 -15.0) (float-vector -8.92006 5.15 -13.0) (float-vector -5.15 8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector -10.3 0.0 13.0) (float-vector -10.3 0.0 15.0) (float-vector -8.92006 5.15 15.0) (float-vector -8.92006 5.15 13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 5.15 -15.0) (float-vector -10.3 0.0 -15.0) (float-vector -10.3 0.0 -13.0) (float-vector -8.92006 5.15 -13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 -5.15 13.0) (float-vector -8.92006 -5.15 15.0) (float-vector -10.3 0.0 15.0) (float-vector -10.3 0.0 13.0)))
         (instance face :init :vertices (list (float-vector -10.3 0.0 -15.0) (float-vector -8.92006 -5.15 -15.0) (float-vector -8.92006 -5.15 -13.0) (float-vector -10.3 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector -5.15 -8.92006 13.0) (float-vector -5.15 -8.92006 15.0) (float-vector -8.92006 -5.15 15.0) (float-vector -8.92006 -5.15 13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 -5.15 -15.0) (float-vector -5.15 -8.92006 -15.0) (float-vector -5.15 -8.92006 -13.0) (float-vector -8.92006 -5.15 -13.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.3 13.0) (float-vector 2.842171e-14 -10.3 15.0) (float-vector -5.15 -8.92006 15.0) (float-vector -5.15 -8.92006 13.0)))
         (instance face :init :vertices (list (float-vector -5.15 -8.92006 -15.0) (float-vector 0.0 -10.3 -15.0) (float-vector 0.0 -10.3 -13.0) (float-vector -5.15 -8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector 5.15 -8.92006 13.0) (float-vector 5.15 -8.92006 15.0) (float-vector 2.842171e-14 -10.3 15.0) (float-vector 0.0 -10.3 13.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.3 -15.0) (float-vector 5.15 -8.92006 -15.0) (float-vector 5.15 -8.92006 -13.0) (float-vector 0.0 -10.3 -13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 -5.15 13.0) (float-vector 8.92006 -5.15 15.0) (float-vector 5.15 -8.92006 15.0) (float-vector 5.15 -8.92006 13.0)))
         (instance face :init :vertices (list (float-vector 5.15 -8.92006 -15.0) (float-vector 8.92006 -5.15 -15.0) (float-vector 8.92006 -5.15 -13.0) (float-vector 5.15 -8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 -5.15 15.0) (float-vector 10.3 -2.842171e-14 15.0) (float-vector 8.92006 5.15 15.0) (float-vector 5.15 8.92006 15.0) (float-vector 2.842171e-14 10.3 15.0) (float-vector -5.15 8.92006 15.0) (float-vector -8.92006 5.15 15.0) (float-vector -10.3 0.0 15.0) (float-vector -8.92006 -5.15 15.0) (float-vector -5.15 -8.92006 15.0) (float-vector 2.842171e-14 -10.3 15.0) (float-vector 5.15 -8.92006 15.0)))
         (instance face :init :vertices (list (float-vector 10.3 -2.842171e-14 15.0) (float-vector 8.92006 -5.15 15.0) (float-vector 8.92006 -5.15 13.0) (float-vector 10.3 0.0 13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 -5.15 -15.0) (float-vector 10.3 -2.842171e-14 -15.0) (float-vector 10.3 -2.842171e-14 -13.0) (float-vector 8.92006 -5.15 -13.0)))
         (instance face :init :vertices (list (float-vector 10.3 -2.842171e-14 -15.0) (float-vector 8.92006 -5.15 -15.0) (float-vector 5.15 -8.92006 -15.0) (float-vector 0.0 -10.3 -15.0) (float-vector -5.15 -8.92006 -15.0) (float-vector -8.92006 -5.15 -15.0) (float-vector -10.3 0.0 -15.0) (float-vector -8.92006 5.15 -15.0) (float-vector -5.15 8.92006 -15.0) (float-vector 2.842171e-14 10.3 -15.0) (float-vector 5.15 8.92006 -15.0) (float-vector 8.92006 5.15 -15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.0 31.7 11.0) (float-vector -11.0 31.7 11.0) (float-vector -11.0 31.7 -11.0) (float-vector 11.0 31.7 -11.0)))
         (instance face :init :vertices (list (float-vector -11.0 121.7 11.0) (float-vector 11.0 121.7 11.0) (float-vector 11.0 121.7 -11.0) (float-vector -11.0 121.7 -11.0)))
         (instance face :init :vertices (list (float-vector 11.0 31.7 11.0) (float-vector 11.0 121.7 11.0) (float-vector -11.0 121.7 11.0) (float-vector -11.0 31.7 11.0)))
         (instance face :init :vertices (list (float-vector 11.0 31.7 -11.0) (float-vector 11.0 121.7 -11.0) (float-vector 11.0 121.7 11.0) (float-vector 11.0 31.7 11.0)))
         (instance face :init :vertices (list (float-vector -11.0 31.7 -11.0) (float-vector -11.0 121.7 -11.0) (float-vector 11.0 121.7 -11.0) (float-vector 11.0 31.7 -11.0)))
         (instance face :init :vertices (list (float-vector -11.0 31.7 11.0) (float-vector -11.0 121.7 11.0) (float-vector -11.0 121.7 -11.0) (float-vector -11.0 31.7 -11.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray90)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-p :weight 66 :centroid (float-vector 6.534855e-16 29.4578 -2.131628e-14) :inertia-tensor #2f((29657.8 -1.519231e-12 7.206203e-28) (-1.519231e-12 4549.25 1.845256e-11) (7.206203e-28 1.845256e-11 29024.4))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -24.5) (float-vector 10.0 32.0 -24.5) (float-vector 10.0 32.0 24.5) (float-vector 10.0 0.0 24.5) (float-vector 10.0 0.0 22.5) (float-vector 10.0 30.0 22.5) (float-vector 10.0 30.0 -22.5) (float-vector 10.0 0.0 -22.5)))
         (instance face :init :vertices (list (float-vector -10.0 32.0 -24.5) (float-vector -10.0 32.0 24.5) (float-vector 10.0 32.0 24.5) (float-vector 10.0 32.0 -24.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -24.5) (float-vector -10.0 0.0 -22.5) (float-vector -10.0 30.0 -22.5) (float-vector -10.0 30.0 22.5) (float-vector -10.0 0.0 22.5) (float-vector -10.0 0.0 24.5) (float-vector -10.0 32.0 24.5) (float-vector -10.0 32.0 -24.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 24.5) (float-vector -10.0 0.0 24.5) (float-vector -10.0 0.0 22.5) (float-vector -7.07107 -7.07107 22.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -24.5) (float-vector -7.07107 -7.07107 -22.5) (float-vector -10.0 0.0 -22.5) (float-vector -10.0 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 24.5) (float-vector -7.07107 -7.07107 24.5) (float-vector -7.07107 -7.07107 22.5) (float-vector 0.0 -10.0 22.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -24.5) (float-vector 0.0 -10.0 -22.5) (float-vector -7.07107 -7.07107 -22.5) (float-vector -7.07107 -7.07107 -24.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 24.5) (float-vector 0.0 -10.0 24.5) (float-vector 0.0 -10.0 22.5) (float-vector 7.07107 -7.07107 22.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -24.5) (float-vector 7.07107 -7.07107 -22.5) (float-vector 0.0 -10.0 -22.5) (float-vector 0.0 -10.0 -24.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 24.5) (float-vector 10.0 32.0 24.5) (float-vector -10.0 32.0 24.5) (float-vector -10.0 0.0 24.5) (float-vector -7.07107 -7.07107 24.5) (float-vector 0.0 -10.0 24.5) (float-vector 7.07107 -7.07107 24.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -24.5) (float-vector 0.0 -10.0 -24.5) (float-vector -7.07107 -7.07107 -24.5) (float-vector -10.0 0.0 -24.5) (float-vector -10.0 32.0 -24.5) (float-vector 10.0 32.0 -24.5) (float-vector 10.0 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 24.5) (float-vector 7.07107 -7.07107 22.5) (float-vector 10.0 0.0 22.5) (float-vector 10.0 0.0 24.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -24.5) (float-vector 10.0 0.0 -22.5) (float-vector 7.07107 -7.07107 -22.5) (float-vector 7.07107 -7.07107 -24.5)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 22.5) (float-vector 10.0 0.0 22.5) (float-vector 7.07107 -7.07107 22.5) (float-vector 0.0 -10.0 22.5) (float-vector -7.07107 -7.07107 22.5) (float-vector -10.0 0.0 22.5) (float-vector -10.0 30.0 22.5)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -22.5) (float-vector 10.0 30.0 22.5) (float-vector -10.0 30.0 22.5) (float-vector -10.0 30.0 -22.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -22.5) (float-vector -10.0 0.0 -22.5) (float-vector -7.07107 -7.07107 -22.5) (float-vector 0.0 -10.0 -22.5) (float-vector 7.07107 -7.07107 -22.5) (float-vector 10.0 0.0 -22.5) (float-vector 10.0 30.0 -22.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 20.0 -52.5) (float-vector 10.0 -20.0 -52.5) (float-vector -30.0 -20.0 -52.5) (float-vector -30.0 20.0 -52.5)))
         (instance face :init :vertices (list (float-vector -30.0 -20.0 -52.5) (float-vector -30.0 -20.0 -32.5) (float-vector -30.0 20.0 -32.5) (float-vector -30.0 20.0 -52.5)))
         (instance face :init :vertices (list (float-vector -30.0 -20.0 -32.5) (float-vector 10.0 -20.0 -32.5) (float-vector 10.0 20.0 -32.5) (float-vector -30.0 20.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.0 20.0 -32.5) (float-vector 10.0 20.0 -52.5) (float-vector -30.0 20.0 -52.5) (float-vector -30.0 20.0 -32.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.5 20.0 -50.2942) (float-vector 7.79423 20.0 -47.0) (float-vector 9.0 20.0 -42.5) (float-vector 7.79423 20.0 -38.0) (float-vector 4.5 20.0 -34.7058) (float-vector 0.0 20.0 -33.5) (float-vector -4.5 20.0 -34.7058) (float-vector -7.79423 20.0 -38.0) (float-vector -9.0 20.0 -42.5) (float-vector -7.79423 20.0 -47.0) (float-vector -4.5 20.0 -50.2942) (float-vector 0.0 20.0 -51.5)))
))
         (instance face :init :vertices (list (float-vector 10.0 -20.0 -32.5) (float-vector 10.0 -20.0 -52.5) (float-vector 10.0 20.0 -52.5) (float-vector 10.0 20.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.0 -20.0 -52.5) (float-vector 10.0 -20.0 -32.5) (float-vector -30.0 -20.0 -32.5) (float-vector -30.0 -20.0 -52.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79423 -20.0 -47.0) (float-vector 4.5 -20.0 -50.2942) (float-vector 0.0 -20.0 -51.5) (float-vector -4.5 -20.0 -50.2942) (float-vector -7.79423 -20.0 -47.0) (float-vector -9.0 -20.0 -42.5) (float-vector -7.79423 -20.0 -38.0) (float-vector -4.5 -20.0 -34.7058) (float-vector 0.0 -20.0 -33.5) (float-vector 4.5 -20.0 -34.7058) (float-vector 7.79423 -20.0 -38.0) (float-vector 9.0 -20.0 -42.5)))
))
         (instance face :init :vertices (list (float-vector 0.0 22.0 -51.5) (float-vector 0.0 20.0 -51.5) (float-vector -4.5 20.0 -50.2942) (float-vector -4.5 22.0 -50.2942)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 -51.5) (float-vector 0.0 -22.0 -51.5) (float-vector -4.5 -22.0 -50.2942) (float-vector -4.5 -20.0 -50.2942)))
         (instance face :init :vertices (list (float-vector -7.79423 20.0 -47.0) (float-vector -7.79423 22.0 -47.0) (float-vector -4.5 22.0 -50.2942) (float-vector -4.5 20.0 -50.2942)))
         (instance face :init :vertices (list (float-vector -4.5 -22.0 -50.2942) (float-vector -7.79423 -22.0 -47.0) (float-vector -7.79423 -20.0 -47.0) (float-vector -4.5 -20.0 -50.2942)))
         (instance face :init :vertices (list (float-vector -9.0 20.0 -42.5) (float-vector -9.0 22.0 -42.5) (float-vector -7.79423 22.0 -47.0) (float-vector -7.79423 20.0 -47.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -22.0 -47.0) (float-vector -9.0 -22.0 -42.5) (float-vector -9.0 -20.0 -42.5) (float-vector -7.79423 -20.0 -47.0)))
         (instance face :init :vertices (list (float-vector -7.79423 20.0 -38.0) (float-vector -7.79423 22.0 -38.0) (float-vector -9.0 22.0 -42.5) (float-vector -9.0 20.0 -42.5)))
         (instance face :init :vertices (list (float-vector -9.0 -22.0 -42.5) (float-vector -7.79423 -22.0 -38.0) (float-vector -7.79423 -20.0 -38.0) (float-vector -9.0 -20.0 -42.5)))
         (instance face :init :vertices (list (float-vector -4.5 20.0 -34.7058) (float-vector -4.5 22.0 -34.7058) (float-vector -7.79423 22.0 -38.0) (float-vector -7.79423 20.0 -38.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -22.0 -38.0) (float-vector -4.5 -22.0 -34.7058) (float-vector -4.5 -20.0 -34.7058) (float-vector -7.79423 -20.0 -38.0)))
         (instance face :init :vertices (list (float-vector 0.0 20.0 -33.5) (float-vector 0.0 22.0 -33.5) (float-vector -4.5 22.0 -34.7058) (float-vector -4.5 20.0 -34.7058)))
         (instance face :init :vertices (list (float-vector -4.5 -22.0 -34.7058) (float-vector 0.0 -22.0 -33.5) (float-vector 0.0 -20.0 -33.5) (float-vector -4.5 -20.0 -34.7058)))
         (instance face :init :vertices (list (float-vector 4.5 20.0 -34.7058) (float-vector 4.5 22.0 -34.7058) (float-vector 0.0 22.0 -33.5) (float-vector 0.0 20.0 -33.5)))
         (instance face :init :vertices (list (float-vector 0.0 -22.0 -33.5) (float-vector 4.5 -22.0 -34.7058) (float-vector 4.5 -20.0 -34.7058) (float-vector 0.0 -20.0 -33.5)))
         (instance face :init :vertices (list (float-vector 7.79423 20.0 -38.0) (float-vector 7.79423 22.0 -38.0) (float-vector 4.5 22.0 -34.7058) (float-vector 4.5 20.0 -34.7058)))
         (instance face :init :vertices (list (float-vector 4.5 -22.0 -34.7058) (float-vector 7.79423 -22.0 -38.0) (float-vector 7.79423 -20.0 -38.0) (float-vector 4.5 -20.0 -34.7058)))
         (instance face :init :vertices (list (float-vector 9.0 20.0 -42.5) (float-vector 9.0 22.0 -42.5) (float-vector 7.79423 22.0 -38.0) (float-vector 7.79423 20.0 -38.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -22.0 -38.0) (float-vector 9.0 -22.0 -42.5) (float-vector 9.0 -20.0 -42.5) (float-vector 7.79423 -20.0 -38.0)))
         (instance face :init :vertices (list (float-vector 7.79423 20.0 -47.0) (float-vector 7.79423 22.0 -47.0) (float-vector 9.0 22.0 -42.5) (float-vector 9.0 20.0 -42.5)))
         (instance face :init :vertices (list (float-vector 9.0 -22.0 -42.5) (float-vector 7.79423 -22.0 -47.0) (float-vector 7.79423 -20.0 -47.0) (float-vector 9.0 -20.0 -42.5)))
         (instance face :init :vertices (list (float-vector 4.5 20.0 -50.2942) (float-vector 4.5 22.0 -50.2942) (float-vector 7.79423 22.0 -47.0) (float-vector 7.79423 20.0 -47.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -22.0 -47.0) (float-vector 4.5 -22.0 -50.2942) (float-vector 4.5 -20.0 -50.2942) (float-vector 7.79423 -20.0 -47.0)))
         (instance face :init :vertices (list (float-vector 4.5 22.0 -50.2942) (float-vector 0.0 22.0 -51.5) (float-vector -4.5 22.0 -50.2942) (float-vector -7.79423 22.0 -47.0) (float-vector -9.0 22.0 -42.5) (float-vector -7.79423 22.0 -38.0) (float-vector -4.5 22.0 -34.7058) (float-vector 0.0 22.0 -33.5) (float-vector 4.5 22.0 -34.7058) (float-vector 7.79423 22.0 -38.0) (float-vector 9.0 22.0 -42.5) (float-vector 7.79423 22.0 -47.0)))
         (instance face :init :vertices (list (float-vector 0.0 22.0 -51.5) (float-vector 4.5 22.0 -50.2942) (float-vector 4.5 20.0 -50.2942) (float-vector 0.0 20.0 -51.5)))
         (instance face :init :vertices (list (float-vector 4.5 -22.0 -50.2942) (float-vector 0.0 -22.0 -51.5) (float-vector 0.0 -20.0 -51.5) (float-vector 4.5 -20.0 -50.2942)))
         (instance face :init :vertices (list (float-vector 0.0 -22.0 -51.5) (float-vector 4.5 -22.0 -50.2942) (float-vector 7.79423 -22.0 -47.0) (float-vector 9.0 -22.0 -42.5) (float-vector 7.79423 -22.0 -38.0) (float-vector 4.5 -22.0 -34.7058) (float-vector 0.0 -22.0 -33.5) (float-vector -4.5 -22.0 -34.7058) (float-vector -7.79423 -22.0 -38.0) (float-vector -9.0 -22.0 -42.5) (float-vector -7.79423 -22.0 -47.0) (float-vector -4.5 -22.0 -50.2942)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 77.7994 :centroid (float-vector -8.04616 3.27903 -35.2349) :inertia-tensor #2f((42660.0 -2052.63 -4547.87) (-2052.63 37631.0 -8988.64) (-4547.87 -8988.64 25192.8))))

     ;; definition of :larm-shoulder-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 0.0 -24.5) (float-vector 11.5 40.0 -24.5) (float-vector 11.5 40.0 24.5) (float-vector 11.5 5.684342e-14 24.5) (float-vector 11.5 5.684342e-14 23.0) (float-vector 11.5 38.5 23.0) (float-vector 11.5 38.5 -23.0) (float-vector 11.5 0.0 -23.0)))
         (instance face :init :vertices (list (float-vector -11.5 40.0 -24.5) (float-vector -11.5 40.0 24.5) (float-vector 11.5 40.0 24.5) (float-vector 11.5 40.0 -24.5)))
         (instance face :init :vertices (list (float-vector -11.5 0.0 -24.5) (float-vector -11.5 0.0 -23.0) (float-vector -11.5 38.5 -23.0) (float-vector -11.5 38.5 23.0) (float-vector -11.5 5.684342e-14 23.0) (float-vector -11.5 5.684342e-14 24.5) (float-vector -11.5 40.0 24.5) (float-vector -11.5 40.0 -24.5)))
         (instance face :init :vertices (list (float-vector -8.13173 -8.13173 24.5) (float-vector -11.5 5.684342e-14 24.5) (float-vector -11.5 5.684342e-14 23.0) (float-vector -8.13173 -8.13173 23.0)))
         (instance face :init :vertices (list (float-vector -8.13173 -8.13173 -24.5) (float-vector -8.13173 -8.13173 -23.0) (float-vector -11.5 0.0 -23.0) (float-vector -11.5 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 0.0 -11.5 24.5) (float-vector -8.13173 -8.13173 24.5) (float-vector -8.13173 -8.13173 23.0) (float-vector 0.0 -11.5 23.0)))
         (instance face :init :vertices (list (float-vector 0.0 -11.5 -24.5) (float-vector 0.0 -11.5 -23.0) (float-vector -8.13173 -8.13173 -23.0) (float-vector -8.13173 -8.13173 -24.5)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 24.5) (float-vector 0.0 -11.5 24.5) (float-vector 0.0 -11.5 23.0) (float-vector 8.13173 -8.13173 23.0)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 -24.5) (float-vector 8.13173 -8.13173 -23.0) (float-vector 0.0 -11.5 -23.0) (float-vector 0.0 -11.5 -24.5)))
         (instance face :init :vertices (list (float-vector 11.5 5.684342e-14 24.5) (float-vector 11.5 40.0 24.5) (float-vector -11.5 40.0 24.5) (float-vector -11.5 5.684342e-14 24.5) (float-vector -8.13173 -8.13173 24.5) (float-vector 0.0 -11.5 24.5) (float-vector 8.13173 -8.13173 24.5)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 -24.5) (float-vector 0.0 -11.5 -24.5) (float-vector -8.13173 -8.13173 -24.5) (float-vector -11.5 0.0 -24.5) (float-vector -11.5 40.0 -24.5) (float-vector 11.5 40.0 -24.5) (float-vector 11.5 0.0 -24.5)))
         (instance face :init :vertices (list (float-vector 8.13173 -8.13173 24.5) (float-vector 8.13173 -8.13173 23.0) (float-vector 11.5 5.684342e-14 23.0) (float-vector 11.5 5.684342e-14 24.5)))
         (instance face :init :vertices (list (float-vector 11.5 0.0 -24.5) (float-vector 11.5 0.0 -23.0) (float-vector 8.13173 -8.13173 -23.0) (float-vector 8.13173 -8.13173 -24.5)))
         (instance face :init :vertices (list (float-vector 11.5 38.5 23.0) (float-vector 11.5 5.684342e-14 23.0) (float-vector 8.13173 -8.13173 23.0) (float-vector 0.0 -11.5 23.0) (float-vector -8.13173 -8.13173 23.0) (float-vector -11.5 5.684342e-14 23.0) (float-vector -11.5 38.5 23.0)))
         (instance face :init :vertices (list (float-vector 11.5 38.5 -23.0) (float-vector 11.5 38.5 23.0) (float-vector -11.5 38.5 23.0) (float-vector -11.5 38.5 -23.0)))
         (instance face :init :vertices (list (float-vector -11.5 38.5 -23.0) (float-vector -11.5 0.0 -23.0) (float-vector -8.13173 -8.13173 -23.0) (float-vector 0.0 -11.5 -23.0) (float-vector 8.13173 -8.13173 -23.0) (float-vector 11.5 0.0 -23.0) (float-vector 11.5 38.5 -23.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.3 47.0 13.0) (float-vector -11.3 73.0 13.0) (float-vector -11.3 73.0 -31.7) (float-vector -11.3 47.0 -31.7)))
         (instance face :init :vertices (list (float-vector -11.3 73.0 -31.7) (float-vector 11.3 73.0 -31.7) (float-vector 11.3 47.0 -31.7) (float-vector -11.3 47.0 -31.7)))
         (instance face :init :vertices (list (float-vector 11.3 73.0 -31.7) (float-vector 11.3 73.0 13.0) (float-vector 11.3 47.0 13.0) (float-vector 11.3 47.0 -31.7)))
         (instance face :init :vertices (list (float-vector 11.3 47.0 13.0) (float-vector -11.3 47.0 13.0) (float-vector -11.3 47.0 -31.7) (float-vector 11.3 47.0 -31.7))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -8.92006 47.0 5.15) (float-vector -5.15 47.0 8.92006) (float-vector 2.842171e-14 47.0 10.3) (float-vector 5.15 47.0 8.92006) (float-vector 8.92006 47.0 5.15) (float-vector 10.3 47.0 -3.545238e-14) (float-vector 8.92006 47.0 -5.15) (float-vector 5.15 47.0 -8.92006) (float-vector 0.0 47.0 -10.3) (float-vector -5.15 47.0 -8.92006) (float-vector -8.92006 47.0 -5.15) (float-vector -10.3 47.0 -1.361430e-14)))
))
         (instance face :init :vertices (list (float-vector 11.3 73.0 13.0) (float-vector -11.3 73.0 13.0) (float-vector -11.3 47.0 13.0) (float-vector 11.3 47.0 13.0)))
         (instance face :init :vertices (list (float-vector -11.3 73.0 13.0) (float-vector 11.3 73.0 13.0) (float-vector 11.3 73.0 -31.7) (float-vector -11.3 73.0 -31.7))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.15 73.0 8.92006) (float-vector -8.92006 73.0 5.15) (float-vector -10.3 73.0 -1.674851e-14) (float-vector -8.92006 73.0 -5.15) (float-vector -5.15 73.0 -8.92006) (float-vector 0.0 73.0 -10.3) (float-vector 5.15 73.0 -8.92006) (float-vector 8.92006 73.0 -5.15) (float-vector 10.3 73.0 -3.858659e-14) (float-vector 8.92006 73.0 5.15) (float-vector 5.15 73.0 8.92006) (float-vector 2.842171e-14 73.0 10.3)))
))
         (instance face :init :vertices (list (float-vector -10.3 45.0 -1.337320e-14) (float-vector -10.3 47.0 -1.361430e-14) (float-vector -8.92006 47.0 -5.15) (float-vector -8.92006 45.0 -5.15)))
         (instance face :init :vertices (list (float-vector -10.3 73.0 -1.674851e-14) (float-vector -10.3 75.0 -1.698960e-14) (float-vector -8.92006 75.0 -5.15) (float-vector -8.92006 73.0 -5.15)))
         (instance face :init :vertices (list (float-vector -5.15 47.0 -8.92006) (float-vector -5.15 45.0 -8.92006) (float-vector -8.92006 45.0 -5.15) (float-vector -8.92006 47.0 -5.15)))
         (instance face :init :vertices (list (float-vector -8.92006 75.0 -5.15) (float-vector -5.15 75.0 -8.92006) (float-vector -5.15 73.0 -8.92006) (float-vector -8.92006 73.0 -5.15)))
         (instance face :init :vertices (list (float-vector 0.0 47.0 -10.3) (float-vector 0.0 45.0 -10.3) (float-vector -5.15 45.0 -8.92006) (float-vector -5.15 47.0 -8.92006)))
         (instance face :init :vertices (list (float-vector -5.15 75.0 -8.92006) (float-vector 0.0 75.0 -10.3) (float-vector 0.0 73.0 -10.3) (float-vector -5.15 73.0 -8.92006)))
         (instance face :init :vertices (list (float-vector 5.15 47.0 -8.92006) (float-vector 5.15 45.0 -8.92006) (float-vector 0.0 45.0 -10.3) (float-vector 0.0 47.0 -10.3)))
         (instance face :init :vertices (list (float-vector 0.0 75.0 -10.3) (float-vector 5.15 75.0 -8.92006) (float-vector 5.15 73.0 -8.92006) (float-vector 0.0 73.0 -10.3)))
         (instance face :init :vertices (list (float-vector 8.92006 47.0 -5.15) (float-vector 8.92006 45.0 -5.15) (float-vector 5.15 45.0 -8.92006) (float-vector 5.15 47.0 -8.92006)))
         (instance face :init :vertices (list (float-vector 5.15 75.0 -8.92006) (float-vector 8.92006 75.0 -5.15) (float-vector 8.92006 73.0 -5.15) (float-vector 5.15 73.0 -8.92006)))
         (instance face :init :vertices (list (float-vector 10.3 47.0 -3.545238e-14) (float-vector 10.3 45.0 -3.521129e-14) (float-vector 8.92006 45.0 -5.15) (float-vector 8.92006 47.0 -5.15)))
         (instance face :init :vertices (list (float-vector 8.92006 75.0 -5.15) (float-vector 10.3 75.0 -3.882769e-14) (float-vector 10.3 73.0 -3.858659e-14) (float-vector 8.92006 73.0 -5.15)))
         (instance face :init :vertices (list (float-vector 8.92006 47.0 5.15) (float-vector 8.92006 45.0 5.15) (float-vector 10.3 45.0 -3.521129e-14) (float-vector 10.3 47.0 -3.545238e-14)))
         (instance face :init :vertices (list (float-vector 10.3 75.0 -3.882769e-14) (float-vector 8.92006 75.0 5.15) (float-vector 8.92006 73.0 5.15) (float-vector 10.3 73.0 -3.858659e-14)))
         (instance face :init :vertices (list (float-vector 5.15 47.0 8.92006) (float-vector 5.15 45.0 8.92006) (float-vector 8.92006 45.0 5.15) (float-vector 8.92006 47.0 5.15)))
         (instance face :init :vertices (list (float-vector 8.92006 75.0 5.15) (float-vector 5.15 75.0 8.92006) (float-vector 5.15 73.0 8.92006) (float-vector 8.92006 73.0 5.15)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 47.0 10.3) (float-vector 2.842171e-14 45.0 10.3) (float-vector 5.15 45.0 8.92006) (float-vector 5.15 47.0 8.92006)))
         (instance face :init :vertices (list (float-vector 5.15 75.0 8.92006) (float-vector 2.842171e-14 75.0 10.3) (float-vector 2.842171e-14 73.0 10.3) (float-vector 5.15 73.0 8.92006)))
         (instance face :init :vertices (list (float-vector -5.15 47.0 8.92006) (float-vector -5.15 45.0 8.92006) (float-vector 2.842171e-14 45.0 10.3) (float-vector 2.842171e-14 47.0 10.3)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 75.0 10.3) (float-vector -5.15 75.0 8.92006) (float-vector -5.15 73.0 8.92006) (float-vector 2.842171e-14 73.0 10.3)))
         (instance face :init :vertices (list (float-vector -8.92006 47.0 5.15) (float-vector -8.92006 45.0 5.15) (float-vector -5.15 45.0 8.92006) (float-vector -5.15 47.0 8.92006)))
         (instance face :init :vertices (list (float-vector -5.15 75.0 8.92006) (float-vector -8.92006 75.0 5.15) (float-vector -8.92006 73.0 5.15) (float-vector -5.15 73.0 8.92006)))
         (instance face :init :vertices (list (float-vector -8.92006 45.0 5.15) (float-vector -10.3 45.0 -1.337320e-14) (float-vector -8.92006 45.0 -5.15) (float-vector -5.15 45.0 -8.92006) (float-vector 0.0 45.0 -10.3) (float-vector 5.15 45.0 -8.92006) (float-vector 8.92006 45.0 -5.15) (float-vector 10.3 45.0 -3.521129e-14) (float-vector 8.92006 45.0 5.15) (float-vector 5.15 45.0 8.92006) (float-vector 2.842171e-14 45.0 10.3) (float-vector -5.15 45.0 8.92006)))
         (instance face :init :vertices (list (float-vector -10.3 45.0 -1.337320e-14) (float-vector -8.92006 45.0 5.15) (float-vector -8.92006 47.0 5.15) (float-vector -10.3 47.0 -1.361430e-14)))
         (instance face :init :vertices (list (float-vector -8.92006 75.0 5.15) (float-vector -10.3 75.0 -1.698960e-14) (float-vector -10.3 73.0 -1.674851e-14) (float-vector -8.92006 73.0 5.15)))
         (instance face :init :vertices (list (float-vector -10.3 75.0 -1.698960e-14) (float-vector -8.92006 75.0 5.15) (float-vector -5.15 75.0 8.92006) (float-vector 2.842171e-14 75.0 10.3) (float-vector 5.15 75.0 8.92006) (float-vector 8.92006 75.0 5.15) (float-vector 10.3 75.0 -3.882769e-14) (float-vector 8.92006 75.0 -5.15) (float-vector 5.15 75.0 -8.92006) (float-vector 0.0 75.0 -10.3) (float-vector -5.15 75.0 -8.92006) (float-vector -8.92006 75.0 -5.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-r :weight 59.2518 :centroid (float-vector 7.815970e-14 51.8163 -6.92328) :inertia-tensor #2f((34453.8 -2.643329e-12 -4.632801e-14) (-2.643329e-12 16834.8 3357.09) (-4.632801e-14 3357.09 22703.2))))

     ;; definition of :larm-elbow-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.0 1.421085e-14 -16.0) (float-vector 12.0 20.0 -16.0) (float-vector 12.0 20.0 16.0) (float-vector 12.0 1.421085e-14 16.0) (float-vector 12.0 1.421085e-14 14.5) (float-vector 12.0 18.5 14.5) (float-vector 12.0 18.5 -14.5) (float-vector 12.0 1.421085e-14 -14.5)))
         (instance face :init :vertices (list (float-vector -12.0 20.0 -16.0) (float-vector -12.0 20.0 16.0) (float-vector 12.0 20.0 16.0) (float-vector 12.0 20.0 -16.0)))
         (instance face :init :vertices (list (float-vector -12.0 0.0 -16.0) (float-vector -12.0 0.0 -14.5) (float-vector -12.0 18.5 -14.5) (float-vector -12.0 18.5 14.5) (float-vector -12.0 0.0 14.5) (float-vector -12.0 0.0 16.0) (float-vector -12.0 20.0 16.0) (float-vector -12.0 20.0 -16.0)))
         (instance face :init :vertices (list (float-vector -8.48528 -8.48528 16.0) (float-vector -12.0 0.0 16.0) (float-vector -12.0 0.0 14.5) (float-vector -8.48528 -8.48528 14.5)))
         (instance face :init :vertices (list (float-vector -8.48528 -8.48528 -16.0) (float-vector -8.48528 -8.48528 -14.5) (float-vector -12.0 0.0 -14.5) (float-vector -12.0 0.0 -16.0)))
         (instance face :init :vertices (list (float-vector 0.0 -12.0 16.0) (float-vector -8.48528 -8.48528 16.0) (float-vector -8.48528 -8.48528 14.5) (float-vector 0.0 -12.0 14.5)))
         (instance face :init :vertices (list (float-vector 0.0 -12.0 -16.0) (float-vector 0.0 -12.0 -14.5) (float-vector -8.48528 -8.48528 -14.5) (float-vector -8.48528 -8.48528 -16.0)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 16.0) (float-vector 0.0 -12.0 16.0) (float-vector 0.0 -12.0 14.5) (float-vector 8.48528 -8.48528 14.5)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 -16.0) (float-vector 8.48528 -8.48528 -14.5) (float-vector 0.0 -12.0 -14.5) (float-vector 0.0 -12.0 -16.0)))
         (instance face :init :vertices (list (float-vector 12.0 1.421085e-14 16.0) (float-vector 12.0 20.0 16.0) (float-vector -12.0 20.0 16.0) (float-vector -12.0 0.0 16.0) (float-vector -8.48528 -8.48528 16.0) (float-vector 0.0 -12.0 16.0) (float-vector 8.48528 -8.48528 16.0)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 -16.0) (float-vector 0.0 -12.0 -16.0) (float-vector -8.48528 -8.48528 -16.0) (float-vector -12.0 0.0 -16.0) (float-vector -12.0 20.0 -16.0) (float-vector 12.0 20.0 -16.0) (float-vector 12.0 1.421085e-14 -16.0)))
         (instance face :init :vertices (list (float-vector 8.48528 -8.48528 16.0) (float-vector 8.48528 -8.48528 14.5) (float-vector 12.0 1.421085e-14 14.5) (float-vector 12.0 1.421085e-14 16.0)))
         (instance face :init :vertices (list (float-vector 12.0 1.421085e-14 -16.0) (float-vector 12.0 1.421085e-14 -14.5) (float-vector 8.48528 -8.48528 -14.5) (float-vector 8.48528 -8.48528 -16.0)))
         (instance face :init :vertices (list (float-vector 12.0 18.5 14.5) (float-vector 12.0 1.421085e-14 14.5) (float-vector 8.48528 -8.48528 14.5) (float-vector 0.0 -12.0 14.5) (float-vector -8.48528 -8.48528 14.5) (float-vector -12.0 0.0 14.5) (float-vector -12.0 18.5 14.5)))
         (instance face :init :vertices (list (float-vector 12.0 18.5 -14.5) (float-vector 12.0 18.5 14.5) (float-vector -12.0 18.5 14.5) (float-vector -12.0 18.5 -14.5)))
         (instance face :init :vertices (list (float-vector -12.0 18.5 -14.5) (float-vector -12.0 0.0 -14.5) (float-vector -8.48528 -8.48528 -14.5) (float-vector 0.0 -12.0 -14.5) (float-vector 8.48528 -8.48528 -14.5) (float-vector 12.0 1.421085e-14 -14.5) (float-vector 12.0 18.5 -14.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -18.0 12.0 -37.0) (float-vector -18.0 12.0 -16.0) (float-vector 18.0 12.0 -16.0) (float-vector 18.0 12.0 -37.0) (float-vector 16.5 12.0 -37.0) (float-vector 16.5 12.0 -17.5) (float-vector -16.5 12.0 -17.5) (float-vector -16.5 12.0 -37.0)))
         (instance face :init :vertices (list (float-vector -18.0 -12.0 -16.0) (float-vector 18.0 -12.0 -16.0) (float-vector 18.0 12.0 -16.0) (float-vector -18.0 12.0 -16.0)))
         (instance face :init :vertices (list (float-vector -18.0 -12.0 -37.0) (float-vector -16.5 -12.0 -37.0) (float-vector -16.5 -12.0 -17.5) (float-vector 16.5 -12.0 -17.5) (float-vector 16.5 -12.0 -37.0) (float-vector 18.0 -12.0 -37.0) (float-vector 18.0 -12.0 -16.0) (float-vector -18.0 -12.0 -16.0)))
         (instance face :init :vertices (list (float-vector 18.0 -8.48528 -45.4853) (float-vector 18.0 -12.0 -37.0) (float-vector 16.5 -12.0 -37.0) (float-vector 16.5 -8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector -18.0 -8.48528 -45.4853) (float-vector -16.5 -8.48528 -45.4853) (float-vector -16.5 -12.0 -37.0) (float-vector -18.0 -12.0 -37.0)))
         (instance face :init :vertices (list (float-vector 18.0 0.0 -49.0) (float-vector 18.0 -8.48528 -45.4853) (float-vector 16.5 -8.48528 -45.4853) (float-vector 16.5 0.0 -49.0)))
         (instance face :init :vertices (list (float-vector -18.0 1.421085e-14 -49.0) (float-vector -16.5 1.421085e-14 -49.0) (float-vector -16.5 -8.48528 -45.4853) (float-vector -18.0 -8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector 18.0 8.48528 -45.4853) (float-vector 18.0 0.0 -49.0) (float-vector 16.5 0.0 -49.0) (float-vector 16.5 8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector -18.0 8.48528 -45.4853) (float-vector -16.5 8.48528 -45.4853) (float-vector -16.5 1.421085e-14 -49.0) (float-vector -18.0 1.421085e-14 -49.0)))
         (instance face :init :vertices (list (float-vector 18.0 12.0 -37.0) (float-vector 18.0 12.0 -16.0) (float-vector 18.0 -12.0 -16.0) (float-vector 18.0 -12.0 -37.0) (float-vector 18.0 -8.48528 -45.4853) (float-vector 18.0 0.0 -49.0) (float-vector 18.0 8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector -18.0 8.48528 -45.4853) (float-vector -18.0 1.421085e-14 -49.0) (float-vector -18.0 -8.48528 -45.4853) (float-vector -18.0 -12.0 -37.0) (float-vector -18.0 -12.0 -16.0) (float-vector -18.0 12.0 -16.0) (float-vector -18.0 12.0 -37.0)))
         (instance face :init :vertices (list (float-vector 18.0 8.48528 -45.4853) (float-vector 16.5 8.48528 -45.4853) (float-vector 16.5 12.0 -37.0) (float-vector 18.0 12.0 -37.0)))
         (instance face :init :vertices (list (float-vector -18.0 12.0 -37.0) (float-vector -16.5 12.0 -37.0) (float-vector -16.5 8.48528 -45.4853) (float-vector -18.0 8.48528 -45.4853)))
         (instance face :init :vertices (list (float-vector 16.5 12.0 -17.5) (float-vector 16.5 12.0 -37.0) (float-vector 16.5 8.48528 -45.4853) (float-vector 16.5 0.0 -49.0) (float-vector 16.5 -8.48528 -45.4853) (float-vector 16.5 -12.0 -37.0) (float-vector 16.5 -12.0 -17.5)))
         (instance face :init :vertices (list (float-vector -16.5 12.0 -17.5) (float-vector 16.5 12.0 -17.5) (float-vector 16.5 -12.0 -17.5) (float-vector -16.5 -12.0 -17.5)))
         (instance face :init :vertices (list (float-vector -16.5 -12.0 -17.5) (float-vector -16.5 -12.0 -37.0) (float-vector -16.5 -8.48528 -45.4853) (float-vector -16.5 1.421085e-14 -49.0) (float-vector -16.5 8.48528 -45.4853) (float-vector -16.5 12.0 -37.0) (float-vector -16.5 12.0 -17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-y :weight 17.2959 :centroid (float-vector 1.492140e-13 4.92471 -13.3505) :inertia-tensor #2f((7175.37 3.187351e-13 9.063772e-13) (3.187351e-13 7791.82 -1137.16) (9.063772e-13 -1137.16 4181.31))))

     ;; definition of :larm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.3 -13.0 13.0) (float-vector 11.3 -13.0 -13.0) (float-vector 11.3 31.7 -13.0) (float-vector 11.3 31.7 13.0)))
         (instance face :init :vertices (list (float-vector 11.3 31.7 -13.0) (float-vector -11.3 31.7 -13.0) (float-vector -11.3 31.7 13.0) (float-vector 11.3 31.7 13.0)))
         (instance face :init :vertices (list (float-vector -11.3 31.7 -13.0) (float-vector -11.3 -13.0 -13.0) (float-vector -11.3 -13.0 13.0) (float-vector -11.3 31.7 13.0)))
         (instance face :init :vertices (list (float-vector -11.3 -13.0 13.0) (float-vector 11.3 -13.0 13.0) (float-vector 11.3 31.7 13.0) (float-vector -11.3 31.7 13.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 8.92006 -5.15 13.0) (float-vector 5.15 -8.92006 13.0) (float-vector -1.421085e-14 -10.3 13.0) (float-vector -5.15 -8.92006 13.0) (float-vector -8.92006 -5.15 13.0) (float-vector -10.3 -2.842171e-14 13.0) (float-vector -8.92006 5.15 13.0) (float-vector -5.15 8.92006 13.0) (float-vector 1.421085e-14 10.3 13.0) (float-vector 5.15 8.92006 13.0) (float-vector 8.92006 5.15 13.0) (float-vector 10.3 -2.842171e-14 13.0)))
))
         (instance face :init :vertices (list (float-vector -11.3 -13.0 -13.0) (float-vector 11.3 -13.0 -13.0) (float-vector 11.3 -13.0 13.0) (float-vector -11.3 -13.0 13.0)))
         (instance face :init :vertices (list (float-vector 11.3 -13.0 -13.0) (float-vector -11.3 -13.0 -13.0) (float-vector -11.3 31.7 -13.0) (float-vector 11.3 31.7 -13.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.15 -8.92006 -13.0) (float-vector 8.92006 -5.15 -13.0) (float-vector 10.3 0.0 -13.0) (float-vector 8.92006 5.15 -13.0) (float-vector 5.15 8.92006 -13.0) (float-vector 2.842171e-14 10.3 -13.0) (float-vector -5.15 8.92006 -13.0) (float-vector -8.92006 5.15 -13.0) (float-vector -10.3 0.0 -13.0) (float-vector -8.92006 -5.15 -13.0) (float-vector -5.15 -8.92006 -13.0) (float-vector -1.421085e-14 -10.3 -13.0)))
))
         (instance face :init :vertices (list (float-vector 10.3 -2.842171e-14 15.0) (float-vector 10.3 -2.842171e-14 13.0) (float-vector 8.92006 5.15 13.0) (float-vector 8.92006 5.15 15.0)))
         (instance face :init :vertices (list (float-vector 10.3 0.0 -13.0) (float-vector 10.3 0.0 -15.0) (float-vector 8.92006 5.15 -15.0) (float-vector 8.92006 5.15 -13.0)))
         (instance face :init :vertices (list (float-vector 5.15 8.92006 13.0) (float-vector 5.15 8.92006 15.0) (float-vector 8.92006 5.15 15.0) (float-vector 8.92006 5.15 13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 5.15 -15.0) (float-vector 5.15 8.92006 -15.0) (float-vector 5.15 8.92006 -13.0) (float-vector 8.92006 5.15 -13.0)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 10.3 13.0) (float-vector 1.421085e-14 10.3 15.0) (float-vector 5.15 8.92006 15.0) (float-vector 5.15 8.92006 13.0)))
         (instance face :init :vertices (list (float-vector 5.15 8.92006 -15.0) (float-vector 2.842171e-14 10.3 -15.0) (float-vector 2.842171e-14 10.3 -13.0) (float-vector 5.15 8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector -5.15 8.92006 13.0) (float-vector -5.15 8.92006 15.0) (float-vector 1.421085e-14 10.3 15.0) (float-vector 1.421085e-14 10.3 13.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 10.3 -15.0) (float-vector -5.15 8.92006 -15.0) (float-vector -5.15 8.92006 -13.0) (float-vector 2.842171e-14 10.3 -13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 5.15 13.0) (float-vector -8.92006 5.15 15.0) (float-vector -5.15 8.92006 15.0) (float-vector -5.15 8.92006 13.0)))
         (instance face :init :vertices (list (float-vector -5.15 8.92006 -15.0) (float-vector -8.92006 5.15 -15.0) (float-vector -8.92006 5.15 -13.0) (float-vector -5.15 8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector -10.3 -2.842171e-14 13.0) (float-vector -10.3 -2.842171e-14 15.0) (float-vector -8.92006 5.15 15.0) (float-vector -8.92006 5.15 13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 5.15 -15.0) (float-vector -10.3 0.0 -15.0) (float-vector -10.3 0.0 -13.0) (float-vector -8.92006 5.15 -13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 -5.15 13.0) (float-vector -8.92006 -5.15 15.0) (float-vector -10.3 -2.842171e-14 15.0) (float-vector -10.3 -2.842171e-14 13.0)))
         (instance face :init :vertices (list (float-vector -10.3 0.0 -15.0) (float-vector -8.92006 -5.15 -15.0) (float-vector -8.92006 -5.15 -13.0) (float-vector -10.3 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector -5.15 -8.92006 13.0) (float-vector -5.15 -8.92006 15.0) (float-vector -8.92006 -5.15 15.0) (float-vector -8.92006 -5.15 13.0)))
         (instance face :init :vertices (list (float-vector -8.92006 -5.15 -15.0) (float-vector -5.15 -8.92006 -15.0) (float-vector -5.15 -8.92006 -13.0) (float-vector -8.92006 -5.15 -13.0)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 -10.3 13.0) (float-vector -1.421085e-14 -10.3 15.0) (float-vector -5.15 -8.92006 15.0) (float-vector -5.15 -8.92006 13.0)))
         (instance face :init :vertices (list (float-vector -5.15 -8.92006 -15.0) (float-vector -1.421085e-14 -10.3 -15.0) (float-vector -1.421085e-14 -10.3 -13.0) (float-vector -5.15 -8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector 5.15 -8.92006 13.0) (float-vector 5.15 -8.92006 15.0) (float-vector -1.421085e-14 -10.3 15.0) (float-vector -1.421085e-14 -10.3 13.0)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 -10.3 -15.0) (float-vector 5.15 -8.92006 -15.0) (float-vector 5.15 -8.92006 -13.0) (float-vector -1.421085e-14 -10.3 -13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 -5.15 13.0) (float-vector 8.92006 -5.15 15.0) (float-vector 5.15 -8.92006 15.0) (float-vector 5.15 -8.92006 13.0)))
         (instance face :init :vertices (list (float-vector 5.15 -8.92006 -15.0) (float-vector 8.92006 -5.15 -15.0) (float-vector 8.92006 -5.15 -13.0) (float-vector 5.15 -8.92006 -13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 -5.15 15.0) (float-vector 10.3 -2.842171e-14 15.0) (float-vector 8.92006 5.15 15.0) (float-vector 5.15 8.92006 15.0) (float-vector 1.421085e-14 10.3 15.0) (float-vector -5.15 8.92006 15.0) (float-vector -8.92006 5.15 15.0) (float-vector -10.3 -2.842171e-14 15.0) (float-vector -8.92006 -5.15 15.0) (float-vector -5.15 -8.92006 15.0) (float-vector -1.421085e-14 -10.3 15.0) (float-vector 5.15 -8.92006 15.0)))
         (instance face :init :vertices (list (float-vector 10.3 -2.842171e-14 15.0) (float-vector 8.92006 -5.15 15.0) (float-vector 8.92006 -5.15 13.0) (float-vector 10.3 -2.842171e-14 13.0)))
         (instance face :init :vertices (list (float-vector 8.92006 -5.15 -15.0) (float-vector 10.3 0.0 -15.0) (float-vector 10.3 0.0 -13.0) (float-vector 8.92006 -5.15 -13.0)))
         (instance face :init :vertices (list (float-vector 10.3 0.0 -15.0) (float-vector 8.92006 -5.15 -15.0) (float-vector 5.15 -8.92006 -15.0) (float-vector -1.421085e-14 -10.3 -15.0) (float-vector -5.15 -8.92006 -15.0) (float-vector -8.92006 -5.15 -15.0) (float-vector -10.3 0.0 -15.0) (float-vector -8.92006 5.15 -15.0) (float-vector -5.15 8.92006 -15.0) (float-vector 2.842171e-14 10.3 -15.0) (float-vector 5.15 8.92006 -15.0) (float-vector 8.92006 5.15 -15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.0 31.7 11.0) (float-vector -11.0 31.7 11.0) (float-vector -11.0 31.7 -11.0) (float-vector 11.0 31.7 -11.0)))
         (instance face :init :vertices (list (float-vector -11.0 121.7 11.0) (float-vector 11.0 121.7 11.0) (float-vector 11.0 121.7 -11.0) (float-vector -11.0 121.7 -11.0)))
         (instance face :init :vertices (list (float-vector 11.0 31.7 11.0) (float-vector 11.0 121.7 11.0) (float-vector -11.0 121.7 11.0) (float-vector -11.0 31.7 11.0)))
         (instance face :init :vertices (list (float-vector 11.0 31.7 -11.0) (float-vector 11.0 121.7 -11.0) (float-vector 11.0 121.7 11.0) (float-vector 11.0 31.7 11.0)))
         (instance face :init :vertices (list (float-vector -11.0 31.7 -11.0) (float-vector -11.0 121.7 -11.0) (float-vector 11.0 121.7 -11.0) (float-vector 11.0 31.7 -11.0)))
         (instance face :init :vertices (list (float-vector -11.0 31.7 11.0) (float-vector -11.0 121.7 11.0) (float-vector -11.0 121.7 -11.0) (float-vector -11.0 31.7 -11.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray90)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-p :weight 66 :centroid (float-vector -1.621469e-15 29.4578 1.421085e-14) :inertia-tensor #2f((29657.8 6.302449e-13 6.748636e-28) (6.302449e-13 4549.25 -1.511502e-11) (6.748636e-28 -1.511502e-11 29024.4))))

     ;; definition of :head-neck-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.5 0.0 -21.0) (float-vector 12.5 20.0 -21.0) (float-vector 12.5 20.0 21.0) (float-vector 12.5 0.0 21.0) (float-vector 12.5 0.0 19.5) (float-vector 12.5 18.5 19.5) (float-vector 12.5 18.5 -19.5) (float-vector 12.5 0.0 -19.5)))
         (instance face :init :vertices (list (float-vector -12.5 20.0 -21.0) (float-vector -12.5 20.0 21.0) (float-vector 12.5 20.0 21.0) (float-vector 12.5 20.0 -21.0)))
         (instance face :init :vertices (list (float-vector -12.5 0.0 -21.0) (float-vector -12.5 0.0 -19.5) (float-vector -12.5 18.5 -19.5) (float-vector -12.5 18.5 19.5) (float-vector -12.5 0.0 19.5) (float-vector -12.5 0.0 21.0) (float-vector -12.5 20.0 21.0) (float-vector -12.5 20.0 -21.0)))
         (instance face :init :vertices (list (float-vector -8.83883 -8.83883 21.0) (float-vector -12.5 0.0 21.0) (float-vector -12.5 0.0 19.5) (float-vector -8.83883 -8.83883 19.5)))
         (instance face :init :vertices (list (float-vector -8.83883 -8.83883 -21.0) (float-vector -8.83883 -8.83883 -19.5) (float-vector -12.5 0.0 -19.5) (float-vector -12.5 0.0 -21.0)))
         (instance face :init :vertices (list (float-vector 2.524355e-29 -12.5 21.0) (float-vector -8.83883 -8.83883 21.0) (float-vector -8.83883 -8.83883 19.5) (float-vector 2.524355e-29 -12.5 19.5)))
         (instance face :init :vertices (list (float-vector 2.524355e-29 -12.5 -21.0) (float-vector 2.524355e-29 -12.5 -19.5) (float-vector -8.83883 -8.83883 -19.5) (float-vector -8.83883 -8.83883 -21.0)))
         (instance face :init :vertices (list (float-vector 8.83883 -8.83883 21.0) (float-vector 2.524355e-29 -12.5 21.0) (float-vector 2.524355e-29 -12.5 19.5) (float-vector 8.83883 -8.83883 19.5)))
         (instance face :init :vertices (list (float-vector 8.83883 -8.83883 -21.0) (float-vector 8.83883 -8.83883 -19.5) (float-vector 2.524355e-29 -12.5 -19.5) (float-vector 2.524355e-29 -12.5 -21.0)))
         (instance face :init :vertices (list (float-vector 12.5 0.0 21.0) (float-vector 12.5 20.0 21.0) (float-vector -12.5 20.0 21.0) (float-vector -12.5 0.0 21.0) (float-vector -8.83883 -8.83883 21.0) (float-vector 2.524355e-29 -12.5 21.0) (float-vector 8.83883 -8.83883 21.0)))
         (instance face :init :vertices (list (float-vector 8.83883 -8.83883 -21.0) (float-vector 2.524355e-29 -12.5 -21.0) (float-vector -8.83883 -8.83883 -21.0) (float-vector -12.5 0.0 -21.0) (float-vector -12.5 20.0 -21.0) (float-vector 12.5 20.0 -21.0) (float-vector 12.5 0.0 -21.0)))
         (instance face :init :vertices (list (float-vector 8.83883 -8.83883 21.0) (float-vector 8.83883 -8.83883 19.5) (float-vector 12.5 0.0 19.5) (float-vector 12.5 0.0 21.0)))
         (instance face :init :vertices (list (float-vector 12.5 0.0 -21.0) (float-vector 12.5 0.0 -19.5) (float-vector 8.83883 -8.83883 -19.5) (float-vector 8.83883 -8.83883 -21.0)))
         (instance face :init :vertices (list (float-vector 12.5 18.5 19.5) (float-vector 12.5 0.0 19.5) (float-vector 8.83883 -8.83883 19.5) (float-vector 2.524355e-29 -12.5 19.5) (float-vector -8.83883 -8.83883 19.5) (float-vector -12.5 0.0 19.5) (float-vector -12.5 18.5 19.5)))
         (instance face :init :vertices (list (float-vector 12.5 18.5 -19.5) (float-vector 12.5 18.5 19.5) (float-vector -12.5 18.5 19.5) (float-vector -12.5 18.5 -19.5)))
         (instance face :init :vertices (list (float-vector -12.5 18.5 -19.5) (float-vector -12.5 0.0 -19.5) (float-vector -8.83883 -8.83883 -19.5) (float-vector 2.524355e-29 -12.5 -19.5) (float-vector 8.83883 -8.83883 -19.5) (float-vector 12.5 0.0 -19.5) (float-vector 12.5 18.5 -19.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -19.5 39.0 1.0) (float-vector -18.5 39.0 1.0) (float-vector -18.5 39.0 -1.0) (float-vector -19.5 39.0 -1.0)))
         (instance face :init :vertices (list (float-vector -19.5 41.0 1.0) (float-vector -18.5 41.0 1.0) (float-vector -18.5 39.0 1.0) (float-vector -19.5 39.0 1.0)))
         (instance face :init :vertices (list (float-vector -19.5 41.0 -1.0) (float-vector -18.5 41.0 -1.0) (float-vector -18.5 41.0 1.0) (float-vector -19.5 41.0 1.0)))
         (instance face :init :vertices (list (float-vector -18.5 41.0 -1.0) (float-vector -18.5 39.0 -1.0) (float-vector -18.5 39.0 1.0) (float-vector -18.5 41.0 1.0)))
         (instance face :init :vertices (list (float-vector -18.5 39.0 -1.0) (float-vector -18.5 41.0 -1.0) (float-vector -19.5 41.0 -1.0) (float-vector -19.5 39.0 -1.0)))
         (instance face :init :vertices (list (float-vector -18.5 22.5 -17.5) (float-vector -18.5 22.5 17.5) (float-vector -18.5 57.5 17.5) (float-vector -18.5 57.5 -17.5)))
         (instance face :init :vertices (list (float-vector -18.5 22.5 -17.5) (float-vector 33.5 22.5 -17.5) (float-vector 33.5 22.5 17.5) (float-vector -18.5 22.5 17.5)))
         (instance face :init :vertices (list (float-vector 33.5 22.5 -17.5) (float-vector 33.5 57.5 -17.5) (float-vector 33.5 57.5 17.5) (float-vector 33.5 22.5 17.5)))
         (instance face :init :vertices (list (float-vector 33.5 57.5 17.5) (float-vector -18.5 57.5 17.5) (float-vector -18.5 22.5 17.5) (float-vector 33.5 22.5 17.5)))
         (instance face :init :vertices (list (float-vector 33.5 57.5 -17.5) (float-vector -18.5 57.5 -17.5) (float-vector -18.5 57.5 17.5) (float-vector 33.5 57.5 17.5)))
         (instance face :init :vertices (list (float-vector -18.5 57.5 -17.5) (float-vector 33.5 57.5 -17.5) (float-vector 33.5 22.5 -17.5) (float-vector -18.5 22.5 -17.5)))
         (instance face :init :vertices (list (float-vector -46.0 40.0 -15.0) (float-vector -19.5 40.0 -15.0) (float-vector -19.5 32.5 -12.9904) (float-vector -46.0 32.5 -12.9904)))
         (instance face :init :vertices (list (float-vector -19.5 32.5 -12.9904) (float-vector -19.5 27.0096 -7.5) (float-vector -46.0 27.0096 -7.5) (float-vector -46.0 32.5 -12.9904)))
         (instance face :init :vertices (list (float-vector -19.5 27.0096 -7.5) (float-vector -19.5 25.0 -1.050975e-14) (float-vector -46.0 25.0 -1.467050e-14) (float-vector -46.0 27.0096 -7.5)))
         (instance face :init :vertices (list (float-vector -19.5 25.0 -1.050975e-14) (float-vector -19.5 27.0096 7.5) (float-vector -46.0 27.0096 7.5) (float-vector -46.0 25.0 -1.467050e-14)))
         (instance face :init :vertices (list (float-vector -19.5 27.0096 7.5) (float-vector -19.5 32.5 12.9904) (float-vector -46.0 32.5 12.9904) (float-vector -46.0 27.0096 7.5)))
         (instance face :init :vertices (list (float-vector -19.5 32.5 12.9904) (float-vector -19.5 40.0 15.0) (float-vector -46.0 40.0 15.0) (float-vector -46.0 32.5 12.9904)))
         (instance face :init :vertices (list (float-vector -19.5 40.0 15.0) (float-vector -19.5 47.5 12.9904) (float-vector -46.0 47.5 12.9904) (float-vector -46.0 40.0 15.0)))
         (instance face :init :vertices (list (float-vector -19.5 47.5 12.9904) (float-vector -19.5 52.9904 7.5) (float-vector -46.0 52.9904 7.5) (float-vector -46.0 47.5 12.9904)))
         (instance face :init :vertices (list (float-vector -19.5 52.9904 7.5) (float-vector -19.5 55.0 2.290796e-14) (float-vector -46.0 55.0 1.874721e-14) (float-vector -46.0 52.9904 7.5)))
         (instance face :init :vertices (list (float-vector -19.5 55.0 2.290796e-14) (float-vector -19.5 52.9904 -7.5) (float-vector -46.0 52.9904 -7.5) (float-vector -46.0 55.0 1.874721e-14)))
         (instance face :init :vertices (list (float-vector -19.5 52.9904 -7.5) (float-vector -19.5 47.5 -12.9904) (float-vector -46.0 47.5 -12.9904) (float-vector -46.0 52.9904 -7.5)))
         (instance face :init :vertices (list (float-vector -46.0 47.5 -12.9904) (float-vector -46.0 40.0 -15.0) (float-vector -46.0 32.5 -12.9904) (float-vector -46.0 27.0096 -7.5) (float-vector -46.0 25.0 -1.467050e-14) (float-vector -46.0 27.0096 7.5) (float-vector -46.0 32.5 12.9904) (float-vector -46.0 40.0 15.0) (float-vector -46.0 47.5 12.9904) (float-vector -46.0 52.9904 7.5) (float-vector -46.0 55.0 1.874721e-14) (float-vector -46.0 52.9904 -7.5)))
         (instance face :init :vertices (list (float-vector -19.5 47.5 -12.9904) (float-vector -19.5 40.0 -15.0) (float-vector -46.0 40.0 -15.0) (float-vector -46.0 47.5 -12.9904)))
         (instance face :init :vertices (list (float-vector -19.5 39.0 -1.0) (float-vector -19.5 41.0 -1.0) (float-vector -19.5 41.0 1.0) (float-vector -19.5 39.0 1.0)))
         (instance face :init :vertices (list (float-vector -19.5 40.0 -15.0) (float-vector -19.5 47.5 -12.9904) (float-vector -19.5 52.9904 -7.5) (float-vector -19.5 55.0 2.290796e-14) (float-vector -19.5 52.9904 7.5) (float-vector -19.5 47.5 12.9904) (float-vector -19.5 40.0 15.0) (float-vector -19.5 32.5 12.9904) (float-vector -19.5 27.0096 7.5) (float-vector -19.5 25.0 -1.050975e-14) (float-vector -19.5 27.0096 -7.5) (float-vector -19.5 32.5 -12.9904)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-p :weight 179.789 :centroid (float-vector -1.2516 38.4202 6.107175e-15) :inertia-tensor #2f((43716.0 -6895.87 3.972780e-11) (-6895.87 2.163707e+05 5.104994e-12) (3.972780e-11 5.104994e-12 2.223357e+05))))

     ;; definition of :torso-waist-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.0 73.0 55.0) (float-vector -60.0 33.0 55.0) (float-vector -20.0 33.0 55.0) (float-vector -20.0 73.0 55.0)))
         (instance face :init :vertices (list (float-vector -20.0 33.0 55.0) (float-vector -20.0 33.0 35.0) (float-vector -20.0 73.0 35.0) (float-vector -20.0 73.0 55.0)))
         (instance face :init :vertices (list (float-vector -20.0 33.0 35.0) (float-vector -60.0 33.0 35.0) (float-vector -60.0 73.0 35.0) (float-vector -20.0 73.0 35.0)))
         (instance face :init :vertices (list (float-vector -60.0 73.0 35.0) (float-vector -60.0 73.0 55.0) (float-vector -20.0 73.0 55.0) (float-vector -20.0 73.0 35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -54.5 73.0 52.7942) (float-vector -57.7942 73.0 49.5) (float-vector -59.0 73.0 45.0) (float-vector -57.7942 73.0 40.5) (float-vector -54.5 73.0 37.2058) (float-vector -50.0 73.0 36.0) (float-vector -45.5 73.0 37.2058) (float-vector -42.2058 73.0 40.5) (float-vector -41.0 73.0 45.0) (float-vector -42.2058 73.0 49.5) (float-vector -45.5 73.0 52.7942) (float-vector -50.0 73.0 54.0)))
))
         (instance face :init :vertices (list (float-vector -60.0 33.0 35.0) (float-vector -60.0 33.0 55.0) (float-vector -60.0 73.0 55.0) (float-vector -60.0 73.0 35.0)))
         (instance face :init :vertices (list (float-vector -60.0 33.0 55.0) (float-vector -60.0 33.0 35.0) (float-vector -20.0 33.0 35.0) (float-vector -20.0 33.0 55.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -57.7942 33.0 49.5) (float-vector -54.5 33.0 52.7942) (float-vector -50.0 33.0 54.0) (float-vector -45.5 33.0 52.7942) (float-vector -42.2058 33.0 49.5) (float-vector -41.0 33.0 45.0) (float-vector -42.2058 33.0 40.5) (float-vector -45.5 33.0 37.2058) (float-vector -50.0 33.0 36.0) (float-vector -54.5 33.0 37.2058) (float-vector -57.7942 33.0 40.5) (float-vector -59.0 33.0 45.0)))
))
         (instance face :init :vertices (list (float-vector -50.0 75.0 54.0) (float-vector -50.0 73.0 54.0) (float-vector -45.5 73.0 52.7942) (float-vector -45.5 75.0 52.7942)))
         (instance face :init :vertices (list (float-vector -50.0 33.0 54.0) (float-vector -50.0 31.0 54.0) (float-vector -45.5 31.0 52.7942) (float-vector -45.5 33.0 52.7942)))
         (instance face :init :vertices (list (float-vector -42.2058 73.0 49.5) (float-vector -42.2058 75.0 49.5) (float-vector -45.5 75.0 52.7942) (float-vector -45.5 73.0 52.7942)))
         (instance face :init :vertices (list (float-vector -45.5 31.0 52.7942) (float-vector -42.2058 31.0 49.5) (float-vector -42.2058 33.0 49.5) (float-vector -45.5 33.0 52.7942)))
         (instance face :init :vertices (list (float-vector -41.0 73.0 45.0) (float-vector -41.0 75.0 45.0) (float-vector -42.2058 75.0 49.5) (float-vector -42.2058 73.0 49.5)))
         (instance face :init :vertices (list (float-vector -42.2058 31.0 49.5) (float-vector -41.0 31.0 45.0) (float-vector -41.0 33.0 45.0) (float-vector -42.2058 33.0 49.5)))
         (instance face :init :vertices (list (float-vector -42.2058 73.0 40.5) (float-vector -42.2058 75.0 40.5) (float-vector -41.0 75.0 45.0) (float-vector -41.0 73.0 45.0)))
         (instance face :init :vertices (list (float-vector -41.0 31.0 45.0) (float-vector -42.2058 31.0 40.5) (float-vector -42.2058 33.0 40.5) (float-vector -41.0 33.0 45.0)))
         (instance face :init :vertices (list (float-vector -45.5 73.0 37.2058) (float-vector -45.5 75.0 37.2058) (float-vector -42.2058 75.0 40.5) (float-vector -42.2058 73.0 40.5)))
         (instance face :init :vertices (list (float-vector -42.2058 31.0 40.5) (float-vector -45.5 31.0 37.2058) (float-vector -45.5 33.0 37.2058) (float-vector -42.2058 33.0 40.5)))
         (instance face :init :vertices (list (float-vector -50.0 73.0 36.0) (float-vector -50.0 75.0 36.0) (float-vector -45.5 75.0 37.2058) (float-vector -45.5 73.0 37.2058)))
         (instance face :init :vertices (list (float-vector -45.5 31.0 37.2058) (float-vector -50.0 31.0 36.0) (float-vector -50.0 33.0 36.0) (float-vector -45.5 33.0 37.2058)))
         (instance face :init :vertices (list (float-vector -54.5 73.0 37.2058) (float-vector -54.5 75.0 37.2058) (float-vector -50.0 75.0 36.0) (float-vector -50.0 73.0 36.0)))
         (instance face :init :vertices (list (float-vector -50.0 31.0 36.0) (float-vector -54.5 31.0 37.2058) (float-vector -54.5 33.0 37.2058) (float-vector -50.0 33.0 36.0)))
         (instance face :init :vertices (list (float-vector -57.7942 73.0 40.5) (float-vector -57.7942 75.0 40.5) (float-vector -54.5 75.0 37.2058) (float-vector -54.5 73.0 37.2058)))
         (instance face :init :vertices (list (float-vector -54.5 31.0 37.2058) (float-vector -57.7942 31.0 40.5) (float-vector -57.7942 33.0 40.5) (float-vector -54.5 33.0 37.2058)))
         (instance face :init :vertices (list (float-vector -59.0 73.0 45.0) (float-vector -59.0 75.0 45.0) (float-vector -57.7942 75.0 40.5) (float-vector -57.7942 73.0 40.5)))
         (instance face :init :vertices (list (float-vector -57.7942 31.0 40.5) (float-vector -59.0 31.0 45.0) (float-vector -59.0 33.0 45.0) (float-vector -57.7942 33.0 40.5)))
         (instance face :init :vertices (list (float-vector -57.7942 73.0 49.5) (float-vector -57.7942 75.0 49.5) (float-vector -59.0 75.0 45.0) (float-vector -59.0 73.0 45.0)))
         (instance face :init :vertices (list (float-vector -59.0 31.0 45.0) (float-vector -57.7942 31.0 49.5) (float-vector -57.7942 33.0 49.5) (float-vector -59.0 33.0 45.0)))
         (instance face :init :vertices (list (float-vector -54.5 73.0 52.7942) (float-vector -54.5 75.0 52.7942) (float-vector -57.7942 75.0 49.5) (float-vector -57.7942 73.0 49.5)))
         (instance face :init :vertices (list (float-vector -57.7942 31.0 49.5) (float-vector -54.5 31.0 52.7942) (float-vector -54.5 33.0 52.7942) (float-vector -57.7942 33.0 49.5)))
         (instance face :init :vertices (list (float-vector -54.5 75.0 52.7942) (float-vector -50.0 75.0 54.0) (float-vector -45.5 75.0 52.7942) (float-vector -42.2058 75.0 49.5) (float-vector -41.0 75.0 45.0) (float-vector -42.2058 75.0 40.5) (float-vector -45.5 75.0 37.2058) (float-vector -50.0 75.0 36.0) (float-vector -54.5 75.0 37.2058) (float-vector -57.7942 75.0 40.5) (float-vector -59.0 75.0 45.0) (float-vector -57.7942 75.0 49.5)))
         (instance face :init :vertices (list (float-vector -50.0 75.0 54.0) (float-vector -54.5 75.0 52.7942) (float-vector -54.5 73.0 52.7942) (float-vector -50.0 73.0 54.0)))
         (instance face :init :vertices (list (float-vector -54.5 31.0 52.7942) (float-vector -50.0 31.0 54.0) (float-vector -50.0 33.0 54.0) (float-vector -54.5 33.0 52.7942)))
         (instance face :init :vertices (list (float-vector -50.0 31.0 54.0) (float-vector -54.5 31.0 52.7942) (float-vector -57.7942 31.0 49.5) (float-vector -59.0 31.0 45.0) (float-vector -57.7942 31.0 40.5) (float-vector -54.5 31.0 37.2058) (float-vector -50.0 31.0 36.0) (float-vector -45.5 31.0 37.2058) (float-vector -42.2058 31.0 40.5) (float-vector -41.0 31.0 45.0) (float-vector -42.2058 31.0 49.5) (float-vector -45.5 31.0 52.7942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.0 73.0 -35.0) (float-vector -60.0 33.0 -35.0) (float-vector -20.0 33.0 -35.0) (float-vector -20.0 73.0 -35.0)))
         (instance face :init :vertices (list (float-vector -20.0 33.0 -35.0) (float-vector -20.0 33.0 -55.0) (float-vector -20.0 73.0 -55.0) (float-vector -20.0 73.0 -35.0)))
         (instance face :init :vertices (list (float-vector -20.0 33.0 -55.0) (float-vector -60.0 33.0 -55.0) (float-vector -60.0 73.0 -55.0) (float-vector -20.0 73.0 -55.0)))
         (instance face :init :vertices (list (float-vector -60.0 73.0 -55.0) (float-vector -60.0 73.0 -35.0) (float-vector -20.0 73.0 -35.0) (float-vector -20.0 73.0 -55.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -54.5 73.0 -37.2058) (float-vector -57.7942 73.0 -40.5) (float-vector -59.0 73.0 -45.0) (float-vector -57.7942 73.0 -49.5) (float-vector -54.5 73.0 -52.7942) (float-vector -50.0 73.0 -54.0) (float-vector -45.5 73.0 -52.7942) (float-vector -42.2058 73.0 -49.5) (float-vector -41.0 73.0 -45.0) (float-vector -42.2058 73.0 -40.5) (float-vector -45.5 73.0 -37.2058) (float-vector -50.0 73.0 -36.0)))
))
         (instance face :init :vertices (list (float-vector -60.0 33.0 -55.0) (float-vector -60.0 33.0 -35.0) (float-vector -60.0 73.0 -35.0) (float-vector -60.0 73.0 -55.0)))
         (instance face :init :vertices (list (float-vector -60.0 33.0 -35.0) (float-vector -60.0 33.0 -55.0) (float-vector -20.0 33.0 -55.0) (float-vector -20.0 33.0 -35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -57.7942 33.0 -40.5) (float-vector -54.5 33.0 -37.2058) (float-vector -50.0 33.0 -36.0) (float-vector -45.5 33.0 -37.2058) (float-vector -42.2058 33.0 -40.5) (float-vector -41.0 33.0 -45.0) (float-vector -42.2058 33.0 -49.5) (float-vector -45.5 33.0 -52.7942) (float-vector -50.0 33.0 -54.0) (float-vector -54.5 33.0 -52.7942) (float-vector -57.7942 33.0 -49.5) (float-vector -59.0 33.0 -45.0)))
))
         (instance face :init :vertices (list (float-vector -50.0 75.0 -36.0) (float-vector -50.0 73.0 -36.0) (float-vector -45.5 73.0 -37.2058) (float-vector -45.5 75.0 -37.2058)))
         (instance face :init :vertices (list (float-vector -50.0 33.0 -36.0) (float-vector -50.0 31.0 -36.0) (float-vector -45.5 31.0 -37.2058) (float-vector -45.5 33.0 -37.2058)))
         (instance face :init :vertices (list (float-vector -42.2058 73.0 -40.5) (float-vector -42.2058 75.0 -40.5) (float-vector -45.5 75.0 -37.2058) (float-vector -45.5 73.0 -37.2058)))
         (instance face :init :vertices (list (float-vector -45.5 31.0 -37.2058) (float-vector -42.2058 31.0 -40.5) (float-vector -42.2058 33.0 -40.5) (float-vector -45.5 33.0 -37.2058)))
         (instance face :init :vertices (list (float-vector -41.0 73.0 -45.0) (float-vector -41.0 75.0 -45.0) (float-vector -42.2058 75.0 -40.5) (float-vector -42.2058 73.0 -40.5)))
         (instance face :init :vertices (list (float-vector -42.2058 31.0 -40.5) (float-vector -41.0 31.0 -45.0) (float-vector -41.0 33.0 -45.0) (float-vector -42.2058 33.0 -40.5)))
         (instance face :init :vertices (list (float-vector -42.2058 73.0 -49.5) (float-vector -42.2058 75.0 -49.5) (float-vector -41.0 75.0 -45.0) (float-vector -41.0 73.0 -45.0)))
         (instance face :init :vertices (list (float-vector -41.0 31.0 -45.0) (float-vector -42.2058 31.0 -49.5) (float-vector -42.2058 33.0 -49.5) (float-vector -41.0 33.0 -45.0)))
         (instance face :init :vertices (list (float-vector -45.5 73.0 -52.7942) (float-vector -45.5 75.0 -52.7942) (float-vector -42.2058 75.0 -49.5) (float-vector -42.2058 73.0 -49.5)))
         (instance face :init :vertices (list (float-vector -42.2058 31.0 -49.5) (float-vector -45.5 31.0 -52.7942) (float-vector -45.5 33.0 -52.7942) (float-vector -42.2058 33.0 -49.5)))
         (instance face :init :vertices (list (float-vector -50.0 73.0 -54.0) (float-vector -50.0 75.0 -54.0) (float-vector -45.5 75.0 -52.7942) (float-vector -45.5 73.0 -52.7942)))
         (instance face :init :vertices (list (float-vector -45.5 31.0 -52.7942) (float-vector -50.0 31.0 -54.0) (float-vector -50.0 33.0 -54.0) (float-vector -45.5 33.0 -52.7942)))
         (instance face :init :vertices (list (float-vector -54.5 73.0 -52.7942) (float-vector -54.5 75.0 -52.7942) (float-vector -50.0 75.0 -54.0) (float-vector -50.0 73.0 -54.0)))
         (instance face :init :vertices (list (float-vector -50.0 31.0 -54.0) (float-vector -54.5 31.0 -52.7942) (float-vector -54.5 33.0 -52.7942) (float-vector -50.0 33.0 -54.0)))
         (instance face :init :vertices (list (float-vector -57.7942 73.0 -49.5) (float-vector -57.7942 75.0 -49.5) (float-vector -54.5 75.0 -52.7942) (float-vector -54.5 73.0 -52.7942)))
         (instance face :init :vertices (list (float-vector -54.5 31.0 -52.7942) (float-vector -57.7942 31.0 -49.5) (float-vector -57.7942 33.0 -49.5) (float-vector -54.5 33.0 -52.7942)))
         (instance face :init :vertices (list (float-vector -59.0 73.0 -45.0) (float-vector -59.0 75.0 -45.0) (float-vector -57.7942 75.0 -49.5) (float-vector -57.7942 73.0 -49.5)))
         (instance face :init :vertices (list (float-vector -57.7942 31.0 -49.5) (float-vector -59.0 31.0 -45.0) (float-vector -59.0 33.0 -45.0) (float-vector -57.7942 33.0 -49.5)))
         (instance face :init :vertices (list (float-vector -57.7942 73.0 -40.5) (float-vector -57.7942 75.0 -40.5) (float-vector -59.0 75.0 -45.0) (float-vector -59.0 73.0 -45.0)))
         (instance face :init :vertices (list (float-vector -59.0 31.0 -45.0) (float-vector -57.7942 31.0 -40.5) (float-vector -57.7942 33.0 -40.5) (float-vector -59.0 33.0 -45.0)))
         (instance face :init :vertices (list (float-vector -54.5 73.0 -37.2058) (float-vector -54.5 75.0 -37.2058) (float-vector -57.7942 75.0 -40.5) (float-vector -57.7942 73.0 -40.5)))
         (instance face :init :vertices (list (float-vector -57.7942 31.0 -40.5) (float-vector -54.5 31.0 -37.2058) (float-vector -54.5 33.0 -37.2058) (float-vector -57.7942 33.0 -40.5)))
         (instance face :init :vertices (list (float-vector -54.5 75.0 -37.2058) (float-vector -50.0 75.0 -36.0) (float-vector -45.5 75.0 -37.2058) (float-vector -42.2058 75.0 -40.5) (float-vector -41.0 75.0 -45.0) (float-vector -42.2058 75.0 -49.5) (float-vector -45.5 75.0 -52.7942) (float-vector -50.0 75.0 -54.0) (float-vector -54.5 75.0 -52.7942) (float-vector -57.7942 75.0 -49.5) (float-vector -59.0 75.0 -45.0) (float-vector -57.7942 75.0 -40.5)))
         (instance face :init :vertices (list (float-vector -50.0 75.0 -36.0) (float-vector -54.5 75.0 -37.2058) (float-vector -54.5 73.0 -37.2058) (float-vector -50.0 73.0 -36.0)))
         (instance face :init :vertices (list (float-vector -54.5 31.0 -37.2058) (float-vector -50.0 31.0 -36.0) (float-vector -50.0 33.0 -36.0) (float-vector -54.5 33.0 -37.2058)))
         (instance face :init :vertices (list (float-vector -50.0 31.0 -36.0) (float-vector -54.5 31.0 -37.2058) (float-vector -57.7942 31.0 -40.5) (float-vector -59.0 31.0 -45.0) (float-vector -57.7942 31.0 -49.5) (float-vector -54.5 31.0 -52.7942) (float-vector -50.0 31.0 -54.0) (float-vector -45.5 31.0 -52.7942) (float-vector -42.2058 31.0 -49.5) (float-vector -41.0 31.0 -45.0) (float-vector -42.2058 31.0 -40.5) (float-vector -45.5 31.0 -37.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 -14.0 24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 45.0 -24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 45.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector -14.4 45.0 24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 45.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 -14.0 24.9) (float-vector -14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 24.9) (float-vector 14.4 -14.0 24.9) (float-vector 14.4 45.0 24.9) (float-vector -14.4 45.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 6.7 -11.6047 24.9) (float-vector -2.842171e-14 -13.4 24.9) (float-vector -6.7 -11.6047 24.9) (float-vector -11.6047 -6.7 24.9) (float-vector -13.4 1.509903e-14 24.9) (float-vector -11.6047 6.7 24.9) (float-vector -6.7 11.6047 24.9) (float-vector 0.0 13.4 24.9) (float-vector 6.7 11.6047 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 13.4 0.0 24.9)))
))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 -24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 -14.0 24.9) (float-vector -14.4 -14.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 -14.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector 14.4 45.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.7 -11.6047 -24.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 6.7 -24.9) (float-vector 6.7 11.6047 -24.9) (float-vector 0.0 13.4 -24.9) (float-vector -6.7 11.6047 -24.9) (float-vector -11.6047 6.7 -24.9) (float-vector -13.4 1.509903e-14 -24.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -2.842171e-14 -13.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 13.4 0.0 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 11.6047 6.7 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -24.9) (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 6.7 -26.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 24.9) (float-vector 6.7 11.6047 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 6.7 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 6.7 11.6047 -24.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 0.0 13.4 24.9) (float-vector 0.0 13.4 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 -26.9) (float-vector 0.0 13.4 -26.9) (float-vector 0.0 13.4 -24.9) (float-vector 6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 24.9) (float-vector -6.7 11.6047 26.9) (float-vector 0.0 13.4 26.9) (float-vector 0.0 13.4 24.9)))
         (instance face :init :vertices (list (float-vector 0.0 13.4 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector -6.7 11.6047 -24.9) (float-vector 0.0 13.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 24.9) (float-vector -11.6047 6.7 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -11.6047 6.7 -24.9) (float-vector -6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 1.509903e-14 24.9) (float-vector -13.4 1.509903e-14 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 -26.9) (float-vector -13.4 1.509903e-14 -26.9) (float-vector -13.4 1.509903e-14 -24.9) (float-vector -11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 24.9) (float-vector -11.6047 -6.7 26.9) (float-vector -13.4 1.509903e-14 26.9) (float-vector -13.4 1.509903e-14 24.9)))
         (instance face :init :vertices (list (float-vector -13.4 1.509903e-14 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -13.4 1.509903e-14 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 24.9) (float-vector -6.7 -11.6047 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -11.6047 -6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -13.4 24.9) (float-vector -2.842171e-14 -13.4 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 -26.9) (float-vector -2.842171e-14 -13.4 -26.9) (float-vector -2.842171e-14 -13.4 -24.9) (float-vector -6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 24.9) (float-vector 6.7 -11.6047 26.9) (float-vector -2.842171e-14 -13.4 26.9) (float-vector -2.842171e-14 -13.4 24.9)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -13.4 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector 6.7 -11.6047 -24.9) (float-vector -2.842171e-14 -13.4 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 11.6047 -6.7 26.9) (float-vector 6.7 -11.6047 26.9) (float-vector 6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 26.9) (float-vector 13.4 0.0 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 0.0 13.4 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -13.4 1.509903e-14 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -2.842171e-14 -13.4 26.9) (float-vector 6.7 -11.6047 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 11.6047 -6.7 26.9) (float-vector 11.6047 -6.7 24.9) (float-vector 13.4 0.0 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 -26.9) (float-vector 13.4 0.0 -26.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector -2.842171e-14 -13.4 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -13.4 1.509903e-14 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector 0.0 13.4 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 11.6047 6.7 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray40)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :torso-waist-p :weight 236.0 :centroid (float-vector -22.0255 35.8234 -2.213433e-14) :inertia-tensor #2f((4.198223e+05 89284.6 2.352343e-11) (89284.6 4.071986e+05 3.858037e-11) (2.352343e-11 3.858037e-11 2.517436e+05))))

     ;; definition of :rleg-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -27.5) (float-vector 15.0 27.0 -27.5) (float-vector 15.0 27.0 27.5) (float-vector 15.0 0.0 27.5) (float-vector 15.0 0.0 25.5) (float-vector 15.0 25.0 25.5) (float-vector 15.0 25.0 -25.5) (float-vector 15.0 0.0 -25.5)))
         (instance face :init :vertices (list (float-vector -15.0 27.0 -27.5) (float-vector -15.0 27.0 27.5) (float-vector 15.0 27.0 27.5) (float-vector 15.0 27.0 -27.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -27.5) (float-vector -15.0 0.0 -25.5) (float-vector -15.0 25.0 -25.5) (float-vector -15.0 25.0 25.5) (float-vector -15.0 0.0 25.5) (float-vector -15.0 0.0 27.5) (float-vector -15.0 27.0 27.5) (float-vector -15.0 27.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 27.5) (float-vector -15.0 0.0 27.5) (float-vector -15.0 0.0 25.5) (float-vector -10.6066 -10.6066 25.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -27.5) (float-vector -10.6066 -10.6066 -25.5) (float-vector -15.0 0.0 -25.5) (float-vector -15.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 27.5) (float-vector -10.6066 -10.6066 27.5) (float-vector -10.6066 -10.6066 25.5) (float-vector 0.0 -15.0 25.5)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 -15.0 -27.5) (float-vector 7.105427e-15 -15.0 -25.5) (float-vector -10.6066 -10.6066 -25.5) (float-vector -10.6066 -10.6066 -27.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 27.5) (float-vector 0.0 -15.0 27.5) (float-vector 0.0 -15.0 25.5) (float-vector 10.6066 -10.6066 25.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -27.5) (float-vector 10.6066 -10.6066 -25.5) (float-vector 7.105427e-15 -15.0 -25.5) (float-vector 7.105427e-15 -15.0 -27.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 27.5) (float-vector 15.0 27.0 27.5) (float-vector -15.0 27.0 27.5) (float-vector -15.0 0.0 27.5) (float-vector -10.6066 -10.6066 27.5) (float-vector 0.0 -15.0 27.5) (float-vector 10.6066 -10.6066 27.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -27.5) (float-vector 7.105427e-15 -15.0 -27.5) (float-vector -10.6066 -10.6066 -27.5) (float-vector -15.0 0.0 -27.5) (float-vector -15.0 27.0 -27.5) (float-vector 15.0 27.0 -27.5) (float-vector 15.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 27.5) (float-vector 10.6066 -10.6066 25.5) (float-vector 15.0 0.0 25.5) (float-vector 15.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -27.5) (float-vector 15.0 0.0 -25.5) (float-vector 10.6066 -10.6066 -25.5) (float-vector 10.6066 -10.6066 -27.5)))
         (instance face :init :vertices (list (float-vector 15.0 25.0 25.5) (float-vector 15.0 0.0 25.5) (float-vector 10.6066 -10.6066 25.5) (float-vector 0.0 -15.0 25.5) (float-vector -10.6066 -10.6066 25.5) (float-vector -15.0 0.0 25.5) (float-vector -15.0 25.0 25.5)))
         (instance face :init :vertices (list (float-vector 15.0 25.0 -25.5) (float-vector 15.0 25.0 25.5) (float-vector -15.0 25.0 25.5) (float-vector -15.0 25.0 -25.5)))
         (instance face :init :vertices (list (float-vector -15.0 25.0 -25.5) (float-vector -15.0 0.0 -25.5) (float-vector -10.6066 -10.6066 -25.5) (float-vector 7.105427e-15 -15.0 -25.5) (float-vector 10.6066 -10.6066 -25.5) (float-vector 15.0 0.0 -25.5) (float-vector 15.0 25.0 -25.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 31.5 -15.0 -53.5) (float-vector 31.5 -15.0 -27.5) (float-vector -31.5 -15.0 -27.5) (float-vector -31.5 -15.0 -53.5) (float-vector -30.0 -15.0 -53.5) (float-vector -30.0 -15.0 -29.0) (float-vector 30.0 -15.0 -29.0) (float-vector 30.0 -15.0 -53.5)))
         (instance face :init :vertices (list (float-vector 31.5 15.0 -27.5) (float-vector -31.5 15.0 -27.5) (float-vector -31.5 -15.0 -27.5) (float-vector 31.5 -15.0 -27.5)))
         (instance face :init :vertices (list (float-vector 31.5 15.0 -53.5) (float-vector 30.0 15.0 -53.5) (float-vector 30.0 15.0 -29.0) (float-vector -30.0 15.0 -29.0) (float-vector -30.0 15.0 -53.5) (float-vector -31.5 15.0 -53.5) (float-vector -31.5 15.0 -27.5) (float-vector 31.5 15.0 -27.5)))
         (instance face :init :vertices (list (float-vector -31.5 10.6066 -64.1066) (float-vector -31.5 15.0 -53.5) (float-vector -30.0 15.0 -53.5) (float-vector -30.0 10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector 31.5 10.6066 -64.1066) (float-vector 30.0 10.6066 -64.1066) (float-vector 30.0 15.0 -53.5) (float-vector 31.5 15.0 -53.5)))
         (instance face :init :vertices (list (float-vector -31.5 0.0 -68.5) (float-vector -31.5 10.6066 -64.1066) (float-vector -30.0 10.6066 -64.1066) (float-vector -30.0 0.0 -68.5)))
         (instance face :init :vertices (list (float-vector 31.5 0.0 -68.5) (float-vector 30.0 0.0 -68.5) (float-vector 30.0 10.6066 -64.1066) (float-vector 31.5 10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector -31.5 -10.6066 -64.1066) (float-vector -31.5 0.0 -68.5) (float-vector -30.0 0.0 -68.5) (float-vector -30.0 -10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector 31.5 -10.6066 -64.1066) (float-vector 30.0 -10.6066 -64.1066) (float-vector 30.0 0.0 -68.5) (float-vector 31.5 0.0 -68.5)))
         (instance face :init :vertices (list (float-vector -31.5 -15.0 -53.5) (float-vector -31.5 -15.0 -27.5) (float-vector -31.5 15.0 -27.5) (float-vector -31.5 15.0 -53.5) (float-vector -31.5 10.6066 -64.1066) (float-vector -31.5 0.0 -68.5) (float-vector -31.5 -10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector 31.5 -10.6066 -64.1066) (float-vector 31.5 0.0 -68.5) (float-vector 31.5 10.6066 -64.1066) (float-vector 31.5 15.0 -53.5) (float-vector 31.5 15.0 -27.5) (float-vector 31.5 -15.0 -27.5) (float-vector 31.5 -15.0 -53.5)))
         (instance face :init :vertices (list (float-vector -31.5 -10.6066 -64.1066) (float-vector -30.0 -10.6066 -64.1066) (float-vector -30.0 -15.0 -53.5) (float-vector -31.5 -15.0 -53.5)))
         (instance face :init :vertices (list (float-vector 31.5 -15.0 -53.5) (float-vector 30.0 -15.0 -53.5) (float-vector 30.0 -10.6066 -64.1066) (float-vector 31.5 -10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector -30.0 -15.0 -29.0) (float-vector -30.0 -15.0 -53.5) (float-vector -30.0 -10.6066 -64.1066) (float-vector -30.0 0.0 -68.5) (float-vector -30.0 10.6066 -64.1066) (float-vector -30.0 15.0 -53.5) (float-vector -30.0 15.0 -29.0)))
         (instance face :init :vertices (list (float-vector 30.0 -15.0 -29.0) (float-vector -30.0 -15.0 -29.0) (float-vector -30.0 15.0 -29.0) (float-vector 30.0 15.0 -29.0)))
         (instance face :init :vertices (list (float-vector 30.0 15.0 -29.0) (float-vector 30.0 15.0 -53.5) (float-vector 30.0 10.6066 -64.1066) (float-vector 30.0 0.0 -68.5) (float-vector 30.0 -10.6066 -64.1066) (float-vector 30.0 -15.0 -53.5) (float-vector 30.0 -15.0 -29.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-r :weight 36.6319 :centroid (float-vector -3.760093e-14 8.52176 -16.796) :inertia-tensor #2f((33218.8 -1.300761e-11 -3.128156e-11) (-1.300761e-11 38316.4 -5243.17) (-3.128156e-11 -5243.17 19169.0))))

     ;; definition of :rleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 -14.0 24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 45.0 -24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 45.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector -14.4 45.0 24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 45.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 -14.0 24.9) (float-vector -14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 24.9) (float-vector 14.4 -14.0 24.9) (float-vector 14.4 45.0 24.9) (float-vector -14.4 45.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 6.7 -11.6047 24.9) (float-vector -1.421085e-14 -13.4 24.9) (float-vector -6.7 -11.6047 24.9) (float-vector -11.6047 -6.7 24.9) (float-vector -13.4 0.0 24.9) (float-vector -11.6047 6.7 24.9) (float-vector -6.7 11.6047 24.9) (float-vector 1.421085e-14 13.4 24.9) (float-vector 6.7 11.6047 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 13.4 0.0 24.9)))
))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 -24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 -14.0 24.9) (float-vector -14.4 -14.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 -14.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector 14.4 45.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.7 -11.6047 -24.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 13.4 -2.842171e-14 -24.9) (float-vector 11.6047 6.7 -24.9) (float-vector 6.7 11.6047 -24.9) (float-vector 1.421085e-14 13.4 -24.9) (float-vector -6.7 11.6047 -24.9) (float-vector -11.6047 6.7 -24.9) (float-vector -13.4 0.0 -24.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -2.842171e-14 -13.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 13.4 0.0 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 11.6047 6.7 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 -2.842171e-14 -24.9) (float-vector 13.4 -2.842171e-14 -26.9) (float-vector 11.6047 6.7 -26.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 24.9) (float-vector 6.7 11.6047 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 6.7 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 6.7 11.6047 -24.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 13.4 24.9) (float-vector 1.421085e-14 13.4 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 -26.9) (float-vector 1.421085e-14 13.4 -26.9) (float-vector 1.421085e-14 13.4 -24.9) (float-vector 6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 24.9) (float-vector -6.7 11.6047 26.9) (float-vector 1.421085e-14 13.4 26.9) (float-vector 1.421085e-14 13.4 24.9)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 13.4 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector -6.7 11.6047 -24.9) (float-vector 1.421085e-14 13.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 24.9) (float-vector -11.6047 6.7 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -11.6047 6.7 -24.9) (float-vector -6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 0.0 24.9) (float-vector -13.4 0.0 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 -26.9) (float-vector -13.4 0.0 -26.9) (float-vector -13.4 0.0 -24.9) (float-vector -11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 24.9) (float-vector -11.6047 -6.7 26.9) (float-vector -13.4 0.0 26.9) (float-vector -13.4 0.0 24.9)))
         (instance face :init :vertices (list (float-vector -13.4 0.0 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -13.4 0.0 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 24.9) (float-vector -6.7 -11.6047 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -11.6047 -6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 -13.4 24.9) (float-vector -1.421085e-14 -13.4 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 -26.9) (float-vector -2.842171e-14 -13.4 -26.9) (float-vector -2.842171e-14 -13.4 -24.9) (float-vector -6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 24.9) (float-vector 6.7 -11.6047 26.9) (float-vector -1.421085e-14 -13.4 26.9) (float-vector -1.421085e-14 -13.4 24.9)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -13.4 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector 6.7 -11.6047 -24.9) (float-vector -2.842171e-14 -13.4 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 11.6047 -6.7 26.9) (float-vector 6.7 -11.6047 26.9) (float-vector 6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 26.9) (float-vector 13.4 0.0 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 1.421085e-14 13.4 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -13.4 0.0 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -1.421085e-14 -13.4 26.9) (float-vector 6.7 -11.6047 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 11.6047 -6.7 26.9) (float-vector 11.6047 -6.7 24.9) (float-vector 13.4 0.0 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 -26.9) (float-vector 13.4 -2.842171e-14 -26.9) (float-vector 13.4 -2.842171e-14 -24.9) (float-vector 11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 -2.842171e-14 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector -2.842171e-14 -13.4 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -13.4 0.0 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector 1.421085e-14 13.4 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 11.6047 6.7 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 79.0 24.9) (float-vector 14.4 79.0 -24.9) (float-vector 14.4 20.0 -24.9) (float-vector 14.4 20.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 20.0 -24.9) (float-vector 43.2 20.0 -24.9) (float-vector 43.2 20.0 24.9) (float-vector 14.4 20.0 24.9)))
         (instance face :init :vertices (list (float-vector 43.2 20.0 -24.9) (float-vector 43.2 79.0 -24.9) (float-vector 43.2 79.0 24.9) (float-vector 43.2 20.0 24.9)))
         (instance face :init :vertices (list (float-vector 43.2 79.0 24.9) (float-vector 14.4 79.0 24.9) (float-vector 14.4 20.0 24.9) (float-vector 43.2 20.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 17.1953 71.7 24.9) (float-vector 22.1 76.6047 24.9) (float-vector 28.8 78.4 24.9) (float-vector 35.5 76.6047 24.9) (float-vector 40.4047 71.7 24.9) (float-vector 42.2 65.0 24.9) (float-vector 40.4047 58.3 24.9) (float-vector 35.5 53.3953 24.9) (float-vector 28.8 51.6 24.9) (float-vector 22.1 53.3953 24.9) (float-vector 17.1953 58.3 24.9) (float-vector 15.4 65.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 43.2 79.0 -24.9) (float-vector 14.4 79.0 -24.9) (float-vector 14.4 79.0 24.9) (float-vector 43.2 79.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 79.0 -24.9) (float-vector 43.2 79.0 -24.9) (float-vector 43.2 20.0 -24.9) (float-vector 14.4 20.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 22.1 76.6047 -24.9) (float-vector 17.1953 71.7 -24.9) (float-vector 15.4 65.0 -24.9) (float-vector 17.1953 58.3 -24.9) (float-vector 22.1 53.3953 -24.9) (float-vector 28.8 51.6 -24.9) (float-vector 35.5 53.3953 -24.9) (float-vector 40.4047 58.3 -24.9) (float-vector 42.2 65.0 -24.9) (float-vector 40.4047 71.7 -24.9) (float-vector 35.5 76.6047 -24.9) (float-vector 28.8 78.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 15.4 65.0 26.9) (float-vector 15.4 65.0 24.9) (float-vector 17.1953 58.3 24.9) (float-vector 17.1953 58.3 26.9)))
         (instance face :init :vertices (list (float-vector 15.4 65.0 -24.9) (float-vector 15.4 65.0 -26.9) (float-vector 17.1953 58.3 -26.9) (float-vector 17.1953 58.3 -24.9)))
         (instance face :init :vertices (list (float-vector 22.1 53.3953 24.9) (float-vector 22.1 53.3953 26.9) (float-vector 17.1953 58.3 26.9) (float-vector 17.1953 58.3 24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 58.3 -26.9) (float-vector 22.1 53.3953 -26.9) (float-vector 22.1 53.3953 -24.9) (float-vector 17.1953 58.3 -24.9)))
         (instance face :init :vertices (list (float-vector 28.8 51.6 24.9) (float-vector 28.8 51.6 26.9) (float-vector 22.1 53.3953 26.9) (float-vector 22.1 53.3953 24.9)))
         (instance face :init :vertices (list (float-vector 22.1 53.3953 -26.9) (float-vector 28.8 51.6 -26.9) (float-vector 28.8 51.6 -24.9) (float-vector 22.1 53.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 35.5 53.3953 24.9) (float-vector 35.5 53.3953 26.9) (float-vector 28.8 51.6 26.9) (float-vector 28.8 51.6 24.9)))
         (instance face :init :vertices (list (float-vector 28.8 51.6 -26.9) (float-vector 35.5 53.3953 -26.9) (float-vector 35.5 53.3953 -24.9) (float-vector 28.8 51.6 -24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 58.3 24.9) (float-vector 40.4047 58.3 26.9) (float-vector 35.5 53.3953 26.9) (float-vector 35.5 53.3953 24.9)))
         (instance face :init :vertices (list (float-vector 35.5 53.3953 -26.9) (float-vector 40.4047 58.3 -26.9) (float-vector 40.4047 58.3 -24.9) (float-vector 35.5 53.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 42.2 65.0 24.9) (float-vector 42.2 65.0 26.9) (float-vector 40.4047 58.3 26.9) (float-vector 40.4047 58.3 24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 58.3 -26.9) (float-vector 42.2 65.0 -26.9) (float-vector 42.2 65.0 -24.9) (float-vector 40.4047 58.3 -24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 71.7 24.9) (float-vector 40.4047 71.7 26.9) (float-vector 42.2 65.0 26.9) (float-vector 42.2 65.0 24.9)))
         (instance face :init :vertices (list (float-vector 42.2 65.0 -26.9) (float-vector 40.4047 71.7 -26.9) (float-vector 40.4047 71.7 -24.9) (float-vector 42.2 65.0 -24.9)))
         (instance face :init :vertices (list (float-vector 35.5 76.6047 24.9) (float-vector 35.5 76.6047 26.9) (float-vector 40.4047 71.7 26.9) (float-vector 40.4047 71.7 24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 71.7 -26.9) (float-vector 35.5 76.6047 -26.9) (float-vector 35.5 76.6047 -24.9) (float-vector 40.4047 71.7 -24.9)))
         (instance face :init :vertices (list (float-vector 28.8 78.4 24.9) (float-vector 28.8 78.4 26.9) (float-vector 35.5 76.6047 26.9) (float-vector 35.5 76.6047 24.9)))
         (instance face :init :vertices (list (float-vector 35.5 76.6047 -26.9) (float-vector 28.8 78.4 -26.9) (float-vector 28.8 78.4 -24.9) (float-vector 35.5 76.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 22.1 76.6047 24.9) (float-vector 22.1 76.6047 26.9) (float-vector 28.8 78.4 26.9) (float-vector 28.8 78.4 24.9)))
         (instance face :init :vertices (list (float-vector 28.8 78.4 -26.9) (float-vector 22.1 76.6047 -26.9) (float-vector 22.1 76.6047 -24.9) (float-vector 28.8 78.4 -24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 71.7 24.9) (float-vector 17.1953 71.7 26.9) (float-vector 22.1 76.6047 26.9) (float-vector 22.1 76.6047 24.9)))
         (instance face :init :vertices (list (float-vector 22.1 76.6047 -26.9) (float-vector 17.1953 71.7 -26.9) (float-vector 17.1953 71.7 -24.9) (float-vector 22.1 76.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 71.7 26.9) (float-vector 15.4 65.0 26.9) (float-vector 17.1953 58.3 26.9) (float-vector 22.1 53.3953 26.9) (float-vector 28.8 51.6 26.9) (float-vector 35.5 53.3953 26.9) (float-vector 40.4047 58.3 26.9) (float-vector 42.2 65.0 26.9) (float-vector 40.4047 71.7 26.9) (float-vector 35.5 76.6047 26.9) (float-vector 28.8 78.4 26.9) (float-vector 22.1 76.6047 26.9)))
         (instance face :init :vertices (list (float-vector 15.4 65.0 26.9) (float-vector 17.1953 71.7 26.9) (float-vector 17.1953 71.7 24.9) (float-vector 15.4 65.0 24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 71.7 -26.9) (float-vector 15.4 65.0 -26.9) (float-vector 15.4 65.0 -24.9) (float-vector 17.1953 71.7 -24.9)))
         (instance face :init :vertices (list (float-vector 15.4 65.0 -26.9) (float-vector 17.1953 71.7 -26.9) (float-vector 22.1 76.6047 -26.9) (float-vector 28.8 78.4 -26.9) (float-vector 35.5 76.6047 -26.9) (float-vector 40.4047 71.7 -26.9) (float-vector 42.2 65.0 -26.9) (float-vector 40.4047 58.3 -26.9) (float-vector 35.5 53.3953 -26.9) (float-vector 28.8 51.6 -26.9) (float-vector 22.1 53.3953 -26.9) (float-vector 17.1953 58.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-p :weight 214 :centroid (float-vector 14.4 32.5 4.347780e-17) :inertia-tensor #2f((1.709833e+05 -53573.3 1.760882e-13) (-53573.3 1.033941e+05 7.080380e-13) (1.760882e-13 7.080380e-13 1.859227e+05))))

     ;; definition of :rleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 -28.5) (float-vector 15.0 36.0 -28.5) (float-vector 15.0 36.0 28.5) (float-vector 15.0 -1.421085e-14 28.5) (float-vector 15.0 -1.421085e-14 27.0) (float-vector 15.0 34.5 27.0) (float-vector 15.0 34.5 -27.0) (float-vector 15.0 -1.421085e-14 -27.0)))
         (instance face :init :vertices (list (float-vector -15.0 36.0 -28.5) (float-vector -15.0 36.0 28.5) (float-vector 15.0 36.0 28.5) (float-vector 15.0 36.0 -28.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -28.5) (float-vector -15.0 0.0 -27.0) (float-vector -15.0 34.5 -27.0) (float-vector -15.0 34.5 27.0) (float-vector -15.0 0.0 27.0) (float-vector -15.0 0.0 28.5) (float-vector -15.0 36.0 28.5) (float-vector -15.0 36.0 -28.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 28.5) (float-vector -15.0 0.0 28.5) (float-vector -15.0 0.0 27.0) (float-vector -10.6066 -10.6066 27.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -28.5) (float-vector -10.6066 -10.6066 -27.0) (float-vector -15.0 0.0 -27.0) (float-vector -15.0 0.0 -28.5)))
         (instance face :init :vertices (list (float-vector 2.220446e-16 -15.0 28.5) (float-vector -10.6066 -10.6066 28.5) (float-vector -10.6066 -10.6066 27.0) (float-vector 2.220446e-16 -15.0 27.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -28.5) (float-vector 2.220446e-16 -15.0 -27.0) (float-vector -10.6066 -10.6066 -27.0) (float-vector -10.6066 -10.6066 -28.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 28.5) (float-vector 2.220446e-16 -15.0 28.5) (float-vector 2.220446e-16 -15.0 27.0) (float-vector 10.6066 -10.6066 27.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -28.5) (float-vector 10.6066 -10.6066 -27.0) (float-vector 2.220446e-16 -15.0 -27.0) (float-vector 0.0 -15.0 -28.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 28.5) (float-vector 15.0 36.0 28.5) (float-vector -15.0 36.0 28.5) (float-vector -15.0 0.0 28.5) (float-vector -10.6066 -10.6066 28.5) (float-vector 2.220446e-16 -15.0 28.5) (float-vector 10.6066 -10.6066 28.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -28.5) (float-vector 0.0 -15.0 -28.5) (float-vector -10.6066 -10.6066 -28.5) (float-vector -15.0 0.0 -28.5) (float-vector -15.0 36.0 -28.5) (float-vector 15.0 36.0 -28.5) (float-vector 15.0 -1.421085e-14 -28.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 28.5) (float-vector 10.6066 -10.6066 27.0) (float-vector 15.0 -1.421085e-14 27.0) (float-vector 15.0 -1.421085e-14 28.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.421085e-14 -28.5) (float-vector 15.0 -1.421085e-14 -27.0) (float-vector 10.6066 -10.6066 -27.0) (float-vector 10.6066 -10.6066 -28.5)))
         (instance face :init :vertices (list (float-vector 15.0 34.5 27.0) (float-vector 15.0 -1.421085e-14 27.0) (float-vector 10.6066 -10.6066 27.0) (float-vector 2.220446e-16 -15.0 27.0) (float-vector -10.6066 -10.6066 27.0) (float-vector -15.0 0.0 27.0) (float-vector -15.0 34.5 27.0)))
         (instance face :init :vertices (list (float-vector 15.0 34.5 -27.0) (float-vector 15.0 34.5 27.0) (float-vector -15.0 34.5 27.0) (float-vector -15.0 34.5 -27.0)))
         (instance face :init :vertices (list (float-vector -15.0 34.5 -27.0) (float-vector -15.0 0.0 -27.0) (float-vector -10.6066 -10.6066 -27.0) (float-vector 2.220446e-16 -15.0 -27.0) (float-vector 10.6066 -10.6066 -27.0) (float-vector 15.0 -1.421085e-14 -27.0) (float-vector 15.0 34.5 -27.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.5 78.5 -26.5) (float-vector 22.5 78.5 26.5) (float-vector -22.5 78.5 26.5) (float-vector -22.5 78.5 -26.5)))
         (instance face :init :vertices (list (float-vector 22.5 80.0 26.5) (float-vector 22.5 80.0 -26.5) (float-vector -22.5 80.0 -26.5) (float-vector -22.5 80.0 26.5)))
         (instance face :init :vertices (list (float-vector 22.5 78.5 -26.5) (float-vector 22.5 80.0 -26.5) (float-vector 22.5 80.0 26.5) (float-vector 22.5 78.5 26.5)))
         (instance face :init :vertices (list (float-vector -22.5 78.5 -26.5) (float-vector -22.5 80.0 -26.5) (float-vector 22.5 80.0 -26.5) (float-vector 22.5 78.5 -26.5)))
         (instance face :init :vertices (list (float-vector -22.5 78.5 26.5) (float-vector -22.5 80.0 26.5) (float-vector -22.5 80.0 -26.5) (float-vector -22.5 78.5 -26.5)))
         (instance face :init :vertices (list (float-vector 22.5 78.5 26.5) (float-vector 22.5 80.0 26.5) (float-vector -22.5 80.0 26.5) (float-vector -22.5 78.5 26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -25.0 78.5 -22.5) (float-vector 25.0 78.5 -22.5) (float-vector 15.0 48.5 -22.5) (float-vector -15.0 48.5 -22.5)))
         (instance face :init :vertices (list (float-vector 25.0 78.5 22.5) (float-vector -25.0 78.5 22.5) (float-vector -15.0 48.5 22.5) (float-vector 15.0 48.5 22.5)))
         (instance face :init :vertices (list (float-vector -25.0 78.5 -22.5) (float-vector -25.0 78.5 22.5) (float-vector 25.0 78.5 22.5) (float-vector 25.0 78.5 -22.5)))
         (instance face :init :vertices (list (float-vector -15.0 48.5 -22.5) (float-vector -15.0 48.5 22.5) (float-vector -25.0 78.5 22.5) (float-vector -25.0 78.5 -22.5)))
         (instance face :init :vertices (list (float-vector 15.0 48.5 -22.5) (float-vector 15.0 48.5 22.5) (float-vector -15.0 48.5 22.5) (float-vector -15.0 48.5 -22.5)))
         (instance face :init :vertices (list (float-vector 25.0 78.5 -22.5) (float-vector 25.0 78.5 22.5) (float-vector 15.0 48.5 22.5) (float-vector 15.0 48.5 -22.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color :yellow)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-knee-p :weight 172.886 :centroid (float-vector -1.065814e-13 61.0484 9.561531e-15) :inertia-tensor #2f((81518.5 2.447744e-11 5.765760e-26) (2.447744e-11 66336.3 1.273696e-11) (5.765760e-26 1.273696e-11 78281.9))))

     ;; definition of :lleg-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -27.5) (float-vector 15.0 27.0 -27.5) (float-vector 15.0 27.0 27.5) (float-vector 15.0 0.0 27.5) (float-vector 15.0 0.0 25.5) (float-vector 15.0 25.0 25.5) (float-vector 15.0 25.0 -25.5) (float-vector 15.0 0.0 -25.5)))
         (instance face :init :vertices (list (float-vector -15.0 27.0 -27.5) (float-vector -15.0 27.0 27.5) (float-vector 15.0 27.0 27.5) (float-vector 15.0 27.0 -27.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -27.5) (float-vector -15.0 0.0 -25.5) (float-vector -15.0 25.0 -25.5) (float-vector -15.0 25.0 25.5) (float-vector -15.0 0.0 25.5) (float-vector -15.0 0.0 27.5) (float-vector -15.0 27.0 27.5) (float-vector -15.0 27.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 27.5) (float-vector -15.0 0.0 27.5) (float-vector -15.0 0.0 25.5) (float-vector -10.6066 -10.6066 25.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -27.5) (float-vector -10.6066 -10.6066 -25.5) (float-vector -15.0 0.0 -25.5) (float-vector -15.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 27.5) (float-vector -10.6066 -10.6066 27.5) (float-vector -10.6066 -10.6066 25.5) (float-vector 0.0 -15.0 25.5)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 -15.0 -27.5) (float-vector 7.105427e-15 -15.0 -25.5) (float-vector -10.6066 -10.6066 -25.5) (float-vector -10.6066 -10.6066 -27.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 27.5) (float-vector 0.0 -15.0 27.5) (float-vector 0.0 -15.0 25.5) (float-vector 10.6066 -10.6066 25.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -27.5) (float-vector 10.6066 -10.6066 -25.5) (float-vector 7.105427e-15 -15.0 -25.5) (float-vector 7.105427e-15 -15.0 -27.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 27.5) (float-vector 15.0 27.0 27.5) (float-vector -15.0 27.0 27.5) (float-vector -15.0 0.0 27.5) (float-vector -10.6066 -10.6066 27.5) (float-vector 0.0 -15.0 27.5) (float-vector 10.6066 -10.6066 27.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -27.5) (float-vector 7.105427e-15 -15.0 -27.5) (float-vector -10.6066 -10.6066 -27.5) (float-vector -15.0 0.0 -27.5) (float-vector -15.0 27.0 -27.5) (float-vector 15.0 27.0 -27.5) (float-vector 15.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 27.5) (float-vector 10.6066 -10.6066 25.5) (float-vector 15.0 0.0 25.5) (float-vector 15.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -27.5) (float-vector 15.0 0.0 -25.5) (float-vector 10.6066 -10.6066 -25.5) (float-vector 10.6066 -10.6066 -27.5)))
         (instance face :init :vertices (list (float-vector 15.0 25.0 25.5) (float-vector 15.0 0.0 25.5) (float-vector 10.6066 -10.6066 25.5) (float-vector 0.0 -15.0 25.5) (float-vector -10.6066 -10.6066 25.5) (float-vector -15.0 0.0 25.5) (float-vector -15.0 25.0 25.5)))
         (instance face :init :vertices (list (float-vector 15.0 25.0 -25.5) (float-vector 15.0 25.0 25.5) (float-vector -15.0 25.0 25.5) (float-vector -15.0 25.0 -25.5)))
         (instance face :init :vertices (list (float-vector -15.0 25.0 -25.5) (float-vector -15.0 0.0 -25.5) (float-vector -10.6066 -10.6066 -25.5) (float-vector 7.105427e-15 -15.0 -25.5) (float-vector 10.6066 -10.6066 -25.5) (float-vector 15.0 0.0 -25.5) (float-vector 15.0 25.0 -25.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 31.5 -15.0 -53.5) (float-vector 31.5 -15.0 -27.5) (float-vector -31.5 -15.0 -27.5) (float-vector -31.5 -15.0 -53.5) (float-vector -30.0 -15.0 -53.5) (float-vector -30.0 -15.0 -29.0) (float-vector 30.0 -15.0 -29.0) (float-vector 30.0 -15.0 -53.5)))
         (instance face :init :vertices (list (float-vector 31.5 15.0 -27.5) (float-vector -31.5 15.0 -27.5) (float-vector -31.5 -15.0 -27.5) (float-vector 31.5 -15.0 -27.5)))
         (instance face :init :vertices (list (float-vector 31.5 15.0 -53.5) (float-vector 30.0 15.0 -53.5) (float-vector 30.0 15.0 -29.0) (float-vector -30.0 15.0 -29.0) (float-vector -30.0 15.0 -53.5) (float-vector -31.5 15.0 -53.5) (float-vector -31.5 15.0 -27.5) (float-vector 31.5 15.0 -27.5)))
         (instance face :init :vertices (list (float-vector -31.5 10.6066 -64.1066) (float-vector -31.5 15.0 -53.5) (float-vector -30.0 15.0 -53.5) (float-vector -30.0 10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector 31.5 10.6066 -64.1066) (float-vector 30.0 10.6066 -64.1066) (float-vector 30.0 15.0 -53.5) (float-vector 31.5 15.0 -53.5)))
         (instance face :init :vertices (list (float-vector -31.5 0.0 -68.5) (float-vector -31.5 10.6066 -64.1066) (float-vector -30.0 10.6066 -64.1066) (float-vector -30.0 0.0 -68.5)))
         (instance face :init :vertices (list (float-vector 31.5 0.0 -68.5) (float-vector 30.0 0.0 -68.5) (float-vector 30.0 10.6066 -64.1066) (float-vector 31.5 10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector -31.5 -10.6066 -64.1066) (float-vector -31.5 0.0 -68.5) (float-vector -30.0 0.0 -68.5) (float-vector -30.0 -10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector 31.5 -10.6066 -64.1066) (float-vector 30.0 -10.6066 -64.1066) (float-vector 30.0 0.0 -68.5) (float-vector 31.5 0.0 -68.5)))
         (instance face :init :vertices (list (float-vector -31.5 -15.0 -53.5) (float-vector -31.5 -15.0 -27.5) (float-vector -31.5 15.0 -27.5) (float-vector -31.5 15.0 -53.5) (float-vector -31.5 10.6066 -64.1066) (float-vector -31.5 0.0 -68.5) (float-vector -31.5 -10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector 31.5 -10.6066 -64.1066) (float-vector 31.5 0.0 -68.5) (float-vector 31.5 10.6066 -64.1066) (float-vector 31.5 15.0 -53.5) (float-vector 31.5 15.0 -27.5) (float-vector 31.5 -15.0 -27.5) (float-vector 31.5 -15.0 -53.5)))
         (instance face :init :vertices (list (float-vector -31.5 -10.6066 -64.1066) (float-vector -30.0 -10.6066 -64.1066) (float-vector -30.0 -15.0 -53.5) (float-vector -31.5 -15.0 -53.5)))
         (instance face :init :vertices (list (float-vector 31.5 -15.0 -53.5) (float-vector 30.0 -15.0 -53.5) (float-vector 30.0 -10.6066 -64.1066) (float-vector 31.5 -10.6066 -64.1066)))
         (instance face :init :vertices (list (float-vector -30.0 -15.0 -29.0) (float-vector -30.0 -15.0 -53.5) (float-vector -30.0 -10.6066 -64.1066) (float-vector -30.0 0.0 -68.5) (float-vector -30.0 10.6066 -64.1066) (float-vector -30.0 15.0 -53.5) (float-vector -30.0 15.0 -29.0)))
         (instance face :init :vertices (list (float-vector 30.0 -15.0 -29.0) (float-vector -30.0 -15.0 -29.0) (float-vector -30.0 15.0 -29.0) (float-vector 30.0 15.0 -29.0)))
         (instance face :init :vertices (list (float-vector 30.0 15.0 -29.0) (float-vector 30.0 15.0 -53.5) (float-vector 30.0 10.6066 -64.1066) (float-vector 30.0 0.0 -68.5) (float-vector 30.0 -10.6066 -64.1066) (float-vector 30.0 -15.0 -53.5) (float-vector 30.0 -15.0 -29.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-r :weight 36.6319 :centroid (float-vector -3.760093e-14 8.52176 -16.796) :inertia-tensor #2f((33218.8 -1.300761e-11 -3.128156e-11) (-1.300761e-11 38316.4 -5243.17) (-3.128156e-11 -5243.17 19169.0))))

     ;; definition of :lleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 -14.0 24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 45.0 -24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 45.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector -14.4 45.0 24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 45.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 -14.0 24.9) (float-vector -14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 24.9) (float-vector 14.4 -14.0 24.9) (float-vector 14.4 45.0 24.9) (float-vector -14.4 45.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 6.7 -11.6047 24.9) (float-vector -1.421085e-14 -13.4 24.9) (float-vector -6.7 -11.6047 24.9) (float-vector -11.6047 -6.7 24.9) (float-vector -13.4 -2.842171e-14 24.9) (float-vector -11.6047 6.7 24.9) (float-vector -6.7 11.6047 24.9) (float-vector 1.421085e-14 13.4 24.9) (float-vector 6.7 11.6047 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 13.4 -2.842171e-14 24.9)))
))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 -24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 -14.0 24.9) (float-vector -14.4 -14.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 -14.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector 14.4 45.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.7 -11.6047 -24.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 13.4 -2.842171e-14 -24.9) (float-vector 11.6047 6.7 -24.9) (float-vector 6.7 11.6047 -24.9) (float-vector 1.421085e-14 13.4 -24.9) (float-vector -6.7 11.6047 -24.9) (float-vector -11.6047 6.7 -24.9) (float-vector -13.4 0.0 -24.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -2.842171e-14 -13.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 13.4 -2.842171e-14 26.9) (float-vector 13.4 -2.842171e-14 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 11.6047 6.7 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 -2.842171e-14 -24.9) (float-vector 13.4 -2.842171e-14 -26.9) (float-vector 11.6047 6.7 -26.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 24.9) (float-vector 6.7 11.6047 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 6.7 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 6.7 11.6047 -24.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 13.4 24.9) (float-vector 1.421085e-14 13.4 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 -26.9) (float-vector 1.421085e-14 13.4 -26.9) (float-vector 1.421085e-14 13.4 -24.9) (float-vector 6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 24.9) (float-vector -6.7 11.6047 26.9) (float-vector 1.421085e-14 13.4 26.9) (float-vector 1.421085e-14 13.4 24.9)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 13.4 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector -6.7 11.6047 -24.9) (float-vector 1.421085e-14 13.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 24.9) (float-vector -11.6047 6.7 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -11.6047 6.7 -24.9) (float-vector -6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 -2.842171e-14 24.9) (float-vector -13.4 -2.842171e-14 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 -26.9) (float-vector -13.4 0.0 -26.9) (float-vector -13.4 0.0 -24.9) (float-vector -11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 24.9) (float-vector -11.6047 -6.7 26.9) (float-vector -13.4 -2.842171e-14 26.9) (float-vector -13.4 -2.842171e-14 24.9)))
         (instance face :init :vertices (list (float-vector -13.4 0.0 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -13.4 0.0 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 24.9) (float-vector -6.7 -11.6047 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -11.6047 -6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 -13.4 24.9) (float-vector -2.842171e-14 -13.4 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 -26.9) (float-vector -2.842171e-14 -13.4 -26.9) (float-vector -2.842171e-14 -13.4 -24.9) (float-vector -6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 24.9) (float-vector 6.7 -11.6047 26.9) (float-vector -2.842171e-14 -13.4 26.9) (float-vector -1.421085e-14 -13.4 24.9)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -13.4 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector 6.7 -11.6047 -24.9) (float-vector -2.842171e-14 -13.4 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 11.6047 -6.7 26.9) (float-vector 6.7 -11.6047 26.9) (float-vector 6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 26.9) (float-vector 13.4 -2.842171e-14 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 1.421085e-14 13.4 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -13.4 -2.842171e-14 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -2.842171e-14 -13.4 26.9) (float-vector 6.7 -11.6047 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 -2.842171e-14 26.9) (float-vector 11.6047 -6.7 26.9) (float-vector 11.6047 -6.7 24.9) (float-vector 13.4 -2.842171e-14 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 -26.9) (float-vector 13.4 -2.842171e-14 -26.9) (float-vector 13.4 -2.842171e-14 -24.9) (float-vector 11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 -2.842171e-14 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector -2.842171e-14 -13.4 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -13.4 0.0 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector 1.421085e-14 13.4 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 11.6047 6.7 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 79.0 24.9) (float-vector 14.4 79.0 -24.9) (float-vector 14.4 20.0 -24.9) (float-vector 14.4 20.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 20.0 -24.9) (float-vector 43.2 20.0 -24.9) (float-vector 43.2 20.0 24.9) (float-vector 14.4 20.0 24.9)))
         (instance face :init :vertices (list (float-vector 43.2 20.0 -24.9) (float-vector 43.2 79.0 -24.9) (float-vector 43.2 79.0 24.9) (float-vector 43.2 20.0 24.9)))
         (instance face :init :vertices (list (float-vector 43.2 79.0 24.9) (float-vector 14.4 79.0 24.9) (float-vector 14.4 20.0 24.9) (float-vector 43.2 20.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 17.1953 71.7 24.9) (float-vector 22.1 76.6047 24.9) (float-vector 28.8 78.4 24.9) (float-vector 35.5 76.6047 24.9) (float-vector 40.4047 71.7 24.9) (float-vector 42.2 65.0 24.9) (float-vector 40.4047 58.3 24.9) (float-vector 35.5 53.3953 24.9) (float-vector 28.8 51.6 24.9) (float-vector 22.1 53.3953 24.9) (float-vector 17.1953 58.3 24.9) (float-vector 15.4 65.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 43.2 79.0 -24.9) (float-vector 14.4 79.0 -24.9) (float-vector 14.4 79.0 24.9) (float-vector 43.2 79.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 79.0 -24.9) (float-vector 43.2 79.0 -24.9) (float-vector 43.2 20.0 -24.9) (float-vector 14.4 20.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 22.1 76.6047 -24.9) (float-vector 17.1953 71.7 -24.9) (float-vector 15.4 65.0 -24.9) (float-vector 17.1953 58.3 -24.9) (float-vector 22.1 53.3953 -24.9) (float-vector 28.8 51.6 -24.9) (float-vector 35.5 53.3953 -24.9) (float-vector 40.4047 58.3 -24.9) (float-vector 42.2 65.0 -24.9) (float-vector 40.4047 71.7 -24.9) (float-vector 35.5 76.6047 -24.9) (float-vector 28.8 78.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 15.4 65.0 26.9) (float-vector 15.4 65.0 24.9) (float-vector 17.1953 58.3 24.9) (float-vector 17.1953 58.3 26.9)))
         (instance face :init :vertices (list (float-vector 15.4 65.0 -24.9) (float-vector 15.4 65.0 -26.9) (float-vector 17.1953 58.3 -26.9) (float-vector 17.1953 58.3 -24.9)))
         (instance face :init :vertices (list (float-vector 22.1 53.3953 24.9) (float-vector 22.1 53.3953 26.9) (float-vector 17.1953 58.3 26.9) (float-vector 17.1953 58.3 24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 58.3 -26.9) (float-vector 22.1 53.3953 -26.9) (float-vector 22.1 53.3953 -24.9) (float-vector 17.1953 58.3 -24.9)))
         (instance face :init :vertices (list (float-vector 28.8 51.6 24.9) (float-vector 28.8 51.6 26.9) (float-vector 22.1 53.3953 26.9) (float-vector 22.1 53.3953 24.9)))
         (instance face :init :vertices (list (float-vector 22.1 53.3953 -26.9) (float-vector 28.8 51.6 -26.9) (float-vector 28.8 51.6 -24.9) (float-vector 22.1 53.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 35.5 53.3953 24.9) (float-vector 35.5 53.3953 26.9) (float-vector 28.8 51.6 26.9) (float-vector 28.8 51.6 24.9)))
         (instance face :init :vertices (list (float-vector 28.8 51.6 -26.9) (float-vector 35.5 53.3953 -26.9) (float-vector 35.5 53.3953 -24.9) (float-vector 28.8 51.6 -24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 58.3 24.9) (float-vector 40.4047 58.3 26.9) (float-vector 35.5 53.3953 26.9) (float-vector 35.5 53.3953 24.9)))
         (instance face :init :vertices (list (float-vector 35.5 53.3953 -26.9) (float-vector 40.4047 58.3 -26.9) (float-vector 40.4047 58.3 -24.9) (float-vector 35.5 53.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 42.2 65.0 24.9) (float-vector 42.2 65.0 26.9) (float-vector 40.4047 58.3 26.9) (float-vector 40.4047 58.3 24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 58.3 -26.9) (float-vector 42.2 65.0 -26.9) (float-vector 42.2 65.0 -24.9) (float-vector 40.4047 58.3 -24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 71.7 24.9) (float-vector 40.4047 71.7 26.9) (float-vector 42.2 65.0 26.9) (float-vector 42.2 65.0 24.9)))
         (instance face :init :vertices (list (float-vector 42.2 65.0 -26.9) (float-vector 40.4047 71.7 -26.9) (float-vector 40.4047 71.7 -24.9) (float-vector 42.2 65.0 -24.9)))
         (instance face :init :vertices (list (float-vector 35.5 76.6047 24.9) (float-vector 35.5 76.6047 26.9) (float-vector 40.4047 71.7 26.9) (float-vector 40.4047 71.7 24.9)))
         (instance face :init :vertices (list (float-vector 40.4047 71.7 -26.9) (float-vector 35.5 76.6047 -26.9) (float-vector 35.5 76.6047 -24.9) (float-vector 40.4047 71.7 -24.9)))
         (instance face :init :vertices (list (float-vector 28.8 78.4 24.9) (float-vector 28.8 78.4 26.9) (float-vector 35.5 76.6047 26.9) (float-vector 35.5 76.6047 24.9)))
         (instance face :init :vertices (list (float-vector 35.5 76.6047 -26.9) (float-vector 28.8 78.4 -26.9) (float-vector 28.8 78.4 -24.9) (float-vector 35.5 76.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 22.1 76.6047 24.9) (float-vector 22.1 76.6047 26.9) (float-vector 28.8 78.4 26.9) (float-vector 28.8 78.4 24.9)))
         (instance face :init :vertices (list (float-vector 28.8 78.4 -26.9) (float-vector 22.1 76.6047 -26.9) (float-vector 22.1 76.6047 -24.9) (float-vector 28.8 78.4 -24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 71.7 24.9) (float-vector 17.1953 71.7 26.9) (float-vector 22.1 76.6047 26.9) (float-vector 22.1 76.6047 24.9)))
         (instance face :init :vertices (list (float-vector 22.1 76.6047 -26.9) (float-vector 17.1953 71.7 -26.9) (float-vector 17.1953 71.7 -24.9) (float-vector 22.1 76.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 71.7 26.9) (float-vector 15.4 65.0 26.9) (float-vector 17.1953 58.3 26.9) (float-vector 22.1 53.3953 26.9) (float-vector 28.8 51.6 26.9) (float-vector 35.5 53.3953 26.9) (float-vector 40.4047 58.3 26.9) (float-vector 42.2 65.0 26.9) (float-vector 40.4047 71.7 26.9) (float-vector 35.5 76.6047 26.9) (float-vector 28.8 78.4 26.9) (float-vector 22.1 76.6047 26.9)))
         (instance face :init :vertices (list (float-vector 15.4 65.0 26.9) (float-vector 17.1953 71.7 26.9) (float-vector 17.1953 71.7 24.9) (float-vector 15.4 65.0 24.9)))
         (instance face :init :vertices (list (float-vector 17.1953 71.7 -26.9) (float-vector 15.4 65.0 -26.9) (float-vector 15.4 65.0 -24.9) (float-vector 17.1953 71.7 -24.9)))
         (instance face :init :vertices (list (float-vector 15.4 65.0 -26.9) (float-vector 17.1953 71.7 -26.9) (float-vector 22.1 76.6047 -26.9) (float-vector 28.8 78.4 -26.9) (float-vector 35.5 76.6047 -26.9) (float-vector 40.4047 71.7 -26.9) (float-vector 42.2 65.0 -26.9) (float-vector 40.4047 58.3 -26.9) (float-vector 35.5 53.3953 -26.9) (float-vector 28.8 51.6 -26.9) (float-vector 22.1 53.3953 -26.9) (float-vector 17.1953 58.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-p :weight 214 :centroid (float-vector 14.4 32.5 4.347780e-17) :inertia-tensor #2f((1.709833e+05 -53573.3 1.760882e-13) (-53573.3 1.033941e+05 7.080380e-13) (1.760882e-13 7.080380e-13 1.859227e+05))))

     ;; definition of :lleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -28.5) (float-vector 15.0 36.0 -28.5) (float-vector 15.0 36.0 28.5) (float-vector 15.0 0.0 28.5) (float-vector 15.0 0.0 27.0) (float-vector 15.0 34.5 27.0) (float-vector 15.0 34.5 -27.0) (float-vector 15.0 0.0 -27.0)))
         (instance face :init :vertices (list (float-vector -15.0 36.0 -28.5) (float-vector -15.0 36.0 28.5) (float-vector 15.0 36.0 28.5) (float-vector 15.0 36.0 -28.5)))
         (instance face :init :vertices (list (float-vector -15.0 1.421085e-14 -28.5) (float-vector -15.0 1.421085e-14 -27.0) (float-vector -15.0 34.5 -27.0) (float-vector -15.0 34.5 27.0) (float-vector -15.0 0.0 27.0) (float-vector -15.0 0.0 28.5) (float-vector -15.0 36.0 28.5) (float-vector -15.0 36.0 -28.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 28.5) (float-vector -15.0 0.0 28.5) (float-vector -15.0 0.0 27.0) (float-vector -10.6066 -10.6066 27.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -28.5) (float-vector -10.6066 -10.6066 -27.0) (float-vector -15.0 1.421085e-14 -27.0) (float-vector -15.0 1.421085e-14 -28.5)))
         (instance face :init :vertices (list (float-vector 2.220446e-16 -15.0 28.5) (float-vector -10.6066 -10.6066 28.5) (float-vector -10.6066 -10.6066 27.0) (float-vector 2.220446e-16 -15.0 27.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -28.5) (float-vector 2.220446e-16 -15.0 -27.0) (float-vector -10.6066 -10.6066 -27.0) (float-vector -10.6066 -10.6066 -28.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 28.5) (float-vector 2.220446e-16 -15.0 28.5) (float-vector 2.220446e-16 -15.0 27.0) (float-vector 10.6066 -10.6066 27.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -28.5) (float-vector 10.6066 -10.6066 -27.0) (float-vector 2.220446e-16 -15.0 -27.0) (float-vector 0.0 -15.0 -28.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 28.5) (float-vector 15.0 36.0 28.5) (float-vector -15.0 36.0 28.5) (float-vector -15.0 0.0 28.5) (float-vector -10.6066 -10.6066 28.5) (float-vector 2.220446e-16 -15.0 28.5) (float-vector 10.6066 -10.6066 28.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -28.5) (float-vector 0.0 -15.0 -28.5) (float-vector -10.6066 -10.6066 -28.5) (float-vector -15.0 1.421085e-14 -28.5) (float-vector -15.0 36.0 -28.5) (float-vector 15.0 36.0 -28.5) (float-vector 15.0 0.0 -28.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 28.5) (float-vector 10.6066 -10.6066 27.0) (float-vector 15.0 0.0 27.0) (float-vector 15.0 0.0 28.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -28.5) (float-vector 15.0 0.0 -27.0) (float-vector 10.6066 -10.6066 -27.0) (float-vector 10.6066 -10.6066 -28.5)))
         (instance face :init :vertices (list (float-vector 15.0 34.5 27.0) (float-vector 15.0 0.0 27.0) (float-vector 10.6066 -10.6066 27.0) (float-vector 2.220446e-16 -15.0 27.0) (float-vector -10.6066 -10.6066 27.0) (float-vector -15.0 0.0 27.0) (float-vector -15.0 34.5 27.0)))
         (instance face :init :vertices (list (float-vector 15.0 34.5 -27.0) (float-vector 15.0 34.5 27.0) (float-vector -15.0 34.5 27.0) (float-vector -15.0 34.5 -27.0)))
         (instance face :init :vertices (list (float-vector -15.0 34.5 -27.0) (float-vector -15.0 1.421085e-14 -27.0) (float-vector -10.6066 -10.6066 -27.0) (float-vector 2.220446e-16 -15.0 -27.0) (float-vector 10.6066 -10.6066 -27.0) (float-vector 15.0 0.0 -27.0) (float-vector 15.0 34.5 -27.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.5 78.5 -26.5) (float-vector 22.5 78.5 26.5) (float-vector -22.5 78.5 26.5) (float-vector -22.5 78.5 -26.5)))
         (instance face :init :vertices (list (float-vector 22.5 80.0 26.5) (float-vector 22.5 80.0 -26.5) (float-vector -22.5 80.0 -26.5) (float-vector -22.5 80.0 26.5)))
         (instance face :init :vertices (list (float-vector 22.5 78.5 -26.5) (float-vector 22.5 80.0 -26.5) (float-vector 22.5 80.0 26.5) (float-vector 22.5 78.5 26.5)))
         (instance face :init :vertices (list (float-vector -22.5 78.5 -26.5) (float-vector -22.5 80.0 -26.5) (float-vector 22.5 80.0 -26.5) (float-vector 22.5 78.5 -26.5)))
         (instance face :init :vertices (list (float-vector -22.5 78.5 26.5) (float-vector -22.5 80.0 26.5) (float-vector -22.5 80.0 -26.5) (float-vector -22.5 78.5 -26.5)))
         (instance face :init :vertices (list (float-vector 22.5 78.5 26.5) (float-vector 22.5 80.0 26.5) (float-vector -22.5 80.0 26.5) (float-vector -22.5 78.5 26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -25.0 78.5 -22.5) (float-vector 25.0 78.5 -22.5) (float-vector 15.0 48.5 -22.5) (float-vector -15.0 48.5 -22.5)))
         (instance face :init :vertices (list (float-vector 25.0 78.5 22.5) (float-vector -25.0 78.5 22.5) (float-vector -15.0 48.5 22.5) (float-vector 15.0 48.5 22.5)))
         (instance face :init :vertices (list (float-vector -25.0 78.5 -22.5) (float-vector -25.0 78.5 22.5) (float-vector 25.0 78.5 22.5) (float-vector 25.0 78.5 -22.5)))
         (instance face :init :vertices (list (float-vector -15.0 48.5 -22.5) (float-vector -15.0 48.5 22.5) (float-vector -25.0 78.5 22.5) (float-vector -25.0 78.5 -22.5)))
         (instance face :init :vertices (list (float-vector 15.0 48.5 -22.5) (float-vector 15.0 48.5 22.5) (float-vector -15.0 48.5 22.5) (float-vector -15.0 48.5 -22.5)))
         (instance face :init :vertices (list (float-vector 25.0 78.5 -22.5) (float-vector 25.0 78.5 22.5) (float-vector 15.0 48.5 22.5) (float-vector 15.0 48.5 -22.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color :yellow)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-knee-p :weight 172.886 :centroid (float-vector -1.065814e-13 61.0484 9.561531e-15) :inertia-tensor #2f((81518.5 2.447744e-11 5.765760e-26) (2.447744e-11 66336.3 1.273696e-11) (5.765760e-26 1.273696e-11 78281.9))))

     ;; definition of assoc
     (send blink9 :newcoords (make-coords :pos (float-vector -7.105427e-15 0.0 -37.0) :rot #2f((-1.110223e-16 -1.110223e-16 1.0) (-1.0 1.110223e-16 -1.110223e-16) (-1.110223e-16 -1.0 -1.110223e-16))))
     (send blink7 :assoc blink9)
     (send blink7 :newcoords (make-coords :pos (float-vector 0.0 60.0 -1.254756e-14) :rot #2f((1.0 1.852715e-16 2.826230e-17) (2.826230e-17 -1.110223e-16 -1.0) (-1.852715e-16 1.0 -1.110223e-16))))
     (send blink5 :assoc blink7)
     (send blink5 :newcoords (make-coords :pos (float-vector 0.0 0.0 42.5) :rot #2f((-4.440892e-16 1.0 0.0) (0.0 0.0 1.0) (1.0 4.440892e-16 0.0))))
     (send blink3 :assoc blink5)
     (send blink8 :newcoords (make-coords :pos (float-vector -7.105427e-15 1.421085e-14 -37.0) :rot #2f((-1.110223e-16 -1.110223e-16 1.0) (-1.0 1.110223e-16 -1.110223e-16) (-1.110223e-16 -1.0 -1.110223e-16))))
     (send blink6 :assoc blink8)
     (send blink6 :newcoords (make-coords :pos (float-vector -1.421085e-14 60.0 -1.033528e-14) :rot #2f((1.0 1.852715e-16 2.826230e-17) (2.826230e-17 -1.110223e-16 -1.0) (-1.852715e-16 1.0 -1.110223e-16))))
     (send blink4 :assoc blink6)
     (send blink4 :newcoords (make-coords :pos (float-vector 0.0 0.0 -42.5) :rot #2f((-4.440892e-16 1.0 0.0) (0.0 0.0 1.0) (1.0 4.440892e-16 0.0))))
     (send blink2 :assoc blink4)
     (send blink16 :newcoords (make-coords :pos (float-vector 28.8 65.0 -1.421085e-14) :rot #2f((0.906308 0.422618 -3.309035e-16) (-0.422618 0.906308 1.870774e-16) (3.789628e-16 -2.970384e-17 1.0))))
     (send blink14 :assoc blink16)
     (send blink14 :newcoords (make-coords :pos (float-vector 0.0 0.0 -53.5) :rot #2f((1.353084e-16 -2.775558e-16 -1.0) (0.422618 0.906308 -1.942890e-16) (0.906308 -0.422618 1.977585e-16))))
     (send blink12 :assoc blink14)
     (send blink15 :newcoords (make-coords :pos (float-vector 28.8 65.0 -1.421085e-14) :rot #2f((0.906308 0.422618 -3.309035e-16) (-0.422618 0.906308 1.870774e-16) (3.789628e-16 -2.970384e-17 1.0))))
     (send blink13 :assoc blink15)
     (send blink13 :newcoords (make-coords :pos (float-vector 0.0 0.0 -53.5) :rot #2f((1.353084e-16 -2.775558e-16 -1.0) (0.422618 0.906308 -1.942890e-16) (0.906308 -0.422618 1.977585e-16))))
     (send blink11 :assoc blink13)
     (send blink11 :newcoords (make-coords :pos (float-vector -50.0 53.0 -45.0) :rot #2f((0.0 -1.0 -4.440892e-16) (4.440892e-16 -4.440892e-16 1.0) (-1.0 0.0 4.440892e-16))))
     (send blink10 :assoc blink11)
     (send blink12 :newcoords (make-coords :pos (float-vector -50.0 53.0 45.0) :rot #2f((0.0 -1.0 -4.440892e-16) (4.440892e-16 -4.440892e-16 1.0) (-1.0 0.0 4.440892e-16))))
     (send blink10 :assoc blink12)
     (send blink10 :newcoords (make-coords :pos (float-vector 0.0 0.0 1.5) :rot #2f((4.440892e-16 -1.0 0.0) (0.0 0.0 -1.0) (1.0 4.440892e-16 0.0))))
     (send blink0 :assoc blink10)
     (send blink1 :newcoords (make-coords :pos (float-vector 2.143132e-15 2.143132e-15 150.5) :rot #2f((-1.0 -4.710277e-16 -1.570092e-16) (-1.570092e-16 -2.220446e-16 1.0) (-4.710277e-16 1.0 2.220446e-16))))
     (send blink0 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector -1.443290e-14 65.0 138.5) :rot #2f((0.0 1.0 0.0) (0.0 0.0 -1.0) (-1.0 0.0 0.0))))
     (send blink0 :assoc blink2)
     (send blink3 :newcoords (make-coords :pos (float-vector 1.443290e-14 -65.0 138.5) :rot #2f((0.0 1.0 0.0) (0.0 0.0 -1.0) (-1.0 0.0 0.0))))
     (send blink0 :assoc blink3)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of torso-end-coords
     (setq torso-end-coords
       (make-cascoords
	:coords (send (send blink10 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink10 :assoc torso-end-coords)

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink1 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 8.5 40.0 4.378112e-15) :rot #2f((0.0 2.355139e-16 -1.0) (7.850462e-17 -1.0 -2.355139e-16) (-1.0 -7.850462e-17 0.0))))))
     (send blink1 :assoc head-end-coords)

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink8 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -1.421085e-14 71.7 30.0) :rot #2f((1.0 2.747662e-16 -3.925231e-17) (-3.925231e-17 2.220446e-16 -1.0) (-2.747662e-16 1.0 2.220446e-16))))))
     (send blink8 :assoc larm-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 81.7 30.0) :rot #2f((1.0 1.962616e-16 3.925231e-17) (3.925231e-17 2.220446e-16 -1.0) (-1.962616e-16 1.0 2.220446e-16))))))
     (send blink9 :assoc rarm-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink15 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 2.220446e-16 79.25 0.0) :rot #2f((0.0 1.0 0.0) (1.110223e-16 0.0 -1.0) (-1.0 0.0 -1.110223e-16))))))
     (send blink15 :assoc lleg-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink16 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 2.220446e-16 79.25 0.0) :rot #2f((0.0 1.0 0.0) (1.110223e-16 0.0 -1.0) (-1.0 0.0 -1.110223e-16))))))
     (send blink16 :assoc rleg-end-coords)

     ;; definition of joint

     ;; definition of :torso-waist-p
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink10 :name :torso-waist-p :axis :-z
			     :min -115.0 :max   65.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :head-neck-p
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :head-neck-p :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink2 :name :larm-shoulder-p :axis :-z
			     :min  -10.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-r
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink4 :name :larm-shoulder-r :axis :-z
			     :min  -10.0 :max  170.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-elbow-y
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink6 :name :larm-elbow-y :axis :-z
			     :min   90.0 :max  270.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-elbow-p
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink8 :name :larm-elbow-p :axis :-z
			     :min   -5.0 :max  175.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-p
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink3 :name :rarm-shoulder-p :axis :-z
			     :min  -10.0 :max  170.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-r
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink3 :child-link blink5 :name :rarm-shoulder-r :axis :-z
			     :min   20.0 :max  200.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-elbow-y
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink7 :name :rarm-elbow-y :axis :-z
			     :min   90.0 :max  270.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-elbow-p
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink9 :name :rarm-elbow-p :axis :-z
			     :min   -5.0 :max  175.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-r
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink11 :name :lleg-crotch-r :axis :-z
			     :min -130.0 :max   50.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-p
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink13 :name :lleg-crotch-p :axis :-z
			     :min  -75.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-knee-p
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink15 :name :lleg-knee-p :axis :-z
			     :min -130.0 :max   10.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-r
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink12 :name :rleg-crotch-r :axis :-z
			     :min  -50.0 :max  130.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-p
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink12 :child-link blink14 :name :rleg-crotch-p :axis :-z
			     :min  -75.0 :max  105.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-knee-p
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink16 :name :rleg-knee-p :axis :-z
			     :min -130.0 :max   10.0 :max-joint-velocity 5 :max-joint-torque 100))

     (setq torso-root-link blink10)
     (setq torso (list blink10))
     (setq head-root-link blink1)
     (setq head (list blink1))
     (setq larm-root-link blink2)
     (setq larm (list blink2 blink4 blink6 blink8))
     (setq rarm-root-link blink3)
     (setq rarm (list blink3 blink5 blink7 blink9))
     (setq lleg-root-link blink11)
     (setq lleg (list blink11 blink13 blink15))
     (setq rleg-root-link blink12)
     (setq rleg (list blink12 blink14 blink16))

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:torso-waist-p (&rest args) (forward-message-to joint9 args))
  (:head-neck-p (&rest args) (forward-message-to joint0 args))
  (:larm-shoulder-p (&rest args) (forward-message-to joint1 args))
  (:larm-shoulder-r (&rest args) (forward-message-to joint3 args))
  (:larm-elbow-y (&rest args) (forward-message-to joint5 args))
  (:larm-elbow-p (&rest args) (forward-message-to joint7 args))
  (:rarm-shoulder-p (&rest args) (forward-message-to joint2 args))
  (:rarm-shoulder-r (&rest args) (forward-message-to joint4 args))
  (:rarm-elbow-y (&rest args) (forward-message-to joint6 args))
  (:rarm-elbow-p (&rest args) (forward-message-to joint8 args))
  (:lleg-crotch-r (&rest args) (forward-message-to joint10 args))
  (:lleg-crotch-p (&rest args) (forward-message-to joint12 args))
  (:lleg-knee-p (&rest args) (forward-message-to joint14 args))
  (:rleg-crotch-r (&rest args) (forward-message-to joint11 args))
  (:rleg-crotch-p (&rest args) (forward-message-to joint13 args))
  (:rleg-knee-p (&rest args) (forward-message-to joint15 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun bishamon (&rest args) (instance* bishamon-robot :init args))
;; (format *error-output* "(instance bishamon-robot :init) for generating model~%")
