;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass itoki-900-shelf-object
  :super cascaded-link
  :slots (sensors
         handle0
         ))
(defmethod itoki-900-shelf-object
  (:init
   (&rest args &key (name "itoki-900-shelf") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 225.0 450.0 1040.0) (float-vector -225.0 450.0 1040.0) (float-vector -225.0 -450.0 1040.0) (float-vector 225.0 -450.0 1040.0)))
         (instance face :init :vertices (list (float-vector -225.0 450.0 1020.0) (float-vector 225.0 450.0 1020.0) (float-vector 225.0 -450.0 1020.0) (float-vector -225.0 -450.0 1020.0)))
         (instance face :init :vertices (list (float-vector 225.0 450.0 1040.0) (float-vector 225.0 450.0 1020.0) (float-vector -225.0 450.0 1020.0) (float-vector -225.0 450.0 1040.0)))
         (instance face :init :vertices (list (float-vector 225.0 -450.0 1040.0) (float-vector 225.0 -450.0 1020.0) (float-vector 225.0 450.0 1020.0) (float-vector 225.0 450.0 1040.0)))
         (instance face :init :vertices (list (float-vector -225.0 -450.0 1040.0) (float-vector -225.0 -450.0 1020.0) (float-vector 225.0 -450.0 1020.0) (float-vector 225.0 -450.0 1040.0)))
         (instance face :init :vertices (list (float-vector -225.0 450.0 1040.0) (float-vector -225.0 450.0 1020.0) (float-vector -225.0 -450.0 1020.0) (float-vector -225.0 -450.0 1040.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 225.0 450.0 20.0) (float-vector -225.0 450.0 20.0) (float-vector -225.0 -450.0 20.0) (float-vector 225.0 -450.0 20.0)))
         (instance face :init :vertices (list (float-vector -225.0 450.0 0.0) (float-vector 225.0 450.0 0.0) (float-vector 225.0 -450.0 0.0) (float-vector -225.0 -450.0 0.0)))
         (instance face :init :vertices (list (float-vector 225.0 450.0 20.0) (float-vector 225.0 450.0 0.0) (float-vector -225.0 450.0 0.0) (float-vector -225.0 450.0 20.0)))
         (instance face :init :vertices (list (float-vector 225.0 -450.0 20.0) (float-vector 225.0 -450.0 0.0) (float-vector 225.0 450.0 0.0) (float-vector 225.0 450.0 20.0)))
         (instance face :init :vertices (list (float-vector -225.0 -450.0 20.0) (float-vector -225.0 -450.0 0.0) (float-vector 225.0 -450.0 0.0) (float-vector 225.0 -450.0 20.0)))
         (instance face :init :vertices (list (float-vector -225.0 450.0 20.0) (float-vector -225.0 450.0 0.0) (float-vector -225.0 -450.0 0.0) (float-vector -225.0 -450.0 20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -205.0 430.0 1020.0) (float-vector -225.0 430.0 1020.0) (float-vector -225.0 -430.0 1020.0) (float-vector -205.0 -430.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 430.0 20.0) (float-vector -205.0 430.0 20.0) (float-vector -205.0 -430.0 20.0) (float-vector -225.0 -430.0 20.0)))
         (instance face :init :vertices (list (float-vector -205.0 430.0 1020.0) (float-vector -205.0 430.0 20.0) (float-vector -225.0 430.0 20.0) (float-vector -225.0 430.0 1020.0)))
         (instance face :init :vertices (list (float-vector -205.0 -430.0 1020.0) (float-vector -205.0 -430.0 20.0) (float-vector -205.0 430.0 20.0) (float-vector -205.0 430.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 -430.0 1020.0) (float-vector -225.0 -430.0 20.0) (float-vector -205.0 -430.0 20.0) (float-vector -205.0 -430.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 430.0 1020.0) (float-vector -225.0 430.0 20.0) (float-vector -225.0 -430.0 20.0) (float-vector -225.0 -430.0 1020.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 225.0 450.0 1020.0) (float-vector -225.0 450.0 1020.0) (float-vector -225.0 430.0 1020.0) (float-vector 225.0 430.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 450.0 20.0) (float-vector 225.0 450.0 20.0) (float-vector 225.0 430.0 20.0) (float-vector -225.0 430.0 20.0)))
         (instance face :init :vertices (list (float-vector 225.0 450.0 1020.0) (float-vector 225.0 450.0 20.0) (float-vector -225.0 450.0 20.0) (float-vector -225.0 450.0 1020.0)))
         (instance face :init :vertices (list (float-vector 225.0 430.0 1020.0) (float-vector 225.0 430.0 20.0) (float-vector 225.0 450.0 20.0) (float-vector 225.0 450.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 430.0 1020.0) (float-vector -225.0 430.0 20.0) (float-vector 225.0 430.0 20.0) (float-vector 225.0 430.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 450.0 1020.0) (float-vector -225.0 450.0 20.0) (float-vector -225.0 430.0 20.0) (float-vector -225.0 430.0 1020.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 225.0 -430.0 1020.0) (float-vector -225.0 -430.0 1020.0) (float-vector -225.0 -450.0 1020.0) (float-vector 225.0 -450.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 -430.0 20.0) (float-vector 225.0 -430.0 20.0) (float-vector 225.0 -450.0 20.0) (float-vector -225.0 -450.0 20.0)))
         (instance face :init :vertices (list (float-vector 225.0 -430.0 1020.0) (float-vector 225.0 -430.0 20.0) (float-vector -225.0 -430.0 20.0) (float-vector -225.0 -430.0 1020.0)))
         (instance face :init :vertices (list (float-vector 225.0 -450.0 1020.0) (float-vector 225.0 -450.0 20.0) (float-vector 225.0 -430.0 20.0) (float-vector 225.0 -430.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 -450.0 1020.0) (float-vector -225.0 -450.0 20.0) (float-vector 225.0 -450.0 20.0) (float-vector 225.0 -450.0 1020.0)))
         (instance face :init :vertices (list (float-vector -225.0 -430.0 1020.0) (float-vector -225.0 -430.0 20.0) (float-vector -225.0 -450.0 20.0) (float-vector -225.0 -450.0 1020.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 175.0 430.0 700.0) (float-vector -205.0 430.0 700.0) (float-vector -205.0 -430.0 700.0) (float-vector 175.0 -430.0 700.0)))
         (instance face :init :vertices (list (float-vector -205.0 430.0 680.0) (float-vector 175.0 430.0 680.0) (float-vector 175.0 -430.0 680.0) (float-vector -205.0 -430.0 680.0)))
         (instance face :init :vertices (list (float-vector 175.0 430.0 700.0) (float-vector 175.0 430.0 680.0) (float-vector -205.0 430.0 680.0) (float-vector -205.0 430.0 700.0)))
         (instance face :init :vertices (list (float-vector 175.0 -430.0 700.0) (float-vector 175.0 -430.0 680.0) (float-vector 175.0 430.0 680.0) (float-vector 175.0 430.0 700.0)))
         (instance face :init :vertices (list (float-vector -205.0 -430.0 700.0) (float-vector -205.0 -430.0 680.0) (float-vector 175.0 -430.0 680.0) (float-vector 175.0 -430.0 700.0)))
         (instance face :init :vertices (list (float-vector -205.0 430.0 700.0) (float-vector -205.0 430.0 680.0) (float-vector -205.0 -430.0 680.0) (float-vector -205.0 -430.0 700.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 175.0 430.0 360.0) (float-vector -205.0 430.0 360.0) (float-vector -205.0 -430.0 360.0) (float-vector 175.0 -430.0 360.0)))
         (instance face :init :vertices (list (float-vector -205.0 430.0 340.0) (float-vector 175.0 430.0 340.0) (float-vector 175.0 -430.0 340.0) (float-vector -205.0 -430.0 340.0)))
         (instance face :init :vertices (list (float-vector 175.0 430.0 360.0) (float-vector 175.0 430.0 340.0) (float-vector -205.0 430.0 340.0) (float-vector -205.0 430.0 360.0)))
         (instance face :init :vertices (list (float-vector 175.0 -430.0 360.0) (float-vector 175.0 -430.0 340.0) (float-vector 175.0 430.0 340.0) (float-vector 175.0 430.0 360.0)))
         (instance face :init :vertices (list (float-vector -205.0 -430.0 360.0) (float-vector -205.0 -430.0 340.0) (float-vector 175.0 -430.0 340.0) (float-vector 175.0 -430.0 360.0)))
         (instance face :init :vertices (list (float-vector -205.0 430.0 360.0) (float-vector -205.0 430.0 340.0) (float-vector -205.0 -430.0 340.0) (float-vector -205.0 -430.0 360.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :beige)
     (send (elt bc 1) :set-color :beige)
     (send (elt bc 2) :set-color :beige)
     (send (elt bc 3) :set-color :beige)
     (send (elt bc 4) :set-color :beige)
     (send (elt bc 5) :set-color :beige)
     (send (elt bc 6) :set-color :beige)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send blink0 :assoc handle0)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list  handle0) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun itoki-900-shelf (&rest args) (instance* itoki-900-shelf-object :init args))
;; (format *error-output* "(instance itoki-900-shelf-object :init) for generating model~%")
