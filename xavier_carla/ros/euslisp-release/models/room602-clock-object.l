;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room602-clock-object
  :super cascaded-link
  :slots (sensors
         joint0 joint1 joint2 ))
(defmethod room602-clock-object
  (:init
   (&rest args &key (name "room602-clock") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room602-clock-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 8.0 -35.4582 32.6682) (float-vector 8.0 0.0 28.0) (float-vector 8.0 35.4582 32.6682) (float-vector 8.0 68.5 46.3545) (float-vector 8.0 96.8736 68.1264) (float-vector 8.0 118.645 96.5) (float-vector 8.0 132.332 129.542) (float-vector 8.0 137.0 165.0) (float-vector 8.0 132.332 200.458) (float-vector 8.0 118.645 233.5) (float-vector 8.0 96.8736 261.874) (float-vector 8.0 68.5 283.645) (float-vector 8.0 35.4582 297.332) (float-vector 8.0 2.273737e-13 302.0) (float-vector 8.0 -35.4582 297.332) (float-vector 8.0 -68.5 283.645) (float-vector 8.0 -96.8736 261.874) (float-vector 8.0 -118.645 233.5) (float-vector 8.0 -132.332 200.458) (float-vector 8.0 -137.0 165.0) (float-vector 8.0 -132.332 129.542) (float-vector 8.0 -118.645 96.5) (float-vector 8.0 -96.8736 68.1264) (float-vector 8.0 -68.5 46.3545)))
         (instance face :init :vertices (list (float-vector 3.0 0.0 28.0) (float-vector 3.0 -35.4582 32.6682) (float-vector 3.0 -68.5 46.3545) (float-vector 3.0 -96.8736 68.1264) (float-vector 3.0 -118.645 96.5) (float-vector 3.0 -132.332 129.542) (float-vector 3.0 -137.0 165.0) (float-vector 3.0 -132.332 200.458) (float-vector 3.0 -118.645 233.5) (float-vector 3.0 -96.8736 261.874) (float-vector 3.0 -68.5 283.645) (float-vector 3.0 -35.4582 297.332) (float-vector 3.0 2.273737e-13 302.0) (float-vector 3.0 35.4582 297.332) (float-vector 3.0 68.5 283.645) (float-vector 3.0 96.8736 261.874) (float-vector 3.0 118.645 233.5) (float-vector 3.0 132.332 200.458) (float-vector 3.0 137.0 165.0) (float-vector 3.0 132.332 129.542) (float-vector 3.0 118.645 96.5) (float-vector 3.0 96.8736 68.1264) (float-vector 3.0 68.5 46.3545) (float-vector 3.0 35.4582 32.6682)))
         (instance face :init :vertices (list (float-vector 8.0 -35.4582 32.6682) (float-vector 3.0 -35.4582 32.6682) (float-vector 3.0 0.0 28.0) (float-vector 8.0 0.0 28.0)))
         (instance face :init :vertices (list (float-vector 8.0 -68.5 46.3545) (float-vector 3.0 -68.5 46.3545) (float-vector 3.0 -35.4582 32.6682) (float-vector 8.0 -35.4582 32.6682)))
         (instance face :init :vertices (list (float-vector 8.0 -96.8736 68.1264) (float-vector 3.0 -96.8736 68.1264) (float-vector 3.0 -68.5 46.3545) (float-vector 8.0 -68.5 46.3545)))
         (instance face :init :vertices (list (float-vector 8.0 -118.645 96.5) (float-vector 3.0 -118.645 96.5) (float-vector 3.0 -96.8736 68.1264) (float-vector 8.0 -96.8736 68.1264)))
         (instance face :init :vertices (list (float-vector 8.0 -132.332 129.542) (float-vector 3.0 -132.332 129.542) (float-vector 3.0 -118.645 96.5) (float-vector 8.0 -118.645 96.5)))
         (instance face :init :vertices (list (float-vector 8.0 -137.0 165.0) (float-vector 3.0 -137.0 165.0) (float-vector 3.0 -132.332 129.542) (float-vector 8.0 -132.332 129.542)))
         (instance face :init :vertices (list (float-vector 8.0 -132.332 200.458) (float-vector 3.0 -132.332 200.458) (float-vector 3.0 -137.0 165.0) (float-vector 8.0 -137.0 165.0)))
         (instance face :init :vertices (list (float-vector 8.0 -118.645 233.5) (float-vector 3.0 -118.645 233.5) (float-vector 3.0 -132.332 200.458) (float-vector 8.0 -132.332 200.458)))
         (instance face :init :vertices (list (float-vector 8.0 -96.8736 261.874) (float-vector 3.0 -96.8736 261.874) (float-vector 3.0 -118.645 233.5) (float-vector 8.0 -118.645 233.5)))
         (instance face :init :vertices (list (float-vector 8.0 -68.5 283.645) (float-vector 3.0 -68.5 283.645) (float-vector 3.0 -96.8736 261.874) (float-vector 8.0 -96.8736 261.874)))
         (instance face :init :vertices (list (float-vector 8.0 -35.4582 297.332) (float-vector 3.0 -35.4582 297.332) (float-vector 3.0 -68.5 283.645) (float-vector 8.0 -68.5 283.645)))
         (instance face :init :vertices (list (float-vector 8.0 2.273737e-13 302.0) (float-vector 3.0 2.273737e-13 302.0) (float-vector 3.0 -35.4582 297.332) (float-vector 8.0 -35.4582 297.332)))
         (instance face :init :vertices (list (float-vector 8.0 35.4582 297.332) (float-vector 3.0 35.4582 297.332) (float-vector 3.0 2.273737e-13 302.0) (float-vector 8.0 2.273737e-13 302.0)))
         (instance face :init :vertices (list (float-vector 8.0 68.5 283.645) (float-vector 3.0 68.5 283.645) (float-vector 3.0 35.4582 297.332) (float-vector 8.0 35.4582 297.332)))
         (instance face :init :vertices (list (float-vector 8.0 96.8736 261.874) (float-vector 3.0 96.8736 261.874) (float-vector 3.0 68.5 283.645) (float-vector 8.0 68.5 283.645)))
         (instance face :init :vertices (list (float-vector 8.0 118.645 233.5) (float-vector 3.0 118.645 233.5) (float-vector 3.0 96.8736 261.874) (float-vector 8.0 96.8736 261.874)))
         (instance face :init :vertices (list (float-vector 8.0 132.332 200.458) (float-vector 3.0 132.332 200.458) (float-vector 3.0 118.645 233.5) (float-vector 8.0 118.645 233.5)))
         (instance face :init :vertices (list (float-vector 8.0 137.0 165.0) (float-vector 3.0 137.0 165.0) (float-vector 3.0 132.332 200.458) (float-vector 8.0 132.332 200.458)))
         (instance face :init :vertices (list (float-vector 8.0 132.332 129.542) (float-vector 3.0 132.332 129.542) (float-vector 3.0 137.0 165.0) (float-vector 8.0 137.0 165.0)))
         (instance face :init :vertices (list (float-vector 8.0 118.645 96.5) (float-vector 3.0 118.645 96.5) (float-vector 3.0 132.332 129.542) (float-vector 8.0 132.332 129.542)))
         (instance face :init :vertices (list (float-vector 8.0 96.8736 68.1264) (float-vector 3.0 96.8736 68.1264) (float-vector 3.0 118.645 96.5) (float-vector 8.0 118.645 96.5)))
         (instance face :init :vertices (list (float-vector 8.0 68.5 46.3545) (float-vector 3.0 68.5 46.3545) (float-vector 3.0 96.8736 68.1264) (float-vector 8.0 96.8736 68.1264)))
         (instance face :init :vertices (list (float-vector 8.0 35.4582 32.6682) (float-vector 3.0 35.4582 32.6682) (float-vector 3.0 68.5 46.3545) (float-vector 8.0 68.5 46.3545)))
         (instance face :init :vertices (list (float-vector 8.0 0.0 28.0) (float-vector 3.0 0.0 28.0) (float-vector 3.0 35.4582 32.6682) (float-vector 8.0 35.4582 32.6682)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 7.0 0.0 0.0) (float-vector 7.0 42.7051 5.62224) (float-vector 25.0 42.7051 5.62224) (float-vector 25.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 7.0 82.5 22.1058) (float-vector 25.0 82.5 22.1058) (float-vector 25.0 42.7051 5.62224) (float-vector 7.0 42.7051 5.62224)))
         (instance face :init :vertices (list (float-vector 7.0 116.673 48.3274) (float-vector 25.0 116.673 48.3274) (float-vector 25.0 82.5 22.1058) (float-vector 7.0 82.5 22.1058)))
         (instance face :init :vertices (list (float-vector 7.0 142.894 82.5) (float-vector 25.0 142.894 82.5) (float-vector 25.0 116.673 48.3274) (float-vector 7.0 116.673 48.3274)))
         (instance face :init :vertices (list (float-vector 7.0 159.378 122.295) (float-vector 25.0 159.378 122.295) (float-vector 25.0 142.894 82.5) (float-vector 7.0 142.894 82.5)))
         (instance face :init :vertices (list (float-vector 7.0 165.0 165.0) (float-vector 25.0 165.0 165.0) (float-vector 25.0 159.378 122.295) (float-vector 7.0 159.378 122.295)))
         (instance face :init :vertices (list (float-vector 7.0 159.378 207.705) (float-vector 25.0 159.378 207.705) (float-vector 25.0 165.0 165.0) (float-vector 7.0 165.0 165.0)))
         (instance face :init :vertices (list (float-vector 7.0 142.894 247.5) (float-vector 25.0 142.894 247.5) (float-vector 25.0 159.378 207.705) (float-vector 7.0 159.378 207.705)))
         (instance face :init :vertices (list (float-vector 7.0 116.673 281.673) (float-vector 25.0 116.673 281.673) (float-vector 25.0 142.894 247.5) (float-vector 7.0 142.894 247.5)))
         (instance face :init :vertices (list (float-vector 7.0 82.5 307.894) (float-vector 25.0 82.5 307.894) (float-vector 25.0 116.673 281.673) (float-vector 7.0 116.673 281.673)))
         (instance face :init :vertices (list (float-vector 7.0 42.7051 324.378) (float-vector 25.0 42.7051 324.378) (float-vector 25.0 82.5 307.894) (float-vector 7.0 82.5 307.894)))
         (instance face :init :vertices (list (float-vector 7.0 2.273737e-13 330.0) (float-vector 25.0 2.273737e-13 330.0) (float-vector 25.0 42.7051 324.378) (float-vector 7.0 42.7051 324.378)))
         (instance face :init :vertices (list (float-vector 7.0 -42.7051 324.378) (float-vector 25.0 -42.7051 324.378) (float-vector 25.0 2.273737e-13 330.0) (float-vector 7.0 2.273737e-13 330.0)))
         (instance face :init :vertices (list (float-vector 7.0 -82.5 307.894) (float-vector 25.0 -82.5 307.894) (float-vector 25.0 -42.7051 324.378) (float-vector 7.0 -42.7051 324.378)))
         (instance face :init :vertices (list (float-vector 7.0 -116.673 281.673) (float-vector 25.0 -116.673 281.673) (float-vector 25.0 -82.5 307.894) (float-vector 7.0 -82.5 307.894)))
         (instance face :init :vertices (list (float-vector 7.0 -142.894 247.5) (float-vector 25.0 -142.894 247.5) (float-vector 25.0 -116.673 281.673) (float-vector 7.0 -116.673 281.673)))
         (instance face :init :vertices (list (float-vector 7.0 -159.378 207.705) (float-vector 25.0 -159.378 207.705) (float-vector 25.0 -142.894 247.5) (float-vector 7.0 -142.894 247.5)))
         (instance face :init :vertices (list (float-vector 7.0 -165.0 165.0) (float-vector 25.0 -165.0 165.0) (float-vector 25.0 -159.378 207.705) (float-vector 7.0 -159.378 207.705)))
         (instance face :init :vertices (list (float-vector 7.0 -159.378 122.295) (float-vector 25.0 -159.378 122.295) (float-vector 25.0 -165.0 165.0) (float-vector 7.0 -165.0 165.0)))
         (instance face :init :vertices (list (float-vector 7.0 -142.894 82.5) (float-vector 25.0 -142.894 82.5) (float-vector 25.0 -159.378 122.295) (float-vector 7.0 -159.378 122.295)))
         (instance face :init :vertices (list (float-vector 7.0 -116.673 48.3274) (float-vector 25.0 -116.673 48.3274) (float-vector 25.0 -142.894 82.5) (float-vector 7.0 -142.894 82.5)))
         (instance face :init :vertices (list (float-vector 7.0 -82.5 22.1058) (float-vector 25.0 -82.5 22.1058) (float-vector 25.0 -116.673 48.3274) (float-vector 7.0 -116.673 48.3274)))
         (instance face :init :vertices (list (float-vector 7.0 -42.7051 5.62224) (float-vector 25.0 -42.7051 5.62224) (float-vector 25.0 -82.5 22.1058) (float-vector 7.0 -82.5 22.1058)))
         (instance face :init :vertices (list (float-vector 25.0 0.0 0.0) (float-vector 25.0 42.7051 5.62224) (float-vector 25.0 82.5 22.1058) (float-vector 25.0 116.673 48.3274) (float-vector 25.0 142.894 82.5) (float-vector 25.0 159.378 122.295) (float-vector 25.0 165.0 165.0) (float-vector 25.0 159.378 207.705) (float-vector 25.0 142.894 247.5) (float-vector 25.0 116.673 281.673) (float-vector 25.0 82.5 307.894) (float-vector 25.0 42.7051 324.378) (float-vector 25.0 2.273737e-13 330.0) (float-vector 25.0 -42.7051 324.378) (float-vector 25.0 -82.5 307.894) (float-vector 25.0 -116.673 281.673) (float-vector 25.0 -142.894 247.5) (float-vector 25.0 -159.378 207.705) (float-vector 25.0 -165.0 165.0) (float-vector 25.0 -159.378 122.295) (float-vector 25.0 -142.894 82.5) (float-vector 25.0 -116.673 48.3274) (float-vector 25.0 -82.5 22.1058) (float-vector 25.0 -42.7051 5.62224))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 25.0 -35.4582 32.6682) (float-vector 25.0 -68.5 46.3545) (float-vector 25.0 -96.8736 68.1264) (float-vector 25.0 -118.645 96.5) (float-vector 25.0 -132.332 129.542) (float-vector 25.0 -137.0 165.0) (float-vector 25.0 -132.332 200.458) (float-vector 25.0 -118.645 233.5) (float-vector 25.0 -96.8736 261.874) (float-vector 25.0 -68.5 283.645) (float-vector 25.0 -35.4582 297.332) (float-vector 25.0 2.273737e-13 302.0) (float-vector 25.0 35.4582 297.332) (float-vector 25.0 68.5 283.645) (float-vector 25.0 96.8736 261.874) (float-vector 25.0 118.645 233.5) (float-vector 25.0 132.332 200.458) (float-vector 25.0 137.0 165.0) (float-vector 25.0 132.332 129.542) (float-vector 25.0 118.645 96.5) (float-vector 25.0 96.8736 68.1264) (float-vector 25.0 68.5 46.3545) (float-vector 25.0 35.4582 32.6682) (float-vector 25.0 0.0 28.0)))
))
         (instance face :init :vertices (list (float-vector 7.0 -42.7051 5.62224) (float-vector 7.0 -82.5 22.1058) (float-vector 7.0 -116.673 48.3274) (float-vector 7.0 -142.894 82.5) (float-vector 7.0 -159.378 122.295) (float-vector 7.0 -165.0 165.0) (float-vector 7.0 -159.378 207.705) (float-vector 7.0 -142.894 247.5) (float-vector 7.0 -116.673 281.673) (float-vector 7.0 -82.5 307.894) (float-vector 7.0 -42.7051 324.378) (float-vector 7.0 2.273737e-13 330.0) (float-vector 7.0 42.7051 324.378) (float-vector 7.0 82.5 307.894) (float-vector 7.0 116.673 281.673) (float-vector 7.0 142.894 247.5) (float-vector 7.0 159.378 207.705) (float-vector 7.0 165.0 165.0) (float-vector 7.0 159.378 122.295) (float-vector 7.0 142.894 82.5) (float-vector 7.0 116.673 48.3274) (float-vector 7.0 82.5 22.1058) (float-vector 7.0 42.7051 5.62224) (float-vector 7.0 0.0 0.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.0 -35.4582 32.6682) (float-vector 7.0 0.0 28.0) (float-vector 7.0 35.4582 32.6682) (float-vector 7.0 68.5 46.3545) (float-vector 7.0 96.8736 68.1264) (float-vector 7.0 118.645 96.5) (float-vector 7.0 132.332 129.542) (float-vector 7.0 137.0 165.0) (float-vector 7.0 132.332 200.458) (float-vector 7.0 118.645 233.5) (float-vector 7.0 96.8736 261.874) (float-vector 7.0 68.5 283.645) (float-vector 7.0 35.4582 297.332) (float-vector 7.0 2.273737e-13 302.0) (float-vector 7.0 -35.4582 297.332) (float-vector 7.0 -68.5 283.645) (float-vector 7.0 -96.8736 261.874) (float-vector 7.0 -118.645 233.5) (float-vector 7.0 -132.332 200.458) (float-vector 7.0 -137.0 165.0) (float-vector 7.0 -132.332 129.542) (float-vector 7.0 -118.645 96.5) (float-vector 7.0 -96.8736 68.1264) (float-vector 7.0 -68.5 46.3545)))
))
         (instance face :init :vertices (list (float-vector 7.0 0.0 0.0) (float-vector 25.0 0.0 0.0) (float-vector 25.0 -42.7051 5.62224) (float-vector 7.0 -42.7051 5.62224)))
         (instance face :init :vertices (list (float-vector 25.0 0.0 28.0) (float-vector 25.0 35.4582 32.6682) (float-vector 7.0 35.4582 32.6682) (float-vector 7.0 0.0 28.0)))
         (instance face :init :vertices (list (float-vector 7.0 68.5 46.3545) (float-vector 7.0 35.4582 32.6682) (float-vector 25.0 35.4582 32.6682) (float-vector 25.0 68.5 46.3545)))
         (instance face :init :vertices (list (float-vector 7.0 96.8736 68.1264) (float-vector 7.0 68.5 46.3545) (float-vector 25.0 68.5 46.3545) (float-vector 25.0 96.8736 68.1264)))
         (instance face :init :vertices (list (float-vector 7.0 118.645 96.5) (float-vector 7.0 96.8736 68.1264) (float-vector 25.0 96.8736 68.1264) (float-vector 25.0 118.645 96.5)))
         (instance face :init :vertices (list (float-vector 7.0 132.332 129.542) (float-vector 7.0 118.645 96.5) (float-vector 25.0 118.645 96.5) (float-vector 25.0 132.332 129.542)))
         (instance face :init :vertices (list (float-vector 7.0 137.0 165.0) (float-vector 7.0 132.332 129.542) (float-vector 25.0 132.332 129.542) (float-vector 25.0 137.0 165.0)))
         (instance face :init :vertices (list (float-vector 7.0 132.332 200.458) (float-vector 7.0 137.0 165.0) (float-vector 25.0 137.0 165.0) (float-vector 25.0 132.332 200.458)))
         (instance face :init :vertices (list (float-vector 7.0 118.645 233.5) (float-vector 7.0 132.332 200.458) (float-vector 25.0 132.332 200.458) (float-vector 25.0 118.645 233.5)))
         (instance face :init :vertices (list (float-vector 7.0 96.8736 261.874) (float-vector 7.0 118.645 233.5) (float-vector 25.0 118.645 233.5) (float-vector 25.0 96.8736 261.874)))
         (instance face :init :vertices (list (float-vector 7.0 68.5 283.645) (float-vector 7.0 96.8736 261.874) (float-vector 25.0 96.8736 261.874) (float-vector 25.0 68.5 283.645)))
         (instance face :init :vertices (list (float-vector 7.0 35.4582 297.332) (float-vector 7.0 68.5 283.645) (float-vector 25.0 68.5 283.645) (float-vector 25.0 35.4582 297.332)))
         (instance face :init :vertices (list (float-vector 7.0 2.273737e-13 302.0) (float-vector 7.0 35.4582 297.332) (float-vector 25.0 35.4582 297.332) (float-vector 25.0 2.273737e-13 302.0)))
         (instance face :init :vertices (list (float-vector 7.0 -35.4582 297.332) (float-vector 7.0 2.273737e-13 302.0) (float-vector 25.0 2.273737e-13 302.0) (float-vector 25.0 -35.4582 297.332)))
         (instance face :init :vertices (list (float-vector 7.0 -68.5 283.645) (float-vector 7.0 -35.4582 297.332) (float-vector 25.0 -35.4582 297.332) (float-vector 25.0 -68.5 283.645)))
         (instance face :init :vertices (list (float-vector 7.0 -96.8736 261.874) (float-vector 7.0 -68.5 283.645) (float-vector 25.0 -68.5 283.645) (float-vector 25.0 -96.8736 261.874)))
         (instance face :init :vertices (list (float-vector 7.0 -118.645 233.5) (float-vector 7.0 -96.8736 261.874) (float-vector 25.0 -96.8736 261.874) (float-vector 25.0 -118.645 233.5)))
         (instance face :init :vertices (list (float-vector 7.0 -132.332 200.458) (float-vector 7.0 -118.645 233.5) (float-vector 25.0 -118.645 233.5) (float-vector 25.0 -132.332 200.458)))
         (instance face :init :vertices (list (float-vector 7.0 -137.0 165.0) (float-vector 7.0 -132.332 200.458) (float-vector 25.0 -132.332 200.458) (float-vector 25.0 -137.0 165.0)))
         (instance face :init :vertices (list (float-vector 7.0 -132.332 129.542) (float-vector 7.0 -137.0 165.0) (float-vector 25.0 -137.0 165.0) (float-vector 25.0 -132.332 129.542)))
         (instance face :init :vertices (list (float-vector 7.0 -118.645 96.5) (float-vector 7.0 -132.332 129.542) (float-vector 25.0 -132.332 129.542) (float-vector 25.0 -118.645 96.5)))
         (instance face :init :vertices (list (float-vector 7.0 -96.8736 68.1264) (float-vector 7.0 -118.645 96.5) (float-vector 25.0 -118.645 96.5) (float-vector 25.0 -96.8736 68.1264)))
         (instance face :init :vertices (list (float-vector 7.0 -68.5 46.3545) (float-vector 7.0 -96.8736 68.1264) (float-vector 25.0 -96.8736 68.1264) (float-vector 25.0 -68.5 46.3545)))
         (instance face :init :vertices (list (float-vector 7.0 -35.4582 32.6682) (float-vector 7.0 -68.5 46.3545) (float-vector 25.0 -68.5 46.3545) (float-vector 25.0 -35.4582 32.6682)))
         (instance face :init :vertices (list (float-vector 25.0 0.0 28.0) (float-vector 7.0 0.0 28.0) (float-vector 7.0 -35.4582 32.6682) (float-vector 25.0 -35.4582 32.6682)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 7.0 -42.7051 5.62224) (float-vector 7.0 0.0 0.0) (float-vector 7.0 42.7051 5.62224) (float-vector 7.0 82.5 22.1058) (float-vector 7.0 116.673 48.3274) (float-vector 7.0 142.894 82.5) (float-vector 7.0 159.378 122.295) (float-vector 7.0 165.0 165.0) (float-vector 7.0 159.378 207.705) (float-vector 7.0 142.894 247.5) (float-vector 7.0 116.673 281.673) (float-vector 7.0 82.5 307.894) (float-vector 7.0 42.7051 324.378) (float-vector 7.0 2.273737e-13 330.0) (float-vector 7.0 -42.7051 324.378) (float-vector 7.0 -82.5 307.894) (float-vector 7.0 -116.673 281.673) (float-vector 7.0 -142.894 247.5) (float-vector 7.0 -159.378 207.705) (float-vector 7.0 -165.0 165.0) (float-vector 7.0 -159.378 122.295) (float-vector 7.0 -142.894 82.5) (float-vector 7.0 -116.673 48.3274) (float-vector 7.0 -82.5 22.1058)))
         (instance face :init :vertices (list (float-vector -25.0 0.0 0.0) (float-vector -25.0 -42.7051 5.62224) (float-vector -25.0 -82.5 22.1058) (float-vector -25.0 -116.673 48.3274) (float-vector -25.0 -142.894 82.5) (float-vector -25.0 -159.378 122.295) (float-vector -25.0 -165.0 165.0) (float-vector -25.0 -159.378 207.705) (float-vector -25.0 -142.894 247.5) (float-vector -25.0 -116.673 281.673) (float-vector -25.0 -82.5 307.894) (float-vector -25.0 -42.7051 324.378) (float-vector -25.0 2.273737e-13 330.0) (float-vector -25.0 42.7051 324.378) (float-vector -25.0 82.5 307.894) (float-vector -25.0 116.673 281.673) (float-vector -25.0 142.894 247.5) (float-vector -25.0 159.378 207.705) (float-vector -25.0 165.0 165.0) (float-vector -25.0 159.378 122.295) (float-vector -25.0 142.894 82.5) (float-vector -25.0 116.673 48.3274) (float-vector -25.0 82.5 22.1058) (float-vector -25.0 42.7051 5.62224)))
         (instance face :init :vertices (list (float-vector 7.0 -42.7051 5.62224) (float-vector -25.0 -42.7051 5.62224) (float-vector -25.0 0.0 0.0) (float-vector 7.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 7.0 -82.5 22.1058) (float-vector -25.0 -82.5 22.1058) (float-vector -25.0 -42.7051 5.62224) (float-vector 7.0 -42.7051 5.62224)))
         (instance face :init :vertices (list (float-vector 7.0 -116.673 48.3274) (float-vector -25.0 -116.673 48.3274) (float-vector -25.0 -82.5 22.1058) (float-vector 7.0 -82.5 22.1058)))
         (instance face :init :vertices (list (float-vector 7.0 -142.894 82.5) (float-vector -25.0 -142.894 82.5) (float-vector -25.0 -116.673 48.3274) (float-vector 7.0 -116.673 48.3274)))
         (instance face :init :vertices (list (float-vector 7.0 -159.378 122.295) (float-vector -25.0 -159.378 122.295) (float-vector -25.0 -142.894 82.5) (float-vector 7.0 -142.894 82.5)))
         (instance face :init :vertices (list (float-vector 7.0 -165.0 165.0) (float-vector -25.0 -165.0 165.0) (float-vector -25.0 -159.378 122.295) (float-vector 7.0 -159.378 122.295)))
         (instance face :init :vertices (list (float-vector 7.0 -159.378 207.705) (float-vector -25.0 -159.378 207.705) (float-vector -25.0 -165.0 165.0) (float-vector 7.0 -165.0 165.0)))
         (instance face :init :vertices (list (float-vector 7.0 -142.894 247.5) (float-vector -25.0 -142.894 247.5) (float-vector -25.0 -159.378 207.705) (float-vector 7.0 -159.378 207.705)))
         (instance face :init :vertices (list (float-vector 7.0 -116.673 281.673) (float-vector -25.0 -116.673 281.673) (float-vector -25.0 -142.894 247.5) (float-vector 7.0 -142.894 247.5)))
         (instance face :init :vertices (list (float-vector 7.0 -82.5 307.894) (float-vector -25.0 -82.5 307.894) (float-vector -25.0 -116.673 281.673) (float-vector 7.0 -116.673 281.673)))
         (instance face :init :vertices (list (float-vector 7.0 -42.7051 324.378) (float-vector -25.0 -42.7051 324.378) (float-vector -25.0 -82.5 307.894) (float-vector 7.0 -82.5 307.894)))
         (instance face :init :vertices (list (float-vector 7.0 2.273737e-13 330.0) (float-vector -25.0 2.273737e-13 330.0) (float-vector -25.0 -42.7051 324.378) (float-vector 7.0 -42.7051 324.378)))
         (instance face :init :vertices (list (float-vector 7.0 42.7051 324.378) (float-vector -25.0 42.7051 324.378) (float-vector -25.0 2.273737e-13 330.0) (float-vector 7.0 2.273737e-13 330.0)))
         (instance face :init :vertices (list (float-vector 7.0 82.5 307.894) (float-vector -25.0 82.5 307.894) (float-vector -25.0 42.7051 324.378) (float-vector 7.0 42.7051 324.378)))
         (instance face :init :vertices (list (float-vector 7.0 116.673 281.673) (float-vector -25.0 116.673 281.673) (float-vector -25.0 82.5 307.894) (float-vector 7.0 82.5 307.894)))
         (instance face :init :vertices (list (float-vector 7.0 142.894 247.5) (float-vector -25.0 142.894 247.5) (float-vector -25.0 116.673 281.673) (float-vector 7.0 116.673 281.673)))
         (instance face :init :vertices (list (float-vector 7.0 159.378 207.705) (float-vector -25.0 159.378 207.705) (float-vector -25.0 142.894 247.5) (float-vector 7.0 142.894 247.5)))
         (instance face :init :vertices (list (float-vector 7.0 165.0 165.0) (float-vector -25.0 165.0 165.0) (float-vector -25.0 159.378 207.705) (float-vector 7.0 159.378 207.705)))
         (instance face :init :vertices (list (float-vector 7.0 159.378 122.295) (float-vector -25.0 159.378 122.295) (float-vector -25.0 165.0 165.0) (float-vector 7.0 165.0 165.0)))
         (instance face :init :vertices (list (float-vector 7.0 142.894 82.5) (float-vector -25.0 142.894 82.5) (float-vector -25.0 159.378 122.295) (float-vector 7.0 159.378 122.295)))
         (instance face :init :vertices (list (float-vector 7.0 116.673 48.3274) (float-vector -25.0 116.673 48.3274) (float-vector -25.0 142.894 82.5) (float-vector 7.0 142.894 82.5)))
         (instance face :init :vertices (list (float-vector 7.0 82.5 22.1058) (float-vector -25.0 82.5 22.1058) (float-vector -25.0 116.673 48.3274) (float-vector 7.0 116.673 48.3274)))
         (instance face :init :vertices (list (float-vector 7.0 42.7051 5.62224) (float-vector -25.0 42.7051 5.62224) (float-vector -25.0 82.5 22.1058) (float-vector 7.0 82.5 22.1058)))
         (instance face :init :vertices (list (float-vector 7.0 0.0 0.0) (float-vector -25.0 0.0 0.0) (float-vector -25.0 42.7051 5.62224) (float-vector 7.0 42.7051 5.62224)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (gl::transparent (elt bc 0) 0.1)
     (send (elt bc 1) :set-color :antiquewhite3)
     (send (elt bc 2) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-clock-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-clock-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 2.5 68.5) (float-vector -0.5 2.5 68.5) (float-vector -0.5 -2.5 68.5) (float-vector 0.5 -2.5 68.5)))
         (instance face :init :vertices (list (float-vector -0.5 2.5 0.0) (float-vector 0.5 2.5 0.0) (float-vector 0.5 -2.5 0.0) (float-vector -0.5 -2.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 2.5 68.5) (float-vector 0.5 2.5 0.0) (float-vector -0.5 2.5 0.0) (float-vector -0.5 2.5 68.5)))
         (instance face :init :vertices (list (float-vector 0.5 -2.5 68.5) (float-vector 0.5 -2.5 0.0) (float-vector 0.5 2.5 0.0) (float-vector 0.5 2.5 68.5)))
         (instance face :init :vertices (list (float-vector -0.5 -2.5 68.5) (float-vector -0.5 -2.5 0.0) (float-vector 0.5 -2.5 0.0) (float-vector 0.5 -2.5 68.5)))
         (instance face :init :vertices (list (float-vector -0.5 2.5 68.5) (float-vector -0.5 2.5 0.0) (float-vector -0.5 -2.5 0.0) (float-vector -0.5 -2.5 68.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 -3.75 -6.49519) (float-vector 0.5 0.0 -7.5) (float-vector 0.5 3.75 -6.49519) (float-vector 0.5 6.49519 -3.75) (float-vector 0.5 7.5 0.0) (float-vector 0.5 6.49519 3.75) (float-vector 0.5 3.75 6.49519) (float-vector 0.5 0.0 7.5) (float-vector 0.5 -3.75 6.49519) (float-vector 0.5 -6.49519 3.75) (float-vector 0.5 -7.5 0.0) (float-vector 0.5 -6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector -0.5 0.0 -7.5) (float-vector -0.5 -3.75 -6.49519) (float-vector -0.5 -6.49519 -3.75) (float-vector -0.5 -7.5 0.0) (float-vector -0.5 -6.49519 3.75) (float-vector -0.5 -3.75 6.49519) (float-vector -0.5 0.0 7.5) (float-vector -0.5 3.75 6.49519) (float-vector -0.5 6.49519 3.75) (float-vector -0.5 7.5 0.0) (float-vector -0.5 6.49519 -3.75) (float-vector -0.5 3.75 -6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 -3.75 -6.49519) (float-vector -0.5 -3.75 -6.49519) (float-vector -0.5 0.0 -7.5) (float-vector 0.5 0.0 -7.5)))
         (instance face :init :vertices (list (float-vector 0.5 -6.49519 -3.75) (float-vector -0.5 -6.49519 -3.75) (float-vector -0.5 -3.75 -6.49519) (float-vector 0.5 -3.75 -6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 -7.5 0.0) (float-vector -0.5 -7.5 0.0) (float-vector -0.5 -6.49519 -3.75) (float-vector 0.5 -6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector 0.5 -6.49519 3.75) (float-vector -0.5 -6.49519 3.75) (float-vector -0.5 -7.5 0.0) (float-vector 0.5 -7.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 -3.75 6.49519) (float-vector -0.5 -3.75 6.49519) (float-vector -0.5 -6.49519 3.75) (float-vector 0.5 -6.49519 3.75)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 7.5) (float-vector -0.5 0.0 7.5) (float-vector -0.5 -3.75 6.49519) (float-vector 0.5 -3.75 6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 3.75 6.49519) (float-vector -0.5 3.75 6.49519) (float-vector -0.5 0.0 7.5) (float-vector 0.5 0.0 7.5)))
         (instance face :init :vertices (list (float-vector 0.5 6.49519 3.75) (float-vector -0.5 6.49519 3.75) (float-vector -0.5 3.75 6.49519) (float-vector 0.5 3.75 6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 7.5 0.0) (float-vector -0.5 7.5 0.0) (float-vector -0.5 6.49519 3.75) (float-vector 0.5 6.49519 3.75)))
         (instance face :init :vertices (list (float-vector 0.5 6.49519 -3.75) (float-vector -0.5 6.49519 -3.75) (float-vector -0.5 7.5 0.0) (float-vector 0.5 7.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 3.75 -6.49519) (float-vector -0.5 3.75 -6.49519) (float-vector -0.5 6.49519 -3.75) (float-vector 0.5 6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 -7.5) (float-vector -0.5 0.0 -7.5) (float-vector -0.5 3.75 -6.49519) (float-vector 0.5 3.75 -6.49519)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray10)
     (send (elt bc 1) :set-color :gray10)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-clock-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-clock-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 1.25 109.6) (float-vector -0.5 1.25 109.6) (float-vector -0.5 -1.25 109.6) (float-vector 0.5 -1.25 109.6)))
         (instance face :init :vertices (list (float-vector -0.5 1.25 0.0) (float-vector 0.5 1.25 0.0) (float-vector 0.5 -1.25 0.0) (float-vector -0.5 -1.25 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 1.25 109.6) (float-vector 0.5 1.25 0.0) (float-vector -0.5 1.25 0.0) (float-vector -0.5 1.25 109.6)))
         (instance face :init :vertices (list (float-vector 0.5 -1.25 109.6) (float-vector 0.5 -1.25 0.0) (float-vector 0.5 1.25 0.0) (float-vector 0.5 1.25 109.6)))
         (instance face :init :vertices (list (float-vector -0.5 -1.25 109.6) (float-vector -0.5 -1.25 0.0) (float-vector 0.5 -1.25 0.0) (float-vector 0.5 -1.25 109.6)))
         (instance face :init :vertices (list (float-vector -0.5 1.25 109.6) (float-vector -0.5 1.25 0.0) (float-vector -0.5 -1.25 0.0) (float-vector -0.5 -1.25 109.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 -3.75 -6.49519) (float-vector 0.5 0.0 -7.5) (float-vector 0.5 3.75 -6.49519) (float-vector 0.5 6.49519 -3.75) (float-vector 0.5 7.5 0.0) (float-vector 0.5 6.49519 3.75) (float-vector 0.5 3.75 6.49519) (float-vector 0.5 0.0 7.5) (float-vector 0.5 -3.75 6.49519) (float-vector 0.5 -6.49519 3.75) (float-vector 0.5 -7.5 0.0) (float-vector 0.5 -6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector -0.5 0.0 -7.5) (float-vector -0.5 -3.75 -6.49519) (float-vector -0.5 -6.49519 -3.75) (float-vector -0.5 -7.5 0.0) (float-vector -0.5 -6.49519 3.75) (float-vector -0.5 -3.75 6.49519) (float-vector -0.5 0.0 7.5) (float-vector -0.5 3.75 6.49519) (float-vector -0.5 6.49519 3.75) (float-vector -0.5 7.5 0.0) (float-vector -0.5 6.49519 -3.75) (float-vector -0.5 3.75 -6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 -3.75 -6.49519) (float-vector -0.5 -3.75 -6.49519) (float-vector -0.5 0.0 -7.5) (float-vector 0.5 0.0 -7.5)))
         (instance face :init :vertices (list (float-vector 0.5 -6.49519 -3.75) (float-vector -0.5 -6.49519 -3.75) (float-vector -0.5 -3.75 -6.49519) (float-vector 0.5 -3.75 -6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 -7.5 0.0) (float-vector -0.5 -7.5 0.0) (float-vector -0.5 -6.49519 -3.75) (float-vector 0.5 -6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector 0.5 -6.49519 3.75) (float-vector -0.5 -6.49519 3.75) (float-vector -0.5 -7.5 0.0) (float-vector 0.5 -7.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 -3.75 6.49519) (float-vector -0.5 -3.75 6.49519) (float-vector -0.5 -6.49519 3.75) (float-vector 0.5 -6.49519 3.75)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 7.5) (float-vector -0.5 0.0 7.5) (float-vector -0.5 -3.75 6.49519) (float-vector 0.5 -3.75 6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 3.75 6.49519) (float-vector -0.5 3.75 6.49519) (float-vector -0.5 0.0 7.5) (float-vector 0.5 0.0 7.5)))
         (instance face :init :vertices (list (float-vector 0.5 6.49519 3.75) (float-vector -0.5 6.49519 3.75) (float-vector -0.5 3.75 6.49519) (float-vector 0.5 3.75 6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 7.5 0.0) (float-vector -0.5 7.5 0.0) (float-vector -0.5 6.49519 3.75) (float-vector 0.5 6.49519 3.75)))
         (instance face :init :vertices (list (float-vector 0.5 6.49519 -3.75) (float-vector -0.5 6.49519 -3.75) (float-vector -0.5 7.5 0.0) (float-vector 0.5 7.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 3.75 -6.49519) (float-vector -0.5 3.75 -6.49519) (float-vector -0.5 6.49519 -3.75) (float-vector 0.5 6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 -7.5) (float-vector -0.5 0.0 -7.5) (float-vector -0.5 3.75 -6.49519) (float-vector 0.5 3.75 -6.49519)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray10)
     (send (elt bc 1) :set-color :gray10)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-clock-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room602-clock-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 0.625 116.45) (float-vector -0.5 0.625 116.45) (float-vector -0.5 -0.625 116.45) (float-vector 0.5 -0.625 116.45)))
         (instance face :init :vertices (list (float-vector -0.5 0.625 0.0) (float-vector 0.5 0.625 0.0) (float-vector 0.5 -0.625 0.0) (float-vector -0.5 -0.625 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 0.625 116.45) (float-vector 0.5 0.625 0.0) (float-vector -0.5 0.625 0.0) (float-vector -0.5 0.625 116.45)))
         (instance face :init :vertices (list (float-vector 0.5 -0.625 116.45) (float-vector 0.5 -0.625 0.0) (float-vector 0.5 0.625 0.0) (float-vector 0.5 0.625 116.45)))
         (instance face :init :vertices (list (float-vector -0.5 -0.625 116.45) (float-vector -0.5 -0.625 0.0) (float-vector 0.5 -0.625 0.0) (float-vector 0.5 -0.625 116.45)))
         (instance face :init :vertices (list (float-vector -0.5 0.625 116.45) (float-vector -0.5 0.625 0.0) (float-vector -0.5 -0.625 0.0) (float-vector -0.5 -0.625 116.45)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 -3.75 -6.49519) (float-vector 0.5 0.0 -7.5) (float-vector 0.5 3.75 -6.49519) (float-vector 0.5 6.49519 -3.75) (float-vector 0.5 7.5 0.0) (float-vector 0.5 6.49519 3.75) (float-vector 0.5 3.75 6.49519) (float-vector 0.5 0.0 7.5) (float-vector 0.5 -3.75 6.49519) (float-vector 0.5 -6.49519 3.75) (float-vector 0.5 -7.5 0.0) (float-vector 0.5 -6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector -0.5 0.0 -7.5) (float-vector -0.5 -3.75 -6.49519) (float-vector -0.5 -6.49519 -3.75) (float-vector -0.5 -7.5 0.0) (float-vector -0.5 -6.49519 3.75) (float-vector -0.5 -3.75 6.49519) (float-vector -0.5 0.0 7.5) (float-vector -0.5 3.75 6.49519) (float-vector -0.5 6.49519 3.75) (float-vector -0.5 7.5 0.0) (float-vector -0.5 6.49519 -3.75) (float-vector -0.5 3.75 -6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 -3.75 -6.49519) (float-vector -0.5 -3.75 -6.49519) (float-vector -0.5 0.0 -7.5) (float-vector 0.5 0.0 -7.5)))
         (instance face :init :vertices (list (float-vector 0.5 -6.49519 -3.75) (float-vector -0.5 -6.49519 -3.75) (float-vector -0.5 -3.75 -6.49519) (float-vector 0.5 -3.75 -6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 -7.5 0.0) (float-vector -0.5 -7.5 0.0) (float-vector -0.5 -6.49519 -3.75) (float-vector 0.5 -6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector 0.5 -6.49519 3.75) (float-vector -0.5 -6.49519 3.75) (float-vector -0.5 -7.5 0.0) (float-vector 0.5 -7.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 -3.75 6.49519) (float-vector -0.5 -3.75 6.49519) (float-vector -0.5 -6.49519 3.75) (float-vector 0.5 -6.49519 3.75)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 7.5) (float-vector -0.5 0.0 7.5) (float-vector -0.5 -3.75 6.49519) (float-vector 0.5 -3.75 6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 3.75 6.49519) (float-vector -0.5 3.75 6.49519) (float-vector -0.5 0.0 7.5) (float-vector 0.5 0.0 7.5)))
         (instance face :init :vertices (list (float-vector 0.5 6.49519 3.75) (float-vector -0.5 6.49519 3.75) (float-vector -0.5 3.75 6.49519) (float-vector 0.5 3.75 6.49519)))
         (instance face :init :vertices (list (float-vector 0.5 7.5 0.0) (float-vector -0.5 7.5 0.0) (float-vector -0.5 6.49519 3.75) (float-vector 0.5 6.49519 3.75)))
         (instance face :init :vertices (list (float-vector 0.5 6.49519 -3.75) (float-vector -0.5 6.49519 -3.75) (float-vector -0.5 7.5 0.0) (float-vector 0.5 7.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 3.75 -6.49519) (float-vector -0.5 3.75 -6.49519) (float-vector -0.5 6.49519 -3.75) (float-vector 0.5 6.49519 -3.75)))
         (instance face :init :vertices (list (float-vector 0.5 0.0 -7.5) (float-vector -0.5 0.0 -7.5) (float-vector -0.5 3.75 -6.49519) (float-vector 0.5 3.75 -6.49519)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray70)
     (send (elt bc 1) :set-color :gray70)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room602-clock-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink3 :newcoords (make-coords :pos (float-vector 10.0 0.0 165.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector 9.0 0.0 165.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink1 :newcoords (make-coords :pos (float-vector 8.0 0.0 165.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :hour-joint
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :hour-joint :axis :-x
			     :min -360.0 :max  360.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :minute-joint
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :minute-joint :axis :-x
			     :min -360.0 :max  360.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :second-joint
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :second-joint :axis :-x
			     :min -360.0 :max  360.0 :max-joint-velocity 5 :max-joint-torque 100))


     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3))
     (setq joint-list (list joint0 joint1 joint2))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:hour-joint (&rest args) (forward-message-to joint0 args))
  (:minute-joint (&rest args) (forward-message-to joint1 args))
  (:second-joint (&rest args) (forward-message-to joint2 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room602-clock (&rest args) (instance* room602-clock-object :init args))
;; (format *error-output* "(instance room602-clock-object :init) for generating model~%")
