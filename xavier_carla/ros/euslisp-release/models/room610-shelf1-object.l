;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room610-shelf1-object
  :super cascaded-link
  :slots (sensors
         handle0
         joint0 joint1 joint2 joint3 joint4 ))
(defmethod room610-shelf1-object
  (:init
   (&rest args &key (name "room610-shelf1") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 400.0 1110.0) (float-vector -207.5 400.0 1110.0) (float-vector -207.5 -400.0 1110.0) (float-vector 187.5 -400.0 1110.0)))
         (instance face :init :vertices (list (float-vector -207.5 400.0 1100.0) (float-vector 187.5 400.0 1100.0) (float-vector 187.5 -400.0 1100.0) (float-vector -207.5 -400.0 1100.0)))
         (instance face :init :vertices (list (float-vector 187.5 400.0 1110.0) (float-vector 187.5 400.0 1100.0) (float-vector -207.5 400.0 1100.0) (float-vector -207.5 400.0 1110.0)))
         (instance face :init :vertices (list (float-vector 187.5 -400.0 1110.0) (float-vector 187.5 -400.0 1100.0) (float-vector 187.5 400.0 1100.0) (float-vector 187.5 400.0 1110.0)))
         (instance face :init :vertices (list (float-vector -207.5 -400.0 1110.0) (float-vector -207.5 -400.0 1100.0) (float-vector 187.5 -400.0 1100.0) (float-vector 187.5 -400.0 1110.0)))
         (instance face :init :vertices (list (float-vector -207.5 400.0 1110.0) (float-vector -207.5 400.0 1100.0) (float-vector -207.5 -400.0 1100.0) (float-vector -207.5 -400.0 1110.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 400.0 10.0) (float-vector -207.5 400.0 10.0) (float-vector -207.5 -400.0 10.0) (float-vector 187.5 -400.0 10.0)))
         (instance face :init :vertices (list (float-vector -207.5 400.0 0.0) (float-vector 187.5 400.0 0.0) (float-vector 187.5 -400.0 0.0) (float-vector -207.5 -400.0 0.0)))
         (instance face :init :vertices (list (float-vector 187.5 400.0 10.0) (float-vector 187.5 400.0 0.0) (float-vector -207.5 400.0 0.0) (float-vector -207.5 400.0 10.0)))
         (instance face :init :vertices (list (float-vector 187.5 -400.0 10.0) (float-vector 187.5 -400.0 0.0) (float-vector 187.5 400.0 0.0) (float-vector 187.5 400.0 10.0)))
         (instance face :init :vertices (list (float-vector -207.5 -400.0 10.0) (float-vector -207.5 -400.0 0.0) (float-vector 187.5 -400.0 0.0) (float-vector 187.5 -400.0 10.0)))
         (instance face :init :vertices (list (float-vector -207.5 400.0 10.0) (float-vector -207.5 400.0 0.0) (float-vector -207.5 -400.0 0.0) (float-vector -207.5 -400.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -197.0 390.0 1100.0) (float-vector -207.0 390.0 1100.0) (float-vector -207.0 -390.0 1100.0) (float-vector -197.0 -390.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.0 390.0 10.0) (float-vector -197.0 390.0 10.0) (float-vector -197.0 -390.0 10.0) (float-vector -207.0 -390.0 10.0)))
         (instance face :init :vertices (list (float-vector -197.0 390.0 1100.0) (float-vector -197.0 390.0 10.0) (float-vector -207.0 390.0 10.0) (float-vector -207.0 390.0 1100.0)))
         (instance face :init :vertices (list (float-vector -197.0 -390.0 1100.0) (float-vector -197.0 -390.0 10.0) (float-vector -197.0 390.0 10.0) (float-vector -197.0 390.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.0 -390.0 1100.0) (float-vector -207.0 -390.0 10.0) (float-vector -197.0 -390.0 10.0) (float-vector -197.0 -390.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.0 390.0 1100.0) (float-vector -207.0 390.0 10.0) (float-vector -207.0 -390.0 10.0) (float-vector -207.0 -390.0 1100.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 400.0 1100.0) (float-vector -207.5 400.0 1100.0) (float-vector -207.5 390.0 1100.0) (float-vector 187.5 390.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.5 400.0 10.0) (float-vector 187.5 400.0 10.0) (float-vector 187.5 390.0 10.0) (float-vector -207.5 390.0 10.0)))
         (instance face :init :vertices (list (float-vector 187.5 400.0 1100.0) (float-vector 187.5 400.0 10.0) (float-vector -207.5 400.0 10.0) (float-vector -207.5 400.0 1100.0)))
         (instance face :init :vertices (list (float-vector 187.5 390.0 1100.0) (float-vector 187.5 390.0 10.0) (float-vector 187.5 400.0 10.0) (float-vector 187.5 400.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.5 390.0 1100.0) (float-vector -207.5 390.0 10.0) (float-vector 187.5 390.0 10.0) (float-vector 187.5 390.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.5 400.0 1100.0) (float-vector -207.5 400.0 10.0) (float-vector -207.5 390.0 10.0) (float-vector -207.5 390.0 1100.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 -390.0 1100.0) (float-vector -207.5 -390.0 1100.0) (float-vector -207.5 -400.0 1100.0) (float-vector 187.5 -400.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.5 -390.0 10.0) (float-vector 187.5 -390.0 10.0) (float-vector 187.5 -400.0 10.0) (float-vector -207.5 -400.0 10.0)))
         (instance face :init :vertices (list (float-vector 187.5 -390.0 1100.0) (float-vector 187.5 -390.0 10.0) (float-vector -207.5 -390.0 10.0) (float-vector -207.5 -390.0 1100.0)))
         (instance face :init :vertices (list (float-vector 187.5 -400.0 1100.0) (float-vector 187.5 -400.0 10.0) (float-vector 187.5 -390.0 10.0) (float-vector 187.5 -390.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.5 -400.0 1100.0) (float-vector -207.5 -400.0 10.0) (float-vector 187.5 -400.0 10.0) (float-vector 187.5 -400.0 1100.0)))
         (instance face :init :vertices (list (float-vector -207.5 -390.0 1100.0) (float-vector -207.5 -390.0 10.0) (float-vector -207.5 -400.0 10.0) (float-vector -207.5 -400.0 1100.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 390.0 390.0) (float-vector -197.5 390.0 390.0) (float-vector -197.5 -390.0 390.0) (float-vector 187.5 -390.0 390.0)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 380.0) (float-vector 187.5 390.0 380.0) (float-vector 187.5 -390.0 380.0) (float-vector -197.5 -390.0 380.0)))
         (instance face :init :vertices (list (float-vector 187.5 390.0 390.0) (float-vector 187.5 390.0 380.0) (float-vector -197.5 390.0 380.0) (float-vector -197.5 390.0 390.0)))
         (instance face :init :vertices (list (float-vector 187.5 -390.0 390.0) (float-vector 187.5 -390.0 380.0) (float-vector 187.5 390.0 380.0) (float-vector 187.5 390.0 390.0)))
         (instance face :init :vertices (list (float-vector -197.5 -390.0 390.0) (float-vector -197.5 -390.0 380.0) (float-vector 187.5 -390.0 380.0) (float-vector 187.5 -390.0 390.0)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 390.0) (float-vector -197.5 390.0 380.0) (float-vector -197.5 -390.0 380.0) (float-vector -197.5 -390.0 390.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 390.0 572.5) (float-vector -197.5 390.0 572.5) (float-vector -197.5 -390.0 572.5) (float-vector 187.5 -390.0 572.5)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 562.5) (float-vector 187.5 390.0 562.5) (float-vector 187.5 -390.0 562.5) (float-vector -197.5 -390.0 562.5)))
         (instance face :init :vertices (list (float-vector 187.5 390.0 572.5) (float-vector 187.5 390.0 562.5) (float-vector -197.5 390.0 562.5) (float-vector -197.5 390.0 572.5)))
         (instance face :init :vertices (list (float-vector 187.5 -390.0 572.5) (float-vector 187.5 -390.0 562.5) (float-vector 187.5 390.0 562.5) (float-vector 187.5 390.0 572.5)))
         (instance face :init :vertices (list (float-vector -197.5 -390.0 572.5) (float-vector -197.5 -390.0 562.5) (float-vector 187.5 -390.0 562.5) (float-vector 187.5 -390.0 572.5)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 572.5) (float-vector -197.5 390.0 562.5) (float-vector -197.5 -390.0 562.5) (float-vector -197.5 -390.0 572.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 390.0 755.0) (float-vector -197.5 390.0 755.0) (float-vector -197.5 -390.0 755.0) (float-vector 187.5 -390.0 755.0)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 745.0) (float-vector 187.5 390.0 745.0) (float-vector 187.5 -390.0 745.0) (float-vector -197.5 -390.0 745.0)))
         (instance face :init :vertices (list (float-vector 187.5 390.0 755.0) (float-vector 187.5 390.0 745.0) (float-vector -197.5 390.0 745.0) (float-vector -197.5 390.0 755.0)))
         (instance face :init :vertices (list (float-vector 187.5 -390.0 755.0) (float-vector 187.5 -390.0 745.0) (float-vector 187.5 390.0 745.0) (float-vector 187.5 390.0 755.0)))
         (instance face :init :vertices (list (float-vector -197.5 -390.0 755.0) (float-vector -197.5 -390.0 745.0) (float-vector 187.5 -390.0 745.0) (float-vector 187.5 -390.0 755.0)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 755.0) (float-vector -197.5 390.0 745.0) (float-vector -197.5 -390.0 745.0) (float-vector -197.5 -390.0 755.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 187.5 390.0 937.5) (float-vector -197.5 390.0 937.5) (float-vector -197.5 -390.0 937.5) (float-vector 187.5 -390.0 937.5)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 927.5) (float-vector 187.5 390.0 927.5) (float-vector 187.5 -390.0 927.5) (float-vector -197.5 -390.0 927.5)))
         (instance face :init :vertices (list (float-vector 187.5 390.0 937.5) (float-vector 187.5 390.0 927.5) (float-vector -197.5 390.0 927.5) (float-vector -197.5 390.0 937.5)))
         (instance face :init :vertices (list (float-vector 187.5 -390.0 937.5) (float-vector 187.5 -390.0 927.5) (float-vector 187.5 390.0 927.5) (float-vector 187.5 390.0 937.5)))
         (instance face :init :vertices (list (float-vector -197.5 -390.0 937.5) (float-vector -197.5 -390.0 927.5) (float-vector 187.5 -390.0 927.5) (float-vector 187.5 -390.0 937.5)))
         (instance face :init :vertices (list (float-vector -197.5 390.0 937.5) (float-vector -197.5 390.0 927.5) (float-vector -197.5 -390.0 927.5) (float-vector -197.5 -390.0 937.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :burlywood1)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :burlywood1)
     (send (elt bc 3) :set-color :burlywood1)
     (send (elt bc 4) :set-color :burlywood1)
     (send (elt bc 5) :set-color :burlywood1)
     (send (elt bc 6) :set-color :burlywood1)
     (send (elt bc 7) :set-color :burlywood1)
     (send (elt bc 8) :set-color :burlywood1)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-shelf1-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 -375.0 -76.25) (float-vector 182.5 -375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 -375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 375.0 76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 -355.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -355.0 -56.25)))
         (instance face :init :vertices (list (float-vector 182.5 355.0 -56.25) (float-vector 182.5 355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 -56.25) (float-vector -162.5 -355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 355.0 -56.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 182.0 395.0 96.25) (float-vector 182.0 -395.0 96.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 182.0 -395.0 -76.25)))
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 202.0 395.0 -76.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 202.0 -395.0 96.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 -395.0 96.25) (float-vector 182.0 -395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 96.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 -395.0 -76.25) (float-vector 182.0 -395.0 96.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 262.0 -75.0 10.0) (float-vector 260.66 -75.0 15.0) (float-vector 257.0 -75.0 18.6603) (float-vector 252.0 -75.0 20.0) (float-vector 247.0 -75.0 18.6603) (float-vector 243.34 -75.0 15.0) (float-vector 242.0 -75.0 10.0) (float-vector 243.34 -75.0 5.0) (float-vector 247.0 -75.0 1.33975) (float-vector 252.0 -75.0 0.0) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 5.0) (float-vector 257.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 247.0 75.0 1.33975) (float-vector 243.34 75.0 5.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 15.0) (float-vector 247.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 257.0 75.0 18.6603) (float-vector 260.66 75.0 15.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 260.66 75.0 5.0) (float-vector 262.0 75.0 10.0) (float-vector 262.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 1.33975) (float-vector 257.0 75.0 1.33975) (float-vector 260.66 75.0 5.0) (float-vector 260.66 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 0.0) (float-vector 252.0 75.0 0.0) (float-vector 257.0 75.0 1.33975) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 1.33975) (float-vector 247.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 252.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 5.0) (float-vector 243.34 75.0 5.0) (float-vector 247.0 75.0 1.33975) (float-vector 247.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 242.0 -75.0 10.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 5.0) (float-vector 243.34 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 15.0) (float-vector 243.34 75.0 15.0) (float-vector 242.0 75.0 10.0) (float-vector 242.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 18.6603) (float-vector 247.0 75.0 18.6603) (float-vector 243.34 75.0 15.0) (float-vector 243.34 -75.0 15.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 20.0) (float-vector 252.0 75.0 20.0) (float-vector 247.0 75.0 18.6603) (float-vector 247.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 18.6603) (float-vector 257.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 252.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 15.0) (float-vector 260.66 75.0 15.0) (float-vector 257.0 75.0 18.6603) (float-vector 257.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 262.0 -75.0 10.0) (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 15.0) (float-vector 260.66 -75.0 15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 257.0 75.0 0.0) (float-vector 257.0 80.0 1.33975) (float-vector 257.0 83.6603 5.0) (float-vector 257.0 85.0 10.0) (float-vector 257.0 83.6603 15.0) (float-vector 257.0 80.0 18.6603) (float-vector 257.0 75.0 20.0) (float-vector 257.0 70.0 18.6603) (float-vector 257.0 66.3397 15.0) (float-vector 257.0 65.0 10.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 75.0 0.0) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 75.0 0.0) (float-vector 257.0 75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 5.0) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 70.0 1.33975) (float-vector 257.0 70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 65.0 10.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 5.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 15.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 65.0 10.0) (float-vector 257.0 65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 18.6603) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 66.3397 15.0) (float-vector 257.0 66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 20.0) (float-vector 197.0 75.0 20.0) (float-vector 197.0 70.0 18.6603) (float-vector 257.0 70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 18.6603) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 257.0 75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 15.0) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 80.0 18.6603) (float-vector 257.0 80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 85.0 10.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 15.0) (float-vector 257.0 83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 5.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 85.0 10.0) (float-vector 257.0 85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 1.33975) (float-vector 197.0 80.0 1.33975) (float-vector 197.0 83.6603 5.0) (float-vector 257.0 83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 0.0) (float-vector 197.0 75.0 0.0) (float-vector 197.0 80.0 1.33975) (float-vector 257.0 80.0 1.33975)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 257.0 -75.0 0.0) (float-vector 257.0 -70.0 1.33975) (float-vector 257.0 -66.3397 5.0) (float-vector 257.0 -65.0 10.0) (float-vector 257.0 -66.3397 15.0) (float-vector 257.0 -70.0 18.6603) (float-vector 257.0 -75.0 20.0) (float-vector 257.0 -80.0 18.6603) (float-vector 257.0 -83.6603 15.0) (float-vector 257.0 -85.0 10.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -75.0 0.0) (float-vector 257.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 5.0) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -80.0 1.33975) (float-vector 257.0 -80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -85.0 10.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 5.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 15.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -85.0 10.0) (float-vector 257.0 -85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 18.6603) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -83.6603 15.0) (float-vector 257.0 -83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 20.0) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -80.0 18.6603) (float-vector 257.0 -80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 18.6603) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 257.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 15.0) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -70.0 18.6603) (float-vector 257.0 -70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -65.0 10.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 15.0) (float-vector 257.0 -66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 5.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -65.0 10.0) (float-vector 257.0 -65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 1.33975) (float-vector 197.0 -70.0 1.33975) (float-vector 197.0 -66.3397 5.0) (float-vector 257.0 -66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 0.0) (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -70.0 1.33975) (float-vector 257.0 -70.0 1.33975)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :lightgray)
     (send (elt bc 3) :set-color :lightgray)
     (send (elt bc 4) :set-color :lightgray)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-shelf1-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-shelf1-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 -375.0 -76.25) (float-vector 182.5 -375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 -375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 375.0 76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 -355.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -355.0 -56.25)))
         (instance face :init :vertices (list (float-vector 182.5 355.0 -56.25) (float-vector 182.5 355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 -56.25) (float-vector -162.5 -355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 355.0 -56.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 182.0 395.0 96.25) (float-vector 182.0 -395.0 96.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 182.0 -395.0 -76.25)))
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 202.0 395.0 -76.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 202.0 -395.0 96.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 -395.0 96.25) (float-vector 182.0 -395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 96.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 -395.0 -76.25) (float-vector 182.0 -395.0 96.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 262.0 -75.0 10.0) (float-vector 260.66 -75.0 15.0) (float-vector 257.0 -75.0 18.6603) (float-vector 252.0 -75.0 20.0) (float-vector 247.0 -75.0 18.6603) (float-vector 243.34 -75.0 15.0) (float-vector 242.0 -75.0 10.0) (float-vector 243.34 -75.0 5.0) (float-vector 247.0 -75.0 1.33975) (float-vector 252.0 -75.0 0.0) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 5.0) (float-vector 257.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 247.0 75.0 1.33975) (float-vector 243.34 75.0 5.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 15.0) (float-vector 247.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 257.0 75.0 18.6603) (float-vector 260.66 75.0 15.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 260.66 75.0 5.0) (float-vector 262.0 75.0 10.0) (float-vector 262.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 1.33975) (float-vector 257.0 75.0 1.33975) (float-vector 260.66 75.0 5.0) (float-vector 260.66 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 0.0) (float-vector 252.0 75.0 0.0) (float-vector 257.0 75.0 1.33975) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 1.33975) (float-vector 247.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 252.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 5.0) (float-vector 243.34 75.0 5.0) (float-vector 247.0 75.0 1.33975) (float-vector 247.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 242.0 -75.0 10.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 5.0) (float-vector 243.34 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 15.0) (float-vector 243.34 75.0 15.0) (float-vector 242.0 75.0 10.0) (float-vector 242.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 18.6603) (float-vector 247.0 75.0 18.6603) (float-vector 243.34 75.0 15.0) (float-vector 243.34 -75.0 15.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 20.0) (float-vector 252.0 75.0 20.0) (float-vector 247.0 75.0 18.6603) (float-vector 247.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 18.6603) (float-vector 257.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 252.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 15.0) (float-vector 260.66 75.0 15.0) (float-vector 257.0 75.0 18.6603) (float-vector 257.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 262.0 -75.0 10.0) (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 15.0) (float-vector 260.66 -75.0 15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 257.0 75.0 0.0) (float-vector 257.0 80.0 1.33975) (float-vector 257.0 83.6603 5.0) (float-vector 257.0 85.0 10.0) (float-vector 257.0 83.6603 15.0) (float-vector 257.0 80.0 18.6603) (float-vector 257.0 75.0 20.0) (float-vector 257.0 70.0 18.6603) (float-vector 257.0 66.3397 15.0) (float-vector 257.0 65.0 10.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 75.0 0.0) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 75.0 0.0) (float-vector 257.0 75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 5.0) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 70.0 1.33975) (float-vector 257.0 70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 65.0 10.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 5.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 15.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 65.0 10.0) (float-vector 257.0 65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 18.6603) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 66.3397 15.0) (float-vector 257.0 66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 20.0) (float-vector 197.0 75.0 20.0) (float-vector 197.0 70.0 18.6603) (float-vector 257.0 70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 18.6603) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 257.0 75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 15.0) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 80.0 18.6603) (float-vector 257.0 80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 85.0 10.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 15.0) (float-vector 257.0 83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 5.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 85.0 10.0) (float-vector 257.0 85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 1.33975) (float-vector 197.0 80.0 1.33975) (float-vector 197.0 83.6603 5.0) (float-vector 257.0 83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 0.0) (float-vector 197.0 75.0 0.0) (float-vector 197.0 80.0 1.33975) (float-vector 257.0 80.0 1.33975)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 257.0 -75.0 0.0) (float-vector 257.0 -70.0 1.33975) (float-vector 257.0 -66.3397 5.0) (float-vector 257.0 -65.0 10.0) (float-vector 257.0 -66.3397 15.0) (float-vector 257.0 -70.0 18.6603) (float-vector 257.0 -75.0 20.0) (float-vector 257.0 -80.0 18.6603) (float-vector 257.0 -83.6603 15.0) (float-vector 257.0 -85.0 10.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -75.0 0.0) (float-vector 257.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 5.0) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -80.0 1.33975) (float-vector 257.0 -80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -85.0 10.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 5.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 15.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -85.0 10.0) (float-vector 257.0 -85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 18.6603) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -83.6603 15.0) (float-vector 257.0 -83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 20.0) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -80.0 18.6603) (float-vector 257.0 -80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 18.6603) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 257.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 15.0) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -70.0 18.6603) (float-vector 257.0 -70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -65.0 10.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 15.0) (float-vector 257.0 -66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 5.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -65.0 10.0) (float-vector 257.0 -65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 1.33975) (float-vector 197.0 -70.0 1.33975) (float-vector 197.0 -66.3397 5.0) (float-vector 257.0 -66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 0.0) (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -70.0 1.33975) (float-vector 257.0 -70.0 1.33975)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :lightgray)
     (send (elt bc 3) :set-color :lightgray)
     (send (elt bc 4) :set-color :lightgray)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-shelf1-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-shelf1-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 -375.0 -76.25) (float-vector 182.5 -375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 -375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 375.0 76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 -355.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -355.0 -56.25)))
         (instance face :init :vertices (list (float-vector 182.5 355.0 -56.25) (float-vector 182.5 355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 -56.25) (float-vector -162.5 -355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 355.0 -56.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 182.0 395.0 96.25) (float-vector 182.0 -395.0 96.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 182.0 -395.0 -76.25)))
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 202.0 395.0 -76.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 202.0 -395.0 96.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 -395.0 96.25) (float-vector 182.0 -395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 96.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 -395.0 -76.25) (float-vector 182.0 -395.0 96.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 262.0 -75.0 10.0) (float-vector 260.66 -75.0 15.0) (float-vector 257.0 -75.0 18.6603) (float-vector 252.0 -75.0 20.0) (float-vector 247.0 -75.0 18.6603) (float-vector 243.34 -75.0 15.0) (float-vector 242.0 -75.0 10.0) (float-vector 243.34 -75.0 5.0) (float-vector 247.0 -75.0 1.33975) (float-vector 252.0 -75.0 0.0) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 5.0) (float-vector 257.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 247.0 75.0 1.33975) (float-vector 243.34 75.0 5.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 15.0) (float-vector 247.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 257.0 75.0 18.6603) (float-vector 260.66 75.0 15.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 260.66 75.0 5.0) (float-vector 262.0 75.0 10.0) (float-vector 262.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 1.33975) (float-vector 257.0 75.0 1.33975) (float-vector 260.66 75.0 5.0) (float-vector 260.66 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 0.0) (float-vector 252.0 75.0 0.0) (float-vector 257.0 75.0 1.33975) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 1.33975) (float-vector 247.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 252.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 5.0) (float-vector 243.34 75.0 5.0) (float-vector 247.0 75.0 1.33975) (float-vector 247.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 242.0 -75.0 10.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 5.0) (float-vector 243.34 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 15.0) (float-vector 243.34 75.0 15.0) (float-vector 242.0 75.0 10.0) (float-vector 242.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 18.6603) (float-vector 247.0 75.0 18.6603) (float-vector 243.34 75.0 15.0) (float-vector 243.34 -75.0 15.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 20.0) (float-vector 252.0 75.0 20.0) (float-vector 247.0 75.0 18.6603) (float-vector 247.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 18.6603) (float-vector 257.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 252.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 15.0) (float-vector 260.66 75.0 15.0) (float-vector 257.0 75.0 18.6603) (float-vector 257.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 262.0 -75.0 10.0) (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 15.0) (float-vector 260.66 -75.0 15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 257.0 75.0 0.0) (float-vector 257.0 80.0 1.33975) (float-vector 257.0 83.6603 5.0) (float-vector 257.0 85.0 10.0) (float-vector 257.0 83.6603 15.0) (float-vector 257.0 80.0 18.6603) (float-vector 257.0 75.0 20.0) (float-vector 257.0 70.0 18.6603) (float-vector 257.0 66.3397 15.0) (float-vector 257.0 65.0 10.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 75.0 0.0) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 75.0 0.0) (float-vector 257.0 75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 5.0) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 70.0 1.33975) (float-vector 257.0 70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 65.0 10.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 5.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 15.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 65.0 10.0) (float-vector 257.0 65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 18.6603) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 66.3397 15.0) (float-vector 257.0 66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 20.0) (float-vector 197.0 75.0 20.0) (float-vector 197.0 70.0 18.6603) (float-vector 257.0 70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 18.6603) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 257.0 75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 15.0) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 80.0 18.6603) (float-vector 257.0 80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 85.0 10.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 15.0) (float-vector 257.0 83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 5.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 85.0 10.0) (float-vector 257.0 85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 1.33975) (float-vector 197.0 80.0 1.33975) (float-vector 197.0 83.6603 5.0) (float-vector 257.0 83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 0.0) (float-vector 197.0 75.0 0.0) (float-vector 197.0 80.0 1.33975) (float-vector 257.0 80.0 1.33975)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 257.0 -75.0 0.0) (float-vector 257.0 -70.0 1.33975) (float-vector 257.0 -66.3397 5.0) (float-vector 257.0 -65.0 10.0) (float-vector 257.0 -66.3397 15.0) (float-vector 257.0 -70.0 18.6603) (float-vector 257.0 -75.0 20.0) (float-vector 257.0 -80.0 18.6603) (float-vector 257.0 -83.6603 15.0) (float-vector 257.0 -85.0 10.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -75.0 0.0) (float-vector 257.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 5.0) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -80.0 1.33975) (float-vector 257.0 -80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -85.0 10.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 5.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 15.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -85.0 10.0) (float-vector 257.0 -85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 18.6603) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -83.6603 15.0) (float-vector 257.0 -83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 20.0) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -80.0 18.6603) (float-vector 257.0 -80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 18.6603) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 257.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 15.0) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -70.0 18.6603) (float-vector 257.0 -70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -65.0 10.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 15.0) (float-vector 257.0 -66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 5.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -65.0 10.0) (float-vector 257.0 -65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 1.33975) (float-vector 197.0 -70.0 1.33975) (float-vector 197.0 -66.3397 5.0) (float-vector 257.0 -66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 0.0) (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -70.0 1.33975) (float-vector 257.0 -70.0 1.33975)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :lightgray)
     (send (elt bc 3) :set-color :lightgray)
     (send (elt bc 4) :set-color :lightgray)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-shelf1-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-shelf1-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 -375.0 -76.25) (float-vector 182.5 -375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector -182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 76.25) (float-vector -182.5 -375.0 76.25) (float-vector 182.5 -375.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector 182.5 355.0 76.25) (float-vector 182.5 375.0 76.25)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -76.25) (float-vector 182.5 -375.0 -76.25) (float-vector -182.5 -375.0 -76.25) (float-vector -182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 -76.25) (float-vector -182.5 375.0 76.25) (float-vector 182.5 375.0 76.25) (float-vector 182.5 375.0 -76.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 76.25) (float-vector -162.5 -355.0 76.25) (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 -355.0 -56.25) (float-vector -162.5 -355.0 76.25) (float-vector 182.5 -355.0 76.25) (float-vector 182.5 -355.0 -56.25)))
         (instance face :init :vertices (list (float-vector 182.5 355.0 -56.25) (float-vector 182.5 355.0 76.25) (float-vector -162.5 355.0 76.25) (float-vector -162.5 355.0 -56.25)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 -56.25) (float-vector -162.5 -355.0 -56.25) (float-vector 182.5 -355.0 -56.25) (float-vector 182.5 355.0 -56.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 182.0 395.0 96.25) (float-vector 182.0 -395.0 96.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 182.0 -395.0 -76.25)))
         (instance face :init :vertices (list (float-vector 202.0 395.0 96.25) (float-vector 202.0 395.0 -76.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 202.0 -395.0 96.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 395.0 -76.25) (float-vector 202.0 395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 -395.0 96.25) (float-vector 182.0 -395.0 -76.25) (float-vector 202.0 -395.0 -76.25) (float-vector 202.0 -395.0 96.25)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 96.25) (float-vector 182.0 395.0 -76.25) (float-vector 182.0 -395.0 -76.25) (float-vector 182.0 -395.0 96.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 262.0 -75.0 10.0) (float-vector 260.66 -75.0 15.0) (float-vector 257.0 -75.0 18.6603) (float-vector 252.0 -75.0 20.0) (float-vector 247.0 -75.0 18.6603) (float-vector 243.34 -75.0 15.0) (float-vector 242.0 -75.0 10.0) (float-vector 243.34 -75.0 5.0) (float-vector 247.0 -75.0 1.33975) (float-vector 252.0 -75.0 5.684342e-14) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 5.0) (float-vector 257.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 247.0 75.0 1.33975) (float-vector 243.34 75.0 5.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 15.0) (float-vector 247.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 257.0 75.0 18.6603) (float-vector 260.66 75.0 15.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 260.66 75.0 5.0) (float-vector 262.0 75.0 10.0) (float-vector 262.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 1.33975) (float-vector 257.0 75.0 1.33975) (float-vector 260.66 75.0 5.0) (float-vector 260.66 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 5.684342e-14) (float-vector 252.0 75.0 0.0) (float-vector 257.0 75.0 1.33975) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 1.33975) (float-vector 247.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 252.0 -75.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 5.0) (float-vector 243.34 75.0 5.0) (float-vector 247.0 75.0 1.33975) (float-vector 247.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 242.0 -75.0 10.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 5.0) (float-vector 243.34 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 15.0) (float-vector 243.34 75.0 15.0) (float-vector 242.0 75.0 10.0) (float-vector 242.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 18.6603) (float-vector 247.0 75.0 18.6603) (float-vector 243.34 75.0 15.0) (float-vector 243.34 -75.0 15.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 20.0) (float-vector 252.0 75.0 20.0) (float-vector 247.0 75.0 18.6603) (float-vector 247.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 18.6603) (float-vector 257.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 252.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 15.0) (float-vector 260.66 75.0 15.0) (float-vector 257.0 75.0 18.6603) (float-vector 257.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 262.0 -75.0 10.0) (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 15.0) (float-vector 260.66 -75.0 15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 257.0 75.0 0.0) (float-vector 257.0 80.0 1.33975) (float-vector 257.0 83.6603 5.0) (float-vector 257.0 85.0 10.0) (float-vector 257.0 83.6603 15.0) (float-vector 257.0 80.0 18.6603) (float-vector 257.0 75.0 20.0) (float-vector 257.0 70.0 18.6603) (float-vector 257.0 66.3397 15.0) (float-vector 257.0 65.0 10.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 75.0 0.0) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 75.0 0.0) (float-vector 257.0 75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 5.0) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 70.0 1.33975) (float-vector 257.0 70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 65.0 10.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 5.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 15.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 65.0 10.0) (float-vector 257.0 65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 18.6603) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 66.3397 15.0) (float-vector 257.0 66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 20.0) (float-vector 197.0 75.0 20.0) (float-vector 197.0 70.0 18.6603) (float-vector 257.0 70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 18.6603) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 257.0 75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 15.0) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 80.0 18.6603) (float-vector 257.0 80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 85.0 10.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 15.0) (float-vector 257.0 83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 5.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 85.0 10.0) (float-vector 257.0 85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 1.33975) (float-vector 197.0 80.0 1.33975) (float-vector 197.0 83.6603 5.0) (float-vector 257.0 83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 0.0) (float-vector 197.0 75.0 0.0) (float-vector 197.0 80.0 1.33975) (float-vector 257.0 80.0 1.33975)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 257.0 -75.0 0.0) (float-vector 257.0 -70.0 1.33975) (float-vector 257.0 -66.3397 5.0) (float-vector 257.0 -65.0 10.0) (float-vector 257.0 -66.3397 15.0) (float-vector 257.0 -70.0 18.6603) (float-vector 257.0 -75.0 20.0) (float-vector 257.0 -80.0 18.6603) (float-vector 257.0 -83.6603 15.0) (float-vector 257.0 -85.0 10.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -75.0 0.0) (float-vector 257.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 5.0) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -80.0 1.33975) (float-vector 257.0 -80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -85.0 10.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 5.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 15.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -85.0 10.0) (float-vector 257.0 -85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 18.6603) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -83.6603 15.0) (float-vector 257.0 -83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 20.0) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -80.0 18.6603) (float-vector 257.0 -80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 18.6603) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 257.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 15.0) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -70.0 18.6603) (float-vector 257.0 -70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -65.0 10.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 15.0) (float-vector 257.0 -66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 5.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -65.0 10.0) (float-vector 257.0 -65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 1.33975) (float-vector 197.0 -70.0 1.33975) (float-vector 197.0 -66.3397 5.0) (float-vector 257.0 -66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 0.0) (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -70.0 1.33975) (float-vector 257.0 -70.0 1.33975)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :lightgray)
     (send (elt bc 3) :set-color :lightgray)
     (send (elt bc 4) :set-color :lightgray)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-shelf1-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room610-shelf1-bodyset6
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -182.5 375.0 -175.0) (float-vector -182.5 -375.0 -175.0) (float-vector -182.5 -375.0 175.0) (float-vector -182.5 375.0 175.0)))
         (instance face :init :vertices (list (float-vector 182.5 -375.0 -175.0) (float-vector 182.5 -375.0 175.0) (float-vector -182.5 -375.0 175.0) (float-vector -182.5 -375.0 -175.0)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -175.0) (float-vector 182.5 375.0 175.0) (float-vector 182.5 355.0 175.0) (float-vector 182.5 355.0 -155.0) (float-vector 182.5 -355.0 -155.0) (float-vector 182.5 -355.0 175.0) (float-vector 182.5 -375.0 175.0) (float-vector 182.5 -375.0 -175.0)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 175.0) (float-vector -182.5 -375.0 175.0) (float-vector 182.5 -375.0 175.0) (float-vector 182.5 -355.0 175.0) (float-vector -162.5 -355.0 175.0) (float-vector -162.5 355.0 175.0) (float-vector 182.5 355.0 175.0) (float-vector 182.5 375.0 175.0)))
         (instance face :init :vertices (list (float-vector 182.5 375.0 -175.0) (float-vector 182.5 -375.0 -175.0) (float-vector -182.5 -375.0 -175.0) (float-vector -182.5 375.0 -175.0)))
         (instance face :init :vertices (list (float-vector -182.5 375.0 -175.0) (float-vector -182.5 375.0 175.0) (float-vector 182.5 375.0 175.0) (float-vector 182.5 375.0 -175.0)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 175.0) (float-vector -162.5 -355.0 175.0) (float-vector -162.5 -355.0 -155.0) (float-vector -162.5 355.0 -155.0)))
         (instance face :init :vertices (list (float-vector -162.5 -355.0 -155.0) (float-vector -162.5 -355.0 175.0) (float-vector 182.5 -355.0 175.0) (float-vector 182.5 -355.0 -155.0)))
         (instance face :init :vertices (list (float-vector 182.5 355.0 -155.0) (float-vector 182.5 355.0 175.0) (float-vector -162.5 355.0 175.0) (float-vector -162.5 355.0 -155.0)))
         (instance face :init :vertices (list (float-vector -162.5 355.0 -155.0) (float-vector -162.5 -355.0 -155.0) (float-vector 182.5 -355.0 -155.0) (float-vector 182.5 355.0 -155.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 202.0 395.0 195.0) (float-vector 182.0 395.0 195.0) (float-vector 182.0 -395.0 195.0) (float-vector 202.0 -395.0 195.0)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 -175.0) (float-vector 202.0 395.0 -175.0) (float-vector 202.0 -395.0 -175.0) (float-vector 182.0 -395.0 -175.0)))
         (instance face :init :vertices (list (float-vector 202.0 395.0 195.0) (float-vector 202.0 395.0 -175.0) (float-vector 182.0 395.0 -175.0) (float-vector 182.0 395.0 195.0)))
         (instance face :init :vertices (list (float-vector 202.0 -395.0 195.0) (float-vector 202.0 -395.0 -175.0) (float-vector 202.0 395.0 -175.0) (float-vector 202.0 395.0 195.0)))
         (instance face :init :vertices (list (float-vector 182.0 -395.0 195.0) (float-vector 182.0 -395.0 -175.0) (float-vector 202.0 -395.0 -175.0) (float-vector 202.0 -395.0 195.0)))
         (instance face :init :vertices (list (float-vector 182.0 395.0 195.0) (float-vector 182.0 395.0 -175.0) (float-vector 182.0 -395.0 -175.0) (float-vector 182.0 -395.0 195.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 262.0 -75.0 10.0) (float-vector 260.66 -75.0 15.0) (float-vector 257.0 -75.0 18.6603) (float-vector 252.0 -75.0 20.0) (float-vector 247.0 -75.0 18.6603) (float-vector 243.34 -75.0 15.0) (float-vector 242.0 -75.0 10.0) (float-vector 243.34 -75.0 5.0) (float-vector 247.0 -75.0 1.33975) (float-vector 252.0 -75.0 2.842171e-14) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 5.0) (float-vector 257.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 247.0 75.0 1.33975) (float-vector 243.34 75.0 5.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 15.0) (float-vector 247.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 257.0 75.0 18.6603) (float-vector 260.66 75.0 15.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 5.0) (float-vector 260.66 75.0 5.0) (float-vector 262.0 75.0 10.0) (float-vector 262.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 1.33975) (float-vector 257.0 75.0 1.33975) (float-vector 260.66 75.0 5.0) (float-vector 260.66 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 2.842171e-14) (float-vector 252.0 75.0 0.0) (float-vector 257.0 75.0 1.33975) (float-vector 257.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 1.33975) (float-vector 247.0 75.0 1.33975) (float-vector 252.0 75.0 0.0) (float-vector 252.0 -75.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 5.0) (float-vector 243.34 75.0 5.0) (float-vector 247.0 75.0 1.33975) (float-vector 247.0 -75.0 1.33975)))
         (instance face :init :vertices (list (float-vector 242.0 -75.0 10.0) (float-vector 242.0 75.0 10.0) (float-vector 243.34 75.0 5.0) (float-vector 243.34 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 243.34 -75.0 15.0) (float-vector 243.34 75.0 15.0) (float-vector 242.0 75.0 10.0) (float-vector 242.0 -75.0 10.0)))
         (instance face :init :vertices (list (float-vector 247.0 -75.0 18.6603) (float-vector 247.0 75.0 18.6603) (float-vector 243.34 75.0 15.0) (float-vector 243.34 -75.0 15.0)))
         (instance face :init :vertices (list (float-vector 252.0 -75.0 20.0) (float-vector 252.0 75.0 20.0) (float-vector 247.0 75.0 18.6603) (float-vector 247.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 18.6603) (float-vector 257.0 75.0 18.6603) (float-vector 252.0 75.0 20.0) (float-vector 252.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 260.66 -75.0 15.0) (float-vector 260.66 75.0 15.0) (float-vector 257.0 75.0 18.6603) (float-vector 257.0 -75.0 18.6603)))
         (instance face :init :vertices (list (float-vector 262.0 -75.0 10.0) (float-vector 262.0 75.0 10.0) (float-vector 260.66 75.0 15.0) (float-vector 260.66 -75.0 15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 257.0 75.0 0.0) (float-vector 257.0 80.0 1.33975) (float-vector 257.0 83.6603 5.0) (float-vector 257.0 85.0 10.0) (float-vector 257.0 83.6603 15.0) (float-vector 257.0 80.0 18.6603) (float-vector 257.0 75.0 20.0) (float-vector 257.0 70.0 18.6603) (float-vector 257.0 66.3397 15.0) (float-vector 257.0 65.0 10.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 75.0 0.0) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 1.33975) (float-vector 197.0 70.0 1.33975) (float-vector 197.0 75.0 0.0) (float-vector 257.0 75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 5.0) (float-vector 197.0 66.3397 5.0) (float-vector 197.0 70.0 1.33975) (float-vector 257.0 70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 65.0 10.0) (float-vector 197.0 65.0 10.0) (float-vector 197.0 66.3397 5.0) (float-vector 257.0 66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 66.3397 15.0) (float-vector 197.0 66.3397 15.0) (float-vector 197.0 65.0 10.0) (float-vector 257.0 65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 70.0 18.6603) (float-vector 197.0 70.0 18.6603) (float-vector 197.0 66.3397 15.0) (float-vector 257.0 66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 20.0) (float-vector 197.0 75.0 20.0) (float-vector 197.0 70.0 18.6603) (float-vector 257.0 70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 18.6603) (float-vector 197.0 80.0 18.6603) (float-vector 197.0 75.0 20.0) (float-vector 257.0 75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 15.0) (float-vector 197.0 83.6603 15.0) (float-vector 197.0 80.0 18.6603) (float-vector 257.0 80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 85.0 10.0) (float-vector 197.0 85.0 10.0) (float-vector 197.0 83.6603 15.0) (float-vector 257.0 83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 83.6603 5.0) (float-vector 197.0 83.6603 5.0) (float-vector 197.0 85.0 10.0) (float-vector 257.0 85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 80.0 1.33975) (float-vector 197.0 80.0 1.33975) (float-vector 197.0 83.6603 5.0) (float-vector 257.0 83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 75.0 0.0) (float-vector 197.0 75.0 0.0) (float-vector 197.0 80.0 1.33975) (float-vector 257.0 80.0 1.33975)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 257.0 -75.0 0.0) (float-vector 257.0 -70.0 1.33975) (float-vector 257.0 -66.3397 5.0) (float-vector 257.0 -65.0 10.0) (float-vector 257.0 -66.3397 15.0) (float-vector 257.0 -70.0 18.6603) (float-vector 257.0 -75.0 20.0) (float-vector 257.0 -80.0 18.6603) (float-vector 257.0 -83.6603 15.0) (float-vector 257.0 -85.0 10.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -70.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 1.33975) (float-vector 197.0 -80.0 1.33975) (float-vector 197.0 -75.0 0.0) (float-vector 257.0 -75.0 0.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 5.0) (float-vector 197.0 -83.6603 5.0) (float-vector 197.0 -80.0 1.33975) (float-vector 257.0 -80.0 1.33975)))
         (instance face :init :vertices (list (float-vector 257.0 -85.0 10.0) (float-vector 197.0 -85.0 10.0) (float-vector 197.0 -83.6603 5.0) (float-vector 257.0 -83.6603 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -83.6603 15.0) (float-vector 197.0 -83.6603 15.0) (float-vector 197.0 -85.0 10.0) (float-vector 257.0 -85.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -80.0 18.6603) (float-vector 197.0 -80.0 18.6603) (float-vector 197.0 -83.6603 15.0) (float-vector 257.0 -83.6603 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 20.0) (float-vector 197.0 -75.0 20.0) (float-vector 197.0 -80.0 18.6603) (float-vector 257.0 -80.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 18.6603) (float-vector 197.0 -70.0 18.6603) (float-vector 197.0 -75.0 20.0) (float-vector 257.0 -75.0 20.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 15.0) (float-vector 197.0 -66.3397 15.0) (float-vector 197.0 -70.0 18.6603) (float-vector 257.0 -70.0 18.6603)))
         (instance face :init :vertices (list (float-vector 257.0 -65.0 10.0) (float-vector 197.0 -65.0 10.0) (float-vector 197.0 -66.3397 15.0) (float-vector 257.0 -66.3397 15.0)))
         (instance face :init :vertices (list (float-vector 257.0 -66.3397 5.0) (float-vector 197.0 -66.3397 5.0) (float-vector 197.0 -65.0 10.0) (float-vector 257.0 -65.0 10.0)))
         (instance face :init :vertices (list (float-vector 257.0 -70.0 1.33975) (float-vector 197.0 -70.0 1.33975) (float-vector 197.0 -66.3397 5.0) (float-vector 257.0 -66.3397 5.0)))
         (instance face :init :vertices (list (float-vector 257.0 -75.0 0.0) (float-vector 197.0 -75.0 0.0) (float-vector 197.0 -70.0 1.33975) (float-vector 257.0 -70.0 1.33975)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :lightgray)
     (send (elt bc 3) :set-color :lightgray)
     (send (elt bc 4) :set-color :lightgray)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-shelf1-bodyset6 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 5.5 0.0 175.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 5.5 0.0 456.25) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink3 :newcoords (make-coords :pos (float-vector 5.5 0.0 638.75) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink4 :newcoords (make-coords :pos (float-vector 5.5 0.0 821.25) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector 5.5 0.0 1003.75) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink5)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :drawer0
     (setq joint0 (instance linear-joint :init
			     :parent-link blink0 :child-link blink1 :name :drawer0   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  405.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer1
     (setq joint1 (instance linear-joint :init
			     :parent-link blink0 :child-link blink2 :name :drawer1   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  405.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer2
     (setq joint2 (instance linear-joint :init
			     :parent-link blink0 :child-link blink3 :name :drawer2   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  405.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer3
     (setq joint3 (instance linear-joint :init
			     :parent-link blink0 :child-link blink4 :name :drawer3   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  405.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer4
     (setq joint4 (instance linear-joint :init
			     :parent-link blink0 :child-link blink5 :name :drawer4   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  405.0 :max-joint-velocity 0.785398 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send blink0 :assoc handle0)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:drawer0 (&rest args) (forward-message-to joint0 args))
  (:drawer1 (&rest args) (forward-message-to joint1 args))
  (:drawer2 (&rest args) (forward-message-to joint2 args))
  (:drawer3 (&rest args) (forward-message-to joint3 args))
  (:drawer4 (&rest args) (forward-message-to joint4 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room610-shelf1 (&rest args) (instance* room610-shelf1-object :init args))
;; (format *error-output* "(instance room610-shelf1-object :init) for generating model~%")
