;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass h6-robot
  :super robot-model
  :slots (sensors sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor10 sensor11 sensor12 sensor13 sensor14 sensor15 sensor16 sensor17 sensor18 sensor19 sensor20 sensor21 sensor22 sensor23 sensor24 sensor25 sensor26 sensor27
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 joint20 joint21 joint22 joint23 joint24 joint25 joint26 joint27 joint28 joint29 ))
(defmethod h6-robot
  (:init
   (&rest args &key (name "h6") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20 blink21 blink22 blink23 blink24 blink25 blink26 blink27 blink28 blink29 blink30
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 -110.0 461.0) (float-vector -15.0 -100.0 461.0) (float-vector -25.0 -100.0 461.0) (float-vector -25.0 -110.0 461.0)))
         (instance face :init :vertices (list (float-vector -15.0 -100.0 451.0) (float-vector -15.0 -110.0 451.0) (float-vector -25.0 -110.0 451.0) (float-vector -25.0 -100.0 451.0)))
         (instance face :init :vertices (list (float-vector -15.0 -110.0 461.0) (float-vector -15.0 -110.0 451.0) (float-vector -15.0 -100.0 451.0) (float-vector -15.0 -100.0 461.0)))
         (instance face :init :vertices (list (float-vector -25.0 -110.0 461.0) (float-vector -25.0 -110.0 451.0) (float-vector -15.0 -110.0 451.0) (float-vector -15.0 -110.0 461.0)))
         (instance face :init :vertices (list (float-vector -25.0 -100.0 461.0) (float-vector -25.0 -100.0 451.0) (float-vector -25.0 -110.0 451.0) (float-vector -25.0 -110.0 461.0)))
         (instance face :init :vertices (list (float-vector -15.0 -100.0 461.0) (float-vector -15.0 -100.0 451.0) (float-vector -25.0 -100.0 451.0) (float-vector -25.0 -100.0 461.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 100.0 461.0) (float-vector -15.0 110.0 461.0) (float-vector -25.0 110.0 461.0) (float-vector -25.0 100.0 461.0)))
         (instance face :init :vertices (list (float-vector -15.0 110.0 451.0) (float-vector -15.0 100.0 451.0) (float-vector -25.0 100.0 451.0) (float-vector -25.0 110.0 451.0)))
         (instance face :init :vertices (list (float-vector -15.0 100.0 461.0) (float-vector -15.0 100.0 451.0) (float-vector -15.0 110.0 451.0) (float-vector -15.0 110.0 461.0)))
         (instance face :init :vertices (list (float-vector -25.0 100.0 461.0) (float-vector -25.0 100.0 451.0) (float-vector -15.0 100.0 451.0) (float-vector -15.0 100.0 461.0)))
         (instance face :init :vertices (list (float-vector -25.0 110.0 461.0) (float-vector -25.0 110.0 451.0) (float-vector -25.0 100.0 451.0) (float-vector -25.0 100.0 461.0)))
         (instance face :init :vertices (list (float-vector -15.0 110.0 461.0) (float-vector -15.0 110.0 451.0) (float-vector -25.0 110.0 451.0) (float-vector -25.0 110.0 461.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.5 -114.847 85.5) (float-vector 2.819966e-14 -119.0 85.5) (float-vector 15.5 -114.847 85.5) (float-vector 26.8468 -103.5 85.5) (float-vector 31.0 -88.0 85.5) (float-vector 26.8468 -72.5 85.5) (float-vector 15.5 -61.1532 85.5) (float-vector 5.173639e-14 -57.0 85.5) (float-vector -15.5 -61.1532 85.5) (float-vector -26.8468 -72.5 85.5) (float-vector -31.0 -88.0 85.5) (float-vector -26.8468 -103.5 85.5)))
         (instance face :init :vertices (list (float-vector 2.819966e-14 -119.0 80.5) (float-vector -15.5 -114.847 80.5) (float-vector -26.8468 -103.5 80.5) (float-vector -31.0 -88.0 80.5) (float-vector -26.8468 -72.5 80.5) (float-vector -15.5 -61.1532 80.5) (float-vector 5.173639e-14 -57.0 80.5) (float-vector 15.5 -61.1532 80.5) (float-vector 26.8468 -72.5 80.5) (float-vector 31.0 -88.0 80.5) (float-vector 26.8468 -103.5 80.5) (float-vector 15.5 -114.847 80.5)))
         (instance face :init :vertices (list (float-vector -15.5 -114.847 85.5) (float-vector -15.5 -114.847 80.5) (float-vector 2.819966e-14 -119.0 80.5) (float-vector 2.819966e-14 -119.0 85.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -103.5 85.5) (float-vector -26.8468 -103.5 80.5) (float-vector -15.5 -114.847 80.5) (float-vector -15.5 -114.847 85.5)))
         (instance face :init :vertices (list (float-vector -31.0 -88.0 85.5) (float-vector -31.0 -88.0 80.5) (float-vector -26.8468 -103.5 80.5) (float-vector -26.8468 -103.5 85.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -72.5 85.5) (float-vector -26.8468 -72.5 80.5) (float-vector -31.0 -88.0 80.5) (float-vector -31.0 -88.0 85.5)))
         (instance face :init :vertices (list (float-vector -15.5 -61.1532 85.5) (float-vector -15.5 -61.1532 80.5) (float-vector -26.8468 -72.5 80.5) (float-vector -26.8468 -72.5 85.5)))
         (instance face :init :vertices (list (float-vector 5.173639e-14 -57.0 85.5) (float-vector 5.173639e-14 -57.0 80.5) (float-vector -15.5 -61.1532 80.5) (float-vector -15.5 -61.1532 85.5)))
         (instance face :init :vertices (list (float-vector 15.5 -61.1532 85.5) (float-vector 15.5 -61.1532 80.5) (float-vector 5.173639e-14 -57.0 80.5) (float-vector 5.173639e-14 -57.0 85.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -72.5 85.5) (float-vector 26.8468 -72.5 80.5) (float-vector 15.5 -61.1532 80.5) (float-vector 15.5 -61.1532 85.5)))
         (instance face :init :vertices (list (float-vector 31.0 -88.0 85.5) (float-vector 31.0 -88.0 80.5) (float-vector 26.8468 -72.5 80.5) (float-vector 26.8468 -72.5 85.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -103.5 85.5) (float-vector 26.8468 -103.5 80.5) (float-vector 31.0 -88.0 80.5) (float-vector 31.0 -88.0 85.5)))
         (instance face :init :vertices (list (float-vector 15.5 -114.847 85.5) (float-vector 15.5 -114.847 80.5) (float-vector 26.8468 -103.5 80.5) (float-vector 26.8468 -103.5 85.5)))
         (instance face :init :vertices (list (float-vector 2.819966e-14 -119.0 85.5) (float-vector 2.819966e-14 -119.0 80.5) (float-vector 15.5 -114.847 80.5) (float-vector 15.5 -114.847 85.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.5 61.1532 85.5) (float-vector -1.443290e-14 57.0 85.5) (float-vector 15.5 61.1532 85.5) (float-vector 26.8468 72.5 85.5) (float-vector 31.0 88.0 85.5) (float-vector 26.8468 103.5 85.5) (float-vector 15.5 114.847 85.5) (float-vector 9.103829e-15 119.0 85.5) (float-vector -15.5 114.847 85.5) (float-vector -26.8468 103.5 85.5) (float-vector -31.0 88.0 85.5) (float-vector -26.8468 72.5 85.5)))
         (instance face :init :vertices (list (float-vector -1.443290e-14 57.0 80.5) (float-vector -15.5 61.1532 80.5) (float-vector -26.8468 72.5 80.5) (float-vector -31.0 88.0 80.5) (float-vector -26.8468 103.5 80.5) (float-vector -15.5 114.847 80.5) (float-vector 9.103829e-15 119.0 80.5) (float-vector 15.5 114.847 80.5) (float-vector 26.8468 103.5 80.5) (float-vector 31.0 88.0 80.5) (float-vector 26.8468 72.5 80.5) (float-vector 15.5 61.1532 80.5)))
         (instance face :init :vertices (list (float-vector -15.5 61.1532 85.5) (float-vector -15.5 61.1532 80.5) (float-vector -1.443290e-14 57.0 80.5) (float-vector -1.443290e-14 57.0 85.5)))
         (instance face :init :vertices (list (float-vector -26.8468 72.5 85.5) (float-vector -26.8468 72.5 80.5) (float-vector -15.5 61.1532 80.5) (float-vector -15.5 61.1532 85.5)))
         (instance face :init :vertices (list (float-vector -31.0 88.0 85.5) (float-vector -31.0 88.0 80.5) (float-vector -26.8468 72.5 80.5) (float-vector -26.8468 72.5 85.5)))
         (instance face :init :vertices (list (float-vector -26.8468 103.5 85.5) (float-vector -26.8468 103.5 80.5) (float-vector -31.0 88.0 80.5) (float-vector -31.0 88.0 85.5)))
         (instance face :init :vertices (list (float-vector -15.5 114.847 85.5) (float-vector -15.5 114.847 80.5) (float-vector -26.8468 103.5 80.5) (float-vector -26.8468 103.5 85.5)))
         (instance face :init :vertices (list (float-vector 9.103829e-15 119.0 85.5) (float-vector 9.103829e-15 119.0 80.5) (float-vector -15.5 114.847 80.5) (float-vector -15.5 114.847 85.5)))
         (instance face :init :vertices (list (float-vector 15.5 114.847 85.5) (float-vector 15.5 114.847 80.5) (float-vector 9.103829e-15 119.0 80.5) (float-vector 9.103829e-15 119.0 85.5)))
         (instance face :init :vertices (list (float-vector 26.8468 103.5 85.5) (float-vector 26.8468 103.5 80.5) (float-vector 15.5 114.847 80.5) (float-vector 15.5 114.847 85.5)))
         (instance face :init :vertices (list (float-vector 31.0 88.0 85.5) (float-vector 31.0 88.0 80.5) (float-vector 26.8468 103.5 80.5) (float-vector 26.8468 103.5 85.5)))
         (instance face :init :vertices (list (float-vector 26.8468 72.5 85.5) (float-vector 26.8468 72.5 80.5) (float-vector 31.0 88.0 80.5) (float-vector 31.0 88.0 85.5)))
         (instance face :init :vertices (list (float-vector 15.5 61.1532 85.5) (float-vector 15.5 61.1532 80.5) (float-vector 26.8468 72.5 80.5) (float-vector 26.8468 72.5 85.5)))
         (instance face :init :vertices (list (float-vector -1.443290e-14 57.0 85.5) (float-vector -1.443290e-14 57.0 80.5) (float-vector 15.5 61.1532 80.5) (float-vector 15.5 61.1532 85.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -53.5 37.5 534.5) (float-vector -43.5102 37.5 532.417) (float-vector -34.363 37.5 525.587) (float-vector -29.294 37.5 515.75) (float-vector -28.326 37.5 515.0) (float-vector -22.5 37.5 515.0) (float-vector -22.5 37.5 485.5) (float-vector -84.5 37.5 485.5) (float-vector -84.5 37.5 515.0) (float-vector -78.674 37.5 515.0) (float-vector -77.706 37.5 515.75) (float-vector -72.637 37.5 525.587) (float-vector -63.4898 37.5 532.417)))
         (instance face :init :vertices (list (float-vector -43.5102 -37.5 532.417) (float-vector -53.5 -37.5 534.5) (float-vector -63.4898 -37.5 532.417) (float-vector -72.637 -37.5 525.587) (float-vector -77.706 -37.5 515.75) (float-vector -78.674 -37.5 515.0) (float-vector -84.5 -37.5 515.0) (float-vector -84.5 -37.5 485.5) (float-vector -22.5 -37.5 485.5) (float-vector -22.5 -37.5 515.0) (float-vector -28.326 -37.5 515.0) (float-vector -29.294 -37.5 515.75) (float-vector -34.363 -37.5 525.587)))
         (instance face :init :vertices (list (float-vector -53.5 37.5 534.5) (float-vector -53.5 -37.5 534.5) (float-vector -43.5102 -37.5 532.417) (float-vector -43.5102 37.5 532.417)))
         (instance face :init :vertices (list (float-vector -63.4898 37.5 532.417) (float-vector -63.4898 -37.5 532.417) (float-vector -53.5 -37.5 534.5) (float-vector -53.5 37.5 534.5)))
         (instance face :init :vertices (list (float-vector -72.637 37.5 525.587) (float-vector -72.637 -37.5 525.587) (float-vector -63.4898 -37.5 532.417) (float-vector -63.4898 37.5 532.417)))
         (instance face :init :vertices (list (float-vector -77.706 37.5 515.75) (float-vector -77.706 -37.5 515.75) (float-vector -72.637 -37.5 525.587) (float-vector -72.637 37.5 525.587)))
         (instance face :init :vertices (list (float-vector -78.674 37.5 515.0) (float-vector -78.674 -37.5 515.0) (float-vector -77.706 -37.5 515.75) (float-vector -77.706 37.5 515.75)))
         (instance face :init :vertices (list (float-vector -84.5 37.5 515.0) (float-vector -84.5 -37.5 515.0) (float-vector -78.674 -37.5 515.0) (float-vector -78.674 37.5 515.0)))
         (instance face :init :vertices (list (float-vector -84.5 37.5 485.5) (float-vector -84.5 -37.5 485.5) (float-vector -84.5 -37.5 515.0) (float-vector -84.5 37.5 515.0)))
         (instance face :init :vertices (list (float-vector -22.5 37.5 485.5) (float-vector -22.5 -37.5 485.5) (float-vector -84.5 -37.5 485.5) (float-vector -84.5 37.5 485.5)))
         (instance face :init :vertices (list (float-vector -22.5 37.5 515.0) (float-vector -22.5 -37.5 515.0) (float-vector -22.5 -37.5 485.5) (float-vector -22.5 37.5 485.5)))
         (instance face :init :vertices (list (float-vector -28.326 37.5 515.0) (float-vector -28.326 -37.5 515.0) (float-vector -22.5 -37.5 515.0) (float-vector -22.5 37.5 515.0)))
         (instance face :init :vertices (list (float-vector -29.294 37.5 515.75) (float-vector -29.294 -37.5 515.75) (float-vector -28.326 -37.5 515.0) (float-vector -28.326 37.5 515.0)))
         (instance face :init :vertices (list (float-vector -34.363 37.5 525.587) (float-vector -34.363 -37.5 525.587) (float-vector -29.294 -37.5 515.75) (float-vector -29.294 37.5 515.75)))
         (instance face :init :vertices (list (float-vector -43.5102 37.5 532.417) (float-vector -43.5102 -37.5 532.417) (float-vector -34.363 -37.5 525.587) (float-vector -34.363 37.5 525.587)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -5.0 -61.994 414.75) (float-vector -5.0 -197.0 414.75) (float-vector 80.0 -197.0 414.75) (float-vector 80.0 -61.994 414.75)))
         (instance face :init :vertices (list (float-vector -5.0 -61.994 414.75) (float-vector 80.0 -61.994 414.75) (float-vector 80.0 -61.994 418.5) (float-vector 62.6681 -61.994 528.75) (float-vector -5.0 -61.994 528.75)))
         (instance face :init :vertices (list (float-vector -5.0 -61.994 528.75) (float-vector 62.6681 -61.994 528.75) (float-vector 62.6681 -197.0 528.75) (float-vector -5.0 -197.0 528.75)))
         (instance face :init :vertices (list (float-vector -5.0 -197.0 414.75) (float-vector -5.0 -61.994 414.75) (float-vector -5.0 -61.994 528.75) (float-vector -5.0 -197.0 528.75)))
         (instance face :init :vertices (list (float-vector 80.0 -61.994 418.5) (float-vector 80.0 -61.994 414.75) (float-vector 80.0 -197.0 414.75) (float-vector 80.0 -197.0 340.5) (float-vector 80.0 197.0 340.5) (float-vector 80.0 197.0 414.75) (float-vector 80.0 61.994 414.75) (float-vector 80.0 61.994 418.5)))
         (instance face :init :vertices (list (float-vector 62.6681 -197.0 528.75) (float-vector 62.6681 -61.994 528.75) (float-vector 80.0 -61.994 418.5) (float-vector 80.0 61.994 418.5) (float-vector 62.6681 61.994 528.75) (float-vector 62.6681 197.0 528.75) (float-vector 62.0 197.0 533.0) (float-vector 62.0 56.994 533.0) (float-vector 69.4672 56.994 485.5) (float-vector 69.4672 -56.994 485.5) (float-vector 62.0 -56.994 533.0) (float-vector 62.0 -197.0 533.0)))
         (instance face :init :vertices (list (float-vector 80.0 197.0 340.5) (float-vector 80.0 -197.0 340.5) (float-vector 41.0 -197.0 86.5) (float-vector 41.0 197.0 86.5)))
         (instance face :init :vertices (list (float-vector 41.0 197.0 86.5) (float-vector 41.0 -197.0 86.5) (float-vector -112.5 -197.0 86.5) (float-vector -112.5 197.0 86.5)))
         (instance face :init :vertices (list (float-vector -112.5 197.0 86.5) (float-vector -112.5 -197.0 86.5) (float-vector -170.5 -197.0 498.0) (float-vector -170.5 -56.994 498.0) (float-vector -168.738 -56.994 485.5) (float-vector -168.738 56.994 485.5) (float-vector -170.5 56.994 498.0) (float-vector -170.5 197.0 498.0)))
         (instance face :init :vertices (list (float-vector -158.749 -56.994 523.0) (float-vector -170.5 -56.994 498.0) (float-vector -170.5 -197.0 498.0) (float-vector -158.749 -197.0 523.0)))
         (instance face :init :vertices (list (float-vector -170.5 197.0 498.0) (float-vector -170.5 56.994 498.0) (float-vector -158.749 56.994 523.0) (float-vector -158.749 197.0 523.0)))
         (instance face :init :vertices (list (float-vector -134.0 -56.994 533.0) (float-vector -158.749 -56.994 523.0) (float-vector -158.749 -197.0 523.0) (float-vector -134.0 -197.0 533.0)))
         (instance face :init :vertices (list (float-vector -158.749 197.0 523.0) (float-vector -158.749 56.994 523.0) (float-vector -134.0 56.994 533.0) (float-vector -134.0 197.0 533.0)))
         (instance face :init :vertices (list (float-vector 80.0 197.0 414.75) (float-vector 80.0 197.0 340.5) (float-vector 41.0 197.0 86.5) (float-vector -112.5 197.0 86.5) (float-vector -170.5 197.0 498.0) (float-vector -158.749 197.0 523.0) (float-vector -134.0 197.0 533.0) (float-vector 62.0 197.0 533.0) (float-vector 62.6681 197.0 528.75) (float-vector -5.0 197.0 528.75) (float-vector -5.0 197.0 414.75)))
         (instance face :init :vertices (list (float-vector -134.0 -197.0 533.0) (float-vector -158.749 -197.0 523.0) (float-vector -170.5 -197.0 498.0) (float-vector -112.5 -197.0 86.5) (float-vector 41.0 -197.0 86.5) (float-vector 80.0 -197.0 340.5) (float-vector 80.0 -197.0 414.75) (float-vector -5.0 -197.0 414.75) (float-vector -5.0 -197.0 528.75) (float-vector 62.6681 -197.0 528.75) (float-vector 62.0 -197.0 533.0)))
         (instance face :init :vertices (list (float-vector -134.0 197.0 533.0) (float-vector -134.0 56.994 533.0) (float-vector 62.0 56.994 533.0) (float-vector 62.0 197.0 533.0)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 533.0) (float-vector 62.0 -56.994 533.0) (float-vector -134.0 -56.994 533.0) (float-vector -134.0 -197.0 533.0)))
         (instance face :init :vertices (list (float-vector -5.0 197.0 414.75) (float-vector -5.0 197.0 528.75) (float-vector -5.0 61.994 528.75) (float-vector -5.0 61.994 414.75)))
         (instance face :init :vertices (list (float-vector -5.0 61.994 528.75) (float-vector -5.0 197.0 528.75) (float-vector 62.6681 197.0 528.75) (float-vector 62.6681 61.994 528.75)))
         (instance face :init :vertices (list (float-vector -5.0 61.994 414.75) (float-vector -5.0 61.994 528.75) (float-vector 62.6681 61.994 528.75) (float-vector 80.0 61.994 418.5) (float-vector 80.0 61.994 414.75)))
         (instance face :init :vertices (list (float-vector 80.0 61.994 414.75) (float-vector 80.0 197.0 414.75) (float-vector -5.0 197.0 414.75) (float-vector -5.0 61.994 414.75)))
         (instance face :init :vertices (list (float-vector -168.738 -56.994 485.5) (float-vector -170.5 -56.994 498.0) (float-vector -158.749 -56.994 523.0) (float-vector -134.0 -56.994 533.0) (float-vector 62.0 -56.994 533.0) (float-vector 69.4672 -56.994 485.5)))
         (instance face :init :vertices (list (float-vector 69.4672 56.994 485.5) (float-vector 62.0 56.994 533.0) (float-vector -134.0 56.994 533.0) (float-vector -158.749 56.994 523.0) (float-vector -170.5 56.994 498.0) (float-vector -168.738 56.994 485.5)))
         (instance face :init :vertices (list (float-vector -168.738 56.994 485.5) (float-vector -168.738 -56.994 485.5) (float-vector 69.4672 -56.994 485.5) (float-vector 69.4672 56.994 485.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 28.0 -23.0 192.0) (float-vector 28.0 -23.0 190.0) (float-vector 41.5 -13.5 190.0) (float-vector 41.5 -13.5 192.0)))
         (instance face :init :vertices (list (float-vector 41.5 -13.5 190.0) (float-vector 41.5 13.5 190.0) (float-vector 41.5 13.5 192.0) (float-vector 41.5 -13.5 192.0)))
         (instance face :init :vertices (list (float-vector 41.5 13.5 190.0) (float-vector 28.0 23.0 190.0) (float-vector 28.0 23.0 192.0) (float-vector 41.5 13.5 192.0)))
         (instance face :init :vertices (list (float-vector 28.0 23.0 190.0) (float-vector 14.5 13.5 190.0) (float-vector 14.5 13.5 192.0) (float-vector 28.0 23.0 192.0)))
         (instance face :init :vertices (list (float-vector 14.5 13.5 190.0) (float-vector 14.5 -13.5 190.0) (float-vector 14.5 -13.5 192.0) (float-vector 14.5 13.5 192.0)))
         (instance face :init :vertices (list (float-vector 14.5 -13.5 192.0) (float-vector 28.0 -23.0 192.0) (float-vector 41.5 -13.5 192.0) (float-vector 41.5 13.5 192.0) (float-vector 28.0 23.0 192.0) (float-vector 14.5 13.5 192.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 15.0 13.0 192.0) (float-vector 41.0 13.0 192.0) (float-vector 41.0 -13.0 192.0) (float-vector 15.0 -13.0 192.0)))
))
         (instance face :init :vertices (list (float-vector 14.5 -13.5 190.0) (float-vector 28.0 -23.0 190.0) (float-vector 28.0 -23.0 192.0) (float-vector 14.5 -13.5 192.0)))
         (instance face :init :vertices (list (float-vector 28.0 -23.0 190.0) (float-vector 14.5 -13.5 190.0) (float-vector 14.5 13.5 190.0) (float-vector 28.0 23.0 190.0) (float-vector 41.5 13.5 190.0) (float-vector 41.5 -13.5 190.0)))
         (instance face :init :vertices (list (float-vector 15.0 -13.0 210.0) (float-vector 15.0 -13.0 192.0) (float-vector 41.0 -13.0 192.0) (float-vector 41.0 -13.0 210.0)))
         (instance face :init :vertices (list (float-vector 41.0 13.0 192.0) (float-vector 41.0 13.0 210.0) (float-vector 41.0 -13.0 210.0) (float-vector 41.0 -13.0 192.0)))
         (instance face :init :vertices (list (float-vector 15.0 13.0 192.0) (float-vector 15.0 13.0 210.0) (float-vector 41.0 13.0 210.0) (float-vector 41.0 13.0 192.0)))
         (instance face :init :vertices (list (float-vector 15.0 13.0 210.0) (float-vector 15.0 -13.0 210.0) (float-vector 41.0 -13.0 210.0) (float-vector 41.0 13.0 210.0)))
         (instance face :init :vertices (list (float-vector 15.0 -13.0 210.0) (float-vector 15.0 13.0 210.0) (float-vector 15.0 13.0 192.0) (float-vector 15.0 -13.0 192.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color :white)
     (send (elt bc 5) :set-color :white)
     (send (elt bc 6) :set-color :gray40)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 16411.3 :centroid (float-vector -43.255 1.537010e-14 308.102) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 32.09 -92.851 71.0) (float-vector 32.0 0.03099 71.0) (float-vector 24.843 20.17 71.0) (float-vector 13.298 29.106 71.0) (float-vector 2.238210e-13 32.0 71.0) (float-vector -3.552714e-15 31.0 71.0) (float-vector -15.454 26.873 71.0) (float-vector -26.439 16.186 71.0) (float-vector -31.0 0.0 71.0) (float-vector -32.0 0.0 71.0) (float-vector -32.0 -93.0 71.0)))
         (instance face :init :vertices (list (float-vector 32.0 0.03099 -36.5) (float-vector 32.09 -92.851 -36.5) (float-vector -32.0 -93.0 -36.5) (float-vector -32.0 -1.421085e-14 -36.5) (float-vector -31.0 -1.421085e-14 -36.5) (float-vector -26.439 16.186 -36.5) (float-vector -15.454 26.873 -36.5) (float-vector -3.552714e-15 31.0 -36.5) (float-vector 2.238210e-13 32.0 -36.5) (float-vector 13.298 29.106 -36.5) (float-vector 24.843 20.17 -36.5)))
         (instance face :init :vertices (list (float-vector 32.09 -92.851 71.0) (float-vector 32.09 -92.851 -36.5) (float-vector 32.0 0.03099 -36.5) (float-vector 32.0 0.03099 71.0)))
         (instance face :init :vertices (list (float-vector -32.0 -93.0 71.0) (float-vector -32.0 -93.0 -36.5) (float-vector 32.09 -92.851 -36.5) (float-vector 32.09 -92.851 71.0)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 71.0) (float-vector -32.0 -1.421085e-14 -36.5) (float-vector -32.0 -93.0 -36.5) (float-vector -32.0 -93.0 71.0)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 71.0) (float-vector -31.0 -1.421085e-14 -36.5) (float-vector -32.0 -1.421085e-14 -36.5) (float-vector -32.0 0.0 71.0)))
         (instance face :init :vertices (list (float-vector -26.439 16.186 71.0) (float-vector -26.439 16.186 -36.5) (float-vector -31.0 -1.421085e-14 -36.5) (float-vector -31.0 0.0 71.0)))
         (instance face :init :vertices (list (float-vector -15.454 26.873 71.0) (float-vector -15.454 26.873 -36.5) (float-vector -26.439 16.186 -36.5) (float-vector -26.439 16.186 71.0)))
         (instance face :init :vertices (list (float-vector -3.552714e-15 31.0 71.0) (float-vector -3.552714e-15 31.0 -36.5) (float-vector -15.454 26.873 -36.5) (float-vector -15.454 26.873 71.0)))
         (instance face :init :vertices (list (float-vector 2.238210e-13 32.0 71.0) (float-vector 2.238210e-13 32.0 -36.5) (float-vector -3.552714e-15 31.0 -36.5) (float-vector -3.552714e-15 31.0 71.0)))
         (instance face :init :vertices (list (float-vector 13.298 29.106 71.0) (float-vector 13.298 29.106 -36.5) (float-vector 2.238210e-13 32.0 -36.5) (float-vector 2.238210e-13 32.0 71.0)))
         (instance face :init :vertices (list (float-vector 24.843 20.17 71.0) (float-vector 24.843 20.17 -36.5) (float-vector 13.298 29.106 -36.5) (float-vector 13.298 29.106 71.0)))
         (instance face :init :vertices (list (float-vector 32.0 0.03099 71.0) (float-vector 32.0 0.03099 -36.5) (float-vector 24.843 20.17 -36.5) (float-vector 24.843 20.17 71.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-y :weight 1150.23 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -67.0 77.0 -1.0) (float-vector -67.0 73.671 13.898) (float-vector 34.0 73.671 13.898) (float-vector 34.0 77.0 -1.0)))
         (instance face :init :vertices (list (float-vector -67.0 65.665 24.787) (float-vector 34.0 65.665 24.787) (float-vector 34.0 73.671 13.898) (float-vector -67.0 73.671 13.898)))
         (instance face :init :vertices (list (float-vector -67.0 49.395 33.21) (float-vector 34.0 49.395 33.21) (float-vector 34.0 65.665 24.787) (float-vector -67.0 65.665 24.787)))
         (instance face :init :vertices (list (float-vector -67.0 -12.831 46.661) (float-vector -64.0 -12.831 46.661) (float-vector -64.0 40.0 35.2409) (float-vector 31.0 40.0 35.2409) (float-vector 31.0 -12.831 46.661) (float-vector 34.0 -12.831 46.661) (float-vector 34.0 49.395 33.21) (float-vector -67.0 49.395 33.21)))
         (instance face :init :vertices (list (float-vector 34.0 -19.926 46.477) (float-vector 34.0 -12.831 46.661) (float-vector 31.0 -12.831 46.661) (float-vector 31.0 -19.926 46.477)))
         (instance face :init :vertices (list (float-vector -67.0 -19.926 46.477) (float-vector -64.0 -19.926 46.477) (float-vector -64.0 -12.831 46.661) (float-vector -67.0 -12.831 46.661)))
         (instance face :init :vertices (list (float-vector 34.0 -28.081 40.891) (float-vector 34.0 -19.926 46.477) (float-vector 31.0 -19.926 46.477) (float-vector 31.0 -28.081 40.891)))
         (instance face :init :vertices (list (float-vector -67.0 -28.081 40.891) (float-vector -64.0 -28.081 40.891) (float-vector -64.0 -19.926 46.477) (float-vector -67.0 -19.926 46.477)))
         (instance face :init :vertices (list (float-vector 34.0 -31.0 32.0) (float-vector 34.0 -28.081 40.891) (float-vector 31.0 -28.081 40.891) (float-vector 31.0 -31.0 32.0)))
         (instance face :init :vertices (list (float-vector -67.0 -31.0 32.0) (float-vector -64.0 -31.0 32.0) (float-vector -64.0 -28.081 40.891) (float-vector -67.0 -28.081 40.891)))
         (instance face :init :vertices (list (float-vector -67.0 -31.0 -48.0) (float-vector 34.0 -31.0 -48.0) (float-vector 34.0 -31.0 32.0) (float-vector 31.0 -31.0 32.0) (float-vector 31.0 -31.0 -39.0) (float-vector -64.0 -31.0 -39.0) (float-vector -64.0 -31.0 32.0) (float-vector -67.0 -31.0 32.0)))
         (instance face :init :vertices (list (float-vector -67.0 77.0 -48.0) (float-vector 34.0 77.0 -48.0) (float-vector 34.0 -31.0 -48.0) (float-vector -67.0 -31.0 -48.0)))
         (instance face :init :vertices (list (float-vector 34.0 77.0 -1.0) (float-vector 34.0 73.671 13.898) (float-vector 34.0 65.665 24.787) (float-vector 34.0 49.395 33.21) (float-vector 34.0 -12.831 46.661) (float-vector 34.0 -19.926 46.477) (float-vector 34.0 -28.081 40.891) (float-vector 34.0 -31.0 32.0) (float-vector 34.0 -31.0 -48.0) (float-vector 34.0 77.0 -48.0)))
         (instance face :init :vertices (list (float-vector -67.0 77.0 -48.0) (float-vector -67.0 -31.0 -48.0) (float-vector -67.0 -31.0 32.0) (float-vector -67.0 -28.081 40.891) (float-vector -67.0 -19.926 46.477) (float-vector -67.0 -12.831 46.661) (float-vector -67.0 49.395 33.21) (float-vector -67.0 65.665 24.787) (float-vector -67.0 73.671 13.898) (float-vector -67.0 77.0 -1.0)))
         (instance face :init :vertices (list (float-vector -67.0 77.0 -1.0) (float-vector 34.0 77.0 -1.0) (float-vector 34.0 77.0 -48.0) (float-vector -67.0 77.0 -48.0)))
         (instance face :init :vertices (list (float-vector 31.0 -31.0 -39.0) (float-vector 31.0 -31.0 32.0) (float-vector 31.0 -28.081 40.891) (float-vector 31.0 -19.926 46.477) (float-vector 31.0 -12.831 46.661) (float-vector 31.0 40.0 35.2409) (float-vector 31.0 40.0 -39.0)))
         (instance face :init :vertices (list (float-vector -64.0 -31.0 -39.0) (float-vector 31.0 -31.0 -39.0) (float-vector 31.0 40.0 -39.0) (float-vector -64.0 40.0 -39.0)))
         (instance face :init :vertices (list (float-vector -64.0 40.0 -39.0) (float-vector 31.0 40.0 -39.0) (float-vector 31.0 40.0 35.2409) (float-vector -64.0 40.0 35.2409)))
         (instance face :init :vertices (list (float-vector -64.0 40.0 35.2409) (float-vector -64.0 -12.831 46.661) (float-vector -64.0 -19.926 46.477) (float-vector -64.0 -28.081 40.891) (float-vector -64.0 -31.0 32.0) (float-vector -64.0 -31.0 -39.0) (float-vector -64.0 40.0 -39.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 1190.93 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-shoulder-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 31.0 0.0 -36.0) (float-vector 28.591 -11.982 -36.0) (float-vector 22.552 -21.27 -36.0) (float-vector 12.119 -28.533 -36.0) (float-vector -1.136868e-13 -31.0 -36.0) (float-vector -10.014 -29.338 -36.0) (float-vector -23.69 -21.839 -36.0) (float-vector -28.616 -21.0 -36.0) (float-vector -52.0 -20.957 -36.0) (float-vector -52.0 37.9938 -36.0) (float-vector -1.136868e-13 32.199 -36.0) (float-vector 10.568 30.205 -36.0) (float-vector 20.152 24.857 -36.0) (float-vector 27.713 16.0 -36.0) (float-vector 26.847 15.5 -36.0) (float-vector 29.687 8.926 -36.0)))
         (instance face :init :vertices (list (float-vector 28.591 -11.982 36.0) (float-vector 31.0 0.0 36.0) (float-vector 29.687 8.926 36.0) (float-vector 26.847 15.5 36.0) (float-vector 27.713 16.0 36.0) (float-vector 20.152 24.857 36.0) (float-vector 10.568 30.205 36.0) (float-vector 0.0 32.199 36.0) (float-vector -52.0 37.9938 36.0) (float-vector -52.0 -20.957 36.0) (float-vector -28.616 -21.0 36.0) (float-vector -23.69 -21.839 36.0) (float-vector -10.014 -29.338 36.0) (float-vector 0.0 -31.0 36.0) (float-vector 12.119 -28.533 36.0) (float-vector 22.552 -21.27 36.0)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 -36.0) (float-vector 31.0 0.0 36.0) (float-vector 28.591 -11.982 36.0) (float-vector 28.591 -11.982 -36.0)))
         (instance face :init :vertices (list (float-vector 29.687 8.926 -36.0) (float-vector 29.687 8.926 36.0) (float-vector 31.0 0.0 36.0) (float-vector 31.0 0.0 -36.0)))
         (instance face :init :vertices (list (float-vector 26.847 15.5 -36.0) (float-vector 26.847 15.5 36.0) (float-vector 29.687 8.926 36.0) (float-vector 29.687 8.926 -36.0)))
         (instance face :init :vertices (list (float-vector 27.713 16.0 -36.0) (float-vector 27.713 16.0 36.0) (float-vector 26.847 15.5 36.0) (float-vector 26.847 15.5 -36.0)))
         (instance face :init :vertices (list (float-vector 20.152 24.857 -36.0) (float-vector 20.152 24.857 36.0) (float-vector 27.713 16.0 36.0) (float-vector 27.713 16.0 -36.0)))
         (instance face :init :vertices (list (float-vector 10.568 30.205 -36.0) (float-vector 10.568 30.205 36.0) (float-vector 20.152 24.857 36.0) (float-vector 20.152 24.857 -36.0)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 32.199 -36.0) (float-vector 0.0 32.199 36.0) (float-vector 10.568 30.205 36.0) (float-vector 10.568 30.205 -36.0)))
         (instance face :init :vertices (list (float-vector -52.0 37.9938 -36.0) (float-vector -52.0 37.9938 36.0) (float-vector 0.0 32.199 36.0) (float-vector -1.136868e-13 32.199 -36.0)))
         (instance face :init :vertices (list (float-vector -52.0 -20.957 -36.0) (float-vector -52.0 -20.957 36.0) (float-vector -52.0 37.9938 36.0) (float-vector -52.0 37.9938 -36.0)))
         (instance face :init :vertices (list (float-vector -28.616 -21.0 -36.0) (float-vector -28.616 -21.0 36.0) (float-vector -52.0 -20.957 36.0) (float-vector -52.0 -20.957 -36.0)))
         (instance face :init :vertices (list (float-vector -23.69 -21.839 -36.0) (float-vector -23.69 -21.839 36.0) (float-vector -28.616 -21.0 36.0) (float-vector -28.616 -21.0 -36.0)))
         (instance face :init :vertices (list (float-vector -10.014 -29.338 -36.0) (float-vector -10.014 -29.338 36.0) (float-vector -23.69 -21.839 36.0) (float-vector -23.69 -21.839 -36.0)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 -31.0 -36.0) (float-vector 0.0 -31.0 36.0) (float-vector -10.014 -29.338 36.0) (float-vector -10.014 -29.338 -36.0)))
         (instance face :init :vertices (list (float-vector 12.119 -28.533 -36.0) (float-vector 12.119 -28.533 36.0) (float-vector 0.0 -31.0 36.0) (float-vector -1.136868e-13 -31.0 -36.0)))
         (instance face :init :vertices (list (float-vector 22.552 -21.27 -36.0) (float-vector 22.552 -21.27 36.0) (float-vector 12.119 -28.533 36.0) (float-vector 12.119 -28.533 -36.0)))
         (instance face :init :vertices (list (float-vector 28.591 -11.982 -36.0) (float-vector 28.591 -11.982 36.0) (float-vector 22.552 -21.27 36.0) (float-vector 22.552 -21.27 -36.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 47.0 0.0) (float-vector -185.0 47.0 -6.0) (float-vector -185.0 44.476 -16.457) (float-vector -185.0 38.958 -25.214) (float-vector -185.0 29.697 -32.425) (float-vector -185.0 17.0615 -36.0) (float-vector -185.0 8.0 -36.0) (float-vector -185.0 -1.0615 -36.0) (float-vector -185.0 -13.697 -32.425) (float-vector -185.0 -22.958 -25.214) (float-vector -185.0 -28.476 -16.457) (float-vector -185.0 -31.0 -6.0) (float-vector -185.0 -31.0 0.0) (float-vector -185.0 -31.0 6.0) (float-vector -185.0 -28.476 16.457) (float-vector -185.0 -22.958 25.214) (float-vector -185.0 -13.697 32.425) (float-vector -185.0 -1.0615 36.0) (float-vector -185.0 8.0 36.0) (float-vector -185.0 17.0615 36.0) (float-vector -185.0 29.697 32.425) (float-vector -185.0 38.958 25.214) (float-vector -185.0 44.476 16.457) (float-vector -185.0 47.0 6.0)))
         (instance face :init :vertices (list (float-vector -52.0 47.0 -6.0) (float-vector -52.0 47.0 0.0) (float-vector -52.0 47.0 6.0) (float-vector -52.0 44.476 16.457) (float-vector -52.0 38.958 25.214) (float-vector -52.0 29.697 32.425) (float-vector -52.0 17.0615 36.0) (float-vector -52.0 8.0 36.0) (float-vector -52.0 -1.0615 36.0) (float-vector -52.0 -13.697 32.425) (float-vector -52.0 -22.958 25.214) (float-vector -52.0 -28.476 16.457) (float-vector -52.0 -31.0 6.0) (float-vector -52.0 -31.0 0.0) (float-vector -52.0 -31.0 -6.0) (float-vector -52.0 -28.476 -16.457) (float-vector -52.0 -22.958 -25.214) (float-vector -52.0 -13.697 -32.425) (float-vector -52.0 -1.0615 -36.0) (float-vector -52.0 8.0 -36.0) (float-vector -52.0 17.0615 -36.0) (float-vector -52.0 29.697 -32.425) (float-vector -52.0 38.958 -25.214) (float-vector -52.0 44.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 0.0) (float-vector -52.0 47.0 0.0) (float-vector -52.0 47.0 -6.0) (float-vector -185.0 47.0 -6.0)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 6.0) (float-vector -52.0 47.0 6.0) (float-vector -52.0 47.0 0.0) (float-vector -185.0 47.0 0.0)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 16.457) (float-vector -52.0 44.476 16.457) (float-vector -52.0 47.0 6.0) (float-vector -185.0 47.0 6.0)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 25.214) (float-vector -52.0 38.958 25.214) (float-vector -52.0 44.476 16.457) (float-vector -185.0 44.476 16.457)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 32.425) (float-vector -52.0 29.697 32.425) (float-vector -52.0 38.958 25.214) (float-vector -185.0 38.958 25.214)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 36.0) (float-vector -52.0 17.0615 36.0) (float-vector -52.0 29.697 32.425) (float-vector -185.0 29.697 32.425)))
         (instance face :init :vertices (list (float-vector -185.0 8.0 36.0) (float-vector -52.0 8.0 36.0) (float-vector -52.0 17.0615 36.0) (float-vector -185.0 17.0615 36.0)))
         (instance face :init :vertices (list (float-vector -185.0 -1.0615 36.0) (float-vector -52.0 -1.0615 36.0) (float-vector -52.0 8.0 36.0) (float-vector -185.0 8.0 36.0)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 32.425) (float-vector -52.0 -13.697 32.425) (float-vector -52.0 -1.0615 36.0) (float-vector -185.0 -1.0615 36.0)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 25.214) (float-vector -52.0 -22.958 25.214) (float-vector -52.0 -13.697 32.425) (float-vector -185.0 -13.697 32.425)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 16.457) (float-vector -52.0 -28.476 16.457) (float-vector -52.0 -22.958 25.214) (float-vector -185.0 -22.958 25.214)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 6.0) (float-vector -52.0 -31.0 6.0) (float-vector -52.0 -28.476 16.457) (float-vector -185.0 -28.476 16.457)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 0.0) (float-vector -52.0 -31.0 0.0) (float-vector -52.0 -31.0 6.0) (float-vector -185.0 -31.0 6.0)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -6.0) (float-vector -52.0 -31.0 -6.0) (float-vector -52.0 -31.0 0.0) (float-vector -185.0 -31.0 0.0)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 -16.457) (float-vector -52.0 -28.476 -16.457) (float-vector -52.0 -31.0 -6.0) (float-vector -185.0 -31.0 -6.0)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 -25.214) (float-vector -52.0 -22.958 -25.214) (float-vector -52.0 -28.476 -16.457) (float-vector -185.0 -28.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 -32.425) (float-vector -52.0 -13.697 -32.425) (float-vector -52.0 -22.958 -25.214) (float-vector -185.0 -22.958 -25.214)))
         (instance face :init :vertices (list (float-vector -185.0 -1.0615 -36.0) (float-vector -52.0 -1.0615 -36.0) (float-vector -52.0 -13.697 -32.425) (float-vector -185.0 -13.697 -32.425)))
         (instance face :init :vertices (list (float-vector -185.0 8.0 -36.0) (float-vector -52.0 8.0 -36.0) (float-vector -52.0 -1.0615 -36.0) (float-vector -185.0 -1.0615 -36.0)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 -36.0) (float-vector -52.0 17.0615 -36.0) (float-vector -52.0 8.0 -36.0) (float-vector -185.0 8.0 -36.0)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 -32.425) (float-vector -52.0 29.697 -32.425) (float-vector -52.0 17.0615 -36.0) (float-vector -185.0 17.0615 -36.0)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 -25.214) (float-vector -52.0 38.958 -25.214) (float-vector -52.0 29.697 -32.425) (float-vector -185.0 29.697 -32.425)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 -16.457) (float-vector -52.0 44.476 -16.457) (float-vector -52.0 38.958 -25.214) (float-vector -185.0 38.958 -25.214)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 -6.0) (float-vector -52.0 47.0 -6.0) (float-vector -52.0 44.476 -16.457) (float-vector -185.0 44.476 -16.457)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 47.0 -36.0) (float-vector -250.0 47.0 -36.0) (float-vector -250.0 47.0 -34.0) (float-vector -271.007 47.0 -5.7087) (float-vector -279.433 47.0 8.2675) (float-vector -281.0 47.0 18.0) (float-vector -282.0 47.0 18.0) (float-vector -280.002 47.0 29.129) (float-vector -274.407 47.0 38.695) (float-vector -263.32 47.0 47.096) (float-vector -250.0 47.0 50.0) (float-vector -241.132 47.0 48.747) (float-vector -190.0 47.0 34.0) (float-vector -185.0 47.0 34.0)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0 -36.0) (float-vector -185.0 -31.0 -36.0) (float-vector -185.0 -31.0 34.0) (float-vector -190.0 -31.0 34.0) (float-vector -241.132 -31.0 48.747) (float-vector -250.0 -31.0 50.0) (float-vector -263.32 -31.0 47.096) (float-vector -274.407 -31.0 38.695) (float-vector -280.002 -31.0 29.129) (float-vector -282.0 -31.0 18.0) (float-vector -281.0 -31.0 18.0) (float-vector -279.433 -31.0 8.2675) (float-vector -271.007 -31.0 -5.7087) (float-vector -250.0 -31.0 -34.0)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 -36.0) (float-vector -185.0 -31.0 -36.0) (float-vector -250.0 -31.0 -36.0) (float-vector -250.0 47.0 -36.0)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 34.0) (float-vector -185.0 -31.0 34.0) (float-vector -185.0 -31.0 -36.0) (float-vector -185.0 47.0 -36.0)))
         (instance face :init :vertices (list (float-vector -190.0 47.0 34.0) (float-vector -190.0 -31.0 34.0) (float-vector -185.0 -31.0 34.0) (float-vector -185.0 47.0 34.0)))
         (instance face :init :vertices (list (float-vector -241.132 47.0 48.747) (float-vector -241.132 -31.0 48.747) (float-vector -190.0 -31.0 34.0) (float-vector -190.0 47.0 34.0)))
         (instance face :init :vertices (list (float-vector -250.0 47.0 50.0) (float-vector -250.0 -31.0 50.0) (float-vector -241.132 -31.0 48.747) (float-vector -241.132 47.0 48.747)))
         (instance face :init :vertices (list (float-vector -263.32 47.0 47.096) (float-vector -263.32 -31.0 47.096) (float-vector -250.0 -31.0 50.0) (float-vector -250.0 47.0 50.0)))
         (instance face :init :vertices (list (float-vector -274.407 47.0 38.695) (float-vector -274.407 -31.0 38.695) (float-vector -263.32 -31.0 47.096) (float-vector -263.32 47.0 47.096)))
         (instance face :init :vertices (list (float-vector -280.002 47.0 29.129) (float-vector -280.002 -31.0 29.129) (float-vector -274.407 -31.0 38.695) (float-vector -274.407 47.0 38.695)))
         (instance face :init :vertices (list (float-vector -282.0 47.0 18.0) (float-vector -282.0 -31.0 18.0) (float-vector -280.002 -31.0 29.129) (float-vector -280.002 47.0 29.129)))
         (instance face :init :vertices (list (float-vector -281.0 47.0 18.0) (float-vector -281.0 -31.0 18.0) (float-vector -282.0 -31.0 18.0) (float-vector -282.0 47.0 18.0)))
         (instance face :init :vertices (list (float-vector -279.433 47.0 8.2675) (float-vector -279.433 -31.0 8.2675) (float-vector -281.0 -31.0 18.0) (float-vector -281.0 47.0 18.0)))
         (instance face :init :vertices (list (float-vector -271.007 47.0 -5.7087) (float-vector -271.007 -31.0 -5.7087) (float-vector -279.433 -31.0 8.2675) (float-vector -279.433 47.0 8.2675)))
         (instance face :init :vertices (list (float-vector -250.0 47.0 -34.0) (float-vector -250.0 -31.0 -34.0) (float-vector -271.007 -31.0 -5.7087) (float-vector -271.007 47.0 -5.7087)))
         (instance face :init :vertices (list (float-vector -250.0 47.0 -36.0) (float-vector -250.0 -31.0 -36.0) (float-vector -250.0 -31.0 -34.0) (float-vector -250.0 47.0 -34.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-r :weight 2106.72 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.0 -65.0 -43.0) (float-vector 16.0 -60.0 -43.0) (float-vector 16.0 -60.0 43.0) (float-vector 16.0 -65.0 43.0)))
         (instance face :init :vertices (list (float-vector 31.529 -9.7422 -43.0) (float-vector 31.529 -9.7422 -40.0) (float-vector 16.309 -59.0 -40.0) (float-vector 16.309 -59.0 40.0) (float-vector 31.529 -9.7422 40.0) (float-vector 31.529 -9.7422 43.0) (float-vector 16.0 -60.0 43.0) (float-vector 16.0 -60.0 -43.0)))
         (instance face :init :vertices (list (float-vector 33.0 1.136868e-13 43.0) (float-vector 31.529 -9.7422 43.0) (float-vector 31.529 -9.7422 40.0) (float-vector 33.0 1.136868e-13 40.0)))
         (instance face :init :vertices (list (float-vector 33.0 1.705303e-13 -43.0) (float-vector 33.0 1.705303e-13 -40.0) (float-vector 31.529 -9.7422 -40.0) (float-vector 31.529 -9.7422 -43.0)))
         (instance face :init :vertices (list (float-vector 31.586 9.5569 43.0) (float-vector 33.0 1.136868e-13 43.0) (float-vector 33.0 1.136868e-13 40.0) (float-vector 31.586 9.5569 40.0)))
         (instance face :init :vertices (list (float-vector 31.586 9.5569 -43.0) (float-vector 31.586 9.5569 -40.0) (float-vector 33.0 1.705303e-13 -40.0) (float-vector 33.0 1.705303e-13 -43.0)))
         (instance face :init :vertices (list (float-vector 26.556 19.59 43.0) (float-vector 31.586 9.5569 43.0) (float-vector 31.586 9.5569 40.0) (float-vector 26.556 19.59 40.0)))
         (instance face :init :vertices (list (float-vector 26.556 19.59 -43.0) (float-vector 26.556 19.59 -40.0) (float-vector 31.586 9.5569 -40.0) (float-vector 31.586 9.5569 -43.0)))
         (instance face :init :vertices (list (float-vector 15.383 29.195 43.0) (float-vector 26.556 19.59 43.0) (float-vector 26.556 19.59 40.0) (float-vector 15.383 29.195 40.0)))
         (instance face :init :vertices (list (float-vector 15.383 29.195 -43.0) (float-vector 15.383 29.195 -40.0) (float-vector 26.556 19.59 -40.0) (float-vector 26.556 19.59 -43.0)))
         (instance face :init :vertices (list (float-vector 0.0 33.0 43.0) (float-vector 15.383 29.195 43.0) (float-vector 15.383 29.195 40.0) (float-vector 0.0 33.0 40.0)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 33.0 -43.0) (float-vector 1.136868e-13 33.0 -40.0) (float-vector 15.383 29.195 -40.0) (float-vector 15.383 29.195 -43.0)))
         (instance face :init :vertices (list (float-vector -57.0 33.0 -43.0) (float-vector -57.0 33.0 43.0) (float-vector 0.0 33.0 43.0) (float-vector 0.0 33.0 40.0) (float-vector -55.0 33.0 40.0) (float-vector -55.0 33.0 -40.0) (float-vector 1.136868e-13 33.0 -40.0) (float-vector 1.136868e-13 33.0 -43.0)))
         (instance face :init :vertices (list (float-vector -57.0 -65.0 -43.0) (float-vector -57.0 -65.0 43.0) (float-vector -57.0 33.0 43.0) (float-vector -57.0 33.0 -43.0)))
         (instance face :init :vertices (list (float-vector 16.0 -65.0 43.0) (float-vector 16.0 -60.0 43.0) (float-vector 31.529 -9.7422 43.0) (float-vector 33.0 1.136868e-13 43.0) (float-vector 31.586 9.5569 43.0) (float-vector 26.556 19.59 43.0) (float-vector 15.383 29.195 43.0) (float-vector 0.0 33.0 43.0) (float-vector -57.0 33.0 43.0) (float-vector -57.0 -65.0 43.0)))
         (instance face :init :vertices (list (float-vector -57.0 -65.0 -43.0) (float-vector -57.0 33.0 -43.0) (float-vector 1.136868e-13 33.0 -43.0) (float-vector 15.383 29.195 -43.0) (float-vector 26.556 19.59 -43.0) (float-vector 31.586 9.5569 -43.0) (float-vector 33.0 1.705303e-13 -43.0) (float-vector 31.529 -9.7422 -43.0) (float-vector 16.0 -60.0 -43.0) (float-vector 16.0 -65.0 -43.0)))
         (instance face :init :vertices (list (float-vector 16.0 -65.0 -43.0) (float-vector 16.0 -65.0 43.0) (float-vector -57.0 -65.0 43.0) (float-vector -57.0 -65.0 -43.0)))
         (instance face :init :vertices (list (float-vector -55.0 33.0 -40.0) (float-vector -55.0 33.0 40.0) (float-vector -55.0 -59.0 40.0) (float-vector -55.0 -59.0 -40.0)))
         (instance face :init :vertices (list (float-vector -55.0 -59.0 40.0) (float-vector -55.0 33.0 40.0) (float-vector 0.0 33.0 40.0) (float-vector 15.383 29.195 40.0) (float-vector 26.556 19.59 40.0) (float-vector 31.586 9.5569 40.0) (float-vector 33.0 1.136868e-13 40.0) (float-vector 31.529 -9.7422 40.0) (float-vector 16.309 -59.0 40.0)))
         (instance face :init :vertices (list (float-vector 16.309 -59.0 -40.0) (float-vector 31.529 -9.7422 -40.0) (float-vector 33.0 1.705303e-13 -40.0) (float-vector 31.586 9.5569 -40.0) (float-vector 26.556 19.59 -40.0) (float-vector 15.383 29.195 -40.0) (float-vector 1.136868e-13 33.0 -40.0) (float-vector -55.0 33.0 -40.0) (float-vector -55.0 -59.0 -40.0)))
         (instance face :init :vertices (list (float-vector -55.0 -59.0 -40.0) (float-vector -55.0 -59.0 40.0) (float-vector 16.309 -59.0 40.0) (float-vector 16.309 -59.0 -40.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-p :weight 572.353 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-elbow-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 36.0 6.0 -153.0) (float-vector 36.0 -6.0 -153.0) (float-vector 33.205 -17.079 -153.0) (float-vector 27.0 -26.249 -153.0) (float-vector 16.4 -33.5 -153.0) (float-vector 6.0 -36.0 -153.0) (float-vector -6.0 -36.0 -153.0) (float-vector -16.4 -33.5 -153.0) (float-vector -27.0 -26.249 -153.0) (float-vector -33.205 -17.079 -153.0) (float-vector -36.0 -6.0 -153.0) (float-vector -36.0 6.0 -153.0) (float-vector -33.205 17.079 -153.0) (float-vector -27.0 26.249 -153.0) (float-vector -16.4 33.5 -153.0) (float-vector -6.0 36.0 -153.0) (float-vector 6.0 36.0 -153.0) (float-vector 16.4 33.5 -153.0) (float-vector 27.0 26.249 -153.0) (float-vector 33.205 17.079 -153.0)))
         (instance face :init :vertices (list (float-vector 36.0 -6.0 0.0) (float-vector 36.0 6.0 5.684342e-14) (float-vector 33.205 17.079 0.0) (float-vector 27.0 26.249 0.0) (float-vector 16.4 33.5 5.684342e-14) (float-vector 6.0 36.0 5.684342e-14) (float-vector -6.0 36.0 5.684342e-14) (float-vector -16.4 33.5 5.684342e-14) (float-vector -27.0 26.249 0.0) (float-vector -33.205 17.079 0.0) (float-vector -36.0 6.0 5.684342e-14) (float-vector -36.0 -6.0 0.0) (float-vector -33.205 -17.079 5.684342e-14) (float-vector -27.0 -26.249 5.684342e-14) (float-vector -16.4 -33.5 0.0) (float-vector -6.0 -36.0 5.684342e-14) (float-vector 6.0 -36.0 5.684342e-14) (float-vector 16.4 -33.5 0.0) (float-vector 27.0 -26.249 5.684342e-14) (float-vector 33.205 -17.079 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 36.0 6.0 -153.0) (float-vector 36.0 6.0 5.684342e-14) (float-vector 36.0 -6.0 0.0) (float-vector 36.0 -6.0 -153.0)))
         (instance face :init :vertices (list (float-vector 33.205 17.079 -153.0) (float-vector 33.205 17.079 0.0) (float-vector 36.0 6.0 5.684342e-14) (float-vector 36.0 6.0 -153.0)))
         (instance face :init :vertices (list (float-vector 27.0 26.249 -153.0) (float-vector 27.0 26.249 0.0) (float-vector 33.205 17.079 0.0) (float-vector 33.205 17.079 -153.0)))
         (instance face :init :vertices (list (float-vector 16.4 33.5 -153.0) (float-vector 16.4 33.5 5.684342e-14) (float-vector 27.0 26.249 0.0) (float-vector 27.0 26.249 -153.0)))
         (instance face :init :vertices (list (float-vector 6.0 36.0 -153.0) (float-vector 6.0 36.0 5.684342e-14) (float-vector 16.4 33.5 5.684342e-14) (float-vector 16.4 33.5 -153.0)))
         (instance face :init :vertices (list (float-vector -6.0 36.0 -153.0) (float-vector -6.0 36.0 5.684342e-14) (float-vector 6.0 36.0 5.684342e-14) (float-vector 6.0 36.0 -153.0)))
         (instance face :init :vertices (list (float-vector -16.4 33.5 -153.0) (float-vector -16.4 33.5 5.684342e-14) (float-vector -6.0 36.0 5.684342e-14) (float-vector -6.0 36.0 -153.0)))
         (instance face :init :vertices (list (float-vector -27.0 26.249 -153.0) (float-vector -27.0 26.249 0.0) (float-vector -16.4 33.5 5.684342e-14) (float-vector -16.4 33.5 -153.0)))
         (instance face :init :vertices (list (float-vector -33.205 17.079 -153.0) (float-vector -33.205 17.079 0.0) (float-vector -27.0 26.249 0.0) (float-vector -27.0 26.249 -153.0)))
         (instance face :init :vertices (list (float-vector -36.0 6.0 -153.0) (float-vector -36.0 6.0 5.684342e-14) (float-vector -33.205 17.079 0.0) (float-vector -33.205 17.079 -153.0)))
         (instance face :init :vertices (list (float-vector -36.0 -6.0 -153.0) (float-vector -36.0 -6.0 0.0) (float-vector -36.0 6.0 5.684342e-14) (float-vector -36.0 6.0 -153.0)))
         (instance face :init :vertices (list (float-vector -33.205 -17.079 -153.0) (float-vector -33.205 -17.079 5.684342e-14) (float-vector -36.0 -6.0 0.0) (float-vector -36.0 -6.0 -153.0)))
         (instance face :init :vertices (list (float-vector -27.0 -26.249 -153.0) (float-vector -27.0 -26.249 5.684342e-14) (float-vector -33.205 -17.079 5.684342e-14) (float-vector -33.205 -17.079 -153.0)))
         (instance face :init :vertices (list (float-vector -16.4 -33.5 -153.0) (float-vector -16.4 -33.5 0.0) (float-vector -27.0 -26.249 5.684342e-14) (float-vector -27.0 -26.249 -153.0)))
         (instance face :init :vertices (list (float-vector -6.0 -36.0 -153.0) (float-vector -6.0 -36.0 5.684342e-14) (float-vector -16.4 -33.5 0.0) (float-vector -16.4 -33.5 -153.0)))
         (instance face :init :vertices (list (float-vector 6.0 -36.0 -153.0) (float-vector 6.0 -36.0 5.684342e-14) (float-vector -6.0 -36.0 5.684342e-14) (float-vector -6.0 -36.0 -153.0)))
         (instance face :init :vertices (list (float-vector 16.4 -33.5 -153.0) (float-vector 16.4 -33.5 0.0) (float-vector 6.0 -36.0 5.684342e-14) (float-vector 6.0 -36.0 -153.0)))
         (instance face :init :vertices (list (float-vector 27.0 -26.249 -153.0) (float-vector 27.0 -26.249 5.684342e-14) (float-vector 16.4 -33.5 0.0) (float-vector 16.4 -33.5 -153.0)))
         (instance face :init :vertices (list (float-vector 33.205 -17.079 -153.0) (float-vector 33.205 -17.079 5.684342e-14) (float-vector 27.0 -26.249 5.684342e-14) (float-vector 27.0 -26.249 -153.0)))
         (instance face :init :vertices (list (float-vector 36.0 -6.0 -153.0) (float-vector 36.0 -6.0 0.0) (float-vector 33.205 -17.079 5.684342e-14) (float-vector 33.205 -17.079 -153.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-y :weight 867.544 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-wrist-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -5.0 28.5 -30.0) (float-vector -5.0 22.5 -30.0) (float-vector -5.0 22.5 30.0) (float-vector -5.0 28.5 30.0)))
         (instance face :init :vertices (list (float-vector -5.0 28.5 -30.0) (float-vector -5.0 28.5 30.0) (float-vector -16.224 28.5 30.0) (float-vector -25.115 28.5 14.5) (float-vector -28.373 28.5 6.0) (float-vector -28.373 28.5 -6.0) (float-vector -25.115 28.5 -14.5) (float-vector -16.224 28.5 -30.0)))
         (instance face :init :vertices (list (float-vector -5.0 22.5 30.0) (float-vector -5.0 22.5 -30.0) (float-vector -16.224 22.5 -30.0) (float-vector -17.3 22.5 -28.1242) (float-vector -17.3 22.5 28.1242) (float-vector -16.224 22.5 30.0)))
         (instance face :init :vertices (list (float-vector -17.3 -22.5 28.1242) (float-vector -17.3 22.5 28.1242) (float-vector -17.3 22.5 -28.1242) (float-vector -17.3 -22.5 -28.1242)))
         (instance face :init :vertices (list (float-vector -16.224 -22.5 30.0) (float-vector -17.3 -22.5 28.1242) (float-vector -17.3 -22.5 -28.1242) (float-vector -16.224 -22.5 -30.0) (float-vector -5.0 -22.5 -30.0) (float-vector -5.0 -22.5 30.0)))
         (instance face :init :vertices (list (float-vector -5.0 -22.5 30.0) (float-vector -5.0 -22.5 -30.0) (float-vector -5.0 -28.5 -30.0) (float-vector -5.0 -28.5 30.0)))
         (instance face :init :vertices (list (float-vector -5.0 -28.5 30.0) (float-vector -5.0 -28.5 -30.0) (float-vector -16.224 -28.5 -30.0) (float-vector -25.115 -28.5 -14.5) (float-vector -28.373 -28.5 -6.0) (float-vector -28.373 -28.5 6.0) (float-vector -25.115 -28.5 14.5) (float-vector -16.224 -28.5 30.0)))
         (instance face :init :vertices (list (float-vector 33.226 -11.0 30.0) (float-vector 33.226 -11.0 -30.0) (float-vector 35.0 5.684342e-14 -30.0) (float-vector 35.0 5.684342e-14 30.0)))
         (instance face :init :vertices (list (float-vector 33.226 -11.0 30.0) (float-vector 35.0 5.684342e-14 30.0) (float-vector 33.226 11.0 30.0) (float-vector 24.426 25.067 30.0) (float-vector 10.137 33.5 30.0) (float-vector -16.224 33.5 30.0) (float-vector -16.224 28.5 30.0) (float-vector -5.0 28.5 30.0) (float-vector -5.0 22.5 30.0) (float-vector -16.224 22.5 30.0) (float-vector -16.224 -22.5 30.0) (float-vector -5.0 -22.5 30.0) (float-vector -5.0 -28.5 30.0) (float-vector -16.224 -28.5 30.0) (float-vector -16.224 -33.5 30.0) (float-vector 10.137 -33.5 30.0) (float-vector 24.426 -25.067 30.0)))
         (instance face :init :vertices (list (float-vector 35.0 5.684342e-14 -30.0) (float-vector 33.226 -11.0 -30.0) (float-vector 24.426 -25.067 -30.0) (float-vector 10.137 -33.5 -30.0) (float-vector -16.224 -33.5 -30.0) (float-vector -16.224 -28.5 -30.0) (float-vector -5.0 -28.5 -30.0) (float-vector -5.0 -22.5 -30.0) (float-vector -16.224 -22.5 -30.0) (float-vector -16.224 22.5 -30.0) (float-vector -5.0 22.5 -30.0) (float-vector -5.0 28.5 -30.0) (float-vector -16.224 28.5 -30.0) (float-vector -16.224 33.5 -30.0) (float-vector 10.137 33.5 -30.0) (float-vector 24.426 25.067 -30.0) (float-vector 33.226 11.0 -30.0)))
         (instance face :init :vertices (list (float-vector 33.226 11.0 30.0) (float-vector 35.0 5.684342e-14 30.0) (float-vector 35.0 5.684342e-14 -30.0) (float-vector 33.226 11.0 -30.0)))
         (instance face :init :vertices (list (float-vector 24.426 25.067 30.0) (float-vector 33.226 11.0 30.0) (float-vector 33.226 11.0 -30.0) (float-vector 24.426 25.067 -30.0)))
         (instance face :init :vertices (list (float-vector 10.137 33.5 -30.0) (float-vector -16.224 33.5 -30.0) (float-vector -25.115 33.5 -14.5) (float-vector -28.373 33.5 -6.0) (float-vector -28.373 33.5 6.0) (float-vector -25.115 33.5 14.5) (float-vector -16.224 33.5 30.0) (float-vector 10.137 33.5 30.0)))
         (instance face :init :vertices (list (float-vector 10.137 33.5 30.0) (float-vector 24.426 25.067 30.0) (float-vector 24.426 25.067 -30.0) (float-vector 10.137 33.5 -30.0)))
         (instance face :init :vertices (list (float-vector 10.137 -33.5 30.0) (float-vector -16.224 -33.5 30.0) (float-vector -25.115 -33.5 14.5) (float-vector -28.373 -33.5 6.0) (float-vector -28.373 -33.5 -6.0) (float-vector -25.115 -33.5 -14.5) (float-vector -16.224 -33.5 -30.0) (float-vector 10.137 -33.5 -30.0)))
         (instance face :init :vertices (list (float-vector 24.426 -25.067 -30.0) (float-vector 33.226 -11.0 -30.0) (float-vector 33.226 -11.0 30.0) (float-vector 24.426 -25.067 30.0)))
         (instance face :init :vertices (list (float-vector 24.426 -25.067 30.0) (float-vector 10.137 -33.5 30.0) (float-vector 10.137 -33.5 -30.0) (float-vector 24.426 -25.067 -30.0)))
         (instance face :init :vertices (list (float-vector -16.224 -22.5 -30.0) (float-vector -17.3 -22.5 -28.1242) (float-vector -17.3 22.5 -28.1242) (float-vector -16.224 22.5 -30.0)))
         (instance face :init :vertices (list (float-vector -25.115 -28.5 -14.5) (float-vector -16.224 -28.5 -30.0) (float-vector -16.224 -33.5 -30.0) (float-vector -25.115 -33.5 -14.5)))
         (instance face :init :vertices (list (float-vector -25.115 33.5 -14.5) (float-vector -16.224 33.5 -30.0) (float-vector -16.224 28.5 -30.0) (float-vector -25.115 28.5 -14.5)))
         (instance face :init :vertices (list (float-vector -28.373 33.5 -6.0) (float-vector -25.115 33.5 -14.5) (float-vector -25.115 28.5 -14.5) (float-vector -28.373 28.5 -6.0)))
         (instance face :init :vertices (list (float-vector -28.373 -28.5 -6.0) (float-vector -25.115 -28.5 -14.5) (float-vector -25.115 -33.5 -14.5) (float-vector -28.373 -33.5 -6.0)))
         (instance face :init :vertices (list (float-vector -16.224 22.5 30.0) (float-vector -17.3 22.5 28.1242) (float-vector -17.3 -22.5 28.1242) (float-vector -16.224 -22.5 30.0)))
         (instance face :init :vertices (list (float-vector -25.115 -33.5 14.5) (float-vector -16.224 -33.5 30.0) (float-vector -16.224 -28.5 30.0) (float-vector -25.115 -28.5 14.5)))
         (instance face :init :vertices (list (float-vector -25.115 28.5 14.5) (float-vector -16.224 28.5 30.0) (float-vector -16.224 33.5 30.0) (float-vector -25.115 33.5 14.5)))
         (instance face :init :vertices (list (float-vector -28.373 -28.5 6.0) (float-vector -28.373 -28.5 -6.0) (float-vector -28.373 -33.5 -6.0) (float-vector -28.373 -33.5 6.0)))
         (instance face :init :vertices (list (float-vector -28.373 33.5 6.0) (float-vector -28.373 33.5 -6.0) (float-vector -28.373 28.5 -6.0) (float-vector -28.373 28.5 6.0)))
         (instance face :init :vertices (list (float-vector -28.373 -33.5 6.0) (float-vector -25.115 -33.5 14.5) (float-vector -25.115 -28.5 14.5) (float-vector -28.373 -28.5 6.0)))
         (instance face :init :vertices (list (float-vector -28.373 28.5 6.0) (float-vector -25.115 28.5 14.5) (float-vector -25.115 33.5 14.5) (float-vector -28.373 33.5 6.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-wrist-p :weight 654.58 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-wrist-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.0 11.0 -31.0) (float-vector 4.405365e-13 11.0 -31.0) (float-vector -5.4227 9.5705 -31.0) (float-vector -9.3292 5.8281 -31.0) (float-vector -11.0 0.0 -31.0) (float-vector -9.1331 -6.1308 -31.0) (float-vector -5.5024 -9.5249 -31.0) (float-vector 33.0 -31.7666 -31.0)))
         (instance face :init :vertices (list (float-vector 33.0 11.0 -31.0) (float-vector 33.0 -31.7666 -31.0) (float-vector 33.0 -31.7666 31.0) (float-vector 33.0 11.0 31.0)))
         (instance face :init :vertices (list (float-vector 33.0 11.0 31.0) (float-vector 33.0 -31.7666 31.0) (float-vector -5.5024 -9.5249 31.0) (float-vector -9.1331 -6.1308 31.0) (float-vector -11.0 0.0 31.0) (float-vector -9.3292 5.8281 31.0) (float-vector -5.4227 9.5705 31.0) (float-vector 4.263256e-13 11.0 31.0)))
         (instance face :init :vertices (list (float-vector -9.3292 5.8281 41.5) (float-vector -9.3292 5.8281 31.0) (float-vector -11.0 0.0 31.0) (float-vector -11.0 0.0 41.5)))
         (instance face :init :vertices (list (float-vector -11.0 0.0 -41.5) (float-vector -11.0 0.0 -31.0) (float-vector -9.3292 5.8281 -31.0) (float-vector -9.3292 5.8281 -41.5)))
         (instance face :init :vertices (list (float-vector -9.3292 5.8281 41.5) (float-vector -11.0 0.0 41.5) (float-vector -9.1331 -6.1308 41.5) (float-vector -5.5024 -9.5249 41.5) (float-vector 33.501 -32.056 41.5) (float-vector 35.33 -33.886 41.5) (float-vector 36.0 -36.386 41.5) (float-vector 36.0 -38.5 41.5) (float-vector 36.758 -41.147 41.5) (float-vector 38.995 -43.08 41.5) (float-vector 41.927 -43.5 41.5) (float-vector 146.0 -43.5 41.5) (float-vector 148.69 -42.713 41.5) (float-vector 150.49 -40.708 41.5) (float-vector 151.0 -38.5 41.5) (float-vector 150.59 -36.521 41.5) (float-vector 148.74 -34.315 41.5) (float-vector 146.0 -33.5 41.5) (float-vector 56.0 -33.5 41.5) (float-vector 53.563 -32.866 41.5) (float-vector 51.688 -31.032 41.5) (float-vector 51.0 -28.5 41.5) (float-vector 51.0 2.5137 41.5) (float-vector 51.402 4.4775 41.5) (float-vector 52.646 6.2216 41.5) (float-vector 89.771 27.785 41.5) (float-vector 93.275 31.334 41.5) (float-vector 94.494 35.657 41.5) (float-vector 93.774 39.643 41.5) (float-vector 90.227 45.946 41.5) (float-vector 87.522 48.869 41.5) (float-vector 82.433 50.446 41.5) (float-vector 77.933 49.24 41.5) (float-vector 42.451 28.755 41.5) (float-vector 39.977 26.987 41.5) (float-vector 37.861 23.439 41.5) (float-vector 37.5 20.989 41.5) (float-vector 37.5 11.0 41.5) (float-vector 4.405365e-13 11.0 41.5) (float-vector -5.4227 9.5705 41.5)))
         (instance face :init :vertices (list (float-vector -11.0 0.0 -41.5) (float-vector -9.3292 5.8281 -41.5) (float-vector -5.4227 9.5705 -41.5) (float-vector 4.121148e-13 11.0 -41.5) (float-vector 37.5 11.0 -41.5) (float-vector 37.5 20.989 -41.5) (float-vector 37.861 23.439 -41.5) (float-vector 39.977 26.987 -41.5) (float-vector 42.451 28.755 -41.5) (float-vector 77.933 49.24 -41.5) (float-vector 82.433 50.446 -41.5) (float-vector 87.522 48.869 -41.5) (float-vector 90.227 45.946 -41.5) (float-vector 93.774 39.643 -41.5) (float-vector 94.494 35.657 -41.5) (float-vector 93.275 31.334 -41.5) (float-vector 89.771 27.785 -41.5) (float-vector 52.646 6.2216 -41.5) (float-vector 51.402 4.4775 -41.5) (float-vector 51.0 2.5137 -41.5) (float-vector 51.0 -28.5 -41.5) (float-vector 51.688 -31.032 -41.5) (float-vector 53.563 -32.866 -41.5) (float-vector 56.0 -33.5 -41.5) (float-vector 146.0 -33.5 -41.5) (float-vector 148.74 -34.315 -41.5) (float-vector 150.59 -36.521 -41.5) (float-vector 151.0 -38.5 -41.5) (float-vector 150.49 -40.708 -41.5) (float-vector 148.69 -42.713 -41.5) (float-vector 146.0 -43.5 -41.5) (float-vector 41.927 -43.5 -41.5) (float-vector 38.995 -43.08 -41.5) (float-vector 36.758 -41.147 -41.5) (float-vector 36.0 -38.5 -41.5) (float-vector 36.0 -36.386 -41.5) (float-vector 35.33 -33.886 -41.5) (float-vector 33.501 -32.056 -41.5) (float-vector -5.5024 -9.5249 -41.5) (float-vector -9.1331 -6.1308 -41.5)))
         (instance face :init :vertices (list (float-vector -9.1331 -6.1308 41.5) (float-vector -11.0 0.0 41.5) (float-vector -11.0 0.0 31.0) (float-vector -9.1331 -6.1308 31.0)))
         (instance face :init :vertices (list (float-vector -9.1331 -6.1308 -31.0) (float-vector -11.0 0.0 -31.0) (float-vector -11.0 0.0 -41.5) (float-vector -9.1331 -6.1308 -41.5)))
         (instance face :init :vertices (list (float-vector -5.5024 -9.5249 41.5) (float-vector -9.1331 -6.1308 41.5) (float-vector -9.1331 -6.1308 31.0) (float-vector -5.5024 -9.5249 31.0)))
         (instance face :init :vertices (list (float-vector -5.5024 -9.5249 -31.0) (float-vector -9.1331 -6.1308 -31.0) (float-vector -9.1331 -6.1308 -41.5) (float-vector -5.5024 -9.5249 -41.5)))
         (instance face :init :vertices (list (float-vector 33.501 -32.056 41.5) (float-vector -5.5024 -9.5249 41.5) (float-vector -5.5024 -9.5249 31.0) (float-vector 33.0 -31.7666 31.0) (float-vector 33.0 -31.7666 -31.0) (float-vector -5.5024 -9.5249 -31.0) (float-vector -5.5024 -9.5249 -41.5) (float-vector 33.501 -32.056 -41.5)))
         (instance face :init :vertices (list (float-vector 35.33 -33.886 41.5) (float-vector 33.501 -32.056 41.5) (float-vector 33.501 -32.056 -41.5) (float-vector 35.33 -33.886 -41.5)))
         (instance face :init :vertices (list (float-vector 36.0 -36.386 41.5) (float-vector 35.33 -33.886 41.5) (float-vector 35.33 -33.886 -41.5) (float-vector 36.0 -36.386 -41.5)))
         (instance face :init :vertices (list (float-vector 36.0 -38.5 41.5) (float-vector 36.0 -36.386 41.5) (float-vector 36.0 -36.386 -41.5) (float-vector 36.0 -38.5 -41.5)))
         (instance face :init :vertices (list (float-vector 36.758 -41.147 41.5) (float-vector 36.0 -38.5 41.5) (float-vector 36.0 -38.5 -41.5) (float-vector 36.758 -41.147 -41.5)))
         (instance face :init :vertices (list (float-vector 38.995 -43.08 41.5) (float-vector 36.758 -41.147 41.5) (float-vector 36.758 -41.147 -41.5) (float-vector 38.995 -43.08 -41.5)))
         (instance face :init :vertices (list (float-vector 41.927 -43.5 41.5) (float-vector 38.995 -43.08 41.5) (float-vector 38.995 -43.08 -41.5) (float-vector 41.927 -43.5 -41.5)))
         (instance face :init :vertices (list (float-vector 146.0 -43.5 -26.5) (float-vector 71.0 -43.5 -26.5) (float-vector 67.4645 -43.5 -25.036) (float-vector 66.0 -43.5 -21.5) (float-vector 66.0 -43.5 21.5) (float-vector 67.4645 -43.5 25.036) (float-vector 71.0 -43.5 26.5) (float-vector 146.0 -43.5 26.5) (float-vector 146.0 -43.5 41.5) (float-vector 41.927 -43.5 41.5) (float-vector 41.927 -43.5 -41.5) (float-vector 146.0 -43.5 -41.5)))
         (instance face :init :vertices (list (float-vector 148.69 -42.713 41.5) (float-vector 146.0 -43.5 41.5) (float-vector 146.0 -43.5 26.5) (float-vector 148.69 -42.713 26.5)))
         (instance face :init :vertices (list (float-vector 148.69 -42.713 -26.5) (float-vector 146.0 -43.5 -26.5) (float-vector 146.0 -43.5 -41.5) (float-vector 148.69 -42.713 -41.5)))
         (instance face :init :vertices (list (float-vector 150.49 -40.708 41.5) (float-vector 148.69 -42.713 41.5) (float-vector 148.69 -42.713 26.5) (float-vector 150.49 -40.708 26.5)))
         (instance face :init :vertices (list (float-vector 150.49 -40.708 -26.5) (float-vector 148.69 -42.713 -26.5) (float-vector 148.69 -42.713 -41.5) (float-vector 150.49 -40.708 -41.5)))
         (instance face :init :vertices (list (float-vector 151.0 -38.5 41.5) (float-vector 150.49 -40.708 41.5) (float-vector 150.49 -40.708 26.5) (float-vector 151.0 -38.5 26.5)))
         (instance face :init :vertices (list (float-vector 151.0 -38.5 -26.5) (float-vector 150.49 -40.708 -26.5) (float-vector 150.49 -40.708 -41.5) (float-vector 151.0 -38.5 -41.5)))
         (instance face :init :vertices (list (float-vector 150.59 -36.521 41.5) (float-vector 151.0 -38.5 41.5) (float-vector 151.0 -38.5 26.5) (float-vector 150.59 -36.521 26.5)))
         (instance face :init :vertices (list (float-vector 150.59 -36.521 -26.5) (float-vector 151.0 -38.5 -26.5) (float-vector 151.0 -38.5 -41.5) (float-vector 150.59 -36.521 -41.5)))
         (instance face :init :vertices (list (float-vector 148.74 -34.315 41.5) (float-vector 150.59 -36.521 41.5) (float-vector 150.59 -36.521 26.5) (float-vector 148.74 -34.315 26.5)))
         (instance face :init :vertices (list (float-vector 148.74 -34.315 -26.5) (float-vector 150.59 -36.521 -26.5) (float-vector 150.59 -36.521 -41.5) (float-vector 148.74 -34.315 -41.5)))
         (instance face :init :vertices (list (float-vector 146.0 -33.5 41.5) (float-vector 148.74 -34.315 41.5) (float-vector 148.74 -34.315 26.5) (float-vector 146.0 -33.5 26.5)))
         (instance face :init :vertices (list (float-vector 146.0 -33.5 -26.5) (float-vector 148.74 -34.315 -26.5) (float-vector 148.74 -34.315 -41.5) (float-vector 146.0 -33.5 -41.5)))
         (instance face :init :vertices (list (float-vector 56.0 -33.5 41.5) (float-vector 146.0 -33.5 41.5) (float-vector 146.0 -33.5 26.5) (float-vector 71.0 -33.5 26.5) (float-vector 67.4645 -33.5 25.036) (float-vector 66.0 -33.5 21.5) (float-vector 66.0 -33.5 -21.5) (float-vector 67.4645 -33.5 -25.036) (float-vector 71.0 -33.5 -26.5) (float-vector 146.0 -33.5 -26.5) (float-vector 146.0 -33.5 -41.5) (float-vector 56.0 -33.5 -41.5)))
         (instance face :init :vertices (list (float-vector 53.563 -32.866 41.5) (float-vector 56.0 -33.5 41.5) (float-vector 56.0 -33.5 -41.5) (float-vector 53.563 -32.866 -41.5)))
         (instance face :init :vertices (list (float-vector 51.688 -31.032 41.5) (float-vector 53.563 -32.866 41.5) (float-vector 53.563 -32.866 -41.5) (float-vector 51.688 -31.032 -41.5)))
         (instance face :init :vertices (list (float-vector 51.0 -28.5 41.5) (float-vector 51.688 -31.032 41.5) (float-vector 51.688 -31.032 -41.5) (float-vector 51.0 -28.5 -41.5)))
         (instance face :init :vertices (list (float-vector 51.0 2.5137 41.5) (float-vector 51.0 -28.5 41.5) (float-vector 51.0 -28.5 -41.5) (float-vector 51.0 2.5137 -41.5)))
         (instance face :init :vertices (list (float-vector 51.402 4.4775 41.5) (float-vector 51.0 2.5137 41.5) (float-vector 51.0 2.5137 -41.5) (float-vector 51.402 4.4775 -41.5)))
         (instance face :init :vertices (list (float-vector 52.646 6.2216 41.5) (float-vector 51.402 4.4775 41.5) (float-vector 51.402 4.4775 -41.5) (float-vector 52.646 6.2216 -41.5)))
         (instance face :init :vertices (list (float-vector 89.771 27.785 41.5) (float-vector 52.646 6.2216 41.5) (float-vector 52.646 6.2216 -41.5) (float-vector 89.771 27.785 -41.5)))
         (instance face :init :vertices (list (float-vector 93.275 31.334 41.5) (float-vector 89.771 27.785 41.5) (float-vector 89.771 27.785 -41.5) (float-vector 93.275 31.334 -41.5)))
         (instance face :init :vertices (list (float-vector 94.494 35.657 41.5) (float-vector 93.275 31.334 41.5) (float-vector 93.275 31.334 -41.5) (float-vector 94.494 35.657 -41.5)))
         (instance face :init :vertices (list (float-vector 93.774 39.643 41.5) (float-vector 94.494 35.657 41.5) (float-vector 94.494 35.657 -41.5) (float-vector 93.774 39.643 -41.5)))
         (instance face :init :vertices (list (float-vector 90.227 45.946 41.5) (float-vector 93.774 39.643 41.5) (float-vector 93.774 39.643 -41.5) (float-vector 90.227 45.946 -41.5)))
         (instance face :init :vertices (list (float-vector 87.522 48.869 41.5) (float-vector 90.227 45.946 41.5) (float-vector 90.227 45.946 -41.5) (float-vector 87.522 48.869 -41.5)))
         (instance face :init :vertices (list (float-vector 82.433 50.446 41.5) (float-vector 87.522 48.869 41.5) (float-vector 87.522 48.869 -41.5) (float-vector 82.433 50.446 -41.5)))
         (instance face :init :vertices (list (float-vector 77.933 49.24 41.5) (float-vector 82.433 50.446 41.5) (float-vector 82.433 50.446 -41.5) (float-vector 77.933 49.24 -41.5)))
         (instance face :init :vertices (list (float-vector 42.451 28.755 41.5) (float-vector 77.933 49.24 41.5) (float-vector 77.933 49.24 -41.5) (float-vector 42.451 28.755 -41.5)))
         (instance face :init :vertices (list (float-vector 39.977 26.987 41.5) (float-vector 42.451 28.755 41.5) (float-vector 42.451 28.755 -41.5) (float-vector 39.977 26.987 -41.5)))
         (instance face :init :vertices (list (float-vector 37.861 23.439 41.5) (float-vector 39.977 26.987 41.5) (float-vector 39.977 26.987 -41.5) (float-vector 37.861 23.439 -41.5)))
         (instance face :init :vertices (list (float-vector 37.5 20.989 41.5) (float-vector 37.861 23.439 41.5) (float-vector 37.861 23.439 -41.5) (float-vector 37.5 20.989 -41.5)))
         (instance face :init :vertices (list (float-vector 37.5 11.0 41.5) (float-vector 37.5 20.989 41.5) (float-vector 37.5 20.989 -41.5) (float-vector 37.5 11.0 -41.5)))
         (instance face :init :vertices (list (float-vector 4.405365e-13 11.0 41.5) (float-vector 37.5 11.0 41.5) (float-vector 37.5 11.0 -41.5) (float-vector 4.121148e-13 11.0 -41.5) (float-vector 4.405365e-13 11.0 -31.0) (float-vector 33.0 11.0 -31.0) (float-vector 33.0 11.0 31.0) (float-vector 4.263256e-13 11.0 31.0)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 31.0) (float-vector -9.3292 5.8281 31.0) (float-vector -9.3292 5.8281 41.5) (float-vector -5.4227 9.5705 41.5)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 41.5) (float-vector 4.405365e-13 11.0 41.5) (float-vector 4.263256e-13 11.0 31.0) (float-vector -5.4227 9.5705 31.0)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 -41.5) (float-vector -9.3292 5.8281 -41.5) (float-vector -9.3292 5.8281 -31.0) (float-vector -5.4227 9.5705 -31.0)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 -31.0) (float-vector 4.405365e-13 11.0 -31.0) (float-vector 4.121148e-13 11.0 -41.5) (float-vector -5.4227 9.5705 -41.5)))
         (instance face :init :vertices (list (float-vector 71.0 -43.5 -26.5) (float-vector 146.0 -43.5 -26.5) (float-vector 148.69 -42.713 -26.5) (float-vector 150.49 -40.708 -26.5) (float-vector 151.0 -38.5 -26.5) (float-vector 150.59 -36.521 -26.5) (float-vector 148.74 -34.315 -26.5) (float-vector 146.0 -33.5 -26.5) (float-vector 71.0 -33.5 -26.5)))
         (instance face :init :vertices (list (float-vector 67.4645 -43.5 -25.036) (float-vector 71.0 -43.5 -26.5) (float-vector 71.0 -33.5 -26.5) (float-vector 67.4645 -33.5 -25.036)))
         (instance face :init :vertices (list (float-vector 66.0 -43.5 -21.5) (float-vector 67.4645 -43.5 -25.036) (float-vector 67.4645 -33.5 -25.036) (float-vector 66.0 -33.5 -21.5)))
         (instance face :init :vertices (list (float-vector 66.0 -43.5 21.5) (float-vector 66.0 -43.5 -21.5) (float-vector 66.0 -33.5 -21.5) (float-vector 66.0 -33.5 21.5)))
         (instance face :init :vertices (list (float-vector 67.4645 -43.5 25.036) (float-vector 66.0 -43.5 21.5) (float-vector 66.0 -33.5 21.5) (float-vector 67.4645 -33.5 25.036)))
         (instance face :init :vertices (list (float-vector 71.0 -33.5 26.5) (float-vector 146.0 -33.5 26.5) (float-vector 148.74 -34.315 26.5) (float-vector 150.59 -36.521 26.5) (float-vector 151.0 -38.5 26.5) (float-vector 150.49 -40.708 26.5) (float-vector 148.69 -42.713 26.5) (float-vector 146.0 -43.5 26.5) (float-vector 71.0 -43.5 26.5)))
         (instance face :init :vertices (list (float-vector 71.0 -43.5 26.5) (float-vector 67.4645 -43.5 25.036) (float-vector 67.4645 -33.5 25.036) (float-vector 71.0 -33.5 26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-wrist-r :weight 242.426 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-finger
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 71.157 3.8775 -25.5) (float-vector 72.412 2.3529 -25.5) (float-vector 78.059 -8.2353 -25.5) (float-vector 78.647 -10.588 -25.5) (float-vector 77.688 -13.533 -25.5) (float-vector 76.0 -15.0 -25.5) (float-vector 73.647 -15.588 -25.5) (float-vector 70.798 -14.697 -25.5) (float-vector 69.235 -12.941 -25.5) (float-vector 65.169 -5.3178 -25.5) (float-vector 62.744 -3.082 -25.5) (float-vector 52.165 0.55403 -25.5) (float-vector 39.296 2.6768 -25.5) (float-vector 27.534 2.5814 -25.5) (float-vector 15.259 0.40218 -25.5) (float-vector 15.0 1.3681 -25.5) (float-vector 5.1163 -1.9439 -25.5) (float-vector 0.11625 -3.9439 -25.5) (float-vector -2.8837 -2.9439 -25.5) (float-vector -3.8837 -0.94392 -25.5) (float-vector -3.8837 1.0561 -25.5) (float-vector -2.0675 3.581 -25.5) (float-vector 6.8153 7.1956 -25.5) (float-vector 12.928 9.0952 -25.5) (float-vector 12.669 10.061 -25.5) (float-vector 23.525 12.202 -25.5) (float-vector 38.295 12.759 -25.5) (float-vector 51.906 10.901 -25.5) (float-vector 60.605 8.4561 -25.5)))
         (instance face :init :vertices (list (float-vector 72.412 2.3529 25.5) (float-vector 71.157 3.8775 25.5) (float-vector 60.605 8.4561 25.5) (float-vector 51.906 10.901 25.5) (float-vector 38.295 12.759 25.5) (float-vector 23.525 12.202 25.5) (float-vector 12.669 10.061 25.5) (float-vector 12.928 9.0952 25.5) (float-vector 6.8153 7.1956 25.5) (float-vector -2.0675 3.581 25.5) (float-vector -3.8837 1.0561 25.5) (float-vector -3.8837 -0.94392 25.5) (float-vector -2.8837 -2.9439 25.5) (float-vector 0.11625 -3.9439 25.5) (float-vector 5.1163 -1.9439 25.5) (float-vector 15.0 1.3681 25.5) (float-vector 15.259 0.40218 25.5) (float-vector 27.534 2.5814 25.5) (float-vector 39.296 2.6768 25.5) (float-vector 52.165 0.55403 25.5) (float-vector 62.744 -3.082 25.5) (float-vector 65.169 -5.3178 25.5) (float-vector 69.235 -12.941 25.5) (float-vector 70.798 -14.697 25.5) (float-vector 73.647 -15.588 25.5) (float-vector 76.0 -15.0 25.5) (float-vector 77.688 -13.533 25.5) (float-vector 78.647 -10.588 25.5) (float-vector 78.059 -8.2353 25.5)))
         (instance face :init :vertices (list (float-vector 71.157 3.8775 -25.5) (float-vector 71.157 3.8775 25.5) (float-vector 72.412 2.3529 25.5) (float-vector 72.412 2.3529 -25.5)))
         (instance face :init :vertices (list (float-vector 60.605 8.4561 -25.5) (float-vector 60.605 8.4561 25.5) (float-vector 71.157 3.8775 25.5) (float-vector 71.157 3.8775 -25.5)))
         (instance face :init :vertices (list (float-vector 51.906 10.901 -25.5) (float-vector 51.906 10.901 25.5) (float-vector 60.605 8.4561 25.5) (float-vector 60.605 8.4561 -25.5)))
         (instance face :init :vertices (list (float-vector 38.295 12.759 -25.5) (float-vector 38.295 12.759 25.5) (float-vector 51.906 10.901 25.5) (float-vector 51.906 10.901 -25.5)))
         (instance face :init :vertices (list (float-vector 23.525 12.202 -25.5) (float-vector 23.525 12.202 25.5) (float-vector 38.295 12.759 25.5) (float-vector 38.295 12.759 -25.5)))
         (instance face :init :vertices (list (float-vector 12.669 10.061 -25.5) (float-vector 12.669 10.061 25.5) (float-vector 23.525 12.202 25.5) (float-vector 23.525 12.202 -25.5)))
         (instance face :init :vertices (list (float-vector 12.928 9.0952 -25.5) (float-vector 12.928 9.0952 25.5) (float-vector 12.669 10.061 25.5) (float-vector 12.669 10.061 -25.5)))
         (instance face :init :vertices (list (float-vector 6.8153 7.1956 -25.5) (float-vector 6.8153 7.1956 25.5) (float-vector 12.928 9.0952 25.5) (float-vector 12.928 9.0952 -25.5)))
         (instance face :init :vertices (list (float-vector -2.0675 3.581 -25.5) (float-vector -2.0675 3.581 25.5) (float-vector 6.8153 7.1956 25.5) (float-vector 6.8153 7.1956 -25.5)))
         (instance face :init :vertices (list (float-vector -3.8837 1.0561 -25.5) (float-vector -3.8837 1.0561 25.5) (float-vector -2.0675 3.581 25.5) (float-vector -2.0675 3.581 -25.5)))
         (instance face :init :vertices (list (float-vector -3.8837 -0.94392 -25.5) (float-vector -3.8837 -0.94392 25.5) (float-vector -3.8837 1.0561 25.5) (float-vector -3.8837 1.0561 -25.5)))
         (instance face :init :vertices (list (float-vector -2.8837 -2.9439 -25.5) (float-vector -2.8837 -2.9439 25.5) (float-vector -3.8837 -0.94392 25.5) (float-vector -3.8837 -0.94392 -25.5)))
         (instance face :init :vertices (list (float-vector 0.11625 -3.9439 -25.5) (float-vector 0.11625 -3.9439 25.5) (float-vector -2.8837 -2.9439 25.5) (float-vector -2.8837 -2.9439 -25.5)))
         (instance face :init :vertices (list (float-vector 5.1163 -1.9439 -25.5) (float-vector 5.1163 -1.9439 25.5) (float-vector 0.11625 -3.9439 25.5) (float-vector 0.11625 -3.9439 -25.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.3681 -25.5) (float-vector 15.0 1.3681 25.5) (float-vector 5.1163 -1.9439 25.5) (float-vector 5.1163 -1.9439 -25.5)))
         (instance face :init :vertices (list (float-vector 15.259 0.40218 -25.5) (float-vector 15.259 0.40218 25.5) (float-vector 15.0 1.3681 25.5) (float-vector 15.0 1.3681 -25.5)))
         (instance face :init :vertices (list (float-vector 27.534 2.5814 -25.5) (float-vector 27.534 2.5814 25.5) (float-vector 15.259 0.40218 25.5) (float-vector 15.259 0.40218 -25.5)))
         (instance face :init :vertices (list (float-vector 39.296 2.6768 -25.5) (float-vector 39.296 2.6768 25.5) (float-vector 27.534 2.5814 25.5) (float-vector 27.534 2.5814 -25.5)))
         (instance face :init :vertices (list (float-vector 52.165 0.55403 -25.5) (float-vector 52.165 0.55403 25.5) (float-vector 39.296 2.6768 25.5) (float-vector 39.296 2.6768 -25.5)))
         (instance face :init :vertices (list (float-vector 62.744 -3.082 -25.5) (float-vector 62.744 -3.082 25.5) (float-vector 52.165 0.55403 25.5) (float-vector 52.165 0.55403 -25.5)))
         (instance face :init :vertices (list (float-vector 65.169 -5.3178 -25.5) (float-vector 65.169 -5.3178 25.5) (float-vector 62.744 -3.082 25.5) (float-vector 62.744 -3.082 -25.5)))
         (instance face :init :vertices (list (float-vector 69.235 -12.941 -25.5) (float-vector 69.235 -12.941 25.5) (float-vector 65.169 -5.3178 25.5) (float-vector 65.169 -5.3178 -25.5)))
         (instance face :init :vertices (list (float-vector 70.798 -14.697 -25.5) (float-vector 70.798 -14.697 25.5) (float-vector 69.235 -12.941 25.5) (float-vector 69.235 -12.941 -25.5)))
         (instance face :init :vertices (list (float-vector 73.647 -15.588 -25.5) (float-vector 73.647 -15.588 25.5) (float-vector 70.798 -14.697 25.5) (float-vector 70.798 -14.697 -25.5)))
         (instance face :init :vertices (list (float-vector 76.0 -15.0 -25.5) (float-vector 76.0 -15.0 25.5) (float-vector 73.647 -15.588 25.5) (float-vector 73.647 -15.588 -25.5)))
         (instance face :init :vertices (list (float-vector 77.688 -13.533 -25.5) (float-vector 77.688 -13.533 25.5) (float-vector 76.0 -15.0 25.5) (float-vector 76.0 -15.0 -25.5)))
         (instance face :init :vertices (list (float-vector 78.647 -10.588 -25.5) (float-vector 78.647 -10.588 25.5) (float-vector 77.688 -13.533 25.5) (float-vector 77.688 -13.533 -25.5)))
         (instance face :init :vertices (list (float-vector 78.059 -8.2353 -25.5) (float-vector 78.059 -8.2353 25.5) (float-vector 78.647 -10.588 25.5) (float-vector 78.647 -10.588 -25.5)))
         (instance face :init :vertices (list (float-vector 72.412 2.3529 -25.5) (float-vector 72.412 2.3529 25.5) (float-vector 78.059 -8.2353 25.5) (float-vector 78.059 -8.2353 -25.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-finger :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 32.09 -92.851 36.5) (float-vector 32.0 0.03099 36.5) (float-vector 24.843 20.17 36.5) (float-vector 13.298 29.106 36.5) (float-vector 2.273737e-13 32.0 36.5) (float-vector 0.0 31.0 36.5) (float-vector -15.454 26.873 36.5) (float-vector -26.439 16.186 36.5) (float-vector -31.0 0.0 36.5) (float-vector -32.0 0.0 36.5) (float-vector -32.0 -93.0 36.5)))
         (instance face :init :vertices (list (float-vector 32.0 0.03099 -71.0) (float-vector 32.09 -92.851 -71.0) (float-vector -32.0 -93.0 -71.0) (float-vector -32.0 0.0 -71.0) (float-vector -31.0 0.0 -71.0) (float-vector -26.439 16.186 -71.0) (float-vector -15.454 26.873 -71.0) (float-vector 0.0 31.0 -71.0) (float-vector 2.273737e-13 32.0 -71.0) (float-vector 13.298 29.106 -71.0) (float-vector 24.843 20.17 -71.0)))
         (instance face :init :vertices (list (float-vector 32.09 -92.851 36.5) (float-vector 32.09 -92.851 -71.0) (float-vector 32.0 0.03099 -71.0) (float-vector 32.0 0.03099 36.5)))
         (instance face :init :vertices (list (float-vector -32.0 -93.0 36.5) (float-vector -32.0 -93.0 -71.0) (float-vector 32.09 -92.851 -71.0) (float-vector 32.09 -92.851 36.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 36.5) (float-vector -32.0 0.0 -71.0) (float-vector -32.0 -93.0 -71.0) (float-vector -32.0 -93.0 36.5)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 36.5) (float-vector -31.0 0.0 -71.0) (float-vector -32.0 0.0 -71.0) (float-vector -32.0 0.0 36.5)))
         (instance face :init :vertices (list (float-vector -26.439 16.186 36.5) (float-vector -26.439 16.186 -71.0) (float-vector -31.0 0.0 -71.0) (float-vector -31.0 0.0 36.5)))
         (instance face :init :vertices (list (float-vector -15.454 26.873 36.5) (float-vector -15.454 26.873 -71.0) (float-vector -26.439 16.186 -71.0) (float-vector -26.439 16.186 36.5)))
         (instance face :init :vertices (list (float-vector 0.0 31.0 36.5) (float-vector 0.0 31.0 -71.0) (float-vector -15.454 26.873 -71.0) (float-vector -15.454 26.873 36.5)))
         (instance face :init :vertices (list (float-vector 2.273737e-13 32.0 36.5) (float-vector 2.273737e-13 32.0 -71.0) (float-vector 0.0 31.0 -71.0) (float-vector 0.0 31.0 36.5)))
         (instance face :init :vertices (list (float-vector 13.298 29.106 36.5) (float-vector 13.298 29.106 -71.0) (float-vector 2.273737e-13 32.0 -71.0) (float-vector 2.273737e-13 32.0 36.5)))
         (instance face :init :vertices (list (float-vector 24.843 20.17 36.5) (float-vector 24.843 20.17 -71.0) (float-vector 13.298 29.106 -71.0) (float-vector 13.298 29.106 36.5)))
         (instance face :init :vertices (list (float-vector 32.0 0.03099 36.5) (float-vector 32.0 0.03099 -71.0) (float-vector 24.843 20.17 -71.0) (float-vector 24.843 20.17 36.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-y :weight 1150.23 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 34.0 77.0 1.0) (float-vector 34.0 73.671 -13.898) (float-vector -67.0 73.671 -13.898) (float-vector -67.0 77.0 1.0)))
         (instance face :init :vertices (list (float-vector 34.0 65.665 -24.787) (float-vector -67.0 65.665 -24.787) (float-vector -67.0 73.671 -13.898) (float-vector 34.0 73.671 -13.898)))
         (instance face :init :vertices (list (float-vector 34.0 49.395 -33.21) (float-vector -67.0 49.395 -33.21) (float-vector -67.0 65.665 -24.787) (float-vector 34.0 65.665 -24.787)))
         (instance face :init :vertices (list (float-vector 34.0 -12.831 -46.661) (float-vector 31.0 -12.831 -46.661) (float-vector 31.0 40.0 -35.2409) (float-vector -64.0 40.0 -35.2409) (float-vector -64.0 -12.831 -46.661) (float-vector -67.0 -12.831 -46.661) (float-vector -67.0 49.395 -33.21) (float-vector 34.0 49.395 -33.21)))
         (instance face :init :vertices (list (float-vector -67.0 -19.926 -46.477) (float-vector -67.0 -12.831 -46.661) (float-vector -64.0 -12.831 -46.661) (float-vector -64.0 -19.926 -46.477)))
         (instance face :init :vertices (list (float-vector 34.0 -19.926 -46.477) (float-vector 31.0 -19.926 -46.477) (float-vector 31.0 -12.831 -46.661) (float-vector 34.0 -12.831 -46.661)))
         (instance face :init :vertices (list (float-vector -67.0 -28.081 -40.891) (float-vector -67.0 -19.926 -46.477) (float-vector -64.0 -19.926 -46.477) (float-vector -64.0 -28.081 -40.891)))
         (instance face :init :vertices (list (float-vector 34.0 -28.081 -40.891) (float-vector 31.0 -28.081 -40.891) (float-vector 31.0 -19.926 -46.477) (float-vector 34.0 -19.926 -46.477)))
         (instance face :init :vertices (list (float-vector -67.0 -31.0 -32.0) (float-vector -67.0 -28.081 -40.891) (float-vector -64.0 -28.081 -40.891) (float-vector -64.0 -31.0 -32.0)))
         (instance face :init :vertices (list (float-vector 34.0 -31.0 -32.0) (float-vector 31.0 -31.0 -32.0) (float-vector 31.0 -28.081 -40.891) (float-vector 34.0 -28.081 -40.891)))
         (instance face :init :vertices (list (float-vector 34.0 -31.0 48.0) (float-vector -67.0 -31.0 48.0) (float-vector -67.0 -31.0 -32.0) (float-vector -64.0 -31.0 -32.0) (float-vector -64.0 -31.0 39.0) (float-vector 31.0 -31.0 39.0) (float-vector 31.0 -31.0 -32.0) (float-vector 34.0 -31.0 -32.0)))
         (instance face :init :vertices (list (float-vector 34.0 77.0 48.0) (float-vector -67.0 77.0 48.0) (float-vector -67.0 -31.0 48.0) (float-vector 34.0 -31.0 48.0)))
         (instance face :init :vertices (list (float-vector -67.0 77.0 1.0) (float-vector -67.0 73.671 -13.898) (float-vector -67.0 65.665 -24.787) (float-vector -67.0 49.395 -33.21) (float-vector -67.0 -12.831 -46.661) (float-vector -67.0 -19.926 -46.477) (float-vector -67.0 -28.081 -40.891) (float-vector -67.0 -31.0 -32.0) (float-vector -67.0 -31.0 48.0) (float-vector -67.0 77.0 48.0)))
         (instance face :init :vertices (list (float-vector 34.0 77.0 48.0) (float-vector 34.0 -31.0 48.0) (float-vector 34.0 -31.0 -32.0) (float-vector 34.0 -28.081 -40.891) (float-vector 34.0 -19.926 -46.477) (float-vector 34.0 -12.831 -46.661) (float-vector 34.0 49.395 -33.21) (float-vector 34.0 65.665 -24.787) (float-vector 34.0 73.671 -13.898) (float-vector 34.0 77.0 1.0)))
         (instance face :init :vertices (list (float-vector 34.0 77.0 1.0) (float-vector -67.0 77.0 1.0) (float-vector -67.0 77.0 48.0) (float-vector 34.0 77.0 48.0)))
         (instance face :init :vertices (list (float-vector -64.0 -31.0 39.0) (float-vector -64.0 -31.0 -32.0) (float-vector -64.0 -28.081 -40.891) (float-vector -64.0 -19.926 -46.477) (float-vector -64.0 -12.831 -46.661) (float-vector -64.0 40.0 -35.2409) (float-vector -64.0 40.0 39.0)))
         (instance face :init :vertices (list (float-vector 31.0 -31.0 39.0) (float-vector -64.0 -31.0 39.0) (float-vector -64.0 40.0 39.0) (float-vector 31.0 40.0 39.0)))
         (instance face :init :vertices (list (float-vector 31.0 40.0 39.0) (float-vector -64.0 40.0 39.0) (float-vector -64.0 40.0 -35.2409) (float-vector 31.0 40.0 -35.2409)))
         (instance face :init :vertices (list (float-vector 31.0 40.0 -35.2409) (float-vector 31.0 -12.831 -46.661) (float-vector 31.0 -19.926 -46.477) (float-vector 31.0 -28.081 -40.891) (float-vector 31.0 -31.0 -32.0) (float-vector 31.0 -31.0 39.0) (float-vector 31.0 40.0 39.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 1190.93 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-shoulder-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 31.0 0.0 -36.0) (float-vector 28.591 -11.982 -36.0) (float-vector 22.552 -21.27 -36.0) (float-vector 12.119 -28.533 -36.0) (float-vector 0.0 -31.0 -36.0) (float-vector -10.014 -29.338 -36.0) (float-vector -23.69 -21.839 -36.0) (float-vector -28.616 -21.0 -36.0) (float-vector -52.0 -20.957 -36.0) (float-vector -52.0 37.9938 -36.0) (float-vector 0.0 32.199 -36.0) (float-vector 10.568 30.205 -36.0) (float-vector 20.152 24.857 -36.0) (float-vector 27.713 16.0 -36.0) (float-vector 26.847 15.5 -36.0) (float-vector 29.687 8.926 -36.0)))
         (instance face :init :vertices (list (float-vector 28.591 -11.982 36.0) (float-vector 31.0 0.0 36.0) (float-vector 29.687 8.926 36.0) (float-vector 26.847 15.5 36.0) (float-vector 27.713 16.0 36.0) (float-vector 20.152 24.857 36.0) (float-vector 10.568 30.205 36.0) (float-vector 0.0 32.199 36.0) (float-vector -52.0 37.9938 36.0) (float-vector -52.0 -20.957 36.0) (float-vector -28.616 -21.0 36.0) (float-vector -23.69 -21.839 36.0) (float-vector -10.014 -29.338 36.0) (float-vector 0.0 -31.0 36.0) (float-vector 12.119 -28.533 36.0) (float-vector 22.552 -21.27 36.0)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 -36.0) (float-vector 31.0 0.0 36.0) (float-vector 28.591 -11.982 36.0) (float-vector 28.591 -11.982 -36.0)))
         (instance face :init :vertices (list (float-vector 29.687 8.926 -36.0) (float-vector 29.687 8.926 36.0) (float-vector 31.0 0.0 36.0) (float-vector 31.0 0.0 -36.0)))
         (instance face :init :vertices (list (float-vector 26.847 15.5 -36.0) (float-vector 26.847 15.5 36.0) (float-vector 29.687 8.926 36.0) (float-vector 29.687 8.926 -36.0)))
         (instance face :init :vertices (list (float-vector 27.713 16.0 -36.0) (float-vector 27.713 16.0 36.0) (float-vector 26.847 15.5 36.0) (float-vector 26.847 15.5 -36.0)))
         (instance face :init :vertices (list (float-vector 20.152 24.857 -36.0) (float-vector 20.152 24.857 36.0) (float-vector 27.713 16.0 36.0) (float-vector 27.713 16.0 -36.0)))
         (instance face :init :vertices (list (float-vector 10.568 30.205 -36.0) (float-vector 10.568 30.205 36.0) (float-vector 20.152 24.857 36.0) (float-vector 20.152 24.857 -36.0)))
         (instance face :init :vertices (list (float-vector 0.0 32.199 -36.0) (float-vector 0.0 32.199 36.0) (float-vector 10.568 30.205 36.0) (float-vector 10.568 30.205 -36.0)))
         (instance face :init :vertices (list (float-vector -52.0 37.9938 -36.0) (float-vector -52.0 37.9938 36.0) (float-vector 0.0 32.199 36.0) (float-vector 0.0 32.199 -36.0)))
         (instance face :init :vertices (list (float-vector -52.0 -20.957 -36.0) (float-vector -52.0 -20.957 36.0) (float-vector -52.0 37.9938 36.0) (float-vector -52.0 37.9938 -36.0)))
         (instance face :init :vertices (list (float-vector -28.616 -21.0 -36.0) (float-vector -28.616 -21.0 36.0) (float-vector -52.0 -20.957 36.0) (float-vector -52.0 -20.957 -36.0)))
         (instance face :init :vertices (list (float-vector -23.69 -21.839 -36.0) (float-vector -23.69 -21.839 36.0) (float-vector -28.616 -21.0 36.0) (float-vector -28.616 -21.0 -36.0)))
         (instance face :init :vertices (list (float-vector -10.014 -29.338 -36.0) (float-vector -10.014 -29.338 36.0) (float-vector -23.69 -21.839 36.0) (float-vector -23.69 -21.839 -36.0)))
         (instance face :init :vertices (list (float-vector 0.0 -31.0 -36.0) (float-vector 0.0 -31.0 36.0) (float-vector -10.014 -29.338 36.0) (float-vector -10.014 -29.338 -36.0)))
         (instance face :init :vertices (list (float-vector 12.119 -28.533 -36.0) (float-vector 12.119 -28.533 36.0) (float-vector 0.0 -31.0 36.0) (float-vector 0.0 -31.0 -36.0)))
         (instance face :init :vertices (list (float-vector 22.552 -21.27 -36.0) (float-vector 22.552 -21.27 36.0) (float-vector 12.119 -28.533 36.0) (float-vector 12.119 -28.533 -36.0)))
         (instance face :init :vertices (list (float-vector 28.591 -11.982 -36.0) (float-vector 28.591 -11.982 36.0) (float-vector 22.552 -21.27 36.0) (float-vector 22.552 -21.27 -36.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 47.0 5.684342e-14) (float-vector -185.0 47.0 -6.0) (float-vector -185.0 44.476 -16.457) (float-vector -185.0 38.958 -25.214) (float-vector -185.0 29.697 -32.425) (float-vector -185.0 17.0615 -36.0) (float-vector -185.0 8.0 -36.0) (float-vector -185.0 -1.0615 -36.0) (float-vector -185.0 -13.697 -32.425) (float-vector -185.0 -22.958 -25.214) (float-vector -185.0 -28.476 -16.457) (float-vector -185.0 -31.0 -6.0) (float-vector -185.0 -31.0 5.684342e-14) (float-vector -185.0 -31.0 6.0) (float-vector -185.0 -28.476 16.457) (float-vector -185.0 -22.958 25.214) (float-vector -185.0 -13.697 32.425) (float-vector -185.0 -1.0615 36.0) (float-vector -185.0 8.0 36.0) (float-vector -185.0 17.0615 36.0) (float-vector -185.0 29.697 32.425) (float-vector -185.0 38.958 25.214) (float-vector -185.0 44.476 16.457) (float-vector -185.0 47.0 6.0)))
         (instance face :init :vertices (list (float-vector -52.0 47.0 -6.0) (float-vector -52.0 47.0 -5.684342e-14) (float-vector -52.0 47.0 6.0) (float-vector -52.0 44.476 16.457) (float-vector -52.0 38.958 25.214) (float-vector -52.0 29.697 32.425) (float-vector -52.0 17.0615 36.0) (float-vector -52.0 8.0 36.0) (float-vector -52.0 -1.0615 36.0) (float-vector -52.0 -13.697 32.425) (float-vector -52.0 -22.958 25.214) (float-vector -52.0 -28.476 16.457) (float-vector -52.0 -31.0 6.0) (float-vector -52.0 -31.0 -5.684342e-14) (float-vector -52.0 -31.0 -6.0) (float-vector -52.0 -28.476 -16.457) (float-vector -52.0 -22.958 -25.214) (float-vector -52.0 -13.697 -32.425) (float-vector -52.0 -1.0615 -36.0) (float-vector -52.0 8.0 -36.0) (float-vector -52.0 17.0615 -36.0) (float-vector -52.0 29.697 -32.425) (float-vector -52.0 38.958 -25.214) (float-vector -52.0 44.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 5.684342e-14) (float-vector -52.0 47.0 -5.684342e-14) (float-vector -52.0 47.0 -6.0) (float-vector -185.0 47.0 -6.0)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 6.0) (float-vector -52.0 47.0 6.0) (float-vector -52.0 47.0 -5.684342e-14) (float-vector -185.0 47.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 16.457) (float-vector -52.0 44.476 16.457) (float-vector -52.0 47.0 6.0) (float-vector -185.0 47.0 6.0)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 25.214) (float-vector -52.0 38.958 25.214) (float-vector -52.0 44.476 16.457) (float-vector -185.0 44.476 16.457)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 32.425) (float-vector -52.0 29.697 32.425) (float-vector -52.0 38.958 25.214) (float-vector -185.0 38.958 25.214)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 36.0) (float-vector -52.0 17.0615 36.0) (float-vector -52.0 29.697 32.425) (float-vector -185.0 29.697 32.425)))
         (instance face :init :vertices (list (float-vector -185.0 8.0 36.0) (float-vector -52.0 8.0 36.0) (float-vector -52.0 17.0615 36.0) (float-vector -185.0 17.0615 36.0)))
         (instance face :init :vertices (list (float-vector -185.0 -1.0615 36.0) (float-vector -52.0 -1.0615 36.0) (float-vector -52.0 8.0 36.0) (float-vector -185.0 8.0 36.0)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 32.425) (float-vector -52.0 -13.697 32.425) (float-vector -52.0 -1.0615 36.0) (float-vector -185.0 -1.0615 36.0)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 25.214) (float-vector -52.0 -22.958 25.214) (float-vector -52.0 -13.697 32.425) (float-vector -185.0 -13.697 32.425)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 16.457) (float-vector -52.0 -28.476 16.457) (float-vector -52.0 -22.958 25.214) (float-vector -185.0 -22.958 25.214)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 6.0) (float-vector -52.0 -31.0 6.0) (float-vector -52.0 -28.476 16.457) (float-vector -185.0 -28.476 16.457)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 5.684342e-14) (float-vector -52.0 -31.0 -5.684342e-14) (float-vector -52.0 -31.0 6.0) (float-vector -185.0 -31.0 6.0)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -6.0) (float-vector -52.0 -31.0 -6.0) (float-vector -52.0 -31.0 -5.684342e-14) (float-vector -185.0 -31.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 -16.457) (float-vector -52.0 -28.476 -16.457) (float-vector -52.0 -31.0 -6.0) (float-vector -185.0 -31.0 -6.0)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 -25.214) (float-vector -52.0 -22.958 -25.214) (float-vector -52.0 -28.476 -16.457) (float-vector -185.0 -28.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 -32.425) (float-vector -52.0 -13.697 -32.425) (float-vector -52.0 -22.958 -25.214) (float-vector -185.0 -22.958 -25.214)))
         (instance face :init :vertices (list (float-vector -185.0 -1.0615 -36.0) (float-vector -52.0 -1.0615 -36.0) (float-vector -52.0 -13.697 -32.425) (float-vector -185.0 -13.697 -32.425)))
         (instance face :init :vertices (list (float-vector -185.0 8.0 -36.0) (float-vector -52.0 8.0 -36.0) (float-vector -52.0 -1.0615 -36.0) (float-vector -185.0 -1.0615 -36.0)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 -36.0) (float-vector -52.0 17.0615 -36.0) (float-vector -52.0 8.0 -36.0) (float-vector -185.0 8.0 -36.0)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 -32.425) (float-vector -52.0 29.697 -32.425) (float-vector -52.0 17.0615 -36.0) (float-vector -185.0 17.0615 -36.0)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 -25.214) (float-vector -52.0 38.958 -25.214) (float-vector -52.0 29.697 -32.425) (float-vector -185.0 29.697 -32.425)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 -16.457) (float-vector -52.0 44.476 -16.457) (float-vector -52.0 38.958 -25.214) (float-vector -185.0 38.958 -25.214)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 -6.0) (float-vector -52.0 47.0 -6.0) (float-vector -52.0 44.476 -16.457) (float-vector -185.0 44.476 -16.457)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 -31.0 36.0) (float-vector -250.0 -31.0 36.0) (float-vector -250.0 -31.0 34.0) (float-vector -271.007 -31.0 5.7087) (float-vector -279.433 -31.0 -8.2675) (float-vector -281.0 -31.0 -18.0) (float-vector -282.0 -31.0 -18.0) (float-vector -280.002 -31.0 -29.129) (float-vector -274.407 -31.0 -38.695) (float-vector -263.32 -31.0 -47.096) (float-vector -250.0 -31.0 -50.0) (float-vector -241.132 -31.0 -48.747) (float-vector -190.0 -31.0 -34.0) (float-vector -185.0 -31.0 -34.0)))
         (instance face :init :vertices (list (float-vector -250.0 47.0 36.0) (float-vector -185.0 47.0 36.0) (float-vector -185.0 47.0 -34.0) (float-vector -190.0 47.0 -34.0) (float-vector -241.132 47.0 -48.747) (float-vector -250.0 47.0 -50.0) (float-vector -263.32 47.0 -47.096) (float-vector -274.407 47.0 -38.695) (float-vector -280.002 47.0 -29.129) (float-vector -282.0 47.0 -18.0) (float-vector -281.0 47.0 -18.0) (float-vector -279.433 47.0 -8.2675) (float-vector -271.007 47.0 5.7087) (float-vector -250.0 47.0 34.0)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 36.0) (float-vector -185.0 47.0 36.0) (float-vector -250.0 47.0 36.0) (float-vector -250.0 -31.0 36.0)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -34.0) (float-vector -185.0 47.0 -34.0) (float-vector -185.0 47.0 36.0) (float-vector -185.0 -31.0 36.0)))
         (instance face :init :vertices (list (float-vector -190.0 -31.0 -34.0) (float-vector -190.0 47.0 -34.0) (float-vector -185.0 47.0 -34.0) (float-vector -185.0 -31.0 -34.0)))
         (instance face :init :vertices (list (float-vector -241.132 -31.0 -48.747) (float-vector -241.132 47.0 -48.747) (float-vector -190.0 47.0 -34.0) (float-vector -190.0 -31.0 -34.0)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0 -50.0) (float-vector -250.0 47.0 -50.0) (float-vector -241.132 47.0 -48.747) (float-vector -241.132 -31.0 -48.747)))
         (instance face :init :vertices (list (float-vector -263.32 -31.0 -47.096) (float-vector -263.32 47.0 -47.096) (float-vector -250.0 47.0 -50.0) (float-vector -250.0 -31.0 -50.0)))
         (instance face :init :vertices (list (float-vector -274.407 -31.0 -38.695) (float-vector -274.407 47.0 -38.695) (float-vector -263.32 47.0 -47.096) (float-vector -263.32 -31.0 -47.096)))
         (instance face :init :vertices (list (float-vector -280.002 -31.0 -29.129) (float-vector -280.002 47.0 -29.129) (float-vector -274.407 47.0 -38.695) (float-vector -274.407 -31.0 -38.695)))
         (instance face :init :vertices (list (float-vector -282.0 -31.0 -18.0) (float-vector -282.0 47.0 -18.0) (float-vector -280.002 47.0 -29.129) (float-vector -280.002 -31.0 -29.129)))
         (instance face :init :vertices (list (float-vector -281.0 -31.0 -18.0) (float-vector -281.0 47.0 -18.0) (float-vector -282.0 47.0 -18.0) (float-vector -282.0 -31.0 -18.0)))
         (instance face :init :vertices (list (float-vector -279.433 -31.0 -8.2675) (float-vector -279.433 47.0 -8.2675) (float-vector -281.0 47.0 -18.0) (float-vector -281.0 -31.0 -18.0)))
         (instance face :init :vertices (list (float-vector -271.007 -31.0 5.7087) (float-vector -271.007 47.0 5.7087) (float-vector -279.433 47.0 -8.2675) (float-vector -279.433 -31.0 -8.2675)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0 34.0) (float-vector -250.0 47.0 34.0) (float-vector -271.007 47.0 5.7087) (float-vector -271.007 -31.0 5.7087)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0 36.0) (float-vector -250.0 47.0 36.0) (float-vector -250.0 47.0 34.0) (float-vector -250.0 -31.0 34.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-r :weight 2106.72 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.0 -65.0 -43.0) (float-vector 16.0 -60.0 -43.0) (float-vector 16.0 -60.0 43.0) (float-vector 16.0 -65.0 43.0)))
         (instance face :init :vertices (list (float-vector 31.529 -9.7422 -43.0) (float-vector 31.529 -9.7422 -40.0) (float-vector 16.309 -59.0 -40.0) (float-vector 16.309 -59.0 40.0) (float-vector 31.529 -9.7422 40.0) (float-vector 31.529 -9.7422 43.0) (float-vector 16.0 -60.0 43.0) (float-vector 16.0 -60.0 -43.0)))
         (instance face :init :vertices (list (float-vector 33.0 1.136868e-13 43.0) (float-vector 31.529 -9.7422 43.0) (float-vector 31.529 -9.7422 40.0) (float-vector 33.0 1.136868e-13 40.0)))
         (instance face :init :vertices (list (float-vector 33.0 1.136868e-13 -43.0) (float-vector 33.0 1.136868e-13 -40.0) (float-vector 31.529 -9.7422 -40.0) (float-vector 31.529 -9.7422 -43.0)))
         (instance face :init :vertices (list (float-vector 31.586 9.5569 43.0) (float-vector 33.0 1.136868e-13 43.0) (float-vector 33.0 1.136868e-13 40.0) (float-vector 31.586 9.5569 40.0)))
         (instance face :init :vertices (list (float-vector 31.586 9.5569 -43.0) (float-vector 31.586 9.5569 -40.0) (float-vector 33.0 1.136868e-13 -40.0) (float-vector 33.0 1.136868e-13 -43.0)))
         (instance face :init :vertices (list (float-vector 26.556 19.59 43.0) (float-vector 31.586 9.5569 43.0) (float-vector 31.586 9.5569 40.0) (float-vector 26.556 19.59 40.0)))
         (instance face :init :vertices (list (float-vector 26.556 19.59 -43.0) (float-vector 26.556 19.59 -40.0) (float-vector 31.586 9.5569 -40.0) (float-vector 31.586 9.5569 -43.0)))
         (instance face :init :vertices (list (float-vector 15.383 29.195 43.0) (float-vector 26.556 19.59 43.0) (float-vector 26.556 19.59 40.0) (float-vector 15.383 29.195 40.0)))
         (instance face :init :vertices (list (float-vector 15.383 29.195 -43.0) (float-vector 15.383 29.195 -40.0) (float-vector 26.556 19.59 -40.0) (float-vector 26.556 19.59 -43.0)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 33.0 43.0) (float-vector 15.383 29.195 43.0) (float-vector 15.383 29.195 40.0) (float-vector 1.136868e-13 33.0 40.0)))
         (instance face :init :vertices (list (float-vector 0.0 33.0 -43.0) (float-vector 0.0 33.0 -40.0) (float-vector 15.383 29.195 -40.0) (float-vector 15.383 29.195 -43.0)))
         (instance face :init :vertices (list (float-vector -57.0 33.0 -43.0) (float-vector -57.0 33.0 43.0) (float-vector 1.136868e-13 33.0 43.0) (float-vector 1.136868e-13 33.0 40.0) (float-vector -55.0 33.0 40.0) (float-vector -55.0 33.0 -40.0) (float-vector 0.0 33.0 -40.0) (float-vector 0.0 33.0 -43.0)))
         (instance face :init :vertices (list (float-vector -57.0 -65.0 -43.0) (float-vector -57.0 -65.0 43.0) (float-vector -57.0 33.0 43.0) (float-vector -57.0 33.0 -43.0)))
         (instance face :init :vertices (list (float-vector 16.0 -65.0 43.0) (float-vector 16.0 -60.0 43.0) (float-vector 31.529 -9.7422 43.0) (float-vector 33.0 1.136868e-13 43.0) (float-vector 31.586 9.5569 43.0) (float-vector 26.556 19.59 43.0) (float-vector 15.383 29.195 43.0) (float-vector 1.136868e-13 33.0 43.0) (float-vector -57.0 33.0 43.0) (float-vector -57.0 -65.0 43.0)))
         (instance face :init :vertices (list (float-vector -57.0 -65.0 -43.0) (float-vector -57.0 33.0 -43.0) (float-vector 0.0 33.0 -43.0) (float-vector 15.383 29.195 -43.0) (float-vector 26.556 19.59 -43.0) (float-vector 31.586 9.5569 -43.0) (float-vector 33.0 1.136868e-13 -43.0) (float-vector 31.529 -9.7422 -43.0) (float-vector 16.0 -60.0 -43.0) (float-vector 16.0 -65.0 -43.0)))
         (instance face :init :vertices (list (float-vector 16.0 -65.0 -43.0) (float-vector 16.0 -65.0 43.0) (float-vector -57.0 -65.0 43.0) (float-vector -57.0 -65.0 -43.0)))
         (instance face :init :vertices (list (float-vector -55.0 33.0 -40.0) (float-vector -55.0 33.0 40.0) (float-vector -55.0 -59.0 40.0) (float-vector -55.0 -59.0 -40.0)))
         (instance face :init :vertices (list (float-vector -55.0 -59.0 40.0) (float-vector -55.0 33.0 40.0) (float-vector 1.136868e-13 33.0 40.0) (float-vector 15.383 29.195 40.0) (float-vector 26.556 19.59 40.0) (float-vector 31.586 9.5569 40.0) (float-vector 33.0 1.136868e-13 40.0) (float-vector 31.529 -9.7422 40.0) (float-vector 16.309 -59.0 40.0)))
         (instance face :init :vertices (list (float-vector 16.309 -59.0 -40.0) (float-vector 31.529 -9.7422 -40.0) (float-vector 33.0 1.136868e-13 -40.0) (float-vector 31.586 9.5569 -40.0) (float-vector 26.556 19.59 -40.0) (float-vector 15.383 29.195 -40.0) (float-vector 0.0 33.0 -40.0) (float-vector -55.0 33.0 -40.0) (float-vector -55.0 -59.0 -40.0)))
         (instance face :init :vertices (list (float-vector -55.0 -59.0 -40.0) (float-vector -55.0 -59.0 40.0) (float-vector 16.309 -59.0 40.0) (float-vector 16.309 -59.0 -40.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-p :weight 572.353 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-elbow-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 36.0 -6.0 153.0) (float-vector 36.0 6.0 153.0) (float-vector 33.205 17.079 153.0) (float-vector 27.0 26.249 153.0) (float-vector 16.4 33.5 153.0) (float-vector 6.0 36.0 153.0) (float-vector -6.0 36.0 153.0) (float-vector -16.4 33.5 153.0) (float-vector -27.0 26.249 153.0) (float-vector -33.205 17.079 153.0) (float-vector -36.0 6.0 153.0) (float-vector -36.0 -6.0 153.0) (float-vector -33.205 -17.079 153.0) (float-vector -27.0 -26.249 153.0) (float-vector -16.4 -33.5 153.0) (float-vector -6.0 -36.0 153.0) (float-vector 6.0 -36.0 153.0) (float-vector 16.4 -33.5 153.0) (float-vector 27.0 -26.249 153.0) (float-vector 33.205 -17.079 153.0)))
         (instance face :init :vertices (list (float-vector 36.0 6.0 5.684342e-14) (float-vector 36.0 -6.0 0.0) (float-vector 33.205 -17.079 0.0) (float-vector 27.0 -26.249 0.0) (float-vector 16.4 -33.5 0.0) (float-vector 6.0 -36.0 0.0) (float-vector -6.0 -36.0 0.0) (float-vector -16.4 -33.5 0.0) (float-vector -27.0 -26.249 0.0) (float-vector -33.205 -17.079 0.0) (float-vector -36.0 -6.0 0.0) (float-vector -36.0 6.0 5.684342e-14) (float-vector -33.205 17.079 0.0) (float-vector -27.0 26.249 0.0) (float-vector -16.4 33.5 5.684342e-14) (float-vector -6.0 36.0 0.0) (float-vector 6.0 36.0 0.0) (float-vector 16.4 33.5 0.0) (float-vector 27.0 26.249 -5.684342e-14) (float-vector 33.205 17.079 0.0)))
         (instance face :init :vertices (list (float-vector 36.0 -6.0 153.0) (float-vector 36.0 -6.0 0.0) (float-vector 36.0 6.0 5.684342e-14) (float-vector 36.0 6.0 153.0)))
         (instance face :init :vertices (list (float-vector 33.205 -17.079 153.0) (float-vector 33.205 -17.079 0.0) (float-vector 36.0 -6.0 0.0) (float-vector 36.0 -6.0 153.0)))
         (instance face :init :vertices (list (float-vector 27.0 -26.249 153.0) (float-vector 27.0 -26.249 0.0) (float-vector 33.205 -17.079 0.0) (float-vector 33.205 -17.079 153.0)))
         (instance face :init :vertices (list (float-vector 16.4 -33.5 153.0) (float-vector 16.4 -33.5 0.0) (float-vector 27.0 -26.249 0.0) (float-vector 27.0 -26.249 153.0)))
         (instance face :init :vertices (list (float-vector 6.0 -36.0 153.0) (float-vector 6.0 -36.0 0.0) (float-vector 16.4 -33.5 0.0) (float-vector 16.4 -33.5 153.0)))
         (instance face :init :vertices (list (float-vector -6.0 -36.0 153.0) (float-vector -6.0 -36.0 0.0) (float-vector 6.0 -36.0 0.0) (float-vector 6.0 -36.0 153.0)))
         (instance face :init :vertices (list (float-vector -16.4 -33.5 153.0) (float-vector -16.4 -33.5 0.0) (float-vector -6.0 -36.0 0.0) (float-vector -6.0 -36.0 153.0)))
         (instance face :init :vertices (list (float-vector -27.0 -26.249 153.0) (float-vector -27.0 -26.249 0.0) (float-vector -16.4 -33.5 0.0) (float-vector -16.4 -33.5 153.0)))
         (instance face :init :vertices (list (float-vector -33.205 -17.079 153.0) (float-vector -33.205 -17.079 0.0) (float-vector -27.0 -26.249 0.0) (float-vector -27.0 -26.249 153.0)))
         (instance face :init :vertices (list (float-vector -36.0 -6.0 153.0) (float-vector -36.0 -6.0 0.0) (float-vector -33.205 -17.079 0.0) (float-vector -33.205 -17.079 153.0)))
         (instance face :init :vertices (list (float-vector -36.0 6.0 153.0) (float-vector -36.0 6.0 5.684342e-14) (float-vector -36.0 -6.0 0.0) (float-vector -36.0 -6.0 153.0)))
         (instance face :init :vertices (list (float-vector -33.205 17.079 153.0) (float-vector -33.205 17.079 0.0) (float-vector -36.0 6.0 5.684342e-14) (float-vector -36.0 6.0 153.0)))
         (instance face :init :vertices (list (float-vector -27.0 26.249 153.0) (float-vector -27.0 26.249 0.0) (float-vector -33.205 17.079 0.0) (float-vector -33.205 17.079 153.0)))
         (instance face :init :vertices (list (float-vector -16.4 33.5 153.0) (float-vector -16.4 33.5 5.684342e-14) (float-vector -27.0 26.249 0.0) (float-vector -27.0 26.249 153.0)))
         (instance face :init :vertices (list (float-vector -6.0 36.0 153.0) (float-vector -6.0 36.0 0.0) (float-vector -16.4 33.5 5.684342e-14) (float-vector -16.4 33.5 153.0)))
         (instance face :init :vertices (list (float-vector 6.0 36.0 153.0) (float-vector 6.0 36.0 0.0) (float-vector -6.0 36.0 0.0) (float-vector -6.0 36.0 153.0)))
         (instance face :init :vertices (list (float-vector 16.4 33.5 153.0) (float-vector 16.4 33.5 0.0) (float-vector 6.0 36.0 0.0) (float-vector 6.0 36.0 153.0)))
         (instance face :init :vertices (list (float-vector 27.0 26.249 153.0) (float-vector 27.0 26.249 -5.684342e-14) (float-vector 16.4 33.5 0.0) (float-vector 16.4 33.5 153.0)))
         (instance face :init :vertices (list (float-vector 33.205 17.079 153.0) (float-vector 33.205 17.079 0.0) (float-vector 27.0 26.249 -5.684342e-14) (float-vector 27.0 26.249 153.0)))
         (instance face :init :vertices (list (float-vector 36.0 6.0 153.0) (float-vector 36.0 6.0 5.684342e-14) (float-vector 33.205 17.079 0.0) (float-vector 33.205 17.079 153.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-y :weight 867.544 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-wrist-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -5.0 28.5 -30.0) (float-vector -5.0 22.5 -30.0) (float-vector -5.0 22.5 30.0) (float-vector -5.0 28.5 30.0)))
         (instance face :init :vertices (list (float-vector -5.0 28.5 -30.0) (float-vector -5.0 28.5 30.0) (float-vector -16.224 28.5 30.0) (float-vector -25.115 28.5 14.5) (float-vector -28.373 28.5 6.0) (float-vector -28.373 28.5 -6.0) (float-vector -25.115 28.5 -14.5) (float-vector -16.224 28.5 -30.0)))
         (instance face :init :vertices (list (float-vector -5.0 22.5 30.0) (float-vector -5.0 22.5 -30.0) (float-vector -16.224 22.5 -30.0) (float-vector -17.3 22.5 -28.1242) (float-vector -17.3 22.5 28.1242) (float-vector -16.224 22.5 30.0)))
         (instance face :init :vertices (list (float-vector -17.3 -22.5 28.1242) (float-vector -17.3 22.5 28.1242) (float-vector -17.3 22.5 -28.1242) (float-vector -17.3 -22.5 -28.1242)))
         (instance face :init :vertices (list (float-vector -16.224 -22.5 30.0) (float-vector -17.3 -22.5 28.1242) (float-vector -17.3 -22.5 -28.1242) (float-vector -16.224 -22.5 -30.0) (float-vector -5.0 -22.5 -30.0) (float-vector -5.0 -22.5 30.0)))
         (instance face :init :vertices (list (float-vector -5.0 -22.5 30.0) (float-vector -5.0 -22.5 -30.0) (float-vector -5.0 -28.5 -30.0) (float-vector -5.0 -28.5 30.0)))
         (instance face :init :vertices (list (float-vector -5.0 -28.5 30.0) (float-vector -5.0 -28.5 -30.0) (float-vector -16.224 -28.5 -30.0) (float-vector -25.115 -28.5 -14.5) (float-vector -28.373 -28.5 -6.0) (float-vector -28.373 -28.5 6.0) (float-vector -25.115 -28.5 14.5) (float-vector -16.224 -28.5 30.0)))
         (instance face :init :vertices (list (float-vector 33.226 -11.0 30.0) (float-vector 33.226 -11.0 -30.0) (float-vector 35.0 -5.684342e-14 -30.0) (float-vector 35.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 33.226 -11.0 30.0) (float-vector 35.0 0.0 30.0) (float-vector 33.226 11.0 30.0) (float-vector 24.426 25.067 30.0) (float-vector 10.137 33.5 30.0) (float-vector -16.224 33.5 30.0) (float-vector -16.224 28.5 30.0) (float-vector -5.0 28.5 30.0) (float-vector -5.0 22.5 30.0) (float-vector -16.224 22.5 30.0) (float-vector -16.224 -22.5 30.0) (float-vector -5.0 -22.5 30.0) (float-vector -5.0 -28.5 30.0) (float-vector -16.224 -28.5 30.0) (float-vector -16.224 -33.5 30.0) (float-vector 10.137 -33.5 30.0) (float-vector 24.426 -25.067 30.0)))
         (instance face :init :vertices (list (float-vector 35.0 -5.684342e-14 -30.0) (float-vector 33.226 -11.0 -30.0) (float-vector 24.426 -25.067 -30.0) (float-vector 10.137 -33.5 -30.0) (float-vector -16.224 -33.5 -30.0) (float-vector -16.224 -28.5 -30.0) (float-vector -5.0 -28.5 -30.0) (float-vector -5.0 -22.5 -30.0) (float-vector -16.224 -22.5 -30.0) (float-vector -16.224 22.5 -30.0) (float-vector -5.0 22.5 -30.0) (float-vector -5.0 28.5 -30.0) (float-vector -16.224 28.5 -30.0) (float-vector -16.224 33.5 -30.0) (float-vector 10.137 33.5 -30.0) (float-vector 24.426 25.067 -30.0) (float-vector 33.226 11.0 -30.0)))
         (instance face :init :vertices (list (float-vector 33.226 11.0 30.0) (float-vector 35.0 0.0 30.0) (float-vector 35.0 -5.684342e-14 -30.0) (float-vector 33.226 11.0 -30.0)))
         (instance face :init :vertices (list (float-vector 24.426 25.067 30.0) (float-vector 33.226 11.0 30.0) (float-vector 33.226 11.0 -30.0) (float-vector 24.426 25.067 -30.0)))
         (instance face :init :vertices (list (float-vector 10.137 33.5 -30.0) (float-vector -16.224 33.5 -30.0) (float-vector -25.115 33.5 -14.5) (float-vector -28.373 33.5 -6.0) (float-vector -28.373 33.5 6.0) (float-vector -25.115 33.5 14.5) (float-vector -16.224 33.5 30.0) (float-vector 10.137 33.5 30.0)))
         (instance face :init :vertices (list (float-vector 10.137 33.5 30.0) (float-vector 24.426 25.067 30.0) (float-vector 24.426 25.067 -30.0) (float-vector 10.137 33.5 -30.0)))
         (instance face :init :vertices (list (float-vector 10.137 -33.5 30.0) (float-vector -16.224 -33.5 30.0) (float-vector -25.115 -33.5 14.5) (float-vector -28.373 -33.5 6.0) (float-vector -28.373 -33.5 -6.0) (float-vector -25.115 -33.5 -14.5) (float-vector -16.224 -33.5 -30.0) (float-vector 10.137 -33.5 -30.0)))
         (instance face :init :vertices (list (float-vector 24.426 -25.067 -30.0) (float-vector 33.226 -11.0 -30.0) (float-vector 33.226 -11.0 30.0) (float-vector 24.426 -25.067 30.0)))
         (instance face :init :vertices (list (float-vector 24.426 -25.067 30.0) (float-vector 10.137 -33.5 30.0) (float-vector 10.137 -33.5 -30.0) (float-vector 24.426 -25.067 -30.0)))
         (instance face :init :vertices (list (float-vector -16.224 -22.5 -30.0) (float-vector -17.3 -22.5 -28.1242) (float-vector -17.3 22.5 -28.1242) (float-vector -16.224 22.5 -30.0)))
         (instance face :init :vertices (list (float-vector -25.115 -28.5 -14.5) (float-vector -16.224 -28.5 -30.0) (float-vector -16.224 -33.5 -30.0) (float-vector -25.115 -33.5 -14.5)))
         (instance face :init :vertices (list (float-vector -25.115 33.5 -14.5) (float-vector -16.224 33.5 -30.0) (float-vector -16.224 28.5 -30.0) (float-vector -25.115 28.5 -14.5)))
         (instance face :init :vertices (list (float-vector -28.373 33.5 -6.0) (float-vector -25.115 33.5 -14.5) (float-vector -25.115 28.5 -14.5) (float-vector -28.373 28.5 -6.0)))
         (instance face :init :vertices (list (float-vector -28.373 -28.5 -6.0) (float-vector -25.115 -28.5 -14.5) (float-vector -25.115 -33.5 -14.5) (float-vector -28.373 -33.5 -6.0)))
         (instance face :init :vertices (list (float-vector -16.224 22.5 30.0) (float-vector -17.3 22.5 28.1242) (float-vector -17.3 -22.5 28.1242) (float-vector -16.224 -22.5 30.0)))
         (instance face :init :vertices (list (float-vector -25.115 -33.5 14.5) (float-vector -16.224 -33.5 30.0) (float-vector -16.224 -28.5 30.0) (float-vector -25.115 -28.5 14.5)))
         (instance face :init :vertices (list (float-vector -25.115 28.5 14.5) (float-vector -16.224 28.5 30.0) (float-vector -16.224 33.5 30.0) (float-vector -25.115 33.5 14.5)))
         (instance face :init :vertices (list (float-vector -28.373 -28.5 6.0) (float-vector -28.373 -28.5 -6.0) (float-vector -28.373 -33.5 -6.0) (float-vector -28.373 -33.5 6.0)))
         (instance face :init :vertices (list (float-vector -28.373 33.5 6.0) (float-vector -28.373 33.5 -6.0) (float-vector -28.373 28.5 -6.0) (float-vector -28.373 28.5 6.0)))
         (instance face :init :vertices (list (float-vector -28.373 -33.5 6.0) (float-vector -25.115 -33.5 14.5) (float-vector -25.115 -28.5 14.5) (float-vector -28.373 -28.5 6.0)))
         (instance face :init :vertices (list (float-vector -28.373 28.5 6.0) (float-vector -25.115 28.5 14.5) (float-vector -25.115 33.5 14.5) (float-vector -28.373 33.5 6.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-wrist-p :weight 654.58 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-wrist-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.0 11.0 -31.0) (float-vector 4.689582e-13 11.0 -31.0) (float-vector -5.4227 9.5705 -31.0) (float-vector -9.3292 5.8281 -31.0) (float-vector -11.0 -5.684342e-14 -31.0) (float-vector -9.1331 -6.1308 -31.0) (float-vector -5.5024 -9.5249 -31.0) (float-vector 33.0 -31.7666 -31.0)))
         (instance face :init :vertices (list (float-vector 33.0 11.0 -31.0) (float-vector 33.0 -31.7666 -31.0) (float-vector 33.0 -31.7666 31.0) (float-vector 33.0 11.0 31.0)))
         (instance face :init :vertices (list (float-vector 33.0 11.0 31.0) (float-vector 33.0 -31.7666 31.0) (float-vector -5.5024 -9.5249 31.0) (float-vector -9.1331 -6.1308 31.0) (float-vector -11.0 0.0 31.0) (float-vector -9.3292 5.8281 31.0) (float-vector -5.4227 9.5705 31.0) (float-vector 4.689582e-13 11.0 31.0)))
         (instance face :init :vertices (list (float-vector -9.3292 5.8281 41.5) (float-vector -9.3292 5.8281 31.0) (float-vector -11.0 0.0 31.0) (float-vector -11.0 0.0 41.5)))
         (instance face :init :vertices (list (float-vector -11.0 0.0 -41.5) (float-vector -11.0 -5.684342e-14 -31.0) (float-vector -9.3292 5.8281 -31.0) (float-vector -9.3292 5.8281 -41.5)))
         (instance face :init :vertices (list (float-vector -9.3292 5.8281 41.5) (float-vector -11.0 0.0 41.5) (float-vector -9.1331 -6.1308 41.5) (float-vector -5.5024 -9.5249 41.5) (float-vector 33.501 -32.056 41.5) (float-vector 35.33 -33.886 41.5) (float-vector 36.0 -36.386 41.5) (float-vector 36.0 -38.5 41.5) (float-vector 36.758 -41.147 41.5) (float-vector 38.995 -43.08 41.5) (float-vector 41.927 -43.5 41.5) (float-vector 146.0 -43.5 41.5) (float-vector 148.69 -42.713 41.5) (float-vector 150.49 -40.708 41.5) (float-vector 151.0 -38.5 41.5) (float-vector 150.59 -36.521 41.5) (float-vector 148.74 -34.315 41.5) (float-vector 146.0 -33.5 41.5) (float-vector 56.0 -33.5 41.5) (float-vector 53.563 -32.866 41.5) (float-vector 51.688 -31.032 41.5) (float-vector 51.0 -28.5 41.5) (float-vector 51.0 2.5137 41.5) (float-vector 51.402 4.4775 41.5) (float-vector 52.646 6.2216 41.5) (float-vector 89.771 27.785 41.5) (float-vector 93.275 31.334 41.5) (float-vector 94.494 35.657 41.5) (float-vector 93.774 39.643 41.5) (float-vector 90.227 45.946 41.5) (float-vector 87.522 48.869 41.5) (float-vector 82.433 50.446 41.5) (float-vector 77.933 49.24 41.5) (float-vector 42.451 28.755 41.5) (float-vector 39.977 26.987 41.5) (float-vector 37.861 23.439 41.5) (float-vector 37.5 20.989 41.5) (float-vector 37.5 11.0 41.5) (float-vector 4.973799e-13 11.0 41.5) (float-vector -5.4227 9.5705 41.5)))
         (instance face :init :vertices (list (float-vector -11.0 0.0 -41.5) (float-vector -9.3292 5.8281 -41.5) (float-vector -5.4227 9.5705 -41.5) (float-vector 4.547474e-13 11.0 -41.5) (float-vector 37.5 11.0 -41.5) (float-vector 37.5 20.989 -41.5) (float-vector 37.861 23.439 -41.5) (float-vector 39.977 26.987 -41.5) (float-vector 42.451 28.755 -41.5) (float-vector 77.933 49.24 -41.5) (float-vector 82.433 50.446 -41.5) (float-vector 87.522 48.869 -41.5) (float-vector 90.227 45.946 -41.5) (float-vector 93.774 39.643 -41.5) (float-vector 94.494 35.657 -41.5) (float-vector 93.275 31.334 -41.5) (float-vector 89.771 27.785 -41.5) (float-vector 52.646 6.2216 -41.5) (float-vector 51.402 4.4775 -41.5) (float-vector 51.0 2.5137 -41.5) (float-vector 51.0 -28.5 -41.5) (float-vector 51.688 -31.032 -41.5) (float-vector 53.563 -32.866 -41.5) (float-vector 56.0 -33.5 -41.5) (float-vector 146.0 -33.5 -41.5) (float-vector 148.74 -34.315 -41.5) (float-vector 150.59 -36.521 -41.5) (float-vector 151.0 -38.5 -41.5) (float-vector 150.49 -40.708 -41.5) (float-vector 148.69 -42.713 -41.5) (float-vector 146.0 -43.5 -41.5) (float-vector 41.927 -43.5 -41.5) (float-vector 38.995 -43.08 -41.5) (float-vector 36.758 -41.147 -41.5) (float-vector 36.0 -38.5 -41.5) (float-vector 36.0 -36.386 -41.5) (float-vector 35.33 -33.886 -41.5) (float-vector 33.501 -32.056 -41.5) (float-vector -5.5024 -9.5249 -41.5) (float-vector -9.1331 -6.1308 -41.5)))
         (instance face :init :vertices (list (float-vector -9.1331 -6.1308 41.5) (float-vector -11.0 0.0 41.5) (float-vector -11.0 0.0 31.0) (float-vector -9.1331 -6.1308 31.0)))
         (instance face :init :vertices (list (float-vector -9.1331 -6.1308 -31.0) (float-vector -11.0 -5.684342e-14 -31.0) (float-vector -11.0 0.0 -41.5) (float-vector -9.1331 -6.1308 -41.5)))
         (instance face :init :vertices (list (float-vector -5.5024 -9.5249 41.5) (float-vector -9.1331 -6.1308 41.5) (float-vector -9.1331 -6.1308 31.0) (float-vector -5.5024 -9.5249 31.0)))
         (instance face :init :vertices (list (float-vector -5.5024 -9.5249 -31.0) (float-vector -9.1331 -6.1308 -31.0) (float-vector -9.1331 -6.1308 -41.5) (float-vector -5.5024 -9.5249 -41.5)))
         (instance face :init :vertices (list (float-vector 33.501 -32.056 41.5) (float-vector -5.5024 -9.5249 41.5) (float-vector -5.5024 -9.5249 31.0) (float-vector 33.0 -31.7666 31.0) (float-vector 33.0 -31.7666 -31.0) (float-vector -5.5024 -9.5249 -31.0) (float-vector -5.5024 -9.5249 -41.5) (float-vector 33.501 -32.056 -41.5)))
         (instance face :init :vertices (list (float-vector 35.33 -33.886 41.5) (float-vector 33.501 -32.056 41.5) (float-vector 33.501 -32.056 -41.5) (float-vector 35.33 -33.886 -41.5)))
         (instance face :init :vertices (list (float-vector 36.0 -36.386 41.5) (float-vector 35.33 -33.886 41.5) (float-vector 35.33 -33.886 -41.5) (float-vector 36.0 -36.386 -41.5)))
         (instance face :init :vertices (list (float-vector 36.0 -38.5 41.5) (float-vector 36.0 -36.386 41.5) (float-vector 36.0 -36.386 -41.5) (float-vector 36.0 -38.5 -41.5)))
         (instance face :init :vertices (list (float-vector 36.758 -41.147 41.5) (float-vector 36.0 -38.5 41.5) (float-vector 36.0 -38.5 -41.5) (float-vector 36.758 -41.147 -41.5)))
         (instance face :init :vertices (list (float-vector 38.995 -43.08 41.5) (float-vector 36.758 -41.147 41.5) (float-vector 36.758 -41.147 -41.5) (float-vector 38.995 -43.08 -41.5)))
         (instance face :init :vertices (list (float-vector 41.927 -43.5 41.5) (float-vector 38.995 -43.08 41.5) (float-vector 38.995 -43.08 -41.5) (float-vector 41.927 -43.5 -41.5)))
         (instance face :init :vertices (list (float-vector 146.0 -43.5 -26.5) (float-vector 71.0 -43.5 -26.5) (float-vector 67.4645 -43.5 -25.036) (float-vector 66.0 -43.5 -21.5) (float-vector 66.0 -43.5 21.5) (float-vector 67.4645 -43.5 25.036) (float-vector 71.0 -43.5 26.5) (float-vector 146.0 -43.5 26.5) (float-vector 146.0 -43.5 41.5) (float-vector 41.927 -43.5 41.5) (float-vector 41.927 -43.5 -41.5) (float-vector 146.0 -43.5 -41.5)))
         (instance face :init :vertices (list (float-vector 148.69 -42.713 41.5) (float-vector 146.0 -43.5 41.5) (float-vector 146.0 -43.5 26.5) (float-vector 148.69 -42.713 26.5)))
         (instance face :init :vertices (list (float-vector 148.69 -42.713 -26.5) (float-vector 146.0 -43.5 -26.5) (float-vector 146.0 -43.5 -41.5) (float-vector 148.69 -42.713 -41.5)))
         (instance face :init :vertices (list (float-vector 150.49 -40.708 41.5) (float-vector 148.69 -42.713 41.5) (float-vector 148.69 -42.713 26.5) (float-vector 150.49 -40.708 26.5)))
         (instance face :init :vertices (list (float-vector 150.49 -40.708 -26.5) (float-vector 148.69 -42.713 -26.5) (float-vector 148.69 -42.713 -41.5) (float-vector 150.49 -40.708 -41.5)))
         (instance face :init :vertices (list (float-vector 151.0 -38.5 41.5) (float-vector 150.49 -40.708 41.5) (float-vector 150.49 -40.708 26.5) (float-vector 151.0 -38.5 26.5)))
         (instance face :init :vertices (list (float-vector 151.0 -38.5 -26.5) (float-vector 150.49 -40.708 -26.5) (float-vector 150.49 -40.708 -41.5) (float-vector 151.0 -38.5 -41.5)))
         (instance face :init :vertices (list (float-vector 150.59 -36.521 41.5) (float-vector 151.0 -38.5 41.5) (float-vector 151.0 -38.5 26.5) (float-vector 150.59 -36.521 26.5)))
         (instance face :init :vertices (list (float-vector 150.59 -36.521 -26.5) (float-vector 151.0 -38.5 -26.5) (float-vector 151.0 -38.5 -41.5) (float-vector 150.59 -36.521 -41.5)))
         (instance face :init :vertices (list (float-vector 148.74 -34.315 41.5) (float-vector 150.59 -36.521 41.5) (float-vector 150.59 -36.521 26.5) (float-vector 148.74 -34.315 26.5)))
         (instance face :init :vertices (list (float-vector 148.74 -34.315 -26.5) (float-vector 150.59 -36.521 -26.5) (float-vector 150.59 -36.521 -41.5) (float-vector 148.74 -34.315 -41.5)))
         (instance face :init :vertices (list (float-vector 146.0 -33.5 41.5) (float-vector 148.74 -34.315 41.5) (float-vector 148.74 -34.315 26.5) (float-vector 146.0 -33.5 26.5)))
         (instance face :init :vertices (list (float-vector 146.0 -33.5 -26.5) (float-vector 148.74 -34.315 -26.5) (float-vector 148.74 -34.315 -41.5) (float-vector 146.0 -33.5 -41.5)))
         (instance face :init :vertices (list (float-vector 56.0 -33.5 41.5) (float-vector 146.0 -33.5 41.5) (float-vector 146.0 -33.5 26.5) (float-vector 71.0 -33.5 26.5) (float-vector 67.4645 -33.5 25.036) (float-vector 66.0 -33.5 21.5) (float-vector 66.0 -33.5 -21.5) (float-vector 67.4645 -33.5 -25.036) (float-vector 71.0 -33.5 -26.5) (float-vector 146.0 -33.5 -26.5) (float-vector 146.0 -33.5 -41.5) (float-vector 56.0 -33.5 -41.5)))
         (instance face :init :vertices (list (float-vector 53.563 -32.866 41.5) (float-vector 56.0 -33.5 41.5) (float-vector 56.0 -33.5 -41.5) (float-vector 53.563 -32.866 -41.5)))
         (instance face :init :vertices (list (float-vector 51.688 -31.032 41.5) (float-vector 53.563 -32.866 41.5) (float-vector 53.563 -32.866 -41.5) (float-vector 51.688 -31.032 -41.5)))
         (instance face :init :vertices (list (float-vector 51.0 -28.5 41.5) (float-vector 51.688 -31.032 41.5) (float-vector 51.688 -31.032 -41.5) (float-vector 51.0 -28.5 -41.5)))
         (instance face :init :vertices (list (float-vector 51.0 2.5137 41.5) (float-vector 51.0 -28.5 41.5) (float-vector 51.0 -28.5 -41.5) (float-vector 51.0 2.5137 -41.5)))
         (instance face :init :vertices (list (float-vector 51.402 4.4775 41.5) (float-vector 51.0 2.5137 41.5) (float-vector 51.0 2.5137 -41.5) (float-vector 51.402 4.4775 -41.5)))
         (instance face :init :vertices (list (float-vector 52.646 6.2216 41.5) (float-vector 51.402 4.4775 41.5) (float-vector 51.402 4.4775 -41.5) (float-vector 52.646 6.2216 -41.5)))
         (instance face :init :vertices (list (float-vector 89.771 27.785 41.5) (float-vector 52.646 6.2216 41.5) (float-vector 52.646 6.2216 -41.5) (float-vector 89.771 27.785 -41.5)))
         (instance face :init :vertices (list (float-vector 93.275 31.334 41.5) (float-vector 89.771 27.785 41.5) (float-vector 89.771 27.785 -41.5) (float-vector 93.275 31.334 -41.5)))
         (instance face :init :vertices (list (float-vector 94.494 35.657 41.5) (float-vector 93.275 31.334 41.5) (float-vector 93.275 31.334 -41.5) (float-vector 94.494 35.657 -41.5)))
         (instance face :init :vertices (list (float-vector 93.774 39.643 41.5) (float-vector 94.494 35.657 41.5) (float-vector 94.494 35.657 -41.5) (float-vector 93.774 39.643 -41.5)))
         (instance face :init :vertices (list (float-vector 90.227 45.946 41.5) (float-vector 93.774 39.643 41.5) (float-vector 93.774 39.643 -41.5) (float-vector 90.227 45.946 -41.5)))
         (instance face :init :vertices (list (float-vector 87.522 48.869 41.5) (float-vector 90.227 45.946 41.5) (float-vector 90.227 45.946 -41.5) (float-vector 87.522 48.869 -41.5)))
         (instance face :init :vertices (list (float-vector 82.433 50.446 41.5) (float-vector 87.522 48.869 41.5) (float-vector 87.522 48.869 -41.5) (float-vector 82.433 50.446 -41.5)))
         (instance face :init :vertices (list (float-vector 77.933 49.24 41.5) (float-vector 82.433 50.446 41.5) (float-vector 82.433 50.446 -41.5) (float-vector 77.933 49.24 -41.5)))
         (instance face :init :vertices (list (float-vector 42.451 28.755 41.5) (float-vector 77.933 49.24 41.5) (float-vector 77.933 49.24 -41.5) (float-vector 42.451 28.755 -41.5)))
         (instance face :init :vertices (list (float-vector 39.977 26.987 41.5) (float-vector 42.451 28.755 41.5) (float-vector 42.451 28.755 -41.5) (float-vector 39.977 26.987 -41.5)))
         (instance face :init :vertices (list (float-vector 37.861 23.439 41.5) (float-vector 39.977 26.987 41.5) (float-vector 39.977 26.987 -41.5) (float-vector 37.861 23.439 -41.5)))
         (instance face :init :vertices (list (float-vector 37.5 20.989 41.5) (float-vector 37.861 23.439 41.5) (float-vector 37.861 23.439 -41.5) (float-vector 37.5 20.989 -41.5)))
         (instance face :init :vertices (list (float-vector 37.5 11.0 41.5) (float-vector 37.5 20.989 41.5) (float-vector 37.5 20.989 -41.5) (float-vector 37.5 11.0 -41.5)))
         (instance face :init :vertices (list (float-vector 4.973799e-13 11.0 41.5) (float-vector 37.5 11.0 41.5) (float-vector 37.5 11.0 -41.5) (float-vector 4.547474e-13 11.0 -41.5) (float-vector 4.689582e-13 11.0 -31.0) (float-vector 33.0 11.0 -31.0) (float-vector 33.0 11.0 31.0) (float-vector 4.689582e-13 11.0 31.0)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 31.0) (float-vector -9.3292 5.8281 31.0) (float-vector -9.3292 5.8281 41.5) (float-vector -5.4227 9.5705 41.5)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 41.5) (float-vector 4.973799e-13 11.0 41.5) (float-vector 4.689582e-13 11.0 31.0) (float-vector -5.4227 9.5705 31.0)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 -41.5) (float-vector -9.3292 5.8281 -41.5) (float-vector -9.3292 5.8281 -31.0) (float-vector -5.4227 9.5705 -31.0)))
         (instance face :init :vertices (list (float-vector -5.4227 9.5705 -31.0) (float-vector 4.689582e-13 11.0 -31.0) (float-vector 4.547474e-13 11.0 -41.5) (float-vector -5.4227 9.5705 -41.5)))
         (instance face :init :vertices (list (float-vector 71.0 -43.5 -26.5) (float-vector 146.0 -43.5 -26.5) (float-vector 148.69 -42.713 -26.5) (float-vector 150.49 -40.708 -26.5) (float-vector 151.0 -38.5 -26.5) (float-vector 150.59 -36.521 -26.5) (float-vector 148.74 -34.315 -26.5) (float-vector 146.0 -33.5 -26.5) (float-vector 71.0 -33.5 -26.5)))
         (instance face :init :vertices (list (float-vector 67.4645 -43.5 -25.036) (float-vector 71.0 -43.5 -26.5) (float-vector 71.0 -33.5 -26.5) (float-vector 67.4645 -33.5 -25.036)))
         (instance face :init :vertices (list (float-vector 66.0 -43.5 -21.5) (float-vector 67.4645 -43.5 -25.036) (float-vector 67.4645 -33.5 -25.036) (float-vector 66.0 -33.5 -21.5)))
         (instance face :init :vertices (list (float-vector 66.0 -43.5 21.5) (float-vector 66.0 -43.5 -21.5) (float-vector 66.0 -33.5 -21.5) (float-vector 66.0 -33.5 21.5)))
         (instance face :init :vertices (list (float-vector 67.4645 -43.5 25.036) (float-vector 66.0 -43.5 21.5) (float-vector 66.0 -33.5 21.5) (float-vector 67.4645 -33.5 25.036)))
         (instance face :init :vertices (list (float-vector 71.0 -33.5 26.5) (float-vector 146.0 -33.5 26.5) (float-vector 148.74 -34.315 26.5) (float-vector 150.59 -36.521 26.5) (float-vector 151.0 -38.5 26.5) (float-vector 150.49 -40.708 26.5) (float-vector 148.69 -42.713 26.5) (float-vector 146.0 -43.5 26.5) (float-vector 71.0 -43.5 26.5)))
         (instance face :init :vertices (list (float-vector 71.0 -43.5 26.5) (float-vector 67.4645 -43.5 25.036) (float-vector 67.4645 -33.5 25.036) (float-vector 71.0 -33.5 26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-wrist-r :weight 242.426 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-finger
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 71.157 3.8775 -25.5) (float-vector 72.412 2.3529 -25.5) (float-vector 78.059 -8.2353 -25.5) (float-vector 78.647 -10.588 -25.5) (float-vector 77.688 -13.533 -25.5) (float-vector 76.0 -15.0 -25.5) (float-vector 73.647 -15.588 -25.5) (float-vector 70.798 -14.697 -25.5) (float-vector 69.235 -12.941 -25.5) (float-vector 65.169 -5.3178 -25.5) (float-vector 62.744 -3.082 -25.5) (float-vector 52.165 0.55403 -25.5) (float-vector 39.296 2.6768 -25.5) (float-vector 27.534 2.5814 -25.5) (float-vector 15.259 0.40218 -25.5) (float-vector 15.0 1.3681 -25.5) (float-vector 5.1163 -1.9439 -25.5) (float-vector 0.11625 -3.9439 -25.5) (float-vector -2.8837 -2.9439 -25.5) (float-vector -3.8837 -0.94392 -25.5) (float-vector -3.8837 1.0561 -25.5) (float-vector -2.0675 3.581 -25.5) (float-vector 6.8153 7.1956 -25.5) (float-vector 12.928 9.0952 -25.5) (float-vector 12.669 10.061 -25.5) (float-vector 23.525 12.202 -25.5) (float-vector 38.295 12.759 -25.5) (float-vector 51.906 10.901 -25.5) (float-vector 60.605 8.4561 -25.5)))
         (instance face :init :vertices (list (float-vector 72.412 2.3529 25.5) (float-vector 71.157 3.8775 25.5) (float-vector 60.605 8.4561 25.5) (float-vector 51.906 10.901 25.5) (float-vector 38.295 12.759 25.5) (float-vector 23.525 12.202 25.5) (float-vector 12.669 10.061 25.5) (float-vector 12.928 9.0952 25.5) (float-vector 6.8153 7.1956 25.5) (float-vector -2.0675 3.581 25.5) (float-vector -3.8837 1.0561 25.5) (float-vector -3.8837 -0.94392 25.5) (float-vector -2.8837 -2.9439 25.5) (float-vector 0.11625 -3.9439 25.5) (float-vector 5.1163 -1.9439 25.5) (float-vector 15.0 1.3681 25.5) (float-vector 15.259 0.40218 25.5) (float-vector 27.534 2.5814 25.5) (float-vector 39.296 2.6768 25.5) (float-vector 52.165 0.55403 25.5) (float-vector 62.744 -3.082 25.5) (float-vector 65.169 -5.3178 25.5) (float-vector 69.235 -12.941 25.5) (float-vector 70.798 -14.697 25.5) (float-vector 73.647 -15.588 25.5) (float-vector 76.0 -15.0 25.5) (float-vector 77.688 -13.533 25.5) (float-vector 78.647 -10.588 25.5) (float-vector 78.059 -8.2353 25.5)))
         (instance face :init :vertices (list (float-vector 71.157 3.8775 -25.5) (float-vector 71.157 3.8775 25.5) (float-vector 72.412 2.3529 25.5) (float-vector 72.412 2.3529 -25.5)))
         (instance face :init :vertices (list (float-vector 60.605 8.4561 -25.5) (float-vector 60.605 8.4561 25.5) (float-vector 71.157 3.8775 25.5) (float-vector 71.157 3.8775 -25.5)))
         (instance face :init :vertices (list (float-vector 51.906 10.901 -25.5) (float-vector 51.906 10.901 25.5) (float-vector 60.605 8.4561 25.5) (float-vector 60.605 8.4561 -25.5)))
         (instance face :init :vertices (list (float-vector 38.295 12.759 -25.5) (float-vector 38.295 12.759 25.5) (float-vector 51.906 10.901 25.5) (float-vector 51.906 10.901 -25.5)))
         (instance face :init :vertices (list (float-vector 23.525 12.202 -25.5) (float-vector 23.525 12.202 25.5) (float-vector 38.295 12.759 25.5) (float-vector 38.295 12.759 -25.5)))
         (instance face :init :vertices (list (float-vector 12.669 10.061 -25.5) (float-vector 12.669 10.061 25.5) (float-vector 23.525 12.202 25.5) (float-vector 23.525 12.202 -25.5)))
         (instance face :init :vertices (list (float-vector 12.928 9.0952 -25.5) (float-vector 12.928 9.0952 25.5) (float-vector 12.669 10.061 25.5) (float-vector 12.669 10.061 -25.5)))
         (instance face :init :vertices (list (float-vector 6.8153 7.1956 -25.5) (float-vector 6.8153 7.1956 25.5) (float-vector 12.928 9.0952 25.5) (float-vector 12.928 9.0952 -25.5)))
         (instance face :init :vertices (list (float-vector -2.0675 3.581 -25.5) (float-vector -2.0675 3.581 25.5) (float-vector 6.8153 7.1956 25.5) (float-vector 6.8153 7.1956 -25.5)))
         (instance face :init :vertices (list (float-vector -3.8837 1.0561 -25.5) (float-vector -3.8837 1.0561 25.5) (float-vector -2.0675 3.581 25.5) (float-vector -2.0675 3.581 -25.5)))
         (instance face :init :vertices (list (float-vector -3.8837 -0.94392 -25.5) (float-vector -3.8837 -0.94392 25.5) (float-vector -3.8837 1.0561 25.5) (float-vector -3.8837 1.0561 -25.5)))
         (instance face :init :vertices (list (float-vector -2.8837 -2.9439 -25.5) (float-vector -2.8837 -2.9439 25.5) (float-vector -3.8837 -0.94392 25.5) (float-vector -3.8837 -0.94392 -25.5)))
         (instance face :init :vertices (list (float-vector 0.11625 -3.9439 -25.5) (float-vector 0.11625 -3.9439 25.5) (float-vector -2.8837 -2.9439 25.5) (float-vector -2.8837 -2.9439 -25.5)))
         (instance face :init :vertices (list (float-vector 5.1163 -1.9439 -25.5) (float-vector 5.1163 -1.9439 25.5) (float-vector 0.11625 -3.9439 25.5) (float-vector 0.11625 -3.9439 -25.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.3681 -25.5) (float-vector 15.0 1.3681 25.5) (float-vector 5.1163 -1.9439 25.5) (float-vector 5.1163 -1.9439 -25.5)))
         (instance face :init :vertices (list (float-vector 15.259 0.40218 -25.5) (float-vector 15.259 0.40218 25.5) (float-vector 15.0 1.3681 25.5) (float-vector 15.0 1.3681 -25.5)))
         (instance face :init :vertices (list (float-vector 27.534 2.5814 -25.5) (float-vector 27.534 2.5814 25.5) (float-vector 15.259 0.40218 25.5) (float-vector 15.259 0.40218 -25.5)))
         (instance face :init :vertices (list (float-vector 39.296 2.6768 -25.5) (float-vector 39.296 2.6768 25.5) (float-vector 27.534 2.5814 25.5) (float-vector 27.534 2.5814 -25.5)))
         (instance face :init :vertices (list (float-vector 52.165 0.55403 -25.5) (float-vector 52.165 0.55403 25.5) (float-vector 39.296 2.6768 25.5) (float-vector 39.296 2.6768 -25.5)))
         (instance face :init :vertices (list (float-vector 62.744 -3.082 -25.5) (float-vector 62.744 -3.082 25.5) (float-vector 52.165 0.55403 25.5) (float-vector 52.165 0.55403 -25.5)))
         (instance face :init :vertices (list (float-vector 65.169 -5.3178 -25.5) (float-vector 65.169 -5.3178 25.5) (float-vector 62.744 -3.082 25.5) (float-vector 62.744 -3.082 -25.5)))
         (instance face :init :vertices (list (float-vector 69.235 -12.941 -25.5) (float-vector 69.235 -12.941 25.5) (float-vector 65.169 -5.3178 25.5) (float-vector 65.169 -5.3178 -25.5)))
         (instance face :init :vertices (list (float-vector 70.798 -14.697 -25.5) (float-vector 70.798 -14.697 25.5) (float-vector 69.235 -12.941 25.5) (float-vector 69.235 -12.941 -25.5)))
         (instance face :init :vertices (list (float-vector 73.647 -15.588 -25.5) (float-vector 73.647 -15.588 25.5) (float-vector 70.798 -14.697 25.5) (float-vector 70.798 -14.697 -25.5)))
         (instance face :init :vertices (list (float-vector 76.0 -15.0 -25.5) (float-vector 76.0 -15.0 25.5) (float-vector 73.647 -15.588 25.5) (float-vector 73.647 -15.588 -25.5)))
         (instance face :init :vertices (list (float-vector 77.688 -13.533 -25.5) (float-vector 77.688 -13.533 25.5) (float-vector 76.0 -15.0 25.5) (float-vector 76.0 -15.0 -25.5)))
         (instance face :init :vertices (list (float-vector 78.647 -10.588 -25.5) (float-vector 78.647 -10.588 25.5) (float-vector 77.688 -13.533 25.5) (float-vector 77.688 -13.533 -25.5)))
         (instance face :init :vertices (list (float-vector 78.059 -8.2353 -25.5) (float-vector 78.059 -8.2353 25.5) (float-vector 78.647 -10.588 25.5) (float-vector 78.647 -10.588 -25.5)))
         (instance face :init :vertices (list (float-vector 72.412 2.3529 -25.5) (float-vector 72.412 2.3529 25.5) (float-vector 78.059 -8.2353 25.5) (float-vector 78.059 -8.2353 -25.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-finger :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 0.0 80.348) (float-vector 40.0 -31.085 80.499) (float-vector 40.0 -34.0 77.5) (float-vector 40.0 -34.0 52.0) (float-vector 40.0 -31.0 49.0) (float-vector 40.0 -24.0 47.0) (float-vector 40.0 -24.0 18.3468) (float-vector 40.0 -15.5 26.8468) (float-vector 40.0 4.263256e-14 31.0) (float-vector 40.0 15.5 26.8468) (float-vector 40.0 24.0 18.3468) (float-vector 40.0 24.0 47.0) (float-vector 40.0 31.0 49.0) (float-vector 40.0 34.0 52.0) (float-vector 40.0 34.0 77.5) (float-vector 40.0 31.085 80.499)))
         (instance face :init :vertices (list (float-vector -80.0 31.085 80.499) (float-vector -80.0 0.0 80.348) (float-vector 40.0 0.0 80.348) (float-vector 40.0 31.085 80.499)))
         (instance face :init :vertices (list (float-vector -80.0 -31.085 80.499) (float-vector 40.0 -31.085 80.499) (float-vector 40.0 0.0 80.348) (float-vector -80.0 0.0 80.348)))
         (instance face :init :vertices (list (float-vector -80.0 -34.0 77.5) (float-vector 40.0 -34.0 77.5) (float-vector 40.0 -31.085 80.499) (float-vector -80.0 -31.085 80.499)))
         (instance face :init :vertices (list (float-vector -80.0 -34.0 52.0) (float-vector 40.0 -34.0 52.0) (float-vector 40.0 -34.0 77.5) (float-vector -80.0 -34.0 77.5)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 49.0) (float-vector 40.0 -31.0 49.0) (float-vector 40.0 -34.0 52.0) (float-vector -80.0 -34.0 52.0)))
         (instance face :init :vertices (list (float-vector -80.0 -24.0 47.0) (float-vector 40.0 -24.0 47.0) (float-vector 40.0 -31.0 49.0) (float-vector -80.0 -31.0 49.0)))
         (instance face :init :vertices (list (float-vector -80.0 -24.0 18.3468) (float-vector -35.0 -24.0 18.3468) (float-vector -35.0 -24.0 36.4) (float-vector 35.0 -24.0 36.4) (float-vector 35.0 -24.0 18.3468) (float-vector 40.0 -24.0 18.3468) (float-vector 40.0 -24.0 47.0) (float-vector -80.0 -24.0 47.0)))
         (instance face :init :vertices (list (float-vector 35.0 24.0 18.3468) (float-vector 35.0 24.0 36.4) (float-vector -35.0 24.0 36.4) (float-vector -35.0 24.0 18.3468) (float-vector -80.0 24.0 18.3468) (float-vector -80.0 24.0 47.0) (float-vector 40.0 24.0 47.0) (float-vector 40.0 24.0 18.3468)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 49.0) (float-vector 40.0 31.0 49.0) (float-vector 40.0 24.0 47.0) (float-vector -80.0 24.0 47.0)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 52.0) (float-vector 40.0 34.0 52.0) (float-vector 40.0 31.0 49.0) (float-vector -80.0 31.0 49.0)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 77.5) (float-vector 40.0 34.0 77.5) (float-vector 40.0 34.0 52.0) (float-vector -80.0 34.0 52.0)))
         (instance face :init :vertices (list (float-vector -80.0 31.085 80.499) (float-vector 40.0 31.085 80.499) (float-vector 40.0 34.0 77.5) (float-vector -80.0 34.0 77.5)))
         (instance face :init :vertices (list (float-vector -80.0 -15.5 -26.8468) (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -24.0 18.3468) (float-vector -80.0 -24.0 47.0) (float-vector -80.0 -31.0 49.0) (float-vector -80.0 -34.0 52.0) (float-vector -80.0 -34.0 77.5) (float-vector -80.0 -31.085 80.499) (float-vector -80.0 0.0 80.348) (float-vector -80.0 31.085 80.499) (float-vector -80.0 34.0 77.5) (float-vector -80.0 34.0 52.0) (float-vector -80.0 31.0 49.0) (float-vector -80.0 24.0 47.0) (float-vector -80.0 24.0 18.3468) (float-vector -80.0 26.8468 15.5) (float-vector -80.0 31.0 0.0) (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 15.5 -26.8468) (float-vector -80.0 0.0 -31.0)))
         (instance face :init :vertices (list (float-vector 45.0 0.0 -31.0) (float-vector 45.0 -15.5 -26.8468) (float-vector 35.0 -15.5 -26.8468) (float-vector 35.0 0.0 -31.0)))
         (instance face :init :vertices (list (float-vector -35.0 0.0 -31.0) (float-vector -35.0 -15.5 -26.8468) (float-vector -80.0 -15.5 -26.8468) (float-vector -80.0 0.0 -31.0)))
         (instance face :init :vertices (list (float-vector 45.0 15.5 -26.8468) (float-vector 45.0 26.8468 -15.5) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 15.5 26.8468) (float-vector 45.0 4.263256e-14 31.0) (float-vector 45.0 -15.5 26.8468) (float-vector 45.0 -26.8468 15.5) (float-vector 45.0 -31.0 1.136868e-13) (float-vector 45.0 -26.8468 -15.5) (float-vector 45.0 -15.5 -26.8468) (float-vector 45.0 0.0 -31.0)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -15.5 -26.8468) (float-vector -35.0 -15.5 -26.8468) (float-vector -35.0 -26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 -15.5) (float-vector 35.0 -15.5 -26.8468) (float-vector 45.0 -15.5 -26.8468) (float-vector 45.0 -26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 -15.5) (float-vector -35.0 -26.8468 -15.5) (float-vector -35.0 -31.0 1.136868e-13)))
         (instance face :init :vertices (list (float-vector 35.0 -31.0 1.136868e-13) (float-vector 35.0 -26.8468 -15.5) (float-vector 45.0 -26.8468 -15.5) (float-vector 45.0 -31.0 1.136868e-13)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -31.0 0.0) (float-vector -35.0 -31.0 1.136868e-13) (float-vector -35.0 -26.8468 15.5)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 15.5) (float-vector 35.0 -31.0 1.136868e-13) (float-vector 45.0 -31.0 1.136868e-13) (float-vector 45.0 -26.8468 15.5)))
         (instance face :init :vertices (list (float-vector -35.0 -26.8468 15.5) (float-vector -35.0 -24.0 18.3468) (float-vector -80.0 -24.0 18.3468) (float-vector -80.0 -26.8468 15.5)))
         (instance face :init :vertices (list (float-vector 40.0 -15.5 26.8468) (float-vector 40.0 -24.0 18.3468) (float-vector 35.0 -24.0 18.3468) (float-vector 35.0 -26.8468 15.5) (float-vector 45.0 -26.8468 15.5) (float-vector 45.0 -15.5 26.8468)))
         (instance face :init :vertices (list (float-vector 40.0 4.263256e-14 31.0) (float-vector 40.0 -15.5 26.8468) (float-vector 45.0 -15.5 26.8468) (float-vector 45.0 4.263256e-14 31.0)))
         (instance face :init :vertices (list (float-vector 40.0 15.5 26.8468) (float-vector 40.0 4.263256e-14 31.0) (float-vector 45.0 4.263256e-14 31.0) (float-vector 45.0 15.5 26.8468)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 15.5) (float-vector -80.0 24.0 18.3468) (float-vector -35.0 24.0 18.3468) (float-vector -35.0 26.8468 15.5)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 15.5) (float-vector 35.0 24.0 18.3468) (float-vector 40.0 24.0 18.3468) (float-vector 40.0 15.5 26.8468) (float-vector 45.0 15.5 26.8468) (float-vector 45.0 26.8468 15.5)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 0.0) (float-vector -80.0 26.8468 15.5) (float-vector -35.0 26.8468 15.5) (float-vector -35.0 31.0 0.0)))
         (instance face :init :vertices (list (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 15.5) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 31.0 0.0)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 31.0 0.0) (float-vector -35.0 31.0 0.0) (float-vector -35.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 -15.5) (float-vector 35.0 31.0 0.0) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector -35.0 15.5 -26.8468) (float-vector -35.0 0.0 -31.0) (float-vector -80.0 0.0 -31.0) (float-vector -80.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector 45.0 15.5 -26.8468) (float-vector 45.0 0.0 -31.0) (float-vector 35.0 0.0 -31.0) (float-vector 35.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector -80.0 15.5 -26.8468) (float-vector -80.0 26.8468 -15.5) (float-vector -35.0 26.8468 -15.5) (float-vector -35.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector 35.0 15.5 -26.8468) (float-vector 35.0 26.8468 -15.5) (float-vector 45.0 26.8468 -15.5) (float-vector 45.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector -35.0 -24.0 36.4) (float-vector -35.0 -24.0 18.3468) (float-vector -35.0 -26.8468 15.5) (float-vector -35.0 -31.0 1.136868e-13) (float-vector -35.0 -26.8468 -15.5) (float-vector -35.0 -15.5 -26.8468) (float-vector -35.0 0.0 -31.0) (float-vector -35.0 15.5 -26.8468) (float-vector -35.0 26.8468 -15.5) (float-vector -35.0 31.0 0.0) (float-vector -35.0 26.8468 15.5) (float-vector -35.0 24.0 18.3468) (float-vector -35.0 24.0 36.4)))
         (instance face :init :vertices (list (float-vector 35.0 -24.0 36.4) (float-vector -35.0 -24.0 36.4) (float-vector -35.0 24.0 36.4) (float-vector 35.0 24.0 36.4)))
         (instance face :init :vertices (list (float-vector 35.0 24.0 36.4) (float-vector 35.0 24.0 18.3468) (float-vector 35.0 26.8468 15.5) (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 -15.5) (float-vector 35.0 15.5 -26.8468) (float-vector 35.0 0.0 -31.0) (float-vector 35.0 -15.5 -26.8468) (float-vector 35.0 -26.8468 -15.5) (float-vector 35.0 -31.0 1.136868e-13) (float-vector 35.0 -26.8468 15.5) (float-vector 35.0 -24.0 18.3468) (float-vector 35.0 -24.0 36.4)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink23 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-y :weight 1136.38 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.5 -37.0 26.8468) (float-vector 0.0 -37.0 31.0) (float-vector -15.5 -37.0 26.8468) (float-vector -26.8468 -37.0 15.5) (float-vector -31.0 -37.0 2.464695e-14) (float-vector -26.8468 -37.0 -15.5) (float-vector -15.5 -37.0 -26.8468) (float-vector 0.0 -37.0 -31.0) (float-vector 15.5 -37.0 -26.8468) (float-vector 26.8468 -37.0 -15.5) (float-vector 31.0 -37.0 -6.195044e-14) (float-vector 26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 0.0 37.0 31.0) (float-vector 15.5 37.0 26.8468) (float-vector 26.8468 37.0 15.5) (float-vector 31.0 37.0 -6.195044e-14) (float-vector 26.8468 37.0 -15.5) (float-vector 15.5 37.0 -26.8468) (float-vector 0.0 37.0 -31.0) (float-vector -15.5 37.0 -26.8468) (float-vector -26.8468 37.0 -15.5) (float-vector -31.0 37.0 2.464695e-14) (float-vector -26.8468 37.0 15.5) (float-vector -15.5 37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 15.5 -37.0 26.8468) (float-vector 15.5 37.0 26.8468) (float-vector 0.0 37.0 31.0) (float-vector 0.0 -37.0 31.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -37.0 15.5) (float-vector 26.8468 37.0 15.5) (float-vector 15.5 37.0 26.8468) (float-vector 15.5 -37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 31.0 -37.0 -6.195044e-14) (float-vector 31.0 37.0 -6.195044e-14) (float-vector 26.8468 37.0 15.5) (float-vector 26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -37.0 -15.5) (float-vector 26.8468 37.0 -15.5) (float-vector 31.0 37.0 -6.195044e-14) (float-vector 31.0 -37.0 -6.195044e-14)))
         (instance face :init :vertices (list (float-vector 15.5 -37.0 -26.8468) (float-vector 15.5 37.0 -26.8468) (float-vector 26.8468 37.0 -15.5) (float-vector 26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector 0.0 -37.0 -31.0) (float-vector 0.0 37.0 -31.0) (float-vector 15.5 37.0 -26.8468) (float-vector 15.5 -37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -15.5 -37.0 -26.8468) (float-vector -15.5 37.0 -26.8468) (float-vector 0.0 37.0 -31.0) (float-vector 0.0 -37.0 -31.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -37.0 -15.5) (float-vector -26.8468 37.0 -15.5) (float-vector -15.5 37.0 -26.8468) (float-vector -15.5 -37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -31.0 -37.0 2.464695e-14) (float-vector -31.0 37.0 2.464695e-14) (float-vector -26.8468 37.0 -15.5) (float-vector -26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -37.0 15.5) (float-vector -26.8468 37.0 15.5) (float-vector -31.0 37.0 2.464695e-14) (float-vector -31.0 -37.0 2.464695e-14)))
         (instance face :init :vertices (list (float-vector -15.5 -37.0 26.8468) (float-vector -15.5 37.0 26.8468) (float-vector -26.8468 37.0 15.5) (float-vector -26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 0.0 -37.0 31.0) (float-vector 0.0 37.0 31.0) (float-vector -15.5 37.0 26.8468) (float-vector -15.5 -37.0 26.8468)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink24 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-r :weight 729.538 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.5) (float-vector 35.0 -250.0 50.7215) (float-vector 16.0 -250.0 50.6893) (float-vector 15.7469 -251.0 50.6897) (float-vector -55.7021 -251.0 50.5686) (float-vector -56.0 -250.0 50.5673) (float-vector -60.0 -250.0 50.5605) (float-vector -98.0 2.842171e-13 50.2904) (float-vector -94.0 3.410605e-13 50.2972) (float-vector -93.38 15.943 50.2851) (float-vector -88.142 25.142 50.2864) (float-vector -79.0 31.0 50.2971) (float-vector -1.364242e-12 31.0 50.4309) (float-vector 11.896 28.627 50.453) (float-vector 24.875 18.5 50.4834) (float-vector 31.0 3.979039e-13 50.509) (float-vector 35.0 3.410605e-13 50.5157) (float-vector 35.0 -93.96 50.5) (float-vector -36.66 -93.96 50.5) (float-vector 15.32 -223.5 50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.5) (float-vector 15.32 -223.5 50.5) (float-vector 15.32 -223.5 -50.5) (float-vector 35.0 -223.5 -50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 -50.5) (float-vector 15.32 -223.5 -50.5) (float-vector -36.66 -93.96 -50.5) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 3.410605e-13 -50.7723) (float-vector 31.0 3.979039e-13 -50.7791) (float-vector 24.875 18.5 -50.8047) (float-vector 11.896 28.627 -50.835) (float-vector -1.364242e-12 31.0 -50.8571) (float-vector -79.0 31.0 -50.991) (float-vector -88.142 25.142 -51.0017) (float-vector -93.38 15.943 -51.003) (float-vector -94.0 3.410605e-13 -50.9909) (float-vector -98.0 3.410605e-13 -50.9977) (float-vector -60.0 -250.0 -50.7275) (float-vector -56.0 -250.0 -50.7208) (float-vector -55.7021 -251.0 -50.7194) (float-vector 15.7469 -251.0 -50.5984) (float-vector 16.0 -250.0 -50.5988) (float-vector 35.0 -250.0 -50.5666)))
         (instance face :init :vertices (list (float-vector -36.66 -93.96 -50.5) (float-vector 15.32 -223.5 -50.5) (float-vector 15.32 -223.5 50.5) (float-vector -36.66 -93.96 50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.96 -50.5) (float-vector -36.66 -93.96 -50.5) (float-vector -36.66 -93.96 50.5) (float-vector 35.0 -93.96 50.5)))
         (instance face :init :vertices (list (float-vector 16.0 -250.0 58.5) (float-vector 16.0 -250.0 50.6893) (float-vector 35.0 -250.0 50.7215) (float-vector 35.0 -250.0 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -250.0 -58.5) (float-vector 35.0 -250.0 -50.5666) (float-vector 16.0 -250.0 -50.5988) (float-vector 16.0 -250.0 -58.5)))
         (instance face :init :vertices (list (float-vector 16.0 -250.0 58.5) (float-vector 35.0 -250.0 58.5) (float-vector 35.0 3.410605e-13 58.5) (float-vector 31.0 3.979039e-13 58.5) (float-vector 24.875 18.5 58.5) (float-vector 11.896 28.627 58.5) (float-vector -1.364242e-12 31.0 58.5) (float-vector -79.0 31.0 58.5) (float-vector -88.142 25.142 58.5) (float-vector -93.38 15.943 58.5) (float-vector -94.0 3.410605e-13 58.5) (float-vector -98.0 2.842171e-13 58.5) (float-vector -60.0 -250.0 58.5) (float-vector -56.0 -250.0 58.5) (float-vector -50.132 -269.7 58.5) (float-vector -36.535 -281.98 58.5) (float-vector -20.0 -286.0 58.5) (float-vector -2.7744 -281.61 58.5) (float-vector 11.664 -267.13 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -250.0 -58.5) (float-vector 16.0 -250.0 -58.5) (float-vector 11.664 -267.13 -58.5) (float-vector -2.7744 -281.61 -58.5) (float-vector -20.0 -286.0 -58.5) (float-vector -36.535 -281.98 -58.5) (float-vector -50.132 -269.7 -58.5) (float-vector -56.0 -250.0 -58.5) (float-vector -60.0 -250.0 -58.5) (float-vector -98.0 3.410605e-13 -58.5) (float-vector -94.0 3.410605e-13 -58.5) (float-vector -93.38 15.943 -58.5) (float-vector -88.142 25.142 -58.5) (float-vector -79.0 31.0 -58.5) (float-vector -1.364242e-12 31.0 -58.5) (float-vector 11.896 28.627 -58.5) (float-vector 24.875 18.5 -58.5) (float-vector 31.0 3.979039e-13 -58.5) (float-vector 35.0 3.410605e-13 -58.5)))
         (instance face :init :vertices (list (float-vector 35.0 3.410605e-13 58.5) (float-vector 35.0 -250.0 58.5) (float-vector 35.0 -250.0 50.7215) (float-vector 35.0 -223.5 50.5) (float-vector 35.0 -223.5 -50.5) (float-vector 35.0 -250.0 -50.5666) (float-vector 35.0 -250.0 -58.5) (float-vector 35.0 3.410605e-13 -58.5) (float-vector 35.0 3.410605e-13 -50.7723) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 -93.96 50.5) (float-vector 35.0 3.410605e-13 50.5157)))
         (instance face :init :vertices (list (float-vector 31.0 3.979039e-13 58.5) (float-vector 35.0 3.410605e-13 58.5) (float-vector 35.0 3.410605e-13 50.5157) (float-vector 31.0 3.979039e-13 50.509)))
         (instance face :init :vertices (list (float-vector 31.0 3.979039e-13 -50.7791) (float-vector 35.0 3.410605e-13 -50.7723) (float-vector 35.0 3.410605e-13 -58.5) (float-vector 31.0 3.979039e-13 -58.5)))
         (instance face :init :vertices (list (float-vector 24.875 18.5 58.5) (float-vector 31.0 3.979039e-13 58.5) (float-vector 31.0 3.979039e-13 50.509) (float-vector 24.875 18.5 50.4834)))
         (instance face :init :vertices (list (float-vector 24.875 18.5 -50.8047) (float-vector 31.0 3.979039e-13 -50.7791) (float-vector 31.0 3.979039e-13 -58.5) (float-vector 24.875 18.5 -58.5)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 58.5) (float-vector 24.875 18.5 58.5) (float-vector 24.875 18.5 50.4834) (float-vector 11.896 28.627 50.453)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 -50.835) (float-vector 24.875 18.5 -50.8047) (float-vector 24.875 18.5 -58.5) (float-vector 11.896 28.627 -58.5)))
         (instance face :init :vertices (list (float-vector -1.364242e-12 31.0 58.5) (float-vector 11.896 28.627 58.5) (float-vector 11.896 28.627 50.453) (float-vector -1.364242e-12 31.0 50.4309)))
         (instance face :init :vertices (list (float-vector -1.364242e-12 31.0 -50.8571) (float-vector 11.896 28.627 -50.835) (float-vector 11.896 28.627 -58.5) (float-vector -1.364242e-12 31.0 -58.5)))
         (instance face :init :vertices (list (float-vector -79.0 31.0 58.5) (float-vector -1.364242e-12 31.0 58.5) (float-vector -1.364242e-12 31.0 50.4309) (float-vector -79.0 31.0 50.2971)))
         (instance face :init :vertices (list (float-vector -79.0 31.0 -50.991) (float-vector -1.364242e-12 31.0 -50.8571) (float-vector -1.364242e-12 31.0 -58.5) (float-vector -79.0 31.0 -58.5)))
         (instance face :init :vertices (list (float-vector -88.142 25.142 58.5) (float-vector -79.0 31.0 58.5) (float-vector -79.0 31.0 50.2971) (float-vector -88.142 25.142 50.2864)))
         (instance face :init :vertices (list (float-vector -88.142 25.142 -51.0017) (float-vector -79.0 31.0 -50.991) (float-vector -79.0 31.0 -58.5) (float-vector -88.142 25.142 -58.5)))
         (instance face :init :vertices (list (float-vector -93.38 15.943 58.5) (float-vector -88.142 25.142 58.5) (float-vector -88.142 25.142 50.2864) (float-vector -93.38 15.943 50.2851)))
         (instance face :init :vertices (list (float-vector -93.38 15.943 -51.003) (float-vector -88.142 25.142 -51.0017) (float-vector -88.142 25.142 -58.5) (float-vector -93.38 15.943 -58.5)))
         (instance face :init :vertices (list (float-vector -94.0 3.410605e-13 58.5) (float-vector -93.38 15.943 58.5) (float-vector -93.38 15.943 50.2851) (float-vector -94.0 3.410605e-13 50.2972)))
         (instance face :init :vertices (list (float-vector -94.0 3.410605e-13 -50.9909) (float-vector -93.38 15.943 -51.003) (float-vector -93.38 15.943 -58.5) (float-vector -94.0 3.410605e-13 -58.5)))
         (instance face :init :vertices (list (float-vector -98.0 2.842171e-13 58.5) (float-vector -94.0 3.410605e-13 58.5) (float-vector -94.0 3.410605e-13 50.2972) (float-vector -98.0 2.842171e-13 50.2904)))
         (instance face :init :vertices (list (float-vector -98.0 3.410605e-13 -50.9977) (float-vector -94.0 3.410605e-13 -50.9909) (float-vector -94.0 3.410605e-13 -58.5) (float-vector -98.0 3.410605e-13 -58.5)))
         (instance face :init :vertices (list (float-vector -60.0 -250.0 58.5) (float-vector -98.0 2.842171e-13 58.5) (float-vector -98.0 2.842171e-13 50.2904) (float-vector -60.0 -250.0 50.5605)))
         (instance face :init :vertices (list (float-vector -60.0 -250.0 -50.7275) (float-vector -98.0 3.410605e-13 -50.9977) (float-vector -98.0 3.410605e-13 -58.5) (float-vector -60.0 -250.0 -58.5)))
         (instance face :init :vertices (list (float-vector -56.0 -250.0 58.5) (float-vector -60.0 -250.0 58.5) (float-vector -60.0 -250.0 50.5605) (float-vector -56.0 -250.0 50.5673)))
         (instance face :init :vertices (list (float-vector -56.0 -250.0 -50.7208) (float-vector -60.0 -250.0 -50.7275) (float-vector -60.0 -250.0 -58.5) (float-vector -56.0 -250.0 -58.5)))
         (instance face :init :vertices (list (float-vector -50.132 -269.7 58.5) (float-vector -56.0 -250.0 58.5) (float-vector -56.0 -250.0 50.5673) (float-vector -55.7021 -251.0 50.5686) (float-vector -55.7021 -251.0 55.5) (float-vector -50.132 -269.7 55.5)))
         (instance face :init :vertices (list (float-vector -50.132 -269.7 -55.5) (float-vector -55.7021 -251.0 -55.5) (float-vector -55.7021 -251.0 -50.7194) (float-vector -56.0 -250.0 -50.7208) (float-vector -56.0 -250.0 -58.5) (float-vector -50.132 -269.7 -58.5)))
         (instance face :init :vertices (list (float-vector -36.535 -281.98 58.5) (float-vector -50.132 -269.7 58.5) (float-vector -50.132 -269.7 55.5) (float-vector -36.535 -281.98 55.5)))
         (instance face :init :vertices (list (float-vector -36.535 -281.98 -55.5) (float-vector -50.132 -269.7 -55.5) (float-vector -50.132 -269.7 -58.5) (float-vector -36.535 -281.98 -58.5)))
         (instance face :init :vertices (list (float-vector -20.0 -286.0 58.5) (float-vector -36.535 -281.98 58.5) (float-vector -36.535 -281.98 55.5) (float-vector -20.0 -286.0 55.5)))
         (instance face :init :vertices (list (float-vector -20.0 -286.0 -55.5) (float-vector -36.535 -281.98 -55.5) (float-vector -36.535 -281.98 -58.5) (float-vector -20.0 -286.0 -58.5)))
         (instance face :init :vertices (list (float-vector -2.7744 -281.61 58.5) (float-vector -20.0 -286.0 58.5) (float-vector -20.0 -286.0 55.5) (float-vector -2.7744 -281.61 55.5)))
         (instance face :init :vertices (list (float-vector -2.7744 -281.61 -55.5) (float-vector -20.0 -286.0 -55.5) (float-vector -20.0 -286.0 -58.5) (float-vector -2.7744 -281.61 -58.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 55.5) (float-vector 15.7469 -251.0 55.5) (float-vector 15.7469 -251.0 50.6897) (float-vector 16.0 -250.0 50.6893) (float-vector 16.0 -250.0 58.5) (float-vector 11.664 -267.13 58.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 58.5) (float-vector -2.7744 -281.61 58.5) (float-vector -2.7744 -281.61 55.5) (float-vector 11.664 -267.13 55.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 -58.5) (float-vector 16.0 -250.0 -58.5) (float-vector 16.0 -250.0 -50.5988) (float-vector 15.7469 -251.0 -50.5984) (float-vector 15.7469 -251.0 -55.5) (float-vector 11.664 -267.13 -55.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 -55.5) (float-vector -2.7744 -281.61 -55.5) (float-vector -2.7744 -281.61 -58.5) (float-vector 11.664 -267.13 -58.5)))
         (instance face :init :vertices (list (float-vector 15.7469 -251.0 55.5) (float-vector 11.664 -267.13 55.5) (float-vector -2.7744 -281.61 55.5) (float-vector -20.0 -286.0 55.5) (float-vector -36.535 -281.98 55.5) (float-vector -50.132 -269.7 55.5) (float-vector -55.7021 -251.0 55.5)))
         (instance face :init :vertices (list (float-vector -55.7021 -251.0 55.5) (float-vector -55.7021 -251.0 50.5686) (float-vector 15.7469 -251.0 50.6897) (float-vector 15.7469 -251.0 55.5)))
         (instance face :init :vertices (list (float-vector 15.7469 -251.0 -55.5) (float-vector 15.7469 -251.0 -50.5984) (float-vector -55.7021 -251.0 -50.7194) (float-vector -55.7021 -251.0 -55.5)))
         (instance face :init :vertices (list (float-vector -55.7021 -251.0 -55.5) (float-vector -50.132 -269.7 -55.5) (float-vector -36.535 -281.98 -55.5) (float-vector -20.0 -286.0 -55.5) (float-vector -2.7744 -281.61 -55.5) (float-vector 11.664 -267.13 -55.5) (float-vector 15.7469 -251.0 -55.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -93.9641 -58.5) (float-vector 38.0 -93.9641 -58.5) (float-vector 38.0 -223.5 -58.5) (float-vector 35.0 -223.5 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -93.9641 58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 35.0 -223.5 58.5) (float-vector 38.0 -223.5 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.9641 -58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 38.0 -93.9641 58.5) (float-vector 38.0 -93.9641 -58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 -58.5) (float-vector 35.0 -223.5 58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 35.0 -93.9641 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -223.5 -58.5) (float-vector 38.0 -223.5 58.5) (float-vector 35.0 -223.5 58.5) (float-vector 35.0 -223.5 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -93.9641 -58.5) (float-vector 38.0 -93.9641 58.5) (float-vector 38.0 -223.5 58.5) (float-vector 38.0 -223.5 -58.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (setq blink25 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-p :weight 2312.41 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 30.883 18.5 52.5) (float-vector 51.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 15.685 32.403 -52.5) (float-vector 15.685 32.403 52.5) (float-vector 30.883 18.5 52.5) (float-vector 30.883 18.5 -52.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 36.0 -52.5) (float-vector -5.684342e-14 36.0 52.5) (float-vector 15.685 32.403 52.5) (float-vector 15.685 32.403 -52.5)))
         (instance face :init :vertices (list (float-vector -17.622 31.392 -52.5) (float-vector -17.622 31.392 52.5) (float-vector -5.684342e-14 36.0 52.5) (float-vector -5.684342e-14 36.0 -52.5)))
         (instance face :init :vertices (list (float-vector -31.475 17.474 -52.5) (float-vector -31.475 17.474 52.5) (float-vector -17.622 31.392 52.5) (float-vector -17.622 31.392 -52.5)))
         (instance face :init :vertices (list (float-vector -36.0 0.0 -52.5) (float-vector -36.0 0.0 52.5) (float-vector -31.475 17.474 52.5) (float-vector -31.475 17.474 -52.5)))
         (instance face :init :vertices (list (float-vector -38.914 -20.556 -52.5) (float-vector -38.914 -20.556 52.5) (float-vector -36.0 0.0 52.5) (float-vector -36.0 0.0 -52.5)))
         (instance face :init :vertices (list (float-vector -42.835 -20.0 -52.5) (float-vector -42.835 -20.0 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -38.914 -20.556 -52.5)))
         (instance face :init :vertices (list (float-vector -68.0 -197.5 -52.5) (float-vector -68.0 -197.5 -44.5) (float-vector -63.8176 -168.0 -44.5) (float-vector -63.8176 -168.0 44.5) (float-vector -68.0 -197.5 44.5) (float-vector -68.0 -197.5 52.5) (float-vector -42.835 -20.0 52.5) (float-vector -42.835 -20.0 -52.5)))
         (instance face :init :vertices (list (float-vector -24.875 -268.5 52.5) (float-vector -68.0 -197.5 52.5) (float-vector -68.0 -197.5 44.5) (float-vector -24.875 -268.5 44.5)))
         (instance face :init :vertices (list (float-vector -24.875 -268.5 -52.5) (float-vector -24.875 -268.5 -44.5) (float-vector -68.0 -197.5 -44.5) (float-vector -68.0 -197.5 -52.5)))
         (instance face :init :vertices (list (float-vector -14.601 -277.35 52.5) (float-vector -24.875 -268.5 52.5) (float-vector -24.875 -268.5 44.5) (float-vector -14.601 -277.35 44.5)))
         (instance face :init :vertices (list (float-vector -14.601 -277.35 -52.5) (float-vector -14.601 -277.35 -44.5) (float-vector -24.875 -268.5 -44.5) (float-vector -24.875 -268.5 -52.5)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 -281.0 52.5) (float-vector -14.601 -277.35 52.5) (float-vector -14.601 -277.35 44.5) (float-vector 4.263256e-14 -281.0 44.5)))
         (instance face :init :vertices (list (float-vector 7.105427e-14 -281.0 -52.5) (float-vector 7.105427e-14 -281.0 -44.5) (float-vector -14.601 -277.35 -44.5) (float-vector -14.601 -277.35 -52.5)))
         (instance face :init :vertices (list (float-vector 13.815 -277.75 52.5) (float-vector 4.263256e-14 -281.0 52.5) (float-vector 4.263256e-14 -281.0 44.5) (float-vector 13.815 -277.75 44.5)))
         (instance face :init :vertices (list (float-vector 13.815 -277.75 -52.5) (float-vector 13.815 -277.75 -44.5) (float-vector 7.105427e-14 -281.0 -44.5) (float-vector 7.105427e-14 -281.0 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -250.0 52.5) (float-vector 13.815 -277.75 52.5) (float-vector 13.815 -277.75 44.5) (float-vector 51.0 -250.0 44.5)))
         (instance face :init :vertices (list (float-vector 51.0 -250.0 -52.5) (float-vector 51.0 -250.0 -44.5) (float-vector 13.815 -277.75 -44.5) (float-vector 13.815 -277.75 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -250.0 52.5) (float-vector 51.0 -250.0 52.5) (float-vector 51.0 -250.0 44.5) (float-vector 55.0 -250.0 44.5)))
         (instance face :init :vertices (list (float-vector 55.0 -250.0 -52.5) (float-vector 55.0 -250.0 -44.5) (float-vector 51.0 -250.0 -44.5) (float-vector 51.0 -250.0 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -250.0 52.5) (float-vector 55.0 -250.0 44.5) (float-vector 55.0 -168.0 44.5) (float-vector 55.0 -168.0 -44.5) (float-vector 55.0 -250.0 -44.5) (float-vector 55.0 -250.0 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 52.5) (float-vector 30.883 18.5 52.5) (float-vector 15.685 32.403 52.5) (float-vector -5.684342e-14 36.0 52.5) (float-vector -17.622 31.392 52.5) (float-vector -31.475 17.474 52.5) (float-vector -36.0 0.0 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -42.835 -20.0 52.5) (float-vector -68.0 -197.5 52.5) (float-vector -24.875 -268.5 52.5) (float-vector -14.601 -277.35 52.5) (float-vector 4.263256e-14 -281.0 52.5) (float-vector 13.815 -277.75 52.5) (float-vector 51.0 -250.0 52.5) (float-vector 55.0 -250.0 52.5) (float-vector 55.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -250.0 -52.5) (float-vector 51.0 -250.0 -52.5) (float-vector 13.815 -277.75 -52.5) (float-vector 7.105427e-14 -281.0 -52.5) (float-vector -14.601 -277.35 -52.5) (float-vector -24.875 -268.5 -52.5) (float-vector -68.0 -197.5 -52.5) (float-vector -42.835 -20.0 -52.5) (float-vector -38.914 -20.556 -52.5) (float-vector -36.0 0.0 -52.5) (float-vector -31.475 17.474 -52.5) (float-vector -17.622 31.392 -52.5) (float-vector -5.684342e-14 36.0 -52.5) (float-vector 15.685 32.403 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 51.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 51.0 -19.5 52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 44.5) (float-vector 55.0 -250.0 44.5) (float-vector 51.0 -250.0 44.5) (float-vector 13.815 -277.75 44.5) (float-vector 4.263256e-14 -281.0 44.5) (float-vector -14.601 -277.35 44.5) (float-vector -24.875 -268.5 44.5) (float-vector -68.0 -197.5 44.5) (float-vector -63.8176 -168.0 44.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 -44.5) (float-vector 55.0 -168.0 44.5) (float-vector -63.8176 -168.0 44.5) (float-vector -63.8176 -168.0 -44.5)))
         (instance face :init :vertices (list (float-vector -63.8176 -168.0 -44.5) (float-vector -68.0 -197.5 -44.5) (float-vector -24.875 -268.5 -44.5) (float-vector -14.601 -277.35 -44.5) (float-vector 7.105427e-14 -281.0 -44.5) (float-vector 13.815 -277.75 -44.5) (float-vector 51.0 -250.0 -44.5) (float-vector 55.0 -250.0 -44.5) (float-vector 55.0 -168.0 -44.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5) (float-vector 55.0 -168.0 -52.5) (float-vector 55.0 26.5 -52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 52.5) (float-vector 58.0 -168.0 52.5) (float-vector 58.0 26.5 52.5) (float-vector 55.0 26.5 52.5)))
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5) (float-vector 58.0 -168.0 52.5) (float-vector 55.0 -168.0 52.5) (float-vector 55.0 -168.0 -52.5)))
         (instance face :init :vertices (list (float-vector 58.0 26.5 -52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 -168.0 52.5) (float-vector 58.0 -168.0 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 26.5 -52.5) (float-vector 55.0 26.5 52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 -52.5) (float-vector 55.0 -168.0 52.5) (float-vector 55.0 26.5 52.5) (float-vector 55.0 26.5 -52.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray50)
     (setq blink26 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-knee-p :weight 1682.63 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 31.0 5.684342e-14 41.5) (float-vector 26.8468 15.5 41.5) (float-vector 15.5 26.8468 41.5) (float-vector 1.776357e-14 31.0 41.5) (float-vector -15.5 26.8468 41.5) (float-vector -26.8468 15.5 41.5) (float-vector -31.0 8.526513e-14 41.5) (float-vector -26.8468 -15.5 41.5) (float-vector -15.5 -26.8468 41.5) (float-vector -5.684342e-14 -31.0 41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector -5.684342e-14 -31.0 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -31.0 2.842171e-14 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector 1.776357e-14 31.0 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 26.8468 15.5 -41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 31.0 0.0 -41.5) (float-vector 31.0 5.684342e-14 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 -31.0 41.5) (float-vector -5.684342e-14 -31.0 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -5.684342e-14 -31.0 -41.5) (float-vector -5.684342e-14 -31.0 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -31.0 8.526513e-14 41.5) (float-vector -31.0 2.842171e-14 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -31.0 2.842171e-14 -41.5) (float-vector -31.0 8.526513e-14 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -26.8468 15.5 41.5)))
         (instance face :init :vertices (list (float-vector 1.776357e-14 31.0 41.5) (float-vector 1.776357e-14 31.0 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 1.776357e-14 31.0 -41.5) (float-vector 1.776357e-14 31.0 41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 5.684342e-14 41.5) (float-vector 31.0 0.0 -41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 26.8468 15.5 41.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink27 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-p :weight 1010.67 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-ankle-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 66.5 59.0 134.0) (float-vector 69.0 59.0 134.0) (float-vector 69.0 59.0 -74.0) (float-vector 66.5 59.0 -74.0) (float-vector 44.0 59.0 -42.0) (float-vector 44.0 59.0 55.0)))
         (instance face :init :vertices (list (float-vector 66.5 59.0 134.0) (float-vector 66.5 57.0 134.0) (float-vector 69.0 57.0 134.0) (float-vector 69.0 59.0 134.0)))
         (instance face :init :vertices (list (float-vector 66.5 57.0 134.0) (float-vector 44.0 57.0 55.0) (float-vector 44.0 57.0 -42.0) (float-vector 66.5 57.0 -74.0) (float-vector 69.0 57.0 -74.0) (float-vector 69.0 57.0 -40.0) (float-vector 50.5 57.0 -40.0) (float-vector 50.5 57.0 -35.0) (float-vector 69.0 57.0 -35.0) (float-vector 69.0 57.0 48.0) (float-vector 50.5 57.0 48.0) (float-vector 50.5 57.0 53.0) (float-vector 69.0 57.0 53.0) (float-vector 69.0 57.0 134.0)))
         (instance face :init :vertices (list (float-vector 69.0 59.0 -74.0) (float-vector 69.0 57.0 -74.0) (float-vector 66.5 57.0 -74.0) (float-vector 66.5 59.0 -74.0)))
         (instance face :init :vertices (list (float-vector 44.0 57.0 -42.0) (float-vector 44.0 59.0 -42.0) (float-vector 66.5 59.0 -74.0) (float-vector 66.5 57.0 -74.0)))
         (instance face :init :vertices (list (float-vector 44.0 57.0 55.0) (float-vector 44.0 59.0 55.0) (float-vector 44.0 59.0 -42.0) (float-vector 44.0 57.0 -42.0)))
         (instance face :init :vertices (list (float-vector 44.0 59.0 55.0) (float-vector 44.0 57.0 55.0) (float-vector 66.5 57.0 134.0) (float-vector 66.5 59.0 134.0)))
         (instance face :init :vertices (list (float-vector 50.5 -39.0 -35.0) (float-vector 50.5 -39.0 -40.0) (float-vector 50.5 -57.0 -40.0) (float-vector 50.5 -57.0 -35.0)))
         (instance face :init :vertices (list (float-vector 50.5 -39.0 -35.0) (float-vector 48.535 -31.578 -35.0) (float-vector 48.535 -31.578 -40.0) (float-vector 50.5 -39.0 -40.0)))
         (instance face :init :vertices (list (float-vector 48.535 -31.578 -35.0) (float-vector 43.154 -26.1 -35.0) (float-vector 43.154 -26.1 -40.0) (float-vector 48.535 -31.578 -40.0)))
         (instance face :init :vertices (list (float-vector 43.154 -26.1 -35.0) (float-vector 37.262 -24.104 -35.0) (float-vector 37.262 -24.104 -40.0) (float-vector 43.154 -26.1 -40.0)))
         (instance face :init :vertices (list (float-vector 37.262 -24.104 -35.0) (float-vector 18.2957 -24.0511 -35.0) (float-vector 18.2957 -24.0511 -40.0) (float-vector 37.262 -24.104 -40.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 -35.0) (float-vector 37.262 24.104 -40.0) (float-vector 18.2957 24.0511 -40.0) (float-vector 18.2957 24.0511 -35.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 -35.0) (float-vector 43.154 26.1 -35.0) (float-vector 43.154 26.1 -40.0) (float-vector 37.262 24.104 -40.0)))
         (instance face :init :vertices (list (float-vector 43.154 26.1 -35.0) (float-vector 48.535 31.578 -35.0) (float-vector 48.535 31.578 -40.0) (float-vector 43.154 26.1 -40.0)))
         (instance face :init :vertices (list (float-vector 48.535 31.578 -35.0) (float-vector 50.5 39.0 -35.0) (float-vector 50.5 39.0 -40.0) (float-vector 48.535 31.578 -40.0)))
         (instance face :init :vertices (list (float-vector 50.5 39.0 -35.0) (float-vector 50.5 57.0 -35.0) (float-vector 50.5 57.0 -40.0) (float-vector 50.5 39.0 -40.0)))
         (instance face :init :vertices (list (float-vector 69.0 57.0 -40.0) (float-vector 69.0 -57.0 -40.0) (float-vector 50.5 -57.0 -40.0) (float-vector 50.5 -39.0 -40.0) (float-vector 48.535 -31.578 -40.0) (float-vector 43.154 -26.1 -40.0) (float-vector 37.262 -24.104 -40.0) (float-vector 18.2957 -24.0511 -40.0) (float-vector 26.8468 -15.5 -40.0) (float-vector 31.0 -1.421085e-14 -40.0) (float-vector 26.8468 15.5 -40.0) (float-vector 18.2957 24.0511 -40.0) (float-vector 37.262 24.104 -40.0) (float-vector 43.154 26.1 -40.0) (float-vector 48.535 31.578 -40.0) (float-vector 50.5 39.0 -40.0) (float-vector 50.5 57.0 -40.0)))
         (instance face :init :vertices (list (float-vector 18.2957 24.0511 -35.0) (float-vector 26.8468 15.5 -35.0) (float-vector 31.0 -1.421085e-14 -35.0) (float-vector 26.8468 -15.5 -35.0) (float-vector 18.2957 -24.0511 -35.0) (float-vector 37.262 -24.104 -35.0) (float-vector 43.154 -26.1 -35.0) (float-vector 48.535 -31.578 -35.0) (float-vector 50.5 -39.0 -35.0) (float-vector 50.5 -57.0 -35.0) (float-vector 69.0 -57.0 -35.0) (float-vector 69.0 57.0 -35.0) (float-vector 50.5 57.0 -35.0) (float-vector 50.5 39.0 -35.0) (float-vector 48.535 31.578 -35.0) (float-vector 43.154 26.1 -35.0) (float-vector 37.262 24.104 -35.0)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 -35.0) (float-vector 26.8468 15.5 -30.0) (float-vector 31.0 0.0 -30.0) (float-vector 31.0 -1.421085e-14 -35.0)))
         (instance face :init :vertices (list (float-vector 31.0 -1.421085e-14 -40.0) (float-vector 31.0 0.0 -45.0) (float-vector 26.8468 15.5 -45.0) (float-vector 26.8468 15.5 -40.0)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 -45.0) (float-vector 15.5 26.8468 -45.0) (float-vector 15.5 26.8468 -30.0) (float-vector 26.8468 15.5 -30.0) (float-vector 26.8468 15.5 -35.0) (float-vector 18.2957 24.0511 -35.0) (float-vector 18.2957 24.0511 -40.0) (float-vector 26.8468 15.5 -40.0)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 -45.0) (float-vector 0.0 31.0 -45.0) (float-vector 0.0 31.0 -30.0) (float-vector 15.5 26.8468 -30.0)))
         (instance face :init :vertices (list (float-vector 0.0 31.0 -45.0) (float-vector -15.5 26.8468 -45.0) (float-vector -15.5 26.8468 -30.0) (float-vector 0.0 31.0 -30.0)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 -45.0) (float-vector -26.8468 15.5 -45.0) (float-vector -26.8468 15.5 -30.0) (float-vector -15.5 26.8468 -30.0)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 -45.0) (float-vector -31.0 4.263256e-14 -45.0) (float-vector -31.0 4.263256e-14 -30.0) (float-vector -26.8468 15.5 -30.0)))
         (instance face :init :vertices (list (float-vector -31.0 4.263256e-14 -45.0) (float-vector -26.8468 -15.5 -45.0) (float-vector -26.8468 -15.5 -30.0) (float-vector -31.0 4.263256e-14 -30.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 -45.0) (float-vector -15.5 -26.8468 -45.0) (float-vector -15.5 -26.8468 -30.0) (float-vector -26.8468 -15.5 -30.0)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 -45.0) (float-vector -5.684342e-14 -31.0 -45.0) (float-vector -5.684342e-14 -31.0 -30.0) (float-vector -15.5 -26.8468 -30.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 -31.0 -45.0) (float-vector 15.5 -26.8468 -45.0) (float-vector 15.5 -26.8468 -30.0) (float-vector -5.684342e-14 -31.0 -30.0)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 -45.0) (float-vector 26.8468 -15.5 -45.0) (float-vector 26.8468 -15.5 -40.0) (float-vector 18.2957 -24.0511 -40.0) (float-vector 18.2957 -24.0511 -35.0) (float-vector 26.8468 -15.5 -35.0) (float-vector 26.8468 -15.5 -30.0) (float-vector 15.5 -26.8468 -30.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 -30.0) (float-vector 31.0 0.0 -30.0) (float-vector 26.8468 15.5 -30.0) (float-vector 15.5 26.8468 -30.0) (float-vector 0.0 31.0 -30.0) (float-vector -15.5 26.8468 -30.0) (float-vector -26.8468 15.5 -30.0) (float-vector -31.0 4.263256e-14 -30.0) (float-vector -26.8468 -15.5 -30.0) (float-vector -15.5 -26.8468 -30.0) (float-vector -5.684342e-14 -31.0 -30.0) (float-vector 15.5 -26.8468 -30.0)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 -30.0) (float-vector 26.8468 -15.5 -30.0) (float-vector 26.8468 -15.5 -35.0) (float-vector 31.0 -1.421085e-14 -35.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 -45.0) (float-vector 31.0 0.0 -45.0) (float-vector 31.0 -1.421085e-14 -40.0) (float-vector 26.8468 -15.5 -40.0)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 -45.0) (float-vector 26.8468 -15.5 -45.0) (float-vector 15.5 -26.8468 -45.0) (float-vector -5.684342e-14 -31.0 -45.0) (float-vector -15.5 -26.8468 -45.0) (float-vector -26.8468 -15.5 -45.0) (float-vector -31.0 4.263256e-14 -45.0) (float-vector -26.8468 15.5 -45.0) (float-vector -15.5 26.8468 -45.0) (float-vector 0.0 31.0 -45.0) (float-vector 15.5 26.8468 -45.0) (float-vector 26.8468 15.5 -45.0)))
         (instance face :init :vertices (list (float-vector 73.0 -70.0 -80.0) (float-vector 67.0 -70.0 -80.0) (float-vector 67.0 70.0 -80.0) (float-vector 73.0 70.0 -80.0)))
         (instance face :init :vertices (list (float-vector 73.0 -70.0 -80.0) (float-vector 73.0 -70.0 140.0) (float-vector 67.0 -70.0 140.0) (float-vector 67.0 -70.0 -80.0)))
         (instance face :init :vertices (list (float-vector 73.0 -70.0 140.0) (float-vector 73.0 70.0 140.0) (float-vector 67.0 70.0 140.0) (float-vector 67.0 -70.0 140.0)))
         (instance face :init :vertices (list (float-vector 67.0 70.0 140.0) (float-vector 67.0 70.0 -80.0) (float-vector 67.0 -70.0 -80.0) (float-vector 67.0 -70.0 140.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 67.0 -67.0 -77.0) (float-vector 67.0 67.0 -77.0) (float-vector 67.0 67.0 137.0) (float-vector 67.0 -67.0 137.0)))
))
         (instance face :init :vertices (list (float-vector 73.0 70.0 140.0) (float-vector 73.0 70.0 -80.0) (float-vector 67.0 70.0 -80.0) (float-vector 67.0 70.0 140.0)))
         (instance face :init :vertices (list (float-vector 73.0 70.0 -80.0) (float-vector 73.0 70.0 140.0) (float-vector 73.0 -70.0 140.0) (float-vector 73.0 -70.0 -80.0)))
         (instance face :init :vertices (list (float-vector 67.0 -67.0 -77.0) (float-vector 69.0 -67.0 -77.0) (float-vector 69.0 67.0 -77.0) (float-vector 67.0 67.0 -77.0)))
         (instance face :init :vertices (list (float-vector 67.0 -67.0 137.0) (float-vector 69.0 -67.0 137.0) (float-vector 69.0 -67.0 -77.0) (float-vector 67.0 -67.0 -77.0)))
         (instance face :init :vertices (list (float-vector 67.0 67.0 137.0) (float-vector 69.0 67.0 137.0) (float-vector 69.0 -67.0 137.0) (float-vector 67.0 -67.0 137.0)))
         (instance face :init :vertices (list (float-vector 69.0 -57.0 48.0) (float-vector 69.0 57.0 48.0) (float-vector 69.0 57.0 -35.0) (float-vector 69.0 -57.0 -35.0)))
         (instance face :init :vertices (list (float-vector 69.0 67.0 137.0) (float-vector 69.0 67.0 -77.0) (float-vector 69.0 -67.0 -77.0) (float-vector 69.0 -67.0 137.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 69.0 57.0 53.0) (float-vector 69.0 -57.0 53.0) (float-vector 69.0 -57.0 134.0) (float-vector 69.0 -59.0 134.0) (float-vector 69.0 -59.0 -74.0) (float-vector 69.0 -57.0 -74.0) (float-vector 69.0 -57.0 -40.0) (float-vector 69.0 57.0 -40.0) (float-vector 69.0 57.0 -74.0) (float-vector 69.0 59.0 -74.0) (float-vector 69.0 59.0 134.0) (float-vector 69.0 57.0 134.0)))
))
         (instance face :init :vertices (list (float-vector 69.0 67.0 -77.0) (float-vector 69.0 67.0 137.0) (float-vector 67.0 67.0 137.0) (float-vector 67.0 67.0 -77.0)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 47.5) (float-vector 26.8468 -15.5 47.5) (float-vector 15.5 -26.8468 47.5) (float-vector 0.0 -31.0 47.5) (float-vector -15.5 -26.8468 47.5) (float-vector -26.8468 -15.5 47.5) (float-vector -31.0 2.842171e-14 47.5) (float-vector -26.8468 15.5 47.5) (float-vector -15.5 26.8468 47.5) (float-vector 5.684342e-14 31.0 47.5) (float-vector 15.5 26.8468 47.5) (float-vector 26.8468 15.5 47.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 47.5) (float-vector 31.0 0.0 48.0) (float-vector 26.8468 -15.5 48.0) (float-vector 26.8468 -15.5 47.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 89.5) (float-vector 26.8468 -15.5 89.5) (float-vector 26.8468 -15.5 53.0) (float-vector 31.0 0.0 53.0)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 89.5) (float-vector 26.8468 15.5 89.5) (float-vector 15.5 26.8468 89.5) (float-vector 8.526513e-14 31.0 89.5) (float-vector -15.5 26.8468 89.5) (float-vector -26.8468 15.5 89.5) (float-vector -31.0 4.263256e-14 89.5) (float-vector -26.8468 -15.5 89.5) (float-vector -15.5 -26.8468 89.5) (float-vector 0.0 -31.0 89.5) (float-vector 15.5 -26.8468 89.5) (float-vector 26.8468 -15.5 89.5)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 89.5) (float-vector 15.5 -26.8468 47.5) (float-vector 26.8468 -15.5 47.5) (float-vector 26.8468 -15.5 48.0) (float-vector 18.2957 -24.0511 48.0) (float-vector 18.2957 -24.0511 53.0) (float-vector 26.8468 -15.5 53.0) (float-vector 26.8468 -15.5 89.5)))
         (instance face :init :vertices (list (float-vector 0.0 -31.0 89.5) (float-vector 0.0 -31.0 47.5) (float-vector 15.5 -26.8468 47.5) (float-vector 15.5 -26.8468 89.5)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 89.5) (float-vector -15.5 -26.8468 47.5) (float-vector 0.0 -31.0 47.5) (float-vector 0.0 -31.0 89.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 89.5) (float-vector -26.8468 -15.5 47.5) (float-vector -15.5 -26.8468 47.5) (float-vector -15.5 -26.8468 89.5)))
         (instance face :init :vertices (list (float-vector -31.0 4.263256e-14 89.5) (float-vector -31.0 2.842171e-14 47.5) (float-vector -26.8468 -15.5 47.5) (float-vector -26.8468 -15.5 89.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 89.5) (float-vector -26.8468 15.5 47.5) (float-vector -31.0 2.842171e-14 47.5) (float-vector -31.0 4.263256e-14 89.5)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 89.5) (float-vector -15.5 26.8468 47.5) (float-vector -26.8468 15.5 47.5) (float-vector -26.8468 15.5 89.5)))
         (instance face :init :vertices (list (float-vector 8.526513e-14 31.0 89.5) (float-vector 5.684342e-14 31.0 47.5) (float-vector -15.5 26.8468 47.5) (float-vector -15.5 26.8468 89.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 89.5) (float-vector 15.5 26.8468 47.5) (float-vector 5.684342e-14 31.0 47.5) (float-vector 8.526513e-14 31.0 89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 89.5) (float-vector 26.8468 15.5 53.0) (float-vector 18.2957 24.0511 53.0) (float-vector 18.2957 24.0511 48.0) (float-vector 26.8468 15.5 48.0) (float-vector 26.8468 15.5 47.5) (float-vector 15.5 26.8468 47.5) (float-vector 15.5 26.8468 89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 48.0) (float-vector 31.0 0.0 48.0) (float-vector 31.0 0.0 47.5) (float-vector 26.8468 15.5 47.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 53.0) (float-vector 26.8468 15.5 53.0) (float-vector 26.8468 15.5 89.5) (float-vector 31.0 0.0 89.5)))
         (instance face :init :vertices (list (float-vector 50.5 57.0 53.0) (float-vector 50.5 39.0 53.0) (float-vector 48.535 31.578 53.0) (float-vector 43.154 26.1 53.0) (float-vector 37.262 24.104 53.0) (float-vector 18.2957 24.0511 53.0) (float-vector 26.8468 15.5 53.0) (float-vector 31.0 0.0 53.0) (float-vector 26.8468 -15.5 53.0) (float-vector 18.2957 -24.0511 53.0) (float-vector 37.262 -24.104 53.0) (float-vector 43.154 -26.1 53.0) (float-vector 48.535 -31.578 53.0) (float-vector 50.5 -39.0 53.0) (float-vector 50.5 -57.0 53.0) (float-vector 69.0 -57.0 53.0) (float-vector 69.0 57.0 53.0)))
         (instance face :init :vertices (list (float-vector 18.2957 24.0511 48.0) (float-vector 37.262 24.104 48.0) (float-vector 43.154 26.1 48.0) (float-vector 48.535 31.578 48.0) (float-vector 50.5 39.0 48.0) (float-vector 50.5 57.0 48.0) (float-vector 69.0 57.0 48.0) (float-vector 69.0 -57.0 48.0) (float-vector 50.5 -57.0 48.0) (float-vector 50.5 -39.0 48.0) (float-vector 48.535 -31.578 48.0) (float-vector 43.154 -26.1 48.0) (float-vector 37.262 -24.104 48.0) (float-vector 18.2957 -24.0511 48.0) (float-vector 26.8468 -15.5 48.0) (float-vector 31.0 0.0 48.0) (float-vector 26.8468 15.5 48.0)))
         (instance face :init :vertices (list (float-vector 50.5 39.0 48.0) (float-vector 50.5 39.0 53.0) (float-vector 50.5 57.0 53.0) (float-vector 50.5 57.0 48.0)))
         (instance face :init :vertices (list (float-vector 48.535 31.578 48.0) (float-vector 48.535 31.578 53.0) (float-vector 50.5 39.0 53.0) (float-vector 50.5 39.0 48.0)))
         (instance face :init :vertices (list (float-vector 43.154 26.1 48.0) (float-vector 43.154 26.1 53.0) (float-vector 48.535 31.578 53.0) (float-vector 48.535 31.578 48.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 48.0) (float-vector 37.262 24.104 53.0) (float-vector 43.154 26.1 53.0) (float-vector 43.154 26.1 48.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 53.0) (float-vector 37.262 24.104 48.0) (float-vector 18.2957 24.0511 48.0) (float-vector 18.2957 24.0511 53.0)))
         (instance face :init :vertices (list (float-vector 37.262 -24.104 48.0) (float-vector 37.262 -24.104 53.0) (float-vector 18.2957 -24.0511 53.0) (float-vector 18.2957 -24.0511 48.0)))
         (instance face :init :vertices (list (float-vector 43.154 -26.1 48.0) (float-vector 43.154 -26.1 53.0) (float-vector 37.262 -24.104 53.0) (float-vector 37.262 -24.104 48.0)))
         (instance face :init :vertices (list (float-vector 48.535 -31.578 48.0) (float-vector 48.535 -31.578 53.0) (float-vector 43.154 -26.1 53.0) (float-vector 43.154 -26.1 48.0)))
         (instance face :init :vertices (list (float-vector 50.5 -39.0 48.0) (float-vector 50.5 -39.0 53.0) (float-vector 48.535 -31.578 53.0) (float-vector 48.535 -31.578 48.0)))
         (instance face :init :vertices (list (float-vector 50.5 -39.0 53.0) (float-vector 50.5 -39.0 48.0) (float-vector 50.5 -57.0 48.0) (float-vector 50.5 -57.0 53.0)))
         (instance face :init :vertices (list (float-vector 66.5 -59.0 134.0) (float-vector 66.5 -57.0 134.0) (float-vector 44.0 -57.0 55.0) (float-vector 44.0 -59.0 55.0)))
         (instance face :init :vertices (list (float-vector 44.0 -57.0 55.0) (float-vector 44.0 -57.0 -42.0) (float-vector 44.0 -59.0 -42.0) (float-vector 44.0 -59.0 55.0)))
         (instance face :init :vertices (list (float-vector 44.0 -57.0 -42.0) (float-vector 66.5 -57.0 -74.0) (float-vector 66.5 -59.0 -74.0) (float-vector 44.0 -59.0 -42.0)))
         (instance face :init :vertices (list (float-vector 66.5 -57.0 -74.0) (float-vector 69.0 -57.0 -74.0) (float-vector 69.0 -59.0 -74.0) (float-vector 66.5 -59.0 -74.0)))
         (instance face :init :vertices (list (float-vector 69.0 -59.0 134.0) (float-vector 66.5 -59.0 134.0) (float-vector 44.0 -59.0 55.0) (float-vector 44.0 -59.0 -42.0) (float-vector 66.5 -59.0 -74.0) (float-vector 69.0 -59.0 -74.0)))
         (instance face :init :vertices (list (float-vector 69.0 -57.0 134.0) (float-vector 66.5 -57.0 134.0) (float-vector 66.5 -59.0 134.0) (float-vector 69.0 -59.0 134.0)))
         (instance face :init :vertices (list (float-vector 66.5 -57.0 134.0) (float-vector 69.0 -57.0 134.0) (float-vector 69.0 -57.0 53.0) (float-vector 50.5 -57.0 53.0) (float-vector 50.5 -57.0 48.0) (float-vector 69.0 -57.0 48.0) (float-vector 69.0 -57.0 -35.0) (float-vector 50.5 -57.0 -35.0) (float-vector 50.5 -57.0 -40.0) (float-vector 69.0 -57.0 -40.0) (float-vector 69.0 -57.0 -74.0) (float-vector 66.5 -57.0 -74.0) (float-vector 44.0 -57.0 -42.0) (float-vector 44.0 -57.0 55.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 74.0 70.0 140.0) (float-vector 74.0 70.0 -80.0) (float-vector 74.0 -70.0 -80.0) (float-vector 74.0 -70.0 140.0)))
         (instance face :init :vertices (list (float-vector 80.0 70.0 -80.0) (float-vector 80.0 70.0 140.0) (float-vector 80.0 -70.0 140.0) (float-vector 80.0 -70.0 -80.0)))
         (instance face :init :vertices (list (float-vector 74.0 70.0 140.0) (float-vector 80.0 70.0 140.0) (float-vector 80.0 70.0 -80.0) (float-vector 74.0 70.0 -80.0)))
         (instance face :init :vertices (list (float-vector 74.0 -70.0 140.0) (float-vector 80.0 -70.0 140.0) (float-vector 80.0 70.0 140.0) (float-vector 74.0 70.0 140.0)))
         (instance face :init :vertices (list (float-vector 74.0 -70.0 -80.0) (float-vector 80.0 -70.0 -80.0) (float-vector 80.0 -70.0 140.0) (float-vector 74.0 -70.0 140.0)))
         (instance face :init :vertices (list (float-vector 74.0 70.0 -80.0) (float-vector 80.0 70.0 -80.0) (float-vector 80.0 -70.0 -80.0) (float-vector 74.0 -70.0 -80.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -57.2058) (float-vector 79.4 -49.0 -56.0) (float-vector 79.4 -44.5 -57.2058) (float-vector 79.4 -41.2058 -60.5) (float-vector 79.4 -40.0 -65.0) (float-vector 79.4 -41.2058 -69.5) (float-vector 79.4 -44.5 -72.7942) (float-vector 79.4 -49.0 -74.0) (float-vector 79.4 -53.5 -72.7942) (float-vector 79.4 -56.7942 -69.5) (float-vector 79.4 -58.0 -65.0) (float-vector 79.4 -56.7942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 -56.0) (float-vector 79.5 -53.5 -57.2058) (float-vector 79.5 -56.7942 -60.5) (float-vector 79.5 -58.0 -65.0) (float-vector 79.5 -56.7942 -69.5) (float-vector 79.5 -53.5 -72.7942) (float-vector 79.5 -49.0 -74.0) (float-vector 79.5 -44.5 -72.7942) (float-vector 79.5 -41.2058 -69.5) (float-vector 79.5 -40.0 -65.0) (float-vector 79.5 -41.2058 -60.5) (float-vector 79.5 -44.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -57.2058) (float-vector 79.5 -53.5 -57.2058) (float-vector 79.5 -49.0 -56.0) (float-vector 79.4 -49.0 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 -60.5) (float-vector 79.5 -56.7942 -60.5) (float-vector 79.5 -53.5 -57.2058) (float-vector 79.4 -53.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 -65.0) (float-vector 79.5 -58.0 -65.0) (float-vector 79.5 -56.7942 -60.5) (float-vector 79.4 -56.7942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 -69.5) (float-vector 79.5 -56.7942 -69.5) (float-vector 79.5 -58.0 -65.0) (float-vector 79.4 -58.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -72.7942) (float-vector 79.5 -53.5 -72.7942) (float-vector 79.5 -56.7942 -69.5) (float-vector 79.4 -56.7942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 -74.0) (float-vector 79.5 -49.0 -74.0) (float-vector 79.5 -53.5 -72.7942) (float-vector 79.4 -53.5 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 -72.7942) (float-vector 79.5 -44.5 -72.7942) (float-vector 79.5 -49.0 -74.0) (float-vector 79.4 -49.0 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 -69.5) (float-vector 79.5 -41.2058 -69.5) (float-vector 79.5 -44.5 -72.7942) (float-vector 79.4 -44.5 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 -65.0) (float-vector 79.5 -40.0 -65.0) (float-vector 79.5 -41.2058 -69.5) (float-vector 79.4 -41.2058 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 -60.5) (float-vector 79.5 -41.2058 -60.5) (float-vector 79.5 -40.0 -65.0) (float-vector 79.4 -40.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 -57.2058) (float-vector 79.5 -44.5 -57.2058) (float-vector 79.5 -41.2058 -60.5) (float-vector 79.4 -41.2058 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 -56.0) (float-vector 79.5 -49.0 -56.0) (float-vector 79.5 -44.5 -57.2058) (float-vector 79.4 -44.5 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -20.8 -57.2058) (float-vector 79.4 -16.3 -56.0) (float-vector 79.4 -11.8 -57.2058) (float-vector 79.4 -8.50577 -60.5) (float-vector 79.4 -7.3 -65.0) (float-vector 79.4 -8.50577 -69.5) (float-vector 79.4 -11.8 -72.7942) (float-vector 79.4 -16.3 -74.0) (float-vector 79.4 -20.8 -72.7942) (float-vector 79.4 -24.0942 -69.5) (float-vector 79.4 -25.3 -65.0) (float-vector 79.4 -24.0942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 -16.3 -56.0) (float-vector 79.5 -20.8 -57.2058) (float-vector 79.5 -24.0942 -60.5) (float-vector 79.5 -25.3 -65.0) (float-vector 79.5 -24.0942 -69.5) (float-vector 79.5 -20.8 -72.7942) (float-vector 79.5 -16.3 -74.0) (float-vector 79.5 -11.8 -72.7942) (float-vector 79.5 -8.50577 -69.5) (float-vector 79.5 -7.3 -65.0) (float-vector 79.5 -8.50577 -60.5) (float-vector 79.5 -11.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -20.8 -57.2058) (float-vector 79.5 -20.8 -57.2058) (float-vector 79.5 -16.3 -56.0) (float-vector 79.4 -16.3 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 -24.0942 -60.5) (float-vector 79.5 -24.0942 -60.5) (float-vector 79.5 -20.8 -57.2058) (float-vector 79.4 -20.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -25.3 -65.0) (float-vector 79.5 -25.3 -65.0) (float-vector 79.5 -24.0942 -60.5) (float-vector 79.4 -24.0942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -24.0942 -69.5) (float-vector 79.5 -24.0942 -69.5) (float-vector 79.5 -25.3 -65.0) (float-vector 79.4 -25.3 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -20.8 -72.7942) (float-vector 79.5 -20.8 -72.7942) (float-vector 79.5 -24.0942 -69.5) (float-vector 79.4 -24.0942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -16.3 -74.0) (float-vector 79.5 -16.3 -74.0) (float-vector 79.5 -20.8 -72.7942) (float-vector 79.4 -20.8 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 -11.8 -72.7942) (float-vector 79.5 -11.8 -72.7942) (float-vector 79.5 -16.3 -74.0) (float-vector 79.4 -16.3 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 -8.50577 -69.5) (float-vector 79.5 -8.50577 -69.5) (float-vector 79.5 -11.8 -72.7942) (float-vector 79.4 -11.8 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 -7.3 -65.0) (float-vector 79.5 -7.3 -65.0) (float-vector 79.5 -8.50577 -69.5) (float-vector 79.4 -8.50577 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -8.50577 -60.5) (float-vector 79.5 -8.50577 -60.5) (float-vector 79.5 -7.3 -65.0) (float-vector 79.4 -7.3 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -11.8 -57.2058) (float-vector 79.5 -11.8 -57.2058) (float-vector 79.5 -8.50577 -60.5) (float-vector 79.4 -8.50577 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -16.3 -56.0) (float-vector 79.5 -16.3 -56.0) (float-vector 79.5 -11.8 -57.2058) (float-vector 79.4 -11.8 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 11.8 -57.2058) (float-vector 79.4 16.3 -56.0) (float-vector 79.4 20.8 -57.2058) (float-vector 79.4 24.0942 -60.5) (float-vector 79.4 25.3 -65.0) (float-vector 79.4 24.0942 -69.5) (float-vector 79.4 20.8 -72.7942) (float-vector 79.4 16.3 -74.0) (float-vector 79.4 11.8 -72.7942) (float-vector 79.4 8.50577 -69.5) (float-vector 79.4 7.3 -65.0) (float-vector 79.4 8.50577 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 16.3 -56.0) (float-vector 79.5 11.8 -57.2058) (float-vector 79.5 8.50577 -60.5) (float-vector 79.5 7.3 -65.0) (float-vector 79.5 8.50577 -69.5) (float-vector 79.5 11.8 -72.7942) (float-vector 79.5 16.3 -74.0) (float-vector 79.5 20.8 -72.7942) (float-vector 79.5 24.0942 -69.5) (float-vector 79.5 25.3 -65.0) (float-vector 79.5 24.0942 -60.5) (float-vector 79.5 20.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 11.8 -57.2058) (float-vector 79.5 11.8 -57.2058) (float-vector 79.5 16.3 -56.0) (float-vector 79.4 16.3 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 8.50577 -60.5) (float-vector 79.5 8.50577 -60.5) (float-vector 79.5 11.8 -57.2058) (float-vector 79.4 11.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 7.3 -65.0) (float-vector 79.5 7.3 -65.0) (float-vector 79.5 8.50577 -60.5) (float-vector 79.4 8.50577 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 8.50577 -69.5) (float-vector 79.5 8.50577 -69.5) (float-vector 79.5 7.3 -65.0) (float-vector 79.4 7.3 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 11.8 -72.7942) (float-vector 79.5 11.8 -72.7942) (float-vector 79.5 8.50577 -69.5) (float-vector 79.4 8.50577 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 16.3 -74.0) (float-vector 79.5 16.3 -74.0) (float-vector 79.5 11.8 -72.7942) (float-vector 79.4 11.8 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 20.8 -72.7942) (float-vector 79.5 20.8 -72.7942) (float-vector 79.5 16.3 -74.0) (float-vector 79.4 16.3 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 24.0942 -69.5) (float-vector 79.5 24.0942 -69.5) (float-vector 79.5 20.8 -72.7942) (float-vector 79.4 20.8 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 25.3 -65.0) (float-vector 79.5 25.3 -65.0) (float-vector 79.5 24.0942 -69.5) (float-vector 79.4 24.0942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 24.0942 -60.5) (float-vector 79.5 24.0942 -60.5) (float-vector 79.5 25.3 -65.0) (float-vector 79.4 25.3 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 20.8 -57.2058) (float-vector 79.5 20.8 -57.2058) (float-vector 79.5 24.0942 -60.5) (float-vector 79.4 24.0942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 16.3 -56.0) (float-vector 79.5 16.3 -56.0) (float-vector 79.5 20.8 -57.2058) (float-vector 79.4 20.8 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 44.5 -57.2058) (float-vector 79.4 49.0 -56.0) (float-vector 79.4 53.5 -57.2058) (float-vector 79.4 56.7942 -60.5) (float-vector 79.4 58.0 -65.0) (float-vector 79.4 56.7942 -69.5) (float-vector 79.4 53.5 -72.7942) (float-vector 79.4 49.0 -74.0) (float-vector 79.4 44.5 -72.7942) (float-vector 79.4 41.2058 -69.5) (float-vector 79.4 40.0 -65.0) (float-vector 79.4 41.2058 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 -56.0) (float-vector 79.5 44.5 -57.2058) (float-vector 79.5 41.2058 -60.5) (float-vector 79.5 40.0 -65.0) (float-vector 79.5 41.2058 -69.5) (float-vector 79.5 44.5 -72.7942) (float-vector 79.5 49.0 -74.0) (float-vector 79.5 53.5 -72.7942) (float-vector 79.5 56.7942 -69.5) (float-vector 79.5 58.0 -65.0) (float-vector 79.5 56.7942 -60.5) (float-vector 79.5 53.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 -57.2058) (float-vector 79.5 44.5 -57.2058) (float-vector 79.5 49.0 -56.0) (float-vector 79.4 49.0 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 -60.5) (float-vector 79.5 41.2058 -60.5) (float-vector 79.5 44.5 -57.2058) (float-vector 79.4 44.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 -65.0) (float-vector 79.5 40.0 -65.0) (float-vector 79.5 41.2058 -60.5) (float-vector 79.4 41.2058 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 -69.5) (float-vector 79.5 41.2058 -69.5) (float-vector 79.5 40.0 -65.0) (float-vector 79.4 40.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 -72.7942) (float-vector 79.5 44.5 -72.7942) (float-vector 79.5 41.2058 -69.5) (float-vector 79.4 41.2058 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 -74.0) (float-vector 79.5 49.0 -74.0) (float-vector 79.5 44.5 -72.7942) (float-vector 79.4 44.5 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 -72.7942) (float-vector 79.5 53.5 -72.7942) (float-vector 79.5 49.0 -74.0) (float-vector 79.4 49.0 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 -69.5) (float-vector 79.5 56.7942 -69.5) (float-vector 79.5 53.5 -72.7942) (float-vector 79.4 53.5 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 -65.0) (float-vector 79.5 58.0 -65.0) (float-vector 79.5 56.7942 -69.5) (float-vector 79.4 56.7942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 -60.5) (float-vector 79.5 56.7942 -60.5) (float-vector 79.5 58.0 -65.0) (float-vector 79.4 58.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 -57.2058) (float-vector 79.5 53.5 -57.2058) (float-vector 79.5 56.7942 -60.5) (float-vector 79.4 56.7942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 -56.0) (float-vector 79.5 49.0 -56.0) (float-vector 79.5 53.5 -57.2058) (float-vector 79.4 53.5 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -53.5 4.49423) (float-vector 79.4 -49.0 5.7) (float-vector 79.4 -44.5 4.49423) (float-vector 79.4 -41.2058 1.2) (float-vector 79.4 -40.0 -3.3) (float-vector 79.4 -41.2058 -7.8) (float-vector 79.4 -44.5 -11.0942) (float-vector 79.4 -49.0 -12.3) (float-vector 79.4 -53.5 -11.0942) (float-vector 79.4 -56.7942 -7.8) (float-vector 79.4 -58.0 -3.3) (float-vector 79.4 -56.7942 1.2)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 5.7) (float-vector 79.5 -53.5 4.49423) (float-vector 79.5 -56.7942 1.2) (float-vector 79.5 -58.0 -3.3) (float-vector 79.5 -56.7942 -7.8) (float-vector 79.5 -53.5 -11.0942) (float-vector 79.5 -49.0 -12.3) (float-vector 79.5 -44.5 -11.0942) (float-vector 79.5 -41.2058 -7.8) (float-vector 79.5 -40.0 -3.3) (float-vector 79.5 -41.2058 1.2) (float-vector 79.5 -44.5 4.49423)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 4.49423) (float-vector 79.5 -53.5 4.49423) (float-vector 79.5 -49.0 5.7) (float-vector 79.4 -49.0 5.7)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 1.2) (float-vector 79.5 -56.7942 1.2) (float-vector 79.5 -53.5 4.49423) (float-vector 79.4 -53.5 4.49423)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 -3.3) (float-vector 79.5 -58.0 -3.3) (float-vector 79.5 -56.7942 1.2) (float-vector 79.4 -56.7942 1.2)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 -7.8) (float-vector 79.5 -56.7942 -7.8) (float-vector 79.5 -58.0 -3.3) (float-vector 79.4 -58.0 -3.3)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -11.0942) (float-vector 79.5 -53.5 -11.0942) (float-vector 79.5 -56.7942 -7.8) (float-vector 79.4 -56.7942 -7.8)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 -12.3) (float-vector 79.5 -49.0 -12.3) (float-vector 79.5 -53.5 -11.0942) (float-vector 79.4 -53.5 -11.0942)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 -11.0942) (float-vector 79.5 -44.5 -11.0942) (float-vector 79.5 -49.0 -12.3) (float-vector 79.4 -49.0 -12.3)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 -7.8) (float-vector 79.5 -41.2058 -7.8) (float-vector 79.5 -44.5 -11.0942) (float-vector 79.4 -44.5 -11.0942)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 -3.3) (float-vector 79.5 -40.0 -3.3) (float-vector 79.5 -41.2058 -7.8) (float-vector 79.4 -41.2058 -7.8)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 1.2) (float-vector 79.5 -41.2058 1.2) (float-vector 79.5 -40.0 -3.3) (float-vector 79.4 -40.0 -3.3)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 4.49423) (float-vector 79.5 -44.5 4.49423) (float-vector 79.5 -41.2058 1.2) (float-vector 79.4 -41.2058 1.2)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 5.7) (float-vector 79.5 -49.0 5.7) (float-vector 79.5 -44.5 4.49423) (float-vector 79.4 -44.5 4.49423)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 44.5 4.49423) (float-vector 79.4 49.0 5.7) (float-vector 79.4 53.5 4.49423) (float-vector 79.4 56.7942 1.2) (float-vector 79.4 58.0 -3.3) (float-vector 79.4 56.7942 -7.8) (float-vector 79.4 53.5 -11.0942) (float-vector 79.4 49.0 -12.3) (float-vector 79.4 44.5 -11.0942) (float-vector 79.4 41.2058 -7.8) (float-vector 79.4 40.0 -3.3) (float-vector 79.4 41.2058 1.2)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 5.7) (float-vector 79.5 44.5 4.49423) (float-vector 79.5 41.2058 1.2) (float-vector 79.5 40.0 -3.3) (float-vector 79.5 41.2058 -7.8) (float-vector 79.5 44.5 -11.0942) (float-vector 79.5 49.0 -12.3) (float-vector 79.5 53.5 -11.0942) (float-vector 79.5 56.7942 -7.8) (float-vector 79.5 58.0 -3.3) (float-vector 79.5 56.7942 1.2) (float-vector 79.5 53.5 4.49423)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 4.49423) (float-vector 79.5 44.5 4.49423) (float-vector 79.5 49.0 5.7) (float-vector 79.4 49.0 5.7)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 1.2) (float-vector 79.5 41.2058 1.2) (float-vector 79.5 44.5 4.49423) (float-vector 79.4 44.5 4.49423)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 -3.3) (float-vector 79.5 40.0 -3.3) (float-vector 79.5 41.2058 1.2) (float-vector 79.4 41.2058 1.2)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 -7.8) (float-vector 79.5 41.2058 -7.8) (float-vector 79.5 40.0 -3.3) (float-vector 79.4 40.0 -3.3)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 -11.0942) (float-vector 79.5 44.5 -11.0942) (float-vector 79.5 41.2058 -7.8) (float-vector 79.4 41.2058 -7.8)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 -12.3) (float-vector 79.5 49.0 -12.3) (float-vector 79.5 44.5 -11.0942) (float-vector 79.4 44.5 -11.0942)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 -11.0942) (float-vector 79.5 53.5 -11.0942) (float-vector 79.5 49.0 -12.3) (float-vector 79.4 49.0 -12.3)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 -7.8) (float-vector 79.5 56.7942 -7.8) (float-vector 79.5 53.5 -11.0942) (float-vector 79.4 53.5 -11.0942)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 -3.3) (float-vector 79.5 58.0 -3.3) (float-vector 79.5 56.7942 -7.8) (float-vector 79.4 56.7942 -7.8)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 1.2) (float-vector 79.5 56.7942 1.2) (float-vector 79.5 58.0 -3.3) (float-vector 79.4 58.0 -3.3)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 4.49423) (float-vector 79.5 53.5 4.49423) (float-vector 79.5 56.7942 1.2) (float-vector 79.4 56.7942 1.2)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 5.7) (float-vector 79.5 49.0 5.7) (float-vector 79.5 53.5 4.49423) (float-vector 79.4 53.5 4.49423)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -53.5 66.0942) (float-vector 79.4 -49.0 67.3) (float-vector 79.4 -44.5 66.0942) (float-vector 79.4 -41.2058 62.8) (float-vector 79.4 -40.0 58.3) (float-vector 79.4 -41.2058 53.8) (float-vector 79.4 -44.5 50.5058) (float-vector 79.4 -49.0 49.3) (float-vector 79.4 -53.5 50.5058) (float-vector 79.4 -56.7942 53.8) (float-vector 79.4 -58.0 58.3) (float-vector 79.4 -56.7942 62.8)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 67.3) (float-vector 79.5 -53.5 66.0942) (float-vector 79.5 -56.7942 62.8) (float-vector 79.5 -58.0 58.3) (float-vector 79.5 -56.7942 53.8) (float-vector 79.5 -53.5 50.5058) (float-vector 79.5 -49.0 49.3) (float-vector 79.5 -44.5 50.5058) (float-vector 79.5 -41.2058 53.8) (float-vector 79.5 -40.0 58.3) (float-vector 79.5 -41.2058 62.8) (float-vector 79.5 -44.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 66.0942) (float-vector 79.5 -53.5 66.0942) (float-vector 79.5 -49.0 67.3) (float-vector 79.4 -49.0 67.3)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 62.8) (float-vector 79.5 -56.7942 62.8) (float-vector 79.5 -53.5 66.0942) (float-vector 79.4 -53.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 58.3) (float-vector 79.5 -58.0 58.3) (float-vector 79.5 -56.7942 62.8) (float-vector 79.4 -56.7942 62.8)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 53.8) (float-vector 79.5 -56.7942 53.8) (float-vector 79.5 -58.0 58.3) (float-vector 79.4 -58.0 58.3)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 50.5058) (float-vector 79.5 -53.5 50.5058) (float-vector 79.5 -56.7942 53.8) (float-vector 79.4 -56.7942 53.8)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 49.3) (float-vector 79.5 -49.0 49.3) (float-vector 79.5 -53.5 50.5058) (float-vector 79.4 -53.5 50.5058)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 50.5058) (float-vector 79.5 -44.5 50.5058) (float-vector 79.5 -49.0 49.3) (float-vector 79.4 -49.0 49.3)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 53.8) (float-vector 79.5 -41.2058 53.8) (float-vector 79.5 -44.5 50.5058) (float-vector 79.4 -44.5 50.5058)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 58.3) (float-vector 79.5 -40.0 58.3) (float-vector 79.5 -41.2058 53.8) (float-vector 79.4 -41.2058 53.8)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 62.8) (float-vector 79.5 -41.2058 62.8) (float-vector 79.5 -40.0 58.3) (float-vector 79.4 -40.0 58.3)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 66.0942) (float-vector 79.5 -44.5 66.0942) (float-vector 79.5 -41.2058 62.8) (float-vector 79.4 -41.2058 62.8)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 67.3) (float-vector 79.5 -49.0 67.3) (float-vector 79.5 -44.5 66.0942) (float-vector 79.4 -44.5 66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 44.5 66.0942) (float-vector 79.4 49.0 67.3) (float-vector 79.4 53.5 66.0942) (float-vector 79.4 56.7942 62.8) (float-vector 79.4 58.0 58.3) (float-vector 79.4 56.7942 53.8) (float-vector 79.4 53.5 50.5058) (float-vector 79.4 49.0 49.3) (float-vector 79.4 44.5 50.5058) (float-vector 79.4 41.2058 53.8) (float-vector 79.4 40.0 58.3) (float-vector 79.4 41.2058 62.8)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 67.3) (float-vector 79.5 44.5 66.0942) (float-vector 79.5 41.2058 62.8) (float-vector 79.5 40.0 58.3) (float-vector 79.5 41.2058 53.8) (float-vector 79.5 44.5 50.5058) (float-vector 79.5 49.0 49.3) (float-vector 79.5 53.5 50.5058) (float-vector 79.5 56.7942 53.8) (float-vector 79.5 58.0 58.3) (float-vector 79.5 56.7942 62.8) (float-vector 79.5 53.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 66.0942) (float-vector 79.5 44.5 66.0942) (float-vector 79.5 49.0 67.3) (float-vector 79.4 49.0 67.3)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 62.8) (float-vector 79.5 41.2058 62.8) (float-vector 79.5 44.5 66.0942) (float-vector 79.4 44.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 58.3) (float-vector 79.5 40.0 58.3) (float-vector 79.5 41.2058 62.8) (float-vector 79.4 41.2058 62.8)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 53.8) (float-vector 79.5 41.2058 53.8) (float-vector 79.5 40.0 58.3) (float-vector 79.4 40.0 58.3)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 50.5058) (float-vector 79.5 44.5 50.5058) (float-vector 79.5 41.2058 53.8) (float-vector 79.4 41.2058 53.8)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 49.3) (float-vector 79.5 49.0 49.3) (float-vector 79.5 44.5 50.5058) (float-vector 79.4 44.5 50.5058)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 50.5058) (float-vector 79.5 53.5 50.5058) (float-vector 79.5 49.0 49.3) (float-vector 79.4 49.0 49.3)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 53.8) (float-vector 79.5 56.7942 53.8) (float-vector 79.5 53.5 50.5058) (float-vector 79.4 53.5 50.5058)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 58.3) (float-vector 79.5 58.0 58.3) (float-vector 79.5 56.7942 53.8) (float-vector 79.4 56.7942 53.8)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 62.8) (float-vector 79.5 56.7942 62.8) (float-vector 79.5 58.0 58.3) (float-vector 79.4 58.0 58.3)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 66.0942) (float-vector 79.5 53.5 66.0942) (float-vector 79.5 56.7942 62.8) (float-vector 79.4 56.7942 62.8)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 67.3) (float-vector 79.5 49.0 67.3) (float-vector 79.5 53.5 66.0942) (float-vector 79.4 53.5 66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -53.5 127.794) (float-vector 79.4 -49.0 129.0) (float-vector 79.4 -44.5 127.794) (float-vector 79.4 -41.2058 124.5) (float-vector 79.4 -40.0 120.0) (float-vector 79.4 -41.2058 115.5) (float-vector 79.4 -44.5 112.206) (float-vector 79.4 -49.0 111.0) (float-vector 79.4 -53.5 112.206) (float-vector 79.4 -56.7942 115.5) (float-vector 79.4 -58.0 120.0) (float-vector 79.4 -56.7942 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 129.0) (float-vector 79.5 -53.5 127.794) (float-vector 79.5 -56.7942 124.5) (float-vector 79.5 -58.0 120.0) (float-vector 79.5 -56.7942 115.5) (float-vector 79.5 -53.5 112.206) (float-vector 79.5 -49.0 111.0) (float-vector 79.5 -44.5 112.206) (float-vector 79.5 -41.2058 115.5) (float-vector 79.5 -40.0 120.0) (float-vector 79.5 -41.2058 124.5) (float-vector 79.5 -44.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 127.794) (float-vector 79.5 -53.5 127.794) (float-vector 79.5 -49.0 129.0) (float-vector 79.4 -49.0 129.0)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 124.5) (float-vector 79.5 -56.7942 124.5) (float-vector 79.5 -53.5 127.794) (float-vector 79.4 -53.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 120.0) (float-vector 79.5 -58.0 120.0) (float-vector 79.5 -56.7942 124.5) (float-vector 79.4 -56.7942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 115.5) (float-vector 79.5 -56.7942 115.5) (float-vector 79.5 -58.0 120.0) (float-vector 79.4 -58.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 112.206) (float-vector 79.5 -53.5 112.206) (float-vector 79.5 -56.7942 115.5) (float-vector 79.4 -56.7942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 111.0) (float-vector 79.5 -49.0 111.0) (float-vector 79.5 -53.5 112.206) (float-vector 79.4 -53.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 112.206) (float-vector 79.5 -44.5 112.206) (float-vector 79.5 -49.0 111.0) (float-vector 79.4 -49.0 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 115.5) (float-vector 79.5 -41.2058 115.5) (float-vector 79.5 -44.5 112.206) (float-vector 79.4 -44.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 120.0) (float-vector 79.5 -40.0 120.0) (float-vector 79.5 -41.2058 115.5) (float-vector 79.4 -41.2058 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2058 124.5) (float-vector 79.5 -41.2058 124.5) (float-vector 79.5 -40.0 120.0) (float-vector 79.4 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 127.794) (float-vector 79.5 -44.5 127.794) (float-vector 79.5 -41.2058 124.5) (float-vector 79.4 -41.2058 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 129.0) (float-vector 79.5 -49.0 129.0) (float-vector 79.5 -44.5 127.794) (float-vector 79.4 -44.5 127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -20.8 127.794) (float-vector 79.4 -16.3 129.0) (float-vector 79.4 -11.8 127.794) (float-vector 79.4 -8.50577 124.5) (float-vector 79.4 -7.3 120.0) (float-vector 79.4 -8.50577 115.5) (float-vector 79.4 -11.8 112.206) (float-vector 79.4 -16.3 111.0) (float-vector 79.4 -20.8 112.206) (float-vector 79.4 -24.0942 115.5) (float-vector 79.4 -25.3 120.0) (float-vector 79.4 -24.0942 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 -16.3 129.0) (float-vector 79.5 -20.8 127.794) (float-vector 79.5 -24.0942 124.5) (float-vector 79.5 -25.3 120.0) (float-vector 79.5 -24.0942 115.5) (float-vector 79.5 -20.8 112.206) (float-vector 79.5 -16.3 111.0) (float-vector 79.5 -11.8 112.206) (float-vector 79.5 -8.50577 115.5) (float-vector 79.5 -7.3 120.0) (float-vector 79.5 -8.50577 124.5) (float-vector 79.5 -11.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 -20.8 127.794) (float-vector 79.5 -20.8 127.794) (float-vector 79.5 -16.3 129.0) (float-vector 79.4 -16.3 129.0)))
         (instance face :init :vertices (list (float-vector 79.4 -24.0942 124.5) (float-vector 79.5 -24.0942 124.5) (float-vector 79.5 -20.8 127.794) (float-vector 79.4 -20.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 -25.3 120.0) (float-vector 79.5 -25.3 120.0) (float-vector 79.5 -24.0942 124.5) (float-vector 79.4 -24.0942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 -24.0942 115.5) (float-vector 79.5 -24.0942 115.5) (float-vector 79.5 -25.3 120.0) (float-vector 79.4 -25.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 -20.8 112.206) (float-vector 79.5 -20.8 112.206) (float-vector 79.5 -24.0942 115.5) (float-vector 79.4 -24.0942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 -16.3 111.0) (float-vector 79.5 -16.3 111.0) (float-vector 79.5 -20.8 112.206) (float-vector 79.4 -20.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -11.8 112.206) (float-vector 79.5 -11.8 112.206) (float-vector 79.5 -16.3 111.0) (float-vector 79.4 -16.3 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 -8.50577 115.5) (float-vector 79.5 -8.50577 115.5) (float-vector 79.5 -11.8 112.206) (float-vector 79.4 -11.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -7.3 120.0) (float-vector 79.5 -7.3 120.0) (float-vector 79.5 -8.50577 115.5) (float-vector 79.4 -8.50577 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 -8.50577 124.5) (float-vector 79.5 -8.50577 124.5) (float-vector 79.5 -7.3 120.0) (float-vector 79.4 -7.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 -11.8 127.794) (float-vector 79.5 -11.8 127.794) (float-vector 79.5 -8.50577 124.5) (float-vector 79.4 -8.50577 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 -16.3 129.0) (float-vector 79.5 -16.3 129.0) (float-vector 79.5 -11.8 127.794) (float-vector 79.4 -11.8 127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 11.8 127.794) (float-vector 79.4 16.3 129.0) (float-vector 79.4 20.8 127.794) (float-vector 79.4 24.0942 124.5) (float-vector 79.4 25.3 120.0) (float-vector 79.4 24.0942 115.5) (float-vector 79.4 20.8 112.206) (float-vector 79.4 16.3 111.0) (float-vector 79.4 11.8 112.206) (float-vector 79.4 8.50577 115.5) (float-vector 79.4 7.3 120.0) (float-vector 79.4 8.50577 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 16.3 129.0) (float-vector 79.5 11.8 127.794) (float-vector 79.5 8.50577 124.5) (float-vector 79.5 7.3 120.0) (float-vector 79.5 8.50577 115.5) (float-vector 79.5 11.8 112.206) (float-vector 79.5 16.3 111.0) (float-vector 79.5 20.8 112.206) (float-vector 79.5 24.0942 115.5) (float-vector 79.5 25.3 120.0) (float-vector 79.5 24.0942 124.5) (float-vector 79.5 20.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 11.8 127.794) (float-vector 79.5 11.8 127.794) (float-vector 79.5 16.3 129.0) (float-vector 79.4 16.3 129.0)))
         (instance face :init :vertices (list (float-vector 79.4 8.50577 124.5) (float-vector 79.5 8.50577 124.5) (float-vector 79.5 11.8 127.794) (float-vector 79.4 11.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 7.3 120.0) (float-vector 79.5 7.3 120.0) (float-vector 79.5 8.50577 124.5) (float-vector 79.4 8.50577 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 8.50577 115.5) (float-vector 79.5 8.50577 115.5) (float-vector 79.5 7.3 120.0) (float-vector 79.4 7.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 11.8 112.206) (float-vector 79.5 11.8 112.206) (float-vector 79.5 8.50577 115.5) (float-vector 79.4 8.50577 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 16.3 111.0) (float-vector 79.5 16.3 111.0) (float-vector 79.5 11.8 112.206) (float-vector 79.4 11.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 20.8 112.206) (float-vector 79.5 20.8 112.206) (float-vector 79.5 16.3 111.0) (float-vector 79.4 16.3 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 24.0942 115.5) (float-vector 79.5 24.0942 115.5) (float-vector 79.5 20.8 112.206) (float-vector 79.4 20.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 25.3 120.0) (float-vector 79.5 25.3 120.0) (float-vector 79.5 24.0942 115.5) (float-vector 79.4 24.0942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 24.0942 124.5) (float-vector 79.5 24.0942 124.5) (float-vector 79.5 25.3 120.0) (float-vector 79.4 25.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 20.8 127.794) (float-vector 79.5 20.8 127.794) (float-vector 79.5 24.0942 124.5) (float-vector 79.4 24.0942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 16.3 129.0) (float-vector 79.5 16.3 129.0) (float-vector 79.5 20.8 127.794) (float-vector 79.4 20.8 127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 44.5 127.794) (float-vector 79.4 49.0 129.0) (float-vector 79.4 53.5 127.794) (float-vector 79.4 56.7942 124.5) (float-vector 79.4 58.0 120.0) (float-vector 79.4 56.7942 115.5) (float-vector 79.4 53.5 112.206) (float-vector 79.4 49.0 111.0) (float-vector 79.4 44.5 112.206) (float-vector 79.4 41.2058 115.5) (float-vector 79.4 40.0 120.0) (float-vector 79.4 41.2058 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 129.0) (float-vector 79.5 44.5 127.794) (float-vector 79.5 41.2058 124.5) (float-vector 79.5 40.0 120.0) (float-vector 79.5 41.2058 115.5) (float-vector 79.5 44.5 112.206) (float-vector 79.5 49.0 111.0) (float-vector 79.5 53.5 112.206) (float-vector 79.5 56.7942 115.5) (float-vector 79.5 58.0 120.0) (float-vector 79.5 56.7942 124.5) (float-vector 79.5 53.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 127.794) (float-vector 79.5 44.5 127.794) (float-vector 79.5 49.0 129.0) (float-vector 79.4 49.0 129.0)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 124.5) (float-vector 79.5 41.2058 124.5) (float-vector 79.5 44.5 127.794) (float-vector 79.4 44.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 120.0) (float-vector 79.5 40.0 120.0) (float-vector 79.5 41.2058 124.5) (float-vector 79.4 41.2058 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 115.5) (float-vector 79.5 41.2058 115.5) (float-vector 79.5 40.0 120.0) (float-vector 79.4 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 112.206) (float-vector 79.5 44.5 112.206) (float-vector 79.5 41.2058 115.5) (float-vector 79.4 41.2058 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 111.0) (float-vector 79.5 49.0 111.0) (float-vector 79.5 44.5 112.206) (float-vector 79.4 44.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 112.206) (float-vector 79.5 53.5 112.206) (float-vector 79.5 49.0 111.0) (float-vector 79.4 49.0 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 115.5) (float-vector 79.5 56.7942 115.5) (float-vector 79.5 53.5 112.206) (float-vector 79.4 53.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 120.0) (float-vector 79.5 58.0 120.0) (float-vector 79.5 56.7942 115.5) (float-vector 79.4 56.7942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 124.5) (float-vector 79.5 56.7942 124.5) (float-vector 79.5 58.0 120.0) (float-vector 79.4 58.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 127.794) (float-vector 79.5 53.5 127.794) (float-vector 79.5 56.7942 124.5) (float-vector 79.4 56.7942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 129.0) (float-vector 79.5 49.0 129.0) (float-vector 79.5 53.5 127.794) (float-vector 79.4 53.5 127.794)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray40)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color :gray40)
     (send (elt bc 6) :set-color :gray40)
     (send (elt bc 7) :set-color :gray40)
     (send (elt bc 8) :set-color :gray40)
     (send (elt bc 9) :set-color :gray40)
     (send (elt bc 10) :set-color :gray40)
     (send (elt bc 11) :set-color :gray40)
     (send (elt bc 12) :set-color :gray40)
     (send (elt bc 13) :set-color :gray40)
     (setq blink28 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-r :weight 702.678 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 1.421085e-14 -80.348) (float-vector 40.0 31.085 -80.499) (float-vector 40.0 34.0 -77.5) (float-vector 40.0 34.0 -52.0) (float-vector 40.0 31.0 -49.0) (float-vector 40.0 24.0 -47.0) (float-vector 40.0 24.0 -18.3468) (float-vector 40.0 15.5 -26.8468) (float-vector 40.0 -2.842171e-14 -31.0) (float-vector 40.0 -15.5 -26.8468) (float-vector 40.0 -24.0 -18.3468) (float-vector 40.0 -24.0 -47.0) (float-vector 40.0 -31.0 -49.0) (float-vector 40.0 -34.0 -52.0) (float-vector 40.0 -34.0 -77.5) (float-vector 40.0 -31.085 -80.499)))
         (instance face :init :vertices (list (float-vector -80.0 -31.085 -80.499) (float-vector -80.0 1.421085e-14 -80.348) (float-vector 40.0 1.421085e-14 -80.348) (float-vector 40.0 -31.085 -80.499)))
         (instance face :init :vertices (list (float-vector -80.0 31.085 -80.499) (float-vector 40.0 31.085 -80.499) (float-vector 40.0 1.421085e-14 -80.348) (float-vector -80.0 1.421085e-14 -80.348)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 -77.5) (float-vector 40.0 34.0 -77.5) (float-vector 40.0 31.085 -80.499) (float-vector -80.0 31.085 -80.499)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 -52.0) (float-vector 40.0 34.0 -52.0) (float-vector 40.0 34.0 -77.5) (float-vector -80.0 34.0 -77.5)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 -49.0) (float-vector 40.0 31.0 -49.0) (float-vector 40.0 34.0 -52.0) (float-vector -80.0 34.0 -52.0)))
         (instance face :init :vertices (list (float-vector -80.0 24.0 -47.0) (float-vector 40.0 24.0 -47.0) (float-vector 40.0 31.0 -49.0) (float-vector -80.0 31.0 -49.0)))
         (instance face :init :vertices (list (float-vector -80.0 24.0 -18.3468) (float-vector -35.0 24.0 -18.3468) (float-vector -35.0 24.0 -36.4) (float-vector 35.0 24.0 -36.4) (float-vector 35.0 24.0 -18.3468) (float-vector 40.0 24.0 -18.3468) (float-vector 40.0 24.0 -47.0) (float-vector -80.0 24.0 -47.0)))
         (instance face :init :vertices (list (float-vector 35.0 -24.0 -18.3468) (float-vector 35.0 -24.0 -36.4) (float-vector -35.0 -24.0 -36.4) (float-vector -35.0 -24.0 -18.3468) (float-vector -80.0 -24.0 -18.3468) (float-vector -80.0 -24.0 -47.0) (float-vector 40.0 -24.0 -47.0) (float-vector 40.0 -24.0 -18.3468)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 -49.0) (float-vector 40.0 -31.0 -49.0) (float-vector 40.0 -24.0 -47.0) (float-vector -80.0 -24.0 -47.0)))
         (instance face :init :vertices (list (float-vector -80.0 -34.0 -52.0) (float-vector 40.0 -34.0 -52.0) (float-vector 40.0 -31.0 -49.0) (float-vector -80.0 -31.0 -49.0)))
         (instance face :init :vertices (list (float-vector -80.0 -34.0 -77.5) (float-vector 40.0 -34.0 -77.5) (float-vector 40.0 -34.0 -52.0) (float-vector -80.0 -34.0 -52.0)))
         (instance face :init :vertices (list (float-vector -80.0 -31.085 -80.499) (float-vector 40.0 -31.085 -80.499) (float-vector 40.0 -34.0 -77.5) (float-vector -80.0 -34.0 -77.5)))
         (instance face :init :vertices (list (float-vector -80.0 15.5 26.8468) (float-vector -80.0 26.8468 15.5) (float-vector -80.0 31.0 -1.136868e-13) (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 24.0 -18.3468) (float-vector -80.0 24.0 -47.0) (float-vector -80.0 31.0 -49.0) (float-vector -80.0 34.0 -52.0) (float-vector -80.0 34.0 -77.5) (float-vector -80.0 31.085 -80.499) (float-vector -80.0 1.421085e-14 -80.348) (float-vector -80.0 -31.085 -80.499) (float-vector -80.0 -34.0 -77.5) (float-vector -80.0 -34.0 -52.0) (float-vector -80.0 -31.0 -49.0) (float-vector -80.0 -24.0 -47.0) (float-vector -80.0 -24.0 -18.3468) (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -15.5 26.8468) (float-vector -80.0 0.0 31.0)))
         (instance face :init :vertices (list (float-vector 45.0 0.0 31.0) (float-vector 45.0 15.5 26.8468) (float-vector 35.0 15.5 26.8468) (float-vector 35.0 0.0 31.0)))
         (instance face :init :vertices (list (float-vector -35.0 0.0 31.0) (float-vector -35.0 15.5 26.8468) (float-vector -80.0 15.5 26.8468) (float-vector -80.0 0.0 31.0)))
         (instance face :init :vertices (list (float-vector 45.0 -15.5 26.8468) (float-vector 45.0 -26.8468 15.5) (float-vector 45.0 -31.0 0.0) (float-vector 45.0 -26.8468 -15.5) (float-vector 45.0 -15.5 -26.8468) (float-vector 45.0 -2.842171e-14 -31.0) (float-vector 45.0 15.5 -26.8468) (float-vector 45.0 26.8468 -15.5) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 15.5 26.8468) (float-vector 45.0 0.0 31.0)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 15.5) (float-vector -80.0 15.5 26.8468) (float-vector -35.0 15.5 26.8468) (float-vector -35.0 26.8468 15.5)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 15.5) (float-vector 35.0 15.5 26.8468) (float-vector 45.0 15.5 26.8468) (float-vector 45.0 26.8468 15.5)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 -1.136868e-13) (float-vector -80.0 26.8468 15.5) (float-vector -35.0 26.8468 15.5) (float-vector -35.0 31.0 -1.136868e-13)))
         (instance face :init :vertices (list (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 15.5) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 31.0 0.0)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 31.0 -1.136868e-13) (float-vector -35.0 31.0 -1.136868e-13) (float-vector -35.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 -15.5) (float-vector 35.0 31.0 0.0) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector -35.0 26.8468 -15.5) (float-vector -35.0 24.0 -18.3468) (float-vector -80.0 24.0 -18.3468) (float-vector -80.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector 40.0 15.5 -26.8468) (float-vector 40.0 24.0 -18.3468) (float-vector 35.0 24.0 -18.3468) (float-vector 35.0 26.8468 -15.5) (float-vector 45.0 26.8468 -15.5) (float-vector 45.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector 40.0 -2.842171e-14 -31.0) (float-vector 40.0 15.5 -26.8468) (float-vector 45.0 15.5 -26.8468) (float-vector 45.0 -2.842171e-14 -31.0)))
         (instance face :init :vertices (list (float-vector 40.0 -15.5 -26.8468) (float-vector 40.0 -2.842171e-14 -31.0) (float-vector 45.0 -2.842171e-14 -31.0) (float-vector 45.0 -15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -24.0 -18.3468) (float-vector -35.0 -24.0 -18.3468) (float-vector -35.0 -26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 -15.5) (float-vector 35.0 -24.0 -18.3468) (float-vector 40.0 -24.0 -18.3468) (float-vector 40.0 -15.5 -26.8468) (float-vector 45.0 -15.5 -26.8468) (float-vector 45.0 -26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 -15.5) (float-vector -35.0 -26.8468 -15.5) (float-vector -35.0 -31.0 0.0)))
         (instance face :init :vertices (list (float-vector 35.0 -31.0 0.0) (float-vector 35.0 -26.8468 -15.5) (float-vector 45.0 -26.8468 -15.5) (float-vector 45.0 -31.0 0.0)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -31.0 0.0) (float-vector -35.0 -31.0 0.0) (float-vector -35.0 -26.8468 15.5)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 15.5) (float-vector 35.0 -31.0 0.0) (float-vector 45.0 -31.0 0.0) (float-vector 45.0 -26.8468 15.5)))
         (instance face :init :vertices (list (float-vector -35.0 -15.5 26.8468) (float-vector -35.0 0.0 31.0) (float-vector -80.0 0.0 31.0) (float-vector -80.0 -15.5 26.8468)))
         (instance face :init :vertices (list (float-vector 45.0 -15.5 26.8468) (float-vector 45.0 0.0 31.0) (float-vector 35.0 0.0 31.0) (float-vector 35.0 -15.5 26.8468)))
         (instance face :init :vertices (list (float-vector -80.0 -15.5 26.8468) (float-vector -80.0 -26.8468 15.5) (float-vector -35.0 -26.8468 15.5) (float-vector -35.0 -15.5 26.8468)))
         (instance face :init :vertices (list (float-vector 35.0 -15.5 26.8468) (float-vector 35.0 -26.8468 15.5) (float-vector 45.0 -26.8468 15.5) (float-vector 45.0 -15.5 26.8468)))
         (instance face :init :vertices (list (float-vector -35.0 24.0 -36.4) (float-vector -35.0 24.0 -18.3468) (float-vector -35.0 26.8468 -15.5) (float-vector -35.0 31.0 -1.136868e-13) (float-vector -35.0 26.8468 15.5) (float-vector -35.0 15.5 26.8468) (float-vector -35.0 0.0 31.0) (float-vector -35.0 -15.5 26.8468) (float-vector -35.0 -26.8468 15.5) (float-vector -35.0 -31.0 0.0) (float-vector -35.0 -26.8468 -15.5) (float-vector -35.0 -24.0 -18.3468) (float-vector -35.0 -24.0 -36.4)))
         (instance face :init :vertices (list (float-vector 35.0 24.0 -36.4) (float-vector -35.0 24.0 -36.4) (float-vector -35.0 -24.0 -36.4) (float-vector 35.0 -24.0 -36.4)))
         (instance face :init :vertices (list (float-vector 35.0 -24.0 -36.4) (float-vector 35.0 -24.0 -18.3468) (float-vector 35.0 -26.8468 -15.5) (float-vector 35.0 -31.0 0.0) (float-vector 35.0 -26.8468 15.5) (float-vector 35.0 -15.5 26.8468) (float-vector 35.0 0.0 31.0) (float-vector 35.0 15.5 26.8468) (float-vector 35.0 26.8468 15.5) (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 -15.5) (float-vector 35.0 24.0 -18.3468) (float-vector 35.0 24.0 -36.4)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink17 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-y :weight 1136.38 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.5 -37.0 -26.8468) (float-vector 0.0 -37.0 -31.0) (float-vector 15.5 -37.0 -26.8468) (float-vector 26.8468 -37.0 -15.5) (float-vector 31.0 -37.0 -1.088019e-14) (float-vector 26.8468 -37.0 15.5) (float-vector 15.5 -37.0 26.8468) (float-vector 0.0 -37.0 31.0) (float-vector -15.5 -37.0 26.8468) (float-vector -26.8468 -37.0 15.5) (float-vector -31.0 -37.0 4.818368e-14) (float-vector -26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector 0.0 37.0 -31.0) (float-vector -15.5 37.0 -26.8468) (float-vector -26.8468 37.0 -15.5) (float-vector -31.0 37.0 4.818368e-14) (float-vector -26.8468 37.0 15.5) (float-vector -15.5 37.0 26.8468) (float-vector 0.0 37.0 31.0) (float-vector 15.5 37.0 26.8468) (float-vector 26.8468 37.0 15.5) (float-vector 31.0 37.0 -1.088019e-14) (float-vector 26.8468 37.0 -15.5) (float-vector 15.5 37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -15.5 -37.0 -26.8468) (float-vector -15.5 37.0 -26.8468) (float-vector 0.0 37.0 -31.0) (float-vector 0.0 -37.0 -31.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -37.0 -15.5) (float-vector -26.8468 37.0 -15.5) (float-vector -15.5 37.0 -26.8468) (float-vector -15.5 -37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -31.0 -37.0 4.818368e-14) (float-vector -31.0 37.0 4.818368e-14) (float-vector -26.8468 37.0 -15.5) (float-vector -26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -37.0 15.5) (float-vector -26.8468 37.0 15.5) (float-vector -31.0 37.0 4.818368e-14) (float-vector -31.0 -37.0 4.818368e-14)))
         (instance face :init :vertices (list (float-vector -15.5 -37.0 26.8468) (float-vector -15.5 37.0 26.8468) (float-vector -26.8468 37.0 15.5) (float-vector -26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 0.0 -37.0 31.0) (float-vector 0.0 37.0 31.0) (float-vector -15.5 37.0 26.8468) (float-vector -15.5 -37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 15.5 -37.0 26.8468) (float-vector 15.5 37.0 26.8468) (float-vector 0.0 37.0 31.0) (float-vector 0.0 -37.0 31.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -37.0 15.5) (float-vector 26.8468 37.0 15.5) (float-vector 15.5 37.0 26.8468) (float-vector 15.5 -37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 31.0 -37.0 -1.088019e-14) (float-vector 31.0 37.0 -1.088019e-14) (float-vector 26.8468 37.0 15.5) (float-vector 26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -37.0 -15.5) (float-vector 26.8468 37.0 -15.5) (float-vector 31.0 37.0 -1.088019e-14) (float-vector 31.0 -37.0 -1.088019e-14)))
         (instance face :init :vertices (list (float-vector 15.5 -37.0 -26.8468) (float-vector 15.5 37.0 -26.8468) (float-vector 26.8468 37.0 -15.5) (float-vector 26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector 0.0 -37.0 -31.0) (float-vector 0.0 37.0 -31.0) (float-vector 15.5 37.0 -26.8468) (float-vector 15.5 -37.0 -26.8468)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink18 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-r :weight 729.538 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.5) (float-vector 35.0 -250.0 50.7215) (float-vector 16.0 -250.0 50.6893) (float-vector 15.7469 -251.0 50.6897) (float-vector -55.7021 -251.0 50.5686) (float-vector -56.0 -250.0 50.5673) (float-vector -60.0 -250.0 50.5605) (float-vector -98.0 3.410605e-13 50.2904) (float-vector -94.0 3.410605e-13 50.2972) (float-vector -93.38 15.943 50.2851) (float-vector -88.142 25.142 50.2864) (float-vector -79.0 31.0 50.2971) (float-vector -1.364242e-12 31.0 50.4309) (float-vector 11.896 28.627 50.453) (float-vector 24.875 18.5 50.4834) (float-vector 31.0 4.547474e-13 50.509) (float-vector 35.0 3.979039e-13 50.5157) (float-vector 35.0 -93.96 50.5) (float-vector -36.66 -93.96 50.5) (float-vector 15.32 -223.5 50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.5) (float-vector 15.32 -223.5 50.5) (float-vector 15.32 -223.5 -50.5) (float-vector 35.0 -223.5 -50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 -50.5) (float-vector 15.32 -223.5 -50.5) (float-vector -36.66 -93.96 -50.5) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 3.979039e-13 -50.7723) (float-vector 31.0 4.547474e-13 -50.7791) (float-vector 24.875 18.5 -50.8047) (float-vector 11.896 28.627 -50.835) (float-vector -1.364242e-12 31.0 -50.8571) (float-vector -79.0 31.0 -50.991) (float-vector -88.142 25.142 -51.0017) (float-vector -93.38 15.943 -51.003) (float-vector -94.0 3.410605e-13 -50.9909) (float-vector -98.0 3.410605e-13 -50.9977) (float-vector -60.0 -250.0 -50.7275) (float-vector -56.0 -250.0 -50.7208) (float-vector -55.7021 -251.0 -50.7194) (float-vector 15.7469 -251.0 -50.5984) (float-vector 16.0 -250.0 -50.5988) (float-vector 35.0 -250.0 -50.5666)))
         (instance face :init :vertices (list (float-vector -36.66 -93.96 -50.5) (float-vector 15.32 -223.5 -50.5) (float-vector 15.32 -223.5 50.5) (float-vector -36.66 -93.96 50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.96 -50.5) (float-vector -36.66 -93.96 -50.5) (float-vector -36.66 -93.96 50.5) (float-vector 35.0 -93.96 50.5)))
         (instance face :init :vertices (list (float-vector 16.0 -250.0 58.5) (float-vector 16.0 -250.0 50.6893) (float-vector 35.0 -250.0 50.7215) (float-vector 35.0 -250.0 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -250.0 -58.5) (float-vector 35.0 -250.0 -50.5666) (float-vector 16.0 -250.0 -50.5988) (float-vector 16.0 -250.0 -58.5)))
         (instance face :init :vertices (list (float-vector 16.0 -250.0 58.5) (float-vector 35.0 -250.0 58.5) (float-vector 35.0 3.979039e-13 58.5) (float-vector 31.0 4.547474e-13 58.5) (float-vector 24.875 18.5 58.5) (float-vector 11.896 28.627 58.5) (float-vector -1.364242e-12 31.0 58.5) (float-vector -79.0 31.0 58.5) (float-vector -88.142 25.142 58.5) (float-vector -93.38 15.943 58.5) (float-vector -94.0 3.410605e-13 58.5) (float-vector -98.0 3.410605e-13 58.5) (float-vector -60.0 -250.0 58.5) (float-vector -56.0 -250.0 58.5) (float-vector -50.132 -269.7 58.5) (float-vector -36.535 -281.98 58.5) (float-vector -20.0 -286.0 58.5) (float-vector -2.7744 -281.61 58.5) (float-vector 11.664 -267.13 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -250.0 -58.5) (float-vector 16.0 -250.0 -58.5) (float-vector 11.664 -267.13 -58.5) (float-vector -2.7744 -281.61 -58.5) (float-vector -20.0 -286.0 -58.5) (float-vector -36.535 -281.98 -58.5) (float-vector -50.132 -269.7 -58.5) (float-vector -56.0 -250.0 -58.5) (float-vector -60.0 -250.0 -58.5) (float-vector -98.0 3.410605e-13 -58.5) (float-vector -94.0 3.410605e-13 -58.5) (float-vector -93.38 15.943 -58.5) (float-vector -88.142 25.142 -58.5) (float-vector -79.0 31.0 -58.5) (float-vector -1.364242e-12 31.0 -58.5) (float-vector 11.896 28.627 -58.5) (float-vector 24.875 18.5 -58.5) (float-vector 31.0 4.547474e-13 -58.5) (float-vector 35.0 3.979039e-13 -58.5)))
         (instance face :init :vertices (list (float-vector 35.0 3.979039e-13 58.5) (float-vector 35.0 -250.0 58.5) (float-vector 35.0 -250.0 50.7215) (float-vector 35.0 -223.5 50.5) (float-vector 35.0 -223.5 -50.5) (float-vector 35.0 -250.0 -50.5666) (float-vector 35.0 -250.0 -58.5) (float-vector 35.0 3.979039e-13 -58.5) (float-vector 35.0 3.979039e-13 -50.7723) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 -93.96 50.5) (float-vector 35.0 3.979039e-13 50.5157)))
         (instance face :init :vertices (list (float-vector 31.0 4.547474e-13 58.5) (float-vector 35.0 3.979039e-13 58.5) (float-vector 35.0 3.979039e-13 50.5157) (float-vector 31.0 4.547474e-13 50.509)))
         (instance face :init :vertices (list (float-vector 31.0 4.547474e-13 -50.7791) (float-vector 35.0 3.979039e-13 -50.7723) (float-vector 35.0 3.979039e-13 -58.5) (float-vector 31.0 4.547474e-13 -58.5)))
         (instance face :init :vertices (list (float-vector 24.875 18.5 58.5) (float-vector 31.0 4.547474e-13 58.5) (float-vector 31.0 4.547474e-13 50.509) (float-vector 24.875 18.5 50.4834)))
         (instance face :init :vertices (list (float-vector 24.875 18.5 -50.8047) (float-vector 31.0 4.547474e-13 -50.7791) (float-vector 31.0 4.547474e-13 -58.5) (float-vector 24.875 18.5 -58.5)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 58.5) (float-vector 24.875 18.5 58.5) (float-vector 24.875 18.5 50.4834) (float-vector 11.896 28.627 50.453)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 -50.835) (float-vector 24.875 18.5 -50.8047) (float-vector 24.875 18.5 -58.5) (float-vector 11.896 28.627 -58.5)))
         (instance face :init :vertices (list (float-vector -1.364242e-12 31.0 58.5) (float-vector 11.896 28.627 58.5) (float-vector 11.896 28.627 50.453) (float-vector -1.364242e-12 31.0 50.4309)))
         (instance face :init :vertices (list (float-vector -1.364242e-12 31.0 -50.8571) (float-vector 11.896 28.627 -50.835) (float-vector 11.896 28.627 -58.5) (float-vector -1.364242e-12 31.0 -58.5)))
         (instance face :init :vertices (list (float-vector -79.0 31.0 58.5) (float-vector -1.364242e-12 31.0 58.5) (float-vector -1.364242e-12 31.0 50.4309) (float-vector -79.0 31.0 50.2971)))
         (instance face :init :vertices (list (float-vector -79.0 31.0 -50.991) (float-vector -1.364242e-12 31.0 -50.8571) (float-vector -1.364242e-12 31.0 -58.5) (float-vector -79.0 31.0 -58.5)))
         (instance face :init :vertices (list (float-vector -88.142 25.142 58.5) (float-vector -79.0 31.0 58.5) (float-vector -79.0 31.0 50.2971) (float-vector -88.142 25.142 50.2864)))
         (instance face :init :vertices (list (float-vector -88.142 25.142 -51.0017) (float-vector -79.0 31.0 -50.991) (float-vector -79.0 31.0 -58.5) (float-vector -88.142 25.142 -58.5)))
         (instance face :init :vertices (list (float-vector -93.38 15.943 58.5) (float-vector -88.142 25.142 58.5) (float-vector -88.142 25.142 50.2864) (float-vector -93.38 15.943 50.2851)))
         (instance face :init :vertices (list (float-vector -93.38 15.943 -51.003) (float-vector -88.142 25.142 -51.0017) (float-vector -88.142 25.142 -58.5) (float-vector -93.38 15.943 -58.5)))
         (instance face :init :vertices (list (float-vector -94.0 3.410605e-13 58.5) (float-vector -93.38 15.943 58.5) (float-vector -93.38 15.943 50.2851) (float-vector -94.0 3.410605e-13 50.2972)))
         (instance face :init :vertices (list (float-vector -94.0 3.410605e-13 -50.9909) (float-vector -93.38 15.943 -51.003) (float-vector -93.38 15.943 -58.5) (float-vector -94.0 3.410605e-13 -58.5)))
         (instance face :init :vertices (list (float-vector -98.0 3.410605e-13 58.5) (float-vector -94.0 3.410605e-13 58.5) (float-vector -94.0 3.410605e-13 50.2972) (float-vector -98.0 3.410605e-13 50.2904)))
         (instance face :init :vertices (list (float-vector -98.0 3.410605e-13 -50.9977) (float-vector -94.0 3.410605e-13 -50.9909) (float-vector -94.0 3.410605e-13 -58.5) (float-vector -98.0 3.410605e-13 -58.5)))
         (instance face :init :vertices (list (float-vector -60.0 -250.0 58.5) (float-vector -98.0 3.410605e-13 58.5) (float-vector -98.0 3.410605e-13 50.2904) (float-vector -60.0 -250.0 50.5605)))
         (instance face :init :vertices (list (float-vector -60.0 -250.0 -50.7275) (float-vector -98.0 3.410605e-13 -50.9977) (float-vector -98.0 3.410605e-13 -58.5) (float-vector -60.0 -250.0 -58.5)))
         (instance face :init :vertices (list (float-vector -56.0 -250.0 58.5) (float-vector -60.0 -250.0 58.5) (float-vector -60.0 -250.0 50.5605) (float-vector -56.0 -250.0 50.5673)))
         (instance face :init :vertices (list (float-vector -56.0 -250.0 -50.7208) (float-vector -60.0 -250.0 -50.7275) (float-vector -60.0 -250.0 -58.5) (float-vector -56.0 -250.0 -58.5)))
         (instance face :init :vertices (list (float-vector -50.132 -269.7 58.5) (float-vector -56.0 -250.0 58.5) (float-vector -56.0 -250.0 50.5673) (float-vector -55.7021 -251.0 50.5686) (float-vector -55.7021 -251.0 55.5) (float-vector -50.132 -269.7 55.5)))
         (instance face :init :vertices (list (float-vector -50.132 -269.7 -55.5) (float-vector -55.7021 -251.0 -55.5) (float-vector -55.7021 -251.0 -50.7194) (float-vector -56.0 -250.0 -50.7208) (float-vector -56.0 -250.0 -58.5) (float-vector -50.132 -269.7 -58.5)))
         (instance face :init :vertices (list (float-vector -36.535 -281.98 58.5) (float-vector -50.132 -269.7 58.5) (float-vector -50.132 -269.7 55.5) (float-vector -36.535 -281.98 55.5)))
         (instance face :init :vertices (list (float-vector -36.535 -281.98 -55.5) (float-vector -50.132 -269.7 -55.5) (float-vector -50.132 -269.7 -58.5) (float-vector -36.535 -281.98 -58.5)))
         (instance face :init :vertices (list (float-vector -20.0 -286.0 58.5) (float-vector -36.535 -281.98 58.5) (float-vector -36.535 -281.98 55.5) (float-vector -20.0 -286.0 55.5)))
         (instance face :init :vertices (list (float-vector -20.0 -286.0 -55.5) (float-vector -36.535 -281.98 -55.5) (float-vector -36.535 -281.98 -58.5) (float-vector -20.0 -286.0 -58.5)))
         (instance face :init :vertices (list (float-vector -2.7744 -281.61 58.5) (float-vector -20.0 -286.0 58.5) (float-vector -20.0 -286.0 55.5) (float-vector -2.7744 -281.61 55.5)))
         (instance face :init :vertices (list (float-vector -2.7744 -281.61 -55.5) (float-vector -20.0 -286.0 -55.5) (float-vector -20.0 -286.0 -58.5) (float-vector -2.7744 -281.61 -58.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 55.5) (float-vector 15.7469 -251.0 55.5) (float-vector 15.7469 -251.0 50.6897) (float-vector 16.0 -250.0 50.6893) (float-vector 16.0 -250.0 58.5) (float-vector 11.664 -267.13 58.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 58.5) (float-vector -2.7744 -281.61 58.5) (float-vector -2.7744 -281.61 55.5) (float-vector 11.664 -267.13 55.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 -58.5) (float-vector 16.0 -250.0 -58.5) (float-vector 16.0 -250.0 -50.5988) (float-vector 15.7469 -251.0 -50.5984) (float-vector 15.7469 -251.0 -55.5) (float-vector 11.664 -267.13 -55.5)))
         (instance face :init :vertices (list (float-vector 11.664 -267.13 -55.5) (float-vector -2.7744 -281.61 -55.5) (float-vector -2.7744 -281.61 -58.5) (float-vector 11.664 -267.13 -58.5)))
         (instance face :init :vertices (list (float-vector 15.7469 -251.0 55.5) (float-vector 11.664 -267.13 55.5) (float-vector -2.7744 -281.61 55.5) (float-vector -20.0 -286.0 55.5) (float-vector -36.535 -281.98 55.5) (float-vector -50.132 -269.7 55.5) (float-vector -55.7021 -251.0 55.5)))
         (instance face :init :vertices (list (float-vector -55.7021 -251.0 55.5) (float-vector -55.7021 -251.0 50.5686) (float-vector 15.7469 -251.0 50.6897) (float-vector 15.7469 -251.0 55.5)))
         (instance face :init :vertices (list (float-vector 15.7469 -251.0 -55.5) (float-vector 15.7469 -251.0 -50.5984) (float-vector -55.7021 -251.0 -50.7194) (float-vector -55.7021 -251.0 -55.5)))
         (instance face :init :vertices (list (float-vector -55.7021 -251.0 -55.5) (float-vector -50.132 -269.7 -55.5) (float-vector -36.535 -281.98 -55.5) (float-vector -20.0 -286.0 -55.5) (float-vector -2.7744 -281.61 -55.5) (float-vector 11.664 -267.13 -55.5) (float-vector 15.7469 -251.0 -55.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -93.9641 -58.5) (float-vector 38.0 -93.9641 -58.5) (float-vector 38.0 -223.5 -58.5) (float-vector 35.0 -223.5 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -93.9641 58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 35.0 -223.5 58.5) (float-vector 38.0 -223.5 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.9641 -58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 38.0 -93.9641 58.5) (float-vector 38.0 -93.9641 -58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 -58.5) (float-vector 35.0 -223.5 58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 35.0 -93.9641 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -223.5 -58.5) (float-vector 38.0 -223.5 58.5) (float-vector 35.0 -223.5 58.5) (float-vector 35.0 -223.5 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -93.9641 -58.5) (float-vector 38.0 -93.9641 58.5) (float-vector 38.0 -223.5 58.5) (float-vector 38.0 -223.5 -58.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (setq blink19 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-p :weight 2312.41 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 30.883 18.5 52.5) (float-vector 51.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 15.685 32.403 -52.5) (float-vector 15.685 32.403 52.5) (float-vector 30.883 18.5 52.5) (float-vector 30.883 18.5 -52.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 36.0 -52.5) (float-vector -4.263256e-14 36.0 52.5) (float-vector 15.685 32.403 52.5) (float-vector 15.685 32.403 -52.5)))
         (instance face :init :vertices (list (float-vector -17.622 31.392 -52.5) (float-vector -17.622 31.392 52.5) (float-vector -4.263256e-14 36.0 52.5) (float-vector -2.842171e-14 36.0 -52.5)))
         (instance face :init :vertices (list (float-vector -31.475 17.474 -52.5) (float-vector -31.475 17.474 52.5) (float-vector -17.622 31.392 52.5) (float-vector -17.622 31.392 -52.5)))
         (instance face :init :vertices (list (float-vector -36.0 0.0 -52.5) (float-vector -36.0 0.0 52.5) (float-vector -31.475 17.474 52.5) (float-vector -31.475 17.474 -52.5)))
         (instance face :init :vertices (list (float-vector -38.914 -20.556 -52.5) (float-vector -38.914 -20.556 52.5) (float-vector -36.0 0.0 52.5) (float-vector -36.0 0.0 -52.5)))
         (instance face :init :vertices (list (float-vector -42.835 -20.0 -52.5) (float-vector -42.835 -20.0 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -38.914 -20.556 -52.5)))
         (instance face :init :vertices (list (float-vector -68.0 -197.5 -52.5) (float-vector -68.0 -197.5 -44.5) (float-vector -63.8176 -168.0 -44.5) (float-vector -63.8176 -168.0 44.5) (float-vector -68.0 -197.5 44.5) (float-vector -68.0 -197.5 52.5) (float-vector -42.835 -20.0 52.5) (float-vector -42.835 -20.0 -52.5)))
         (instance face :init :vertices (list (float-vector -24.875 -268.5 52.5) (float-vector -68.0 -197.5 52.5) (float-vector -68.0 -197.5 44.5) (float-vector -24.875 -268.5 44.5)))
         (instance face :init :vertices (list (float-vector -24.875 -268.5 -52.5) (float-vector -24.875 -268.5 -44.5) (float-vector -68.0 -197.5 -44.5) (float-vector -68.0 -197.5 -52.5)))
         (instance face :init :vertices (list (float-vector -14.601 -277.35 52.5) (float-vector -24.875 -268.5 52.5) (float-vector -24.875 -268.5 44.5) (float-vector -14.601 -277.35 44.5)))
         (instance face :init :vertices (list (float-vector -14.601 -277.35 -52.5) (float-vector -14.601 -277.35 -44.5) (float-vector -24.875 -268.5 -44.5) (float-vector -24.875 -268.5 -52.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -281.0 52.5) (float-vector -14.601 -277.35 52.5) (float-vector -14.601 -277.35 44.5) (float-vector -1.421085e-14 -281.0 44.5)))
         (instance face :init :vertices (list (float-vector 0.0 -281.0 -52.5) (float-vector 0.0 -281.0 -44.5) (float-vector -14.601 -277.35 -44.5) (float-vector -14.601 -277.35 -52.5)))
         (instance face :init :vertices (list (float-vector 13.815 -277.75 52.5) (float-vector -2.842171e-14 -281.0 52.5) (float-vector -1.421085e-14 -281.0 44.5) (float-vector 13.815 -277.75 44.5)))
         (instance face :init :vertices (list (float-vector 13.815 -277.75 -52.5) (float-vector 13.815 -277.75 -44.5) (float-vector 0.0 -281.0 -44.5) (float-vector 0.0 -281.0 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -250.0 52.5) (float-vector 13.815 -277.75 52.5) (float-vector 13.815 -277.75 44.5) (float-vector 51.0 -250.0 44.5)))
         (instance face :init :vertices (list (float-vector 51.0 -250.0 -52.5) (float-vector 51.0 -250.0 -44.5) (float-vector 13.815 -277.75 -44.5) (float-vector 13.815 -277.75 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -250.0 52.5) (float-vector 51.0 -250.0 52.5) (float-vector 51.0 -250.0 44.5) (float-vector 55.0 -250.0 44.5)))
         (instance face :init :vertices (list (float-vector 55.0 -250.0 -52.5) (float-vector 55.0 -250.0 -44.5) (float-vector 51.0 -250.0 -44.5) (float-vector 51.0 -250.0 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -250.0 52.5) (float-vector 55.0 -250.0 44.5) (float-vector 55.0 -168.0 44.5) (float-vector 55.0 -168.0 -44.5) (float-vector 55.0 -250.0 -44.5) (float-vector 55.0 -250.0 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 52.5) (float-vector 30.883 18.5 52.5) (float-vector 15.685 32.403 52.5) (float-vector -4.263256e-14 36.0 52.5) (float-vector -17.622 31.392 52.5) (float-vector -31.475 17.474 52.5) (float-vector -36.0 0.0 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -42.835 -20.0 52.5) (float-vector -68.0 -197.5 52.5) (float-vector -24.875 -268.5 52.5) (float-vector -14.601 -277.35 52.5) (float-vector -2.842171e-14 -281.0 52.5) (float-vector 13.815 -277.75 52.5) (float-vector 51.0 -250.0 52.5) (float-vector 55.0 -250.0 52.5) (float-vector 55.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -250.0 -52.5) (float-vector 51.0 -250.0 -52.5) (float-vector 13.815 -277.75 -52.5) (float-vector 0.0 -281.0 -52.5) (float-vector -14.601 -277.35 -52.5) (float-vector -24.875 -268.5 -52.5) (float-vector -68.0 -197.5 -52.5) (float-vector -42.835 -20.0 -52.5) (float-vector -38.914 -20.556 -52.5) (float-vector -36.0 0.0 -52.5) (float-vector -31.475 17.474 -52.5) (float-vector -17.622 31.392 -52.5) (float-vector -2.842171e-14 36.0 -52.5) (float-vector 15.685 32.403 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 51.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 51.0 -19.5 52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 44.5) (float-vector 55.0 -250.0 44.5) (float-vector 51.0 -250.0 44.5) (float-vector 13.815 -277.75 44.5) (float-vector -1.421085e-14 -281.0 44.5) (float-vector -14.601 -277.35 44.5) (float-vector -24.875 -268.5 44.5) (float-vector -68.0 -197.5 44.5) (float-vector -63.8176 -168.0 44.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 -44.5) (float-vector 55.0 -168.0 44.5) (float-vector -63.8176 -168.0 44.5) (float-vector -63.8176 -168.0 -44.5)))
         (instance face :init :vertices (list (float-vector -63.8176 -168.0 -44.5) (float-vector -68.0 -197.5 -44.5) (float-vector -24.875 -268.5 -44.5) (float-vector -14.601 -277.35 -44.5) (float-vector 0.0 -281.0 -44.5) (float-vector 13.815 -277.75 -44.5) (float-vector 51.0 -250.0 -44.5) (float-vector 55.0 -250.0 -44.5) (float-vector 55.0 -168.0 -44.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5) (float-vector 55.0 -168.0 -52.5) (float-vector 55.0 26.5 -52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 52.5) (float-vector 58.0 -168.0 52.5) (float-vector 58.0 26.5 52.5) (float-vector 55.0 26.5 52.5)))
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5) (float-vector 58.0 -168.0 52.5) (float-vector 55.0 -168.0 52.5) (float-vector 55.0 -168.0 -52.5)))
         (instance face :init :vertices (list (float-vector 58.0 26.5 -52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 -168.0 52.5) (float-vector 58.0 -168.0 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 26.5 -52.5) (float-vector 55.0 26.5 52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 -52.5) (float-vector 55.0 -168.0 52.5) (float-vector 55.0 26.5 52.5) (float-vector 55.0 26.5 -52.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray50)
     (setq blink20 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-knee-p :weight 1682.63 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 31.0 5.684342e-14 41.5) (float-vector 26.8468 15.5 41.5) (float-vector 15.5 26.8468 41.5) (float-vector 1.776357e-14 31.0 41.5) (float-vector -15.5 26.8468 41.5) (float-vector -26.8468 15.5 41.5) (float-vector -31.0 1.136868e-13 41.5) (float-vector -26.8468 -15.5 41.5) (float-vector -15.5 -26.8468 41.5) (float-vector -5.684342e-14 -31.0 41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector -5.329071e-14 -31.0 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -31.0 5.684342e-14 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector 1.776357e-14 31.0 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 26.8468 15.5 -41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 31.0 0.0 -41.5) (float-vector 31.0 5.684342e-14 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 -31.0 41.5) (float-vector -5.329071e-14 -31.0 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -5.329071e-14 -31.0 -41.5) (float-vector -5.684342e-14 -31.0 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -31.0 1.136868e-13 41.5) (float-vector -31.0 5.684342e-14 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -31.0 5.684342e-14 -41.5) (float-vector -31.0 1.136868e-13 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -26.8468 15.5 41.5)))
         (instance face :init :vertices (list (float-vector 1.776357e-14 31.0 41.5) (float-vector 1.776357e-14 31.0 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 1.776357e-14 31.0 -41.5) (float-vector 1.776357e-14 31.0 41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 5.684342e-14 41.5) (float-vector 31.0 0.0 -41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 26.8468 15.5 41.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink21 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-p :weight 1010.67 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-ankle-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -66.5 59.0 -134.0) (float-vector -69.0 59.0 -134.0) (float-vector -69.0 59.0 74.0) (float-vector -66.5 59.0 74.0) (float-vector -44.0 59.0 42.0) (float-vector -44.0 59.0 -55.0)))
         (instance face :init :vertices (list (float-vector -66.5 59.0 -134.0) (float-vector -66.5 57.0 -134.0) (float-vector -69.0 57.0 -134.0) (float-vector -69.0 59.0 -134.0)))
         (instance face :init :vertices (list (float-vector -66.5 57.0 -134.0) (float-vector -44.0 57.0 -55.0) (float-vector -44.0 57.0 42.0) (float-vector -66.5 57.0 74.0) (float-vector -69.0 57.0 74.0) (float-vector -69.0 57.0 40.0) (float-vector -50.5 57.0 40.0) (float-vector -50.5 57.0 35.0) (float-vector -69.0 57.0 35.0) (float-vector -69.0 57.0 -48.0) (float-vector -50.5 57.0 -48.0) (float-vector -50.5 57.0 -53.0) (float-vector -69.0 57.0 -53.0) (float-vector -69.0 57.0 -134.0)))
         (instance face :init :vertices (list (float-vector -69.0 59.0 74.0) (float-vector -69.0 57.0 74.0) (float-vector -66.5 57.0 74.0) (float-vector -66.5 59.0 74.0)))
         (instance face :init :vertices (list (float-vector -44.0 57.0 42.0) (float-vector -44.0 59.0 42.0) (float-vector -66.5 59.0 74.0) (float-vector -66.5 57.0 74.0)))
         (instance face :init :vertices (list (float-vector -44.0 57.0 -55.0) (float-vector -44.0 59.0 -55.0) (float-vector -44.0 59.0 42.0) (float-vector -44.0 57.0 42.0)))
         (instance face :init :vertices (list (float-vector -44.0 59.0 -55.0) (float-vector -44.0 57.0 -55.0) (float-vector -66.5 57.0 -134.0) (float-vector -66.5 59.0 -134.0)))
         (instance face :init :vertices (list (float-vector -50.5 -39.0 35.0) (float-vector -50.5 -39.0 40.0) (float-vector -50.5 -57.0 40.0) (float-vector -50.5 -57.0 35.0)))
         (instance face :init :vertices (list (float-vector -50.5 -39.0 35.0) (float-vector -48.535 -31.578 35.0) (float-vector -48.535 -31.578 40.0) (float-vector -50.5 -39.0 40.0)))
         (instance face :init :vertices (list (float-vector -48.535 -31.578 35.0) (float-vector -43.154 -26.1 35.0) (float-vector -43.154 -26.1 40.0) (float-vector -48.535 -31.578 40.0)))
         (instance face :init :vertices (list (float-vector -43.154 -26.1 35.0) (float-vector -37.262 -24.104 35.0) (float-vector -37.262 -24.104 40.0) (float-vector -43.154 -26.1 40.0)))
         (instance face :init :vertices (list (float-vector -37.262 -24.104 35.0) (float-vector -18.2957 -24.0511 35.0) (float-vector -18.2957 -24.0511 40.0) (float-vector -37.262 -24.104 40.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 35.0) (float-vector -37.262 24.104 40.0) (float-vector -18.2957 24.0511 40.0) (float-vector -18.2957 24.0511 35.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 35.0) (float-vector -43.154 26.1 35.0) (float-vector -43.154 26.1 40.0) (float-vector -37.262 24.104 40.0)))
         (instance face :init :vertices (list (float-vector -43.154 26.1 35.0) (float-vector -48.535 31.578 35.0) (float-vector -48.535 31.578 40.0) (float-vector -43.154 26.1 40.0)))
         (instance face :init :vertices (list (float-vector -48.535 31.578 35.0) (float-vector -50.5 39.0 35.0) (float-vector -50.5 39.0 40.0) (float-vector -48.535 31.578 40.0)))
         (instance face :init :vertices (list (float-vector -50.5 39.0 35.0) (float-vector -50.5 57.0 35.0) (float-vector -50.5 57.0 40.0) (float-vector -50.5 39.0 40.0)))
         (instance face :init :vertices (list (float-vector -69.0 57.0 40.0) (float-vector -69.0 -57.0 40.0) (float-vector -50.5 -57.0 40.0) (float-vector -50.5 -39.0 40.0) (float-vector -48.535 -31.578 40.0) (float-vector -43.154 -26.1 40.0) (float-vector -37.262 -24.104 40.0) (float-vector -18.2957 -24.0511 40.0) (float-vector -26.8468 -15.5 40.0) (float-vector -31.0 0.0 40.0) (float-vector -26.8468 15.5 40.0) (float-vector -18.2957 24.0511 40.0) (float-vector -37.262 24.104 40.0) (float-vector -43.154 26.1 40.0) (float-vector -48.535 31.578 40.0) (float-vector -50.5 39.0 40.0) (float-vector -50.5 57.0 40.0)))
         (instance face :init :vertices (list (float-vector -18.2957 24.0511 35.0) (float-vector -26.8468 15.5 35.0) (float-vector -31.0 0.0 35.0) (float-vector -26.8468 -15.5 35.0) (float-vector -18.2957 -24.0511 35.0) (float-vector -37.262 -24.104 35.0) (float-vector -43.154 -26.1 35.0) (float-vector -48.535 -31.578 35.0) (float-vector -50.5 -39.0 35.0) (float-vector -50.5 -57.0 35.0) (float-vector -69.0 -57.0 35.0) (float-vector -69.0 57.0 35.0) (float-vector -50.5 57.0 35.0) (float-vector -50.5 39.0 35.0) (float-vector -48.535 31.578 35.0) (float-vector -43.154 26.1 35.0) (float-vector -37.262 24.104 35.0)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 35.0) (float-vector -26.8468 15.5 30.0) (float-vector -31.0 0.0 30.0) (float-vector -31.0 0.0 35.0)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 40.0) (float-vector -31.0 0.0 45.0) (float-vector -26.8468 15.5 45.0) (float-vector -26.8468 15.5 40.0)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 45.0) (float-vector -15.5 26.8468 45.0) (float-vector -15.5 26.8468 30.0) (float-vector -26.8468 15.5 30.0) (float-vector -26.8468 15.5 35.0) (float-vector -18.2957 24.0511 35.0) (float-vector -18.2957 24.0511 40.0) (float-vector -26.8468 15.5 40.0)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 45.0) (float-vector -5.684342e-14 31.0 45.0) (float-vector -5.684342e-14 31.0 30.0) (float-vector -15.5 26.8468 30.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 31.0 45.0) (float-vector 15.5 26.8468 45.0) (float-vector 15.5 26.8468 30.0) (float-vector -5.684342e-14 31.0 30.0)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 45.0) (float-vector 26.8468 15.5 45.0) (float-vector 26.8468 15.5 30.0) (float-vector 15.5 26.8468 30.0)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 45.0) (float-vector 31.0 4.263256e-14 45.0) (float-vector 31.0 4.263256e-14 30.0) (float-vector 26.8468 15.5 30.0)))
         (instance face :init :vertices (list (float-vector 31.0 4.263256e-14 45.0) (float-vector 26.8468 -15.5 45.0) (float-vector 26.8468 -15.5 30.0) (float-vector 31.0 4.263256e-14 30.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 45.0) (float-vector 15.5 -26.8468 45.0) (float-vector 15.5 -26.8468 30.0) (float-vector 26.8468 -15.5 30.0)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 45.0) (float-vector 2.842171e-14 -31.0 45.0) (float-vector 2.842171e-14 -31.0 30.0) (float-vector 15.5 -26.8468 30.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -31.0 45.0) (float-vector -15.5 -26.8468 45.0) (float-vector -15.5 -26.8468 30.0) (float-vector 2.842171e-14 -31.0 30.0)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 45.0) (float-vector -26.8468 -15.5 45.0) (float-vector -26.8468 -15.5 40.0) (float-vector -18.2957 -24.0511 40.0) (float-vector -18.2957 -24.0511 35.0) (float-vector -26.8468 -15.5 35.0) (float-vector -26.8468 -15.5 30.0) (float-vector -15.5 -26.8468 30.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 30.0) (float-vector -31.0 0.0 30.0) (float-vector -26.8468 15.5 30.0) (float-vector -15.5 26.8468 30.0) (float-vector -5.684342e-14 31.0 30.0) (float-vector 15.5 26.8468 30.0) (float-vector 26.8468 15.5 30.0) (float-vector 31.0 4.263256e-14 30.0) (float-vector 26.8468 -15.5 30.0) (float-vector 15.5 -26.8468 30.0) (float-vector 2.842171e-14 -31.0 30.0) (float-vector -15.5 -26.8468 30.0)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 30.0) (float-vector -26.8468 -15.5 30.0) (float-vector -26.8468 -15.5 35.0) (float-vector -31.0 0.0 35.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 45.0) (float-vector -31.0 0.0 45.0) (float-vector -31.0 0.0 40.0) (float-vector -26.8468 -15.5 40.0)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 45.0) (float-vector -26.8468 -15.5 45.0) (float-vector -15.5 -26.8468 45.0) (float-vector 2.842171e-14 -31.0 45.0) (float-vector 15.5 -26.8468 45.0) (float-vector 26.8468 -15.5 45.0) (float-vector 31.0 4.263256e-14 45.0) (float-vector 26.8468 15.5 45.0) (float-vector 15.5 26.8468 45.0) (float-vector -5.684342e-14 31.0 45.0) (float-vector -15.5 26.8468 45.0) (float-vector -26.8468 15.5 45.0)))
         (instance face :init :vertices (list (float-vector -73.0 -70.0 80.0) (float-vector -67.0 -70.0 80.0) (float-vector -67.0 70.0 80.0) (float-vector -73.0 70.0 80.0)))
         (instance face :init :vertices (list (float-vector -73.0 -70.0 80.0) (float-vector -73.0 -70.0 -140.0) (float-vector -67.0 -70.0 -140.0) (float-vector -67.0 -70.0 80.0)))
         (instance face :init :vertices (list (float-vector -73.0 -70.0 -140.0) (float-vector -73.0 70.0 -140.0) (float-vector -67.0 70.0 -140.0) (float-vector -67.0 -70.0 -140.0)))
         (instance face :init :vertices (list (float-vector -67.0 70.0 -140.0) (float-vector -67.0 70.0 80.0) (float-vector -67.0 -70.0 80.0) (float-vector -67.0 -70.0 -140.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -67.0 -67.0 77.0) (float-vector -67.0 67.0 77.0) (float-vector -67.0 67.0 -137.0) (float-vector -67.0 -67.0 -137.0)))
))
         (instance face :init :vertices (list (float-vector -73.0 70.0 -140.0) (float-vector -73.0 70.0 80.0) (float-vector -67.0 70.0 80.0) (float-vector -67.0 70.0 -140.0)))
         (instance face :init :vertices (list (float-vector -73.0 70.0 80.0) (float-vector -73.0 70.0 -140.0) (float-vector -73.0 -70.0 -140.0) (float-vector -73.0 -70.0 80.0)))
         (instance face :init :vertices (list (float-vector -67.0 -67.0 77.0) (float-vector -69.0 -67.0 77.0) (float-vector -69.0 67.0 77.0) (float-vector -67.0 67.0 77.0)))
         (instance face :init :vertices (list (float-vector -67.0 -67.0 -137.0) (float-vector -69.0 -67.0 -137.0) (float-vector -69.0 -67.0 77.0) (float-vector -67.0 -67.0 77.0)))
         (instance face :init :vertices (list (float-vector -67.0 67.0 -137.0) (float-vector -69.0 67.0 -137.0) (float-vector -69.0 -67.0 -137.0) (float-vector -67.0 -67.0 -137.0)))
         (instance face :init :vertices (list (float-vector -69.0 -57.0 -48.0) (float-vector -69.0 57.0 -48.0) (float-vector -69.0 57.0 35.0) (float-vector -69.0 -57.0 35.0)))
         (instance face :init :vertices (list (float-vector -69.0 67.0 -137.0) (float-vector -69.0 67.0 77.0) (float-vector -69.0 -67.0 77.0) (float-vector -69.0 -67.0 -137.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -69.0 57.0 -53.0) (float-vector -69.0 -57.0 -53.0) (float-vector -69.0 -57.0 -134.0) (float-vector -69.0 -59.0 -134.0) (float-vector -69.0 -59.0 74.0) (float-vector -69.0 -57.0 74.0) (float-vector -69.0 -57.0 40.0) (float-vector -69.0 57.0 40.0) (float-vector -69.0 57.0 74.0) (float-vector -69.0 59.0 74.0) (float-vector -69.0 59.0 -134.0) (float-vector -69.0 57.0 -134.0)))
))
         (instance face :init :vertices (list (float-vector -69.0 67.0 77.0) (float-vector -69.0 67.0 -137.0) (float-vector -67.0 67.0 -137.0) (float-vector -67.0 67.0 77.0)))
         (instance face :init :vertices (list (float-vector -31.0 -1.421085e-14 -47.5) (float-vector -26.8468 -15.5 -47.5) (float-vector -15.5 -26.8468 -47.5) (float-vector 5.684342e-14 -31.0 -47.5) (float-vector 15.5 -26.8468 -47.5) (float-vector 26.8468 -15.5 -47.5) (float-vector 31.0 2.842171e-14 -47.5) (float-vector 26.8468 15.5 -47.5) (float-vector 15.5 26.8468 -47.5) (float-vector -2.842171e-14 31.0 -47.5) (float-vector -15.5 26.8468 -47.5) (float-vector -26.8468 15.5 -47.5)))
         (instance face :init :vertices (list (float-vector -31.0 -1.421085e-14 -47.5) (float-vector -31.0 -1.421085e-14 -48.0) (float-vector -26.8468 -15.5 -48.0) (float-vector -26.8468 -15.5 -47.5)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 -89.5) (float-vector -26.8468 -15.5 -89.5) (float-vector -26.8468 -15.5 -53.0) (float-vector -31.0 -1.421085e-14 -53.0)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 -89.5) (float-vector -26.8468 15.5 -89.5) (float-vector -15.5 26.8468 -89.5) (float-vector -2.842171e-14 31.0 -89.5) (float-vector 15.5 26.8468 -89.5) (float-vector 26.8468 15.5 -89.5) (float-vector 31.0 4.263256e-14 -89.5) (float-vector 26.8468 -15.5 -89.5) (float-vector 15.5 -26.8468 -89.5) (float-vector 8.526513e-14 -31.0 -89.5) (float-vector -15.5 -26.8468 -89.5) (float-vector -26.8468 -15.5 -89.5)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 -89.5) (float-vector -15.5 -26.8468 -47.5) (float-vector -26.8468 -15.5 -47.5) (float-vector -26.8468 -15.5 -48.0) (float-vector -18.2957 -24.0511 -48.0) (float-vector -18.2957 -24.0511 -53.0) (float-vector -26.8468 -15.5 -53.0) (float-vector -26.8468 -15.5 -89.5)))
         (instance face :init :vertices (list (float-vector 8.526513e-14 -31.0 -89.5) (float-vector 5.684342e-14 -31.0 -47.5) (float-vector -15.5 -26.8468 -47.5) (float-vector -15.5 -26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 -89.5) (float-vector 15.5 -26.8468 -47.5) (float-vector 5.684342e-14 -31.0 -47.5) (float-vector 8.526513e-14 -31.0 -89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 -89.5) (float-vector 26.8468 -15.5 -47.5) (float-vector 15.5 -26.8468 -47.5) (float-vector 15.5 -26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector 31.0 4.263256e-14 -89.5) (float-vector 31.0 2.842171e-14 -47.5) (float-vector 26.8468 -15.5 -47.5) (float-vector 26.8468 -15.5 -89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 -89.5) (float-vector 26.8468 15.5 -47.5) (float-vector 31.0 2.842171e-14 -47.5) (float-vector 31.0 4.263256e-14 -89.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 -89.5) (float-vector 15.5 26.8468 -47.5) (float-vector 26.8468 15.5 -47.5) (float-vector 26.8468 15.5 -89.5)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 31.0 -89.5) (float-vector -2.842171e-14 31.0 -47.5) (float-vector 15.5 26.8468 -47.5) (float-vector 15.5 26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 -89.5) (float-vector -15.5 26.8468 -47.5) (float-vector -2.842171e-14 31.0 -47.5) (float-vector -2.842171e-14 31.0 -89.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 -89.5) (float-vector -26.8468 15.5 -53.0) (float-vector -18.2957 24.0511 -53.0) (float-vector -18.2957 24.0511 -48.0) (float-vector -26.8468 15.5 -48.0) (float-vector -26.8468 15.5 -47.5) (float-vector -15.5 26.8468 -47.5) (float-vector -15.5 26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 -48.0) (float-vector -31.0 -1.421085e-14 -48.0) (float-vector -31.0 -1.421085e-14 -47.5) (float-vector -26.8468 15.5 -47.5)))
         (instance face :init :vertices (list (float-vector -31.0 -1.421085e-14 -53.0) (float-vector -26.8468 15.5 -53.0) (float-vector -26.8468 15.5 -89.5) (float-vector -31.0 0.0 -89.5)))
         (instance face :init :vertices (list (float-vector -50.5 57.0 -53.0) (float-vector -50.5 39.0 -53.0) (float-vector -48.535 31.578 -53.0) (float-vector -43.154 26.1 -53.0) (float-vector -37.262 24.104 -53.0) (float-vector -18.2957 24.0511 -53.0) (float-vector -26.8468 15.5 -53.0) (float-vector -31.0 -1.421085e-14 -53.0) (float-vector -26.8468 -15.5 -53.0) (float-vector -18.2957 -24.0511 -53.0) (float-vector -37.262 -24.104 -53.0) (float-vector -43.154 -26.1 -53.0) (float-vector -48.535 -31.578 -53.0) (float-vector -50.5 -39.0 -53.0) (float-vector -50.5 -57.0 -53.0) (float-vector -69.0 -57.0 -53.0) (float-vector -69.0 57.0 -53.0)))
         (instance face :init :vertices (list (float-vector -18.2957 24.0511 -48.0) (float-vector -37.262 24.104 -48.0) (float-vector -43.154 26.1 -48.0) (float-vector -48.535 31.578 -48.0) (float-vector -50.5 39.0 -48.0) (float-vector -50.5 57.0 -48.0) (float-vector -69.0 57.0 -48.0) (float-vector -69.0 -57.0 -48.0) (float-vector -50.5 -57.0 -48.0) (float-vector -50.5 -39.0 -48.0) (float-vector -48.535 -31.578 -48.0) (float-vector -43.154 -26.1 -48.0) (float-vector -37.262 -24.104 -48.0) (float-vector -18.2957 -24.0511 -48.0) (float-vector -26.8468 -15.5 -48.0) (float-vector -31.0 -1.421085e-14 -48.0) (float-vector -26.8468 15.5 -48.0)))
         (instance face :init :vertices (list (float-vector -50.5 39.0 -48.0) (float-vector -50.5 39.0 -53.0) (float-vector -50.5 57.0 -53.0) (float-vector -50.5 57.0 -48.0)))
         (instance face :init :vertices (list (float-vector -48.535 31.578 -48.0) (float-vector -48.535 31.578 -53.0) (float-vector -50.5 39.0 -53.0) (float-vector -50.5 39.0 -48.0)))
         (instance face :init :vertices (list (float-vector -43.154 26.1 -48.0) (float-vector -43.154 26.1 -53.0) (float-vector -48.535 31.578 -53.0) (float-vector -48.535 31.578 -48.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 -48.0) (float-vector -37.262 24.104 -53.0) (float-vector -43.154 26.1 -53.0) (float-vector -43.154 26.1 -48.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 -53.0) (float-vector -37.262 24.104 -48.0) (float-vector -18.2957 24.0511 -48.0) (float-vector -18.2957 24.0511 -53.0)))
         (instance face :init :vertices (list (float-vector -37.262 -24.104 -48.0) (float-vector -37.262 -24.104 -53.0) (float-vector -18.2957 -24.0511 -53.0) (float-vector -18.2957 -24.0511 -48.0)))
         (instance face :init :vertices (list (float-vector -43.154 -26.1 -48.0) (float-vector -43.154 -26.1 -53.0) (float-vector -37.262 -24.104 -53.0) (float-vector -37.262 -24.104 -48.0)))
         (instance face :init :vertices (list (float-vector -48.535 -31.578 -48.0) (float-vector -48.535 -31.578 -53.0) (float-vector -43.154 -26.1 -53.0) (float-vector -43.154 -26.1 -48.0)))
         (instance face :init :vertices (list (float-vector -50.5 -39.0 -48.0) (float-vector -50.5 -39.0 -53.0) (float-vector -48.535 -31.578 -53.0) (float-vector -48.535 -31.578 -48.0)))
         (instance face :init :vertices (list (float-vector -50.5 -39.0 -53.0) (float-vector -50.5 -39.0 -48.0) (float-vector -50.5 -57.0 -48.0) (float-vector -50.5 -57.0 -53.0)))
         (instance face :init :vertices (list (float-vector -66.5 -59.0 -134.0) (float-vector -66.5 -57.0 -134.0) (float-vector -44.0 -57.0 -55.0) (float-vector -44.0 -59.0 -55.0)))
         (instance face :init :vertices (list (float-vector -44.0 -57.0 -55.0) (float-vector -44.0 -57.0 42.0) (float-vector -44.0 -59.0 42.0) (float-vector -44.0 -59.0 -55.0)))
         (instance face :init :vertices (list (float-vector -44.0 -57.0 42.0) (float-vector -66.5 -57.0 74.0) (float-vector -66.5 -59.0 74.0) (float-vector -44.0 -59.0 42.0)))
         (instance face :init :vertices (list (float-vector -66.5 -57.0 74.0) (float-vector -69.0 -57.0 74.0) (float-vector -69.0 -59.0 74.0) (float-vector -66.5 -59.0 74.0)))
         (instance face :init :vertices (list (float-vector -69.0 -59.0 -134.0) (float-vector -66.5 -59.0 -134.0) (float-vector -44.0 -59.0 -55.0) (float-vector -44.0 -59.0 42.0) (float-vector -66.5 -59.0 74.0) (float-vector -69.0 -59.0 74.0)))
         (instance face :init :vertices (list (float-vector -69.0 -57.0 -134.0) (float-vector -66.5 -57.0 -134.0) (float-vector -66.5 -59.0 -134.0) (float-vector -69.0 -59.0 -134.0)))
         (instance face :init :vertices (list (float-vector -66.5 -57.0 -134.0) (float-vector -69.0 -57.0 -134.0) (float-vector -69.0 -57.0 -53.0) (float-vector -50.5 -57.0 -53.0) (float-vector -50.5 -57.0 -48.0) (float-vector -69.0 -57.0 -48.0) (float-vector -69.0 -57.0 35.0) (float-vector -50.5 -57.0 35.0) (float-vector -50.5 -57.0 40.0) (float-vector -69.0 -57.0 40.0) (float-vector -69.0 -57.0 74.0) (float-vector -66.5 -57.0 74.0) (float-vector -44.0 -57.0 42.0) (float-vector -44.0 -57.0 -55.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -74.0 70.0 -140.0) (float-vector -74.0 70.0 80.0) (float-vector -74.0 -70.0 80.0) (float-vector -74.0 -70.0 -140.0)))
         (instance face :init :vertices (list (float-vector -80.0 70.0 80.0) (float-vector -80.0 70.0 -140.0) (float-vector -80.0 -70.0 -140.0) (float-vector -80.0 -70.0 80.0)))
         (instance face :init :vertices (list (float-vector -74.0 70.0 -140.0) (float-vector -80.0 70.0 -140.0) (float-vector -80.0 70.0 80.0) (float-vector -74.0 70.0 80.0)))
         (instance face :init :vertices (list (float-vector -74.0 -70.0 -140.0) (float-vector -80.0 -70.0 -140.0) (float-vector -80.0 70.0 -140.0) (float-vector -74.0 70.0 -140.0)))
         (instance face :init :vertices (list (float-vector -74.0 -70.0 80.0) (float-vector -80.0 -70.0 80.0) (float-vector -80.0 -70.0 -140.0) (float-vector -74.0 -70.0 -140.0)))
         (instance face :init :vertices (list (float-vector -74.0 70.0 80.0) (float-vector -80.0 70.0 80.0) (float-vector -80.0 -70.0 80.0) (float-vector -74.0 -70.0 80.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -53.5 57.2058) (float-vector -79.4 -49.0 56.0) (float-vector -79.4 -44.5 57.2058) (float-vector -79.4 -41.2058 60.5) (float-vector -79.4 -40.0 65.0) (float-vector -79.4 -41.2058 69.5) (float-vector -79.4 -44.5 72.7942) (float-vector -79.4 -49.0 74.0) (float-vector -79.4 -53.5 72.7942) (float-vector -79.4 -56.7942 69.5) (float-vector -79.4 -58.0 65.0) (float-vector -79.4 -56.7942 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 -49.0 56.0) (float-vector -79.5 -53.5 57.2058) (float-vector -79.5 -56.7942 60.5) (float-vector -79.5 -58.0 65.0) (float-vector -79.5 -56.7942 69.5) (float-vector -79.5 -53.5 72.7942) (float-vector -79.5 -49.0 74.0) (float-vector -79.5 -44.5 72.7942) (float-vector -79.5 -41.2058 69.5) (float-vector -79.5 -40.0 65.0) (float-vector -79.5 -41.2058 60.5) (float-vector -79.5 -44.5 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 57.2058) (float-vector -79.5 -53.5 57.2058) (float-vector -79.5 -49.0 56.0) (float-vector -79.4 -49.0 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 60.5) (float-vector -79.5 -56.7942 60.5) (float-vector -79.5 -53.5 57.2058) (float-vector -79.4 -53.5 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 -58.0 65.0) (float-vector -79.5 -58.0 65.0) (float-vector -79.5 -56.7942 60.5) (float-vector -79.4 -56.7942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 69.5) (float-vector -79.5 -56.7942 69.5) (float-vector -79.5 -58.0 65.0) (float-vector -79.4 -58.0 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 72.7942) (float-vector -79.5 -53.5 72.7942) (float-vector -79.5 -56.7942 69.5) (float-vector -79.4 -56.7942 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 74.0) (float-vector -79.5 -49.0 74.0) (float-vector -79.5 -53.5 72.7942) (float-vector -79.4 -53.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 72.7942) (float-vector -79.5 -44.5 72.7942) (float-vector -79.5 -49.0 74.0) (float-vector -79.4 -49.0 74.0)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 69.5) (float-vector -79.5 -41.2058 69.5) (float-vector -79.5 -44.5 72.7942) (float-vector -79.4 -44.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 65.0) (float-vector -79.5 -40.0 65.0) (float-vector -79.5 -41.2058 69.5) (float-vector -79.4 -41.2058 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 60.5) (float-vector -79.5 -41.2058 60.5) (float-vector -79.5 -40.0 65.0) (float-vector -79.4 -40.0 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 57.2058) (float-vector -79.5 -44.5 57.2058) (float-vector -79.5 -41.2058 60.5) (float-vector -79.4 -41.2058 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 56.0) (float-vector -79.5 -49.0 56.0) (float-vector -79.5 -44.5 57.2058) (float-vector -79.4 -44.5 57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -20.8 57.2058) (float-vector -79.4 -16.3 56.0) (float-vector -79.4 -11.8 57.2058) (float-vector -79.4 -8.50577 60.5) (float-vector -79.4 -7.3 65.0) (float-vector -79.4 -8.50577 69.5) (float-vector -79.4 -11.8 72.7942) (float-vector -79.4 -16.3 74.0) (float-vector -79.4 -20.8 72.7942) (float-vector -79.4 -24.0942 69.5) (float-vector -79.4 -25.3 65.0) (float-vector -79.4 -24.0942 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 -16.3 56.0) (float-vector -79.5 -20.8 57.2058) (float-vector -79.5 -24.0942 60.5) (float-vector -79.5 -25.3 65.0) (float-vector -79.5 -24.0942 69.5) (float-vector -79.5 -20.8 72.7942) (float-vector -79.5 -16.3 74.0) (float-vector -79.5 -11.8 72.7942) (float-vector -79.5 -8.50577 69.5) (float-vector -79.5 -7.3 65.0) (float-vector -79.5 -8.50577 60.5) (float-vector -79.5 -11.8 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 -20.8 57.2058) (float-vector -79.5 -20.8 57.2058) (float-vector -79.5 -16.3 56.0) (float-vector -79.4 -16.3 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 -24.0942 60.5) (float-vector -79.5 -24.0942 60.5) (float-vector -79.5 -20.8 57.2058) (float-vector -79.4 -20.8 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 -25.3 65.0) (float-vector -79.5 -25.3 65.0) (float-vector -79.5 -24.0942 60.5) (float-vector -79.4 -24.0942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -24.0942 69.5) (float-vector -79.5 -24.0942 69.5) (float-vector -79.5 -25.3 65.0) (float-vector -79.4 -25.3 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 -20.8 72.7942) (float-vector -79.5 -20.8 72.7942) (float-vector -79.5 -24.0942 69.5) (float-vector -79.4 -24.0942 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 -16.3 74.0) (float-vector -79.5 -16.3 74.0) (float-vector -79.5 -20.8 72.7942) (float-vector -79.4 -20.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -11.8 72.7942) (float-vector -79.5 -11.8 72.7942) (float-vector -79.5 -16.3 74.0) (float-vector -79.4 -16.3 74.0)))
         (instance face :init :vertices (list (float-vector -79.4 -8.50577 69.5) (float-vector -79.5 -8.50577 69.5) (float-vector -79.5 -11.8 72.7942) (float-vector -79.4 -11.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -7.3 65.0) (float-vector -79.5 -7.3 65.0) (float-vector -79.5 -8.50577 69.5) (float-vector -79.4 -8.50577 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 -8.50577 60.5) (float-vector -79.5 -8.50577 60.5) (float-vector -79.5 -7.3 65.0) (float-vector -79.4 -7.3 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 -11.8 57.2058) (float-vector -79.5 -11.8 57.2058) (float-vector -79.5 -8.50577 60.5) (float-vector -79.4 -8.50577 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -16.3 56.0) (float-vector -79.5 -16.3 56.0) (float-vector -79.5 -11.8 57.2058) (float-vector -79.4 -11.8 57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 11.8 57.2058) (float-vector -79.4 16.3 56.0) (float-vector -79.4 20.8 57.2058) (float-vector -79.4 24.0942 60.5) (float-vector -79.4 25.3 65.0) (float-vector -79.4 24.0942 69.5) (float-vector -79.4 20.8 72.7942) (float-vector -79.4 16.3 74.0) (float-vector -79.4 11.8 72.7942) (float-vector -79.4 8.50577 69.5) (float-vector -79.4 7.3 65.0) (float-vector -79.4 8.50577 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 16.3 56.0) (float-vector -79.5 11.8 57.2058) (float-vector -79.5 8.50577 60.5) (float-vector -79.5 7.3 65.0) (float-vector -79.5 8.50577 69.5) (float-vector -79.5 11.8 72.7942) (float-vector -79.5 16.3 74.0) (float-vector -79.5 20.8 72.7942) (float-vector -79.5 24.0942 69.5) (float-vector -79.5 25.3 65.0) (float-vector -79.5 24.0942 60.5) (float-vector -79.5 20.8 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 11.8 57.2058) (float-vector -79.5 11.8 57.2058) (float-vector -79.5 16.3 56.0) (float-vector -79.4 16.3 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 8.50577 60.5) (float-vector -79.5 8.50577 60.5) (float-vector -79.5 11.8 57.2058) (float-vector -79.4 11.8 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 7.3 65.0) (float-vector -79.5 7.3 65.0) (float-vector -79.5 8.50577 60.5) (float-vector -79.4 8.50577 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 8.50577 69.5) (float-vector -79.5 8.50577 69.5) (float-vector -79.5 7.3 65.0) (float-vector -79.4 7.3 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 11.8 72.7942) (float-vector -79.5 11.8 72.7942) (float-vector -79.5 8.50577 69.5) (float-vector -79.4 8.50577 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 16.3 74.0) (float-vector -79.5 16.3 74.0) (float-vector -79.5 11.8 72.7942) (float-vector -79.4 11.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 20.8 72.7942) (float-vector -79.5 20.8 72.7942) (float-vector -79.5 16.3 74.0) (float-vector -79.4 16.3 74.0)))
         (instance face :init :vertices (list (float-vector -79.4 24.0942 69.5) (float-vector -79.5 24.0942 69.5) (float-vector -79.5 20.8 72.7942) (float-vector -79.4 20.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 25.3 65.0) (float-vector -79.5 25.3 65.0) (float-vector -79.5 24.0942 69.5) (float-vector -79.4 24.0942 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 24.0942 60.5) (float-vector -79.5 24.0942 60.5) (float-vector -79.5 25.3 65.0) (float-vector -79.4 25.3 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 20.8 57.2058) (float-vector -79.5 20.8 57.2058) (float-vector -79.5 24.0942 60.5) (float-vector -79.4 24.0942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 16.3 56.0) (float-vector -79.5 16.3 56.0) (float-vector -79.5 20.8 57.2058) (float-vector -79.4 20.8 57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 44.5 57.2058) (float-vector -79.4 49.0 56.0) (float-vector -79.4 53.5 57.2058) (float-vector -79.4 56.7942 60.5) (float-vector -79.4 58.0 65.0) (float-vector -79.4 56.7942 69.5) (float-vector -79.4 53.5 72.7942) (float-vector -79.4 49.0 74.0) (float-vector -79.4 44.5 72.7942) (float-vector -79.4 41.2058 69.5) (float-vector -79.4 40.0 65.0) (float-vector -79.4 41.2058 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 49.0 56.0) (float-vector -79.5 44.5 57.2058) (float-vector -79.5 41.2058 60.5) (float-vector -79.5 40.0 65.0) (float-vector -79.5 41.2058 69.5) (float-vector -79.5 44.5 72.7942) (float-vector -79.5 49.0 74.0) (float-vector -79.5 53.5 72.7942) (float-vector -79.5 56.7942 69.5) (float-vector -79.5 58.0 65.0) (float-vector -79.5 56.7942 60.5) (float-vector -79.5 53.5 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 57.2058) (float-vector -79.5 44.5 57.2058) (float-vector -79.5 49.0 56.0) (float-vector -79.4 49.0 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 60.5) (float-vector -79.5 41.2058 60.5) (float-vector -79.5 44.5 57.2058) (float-vector -79.4 44.5 57.2058)))
         (instance face :init :vertices (list (float-vector -79.4 40.0 65.0) (float-vector -79.5 40.0 65.0) (float-vector -79.5 41.2058 60.5) (float-vector -79.4 41.2058 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 69.5) (float-vector -79.5 41.2058 69.5) (float-vector -79.5 40.0 65.0) (float-vector -79.4 40.0 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 72.7942) (float-vector -79.5 44.5 72.7942) (float-vector -79.5 41.2058 69.5) (float-vector -79.4 41.2058 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 74.0) (float-vector -79.5 49.0 74.0) (float-vector -79.5 44.5 72.7942) (float-vector -79.4 44.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 72.7942) (float-vector -79.5 53.5 72.7942) (float-vector -79.5 49.0 74.0) (float-vector -79.4 49.0 74.0)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 69.5) (float-vector -79.5 56.7942 69.5) (float-vector -79.5 53.5 72.7942) (float-vector -79.4 53.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 58.0 65.0) (float-vector -79.5 58.0 65.0) (float-vector -79.5 56.7942 69.5) (float-vector -79.4 56.7942 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 60.5) (float-vector -79.5 56.7942 60.5) (float-vector -79.5 58.0 65.0) (float-vector -79.4 58.0 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 57.2058) (float-vector -79.5 53.5 57.2058) (float-vector -79.5 56.7942 60.5) (float-vector -79.4 56.7942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 56.0) (float-vector -79.5 49.0 56.0) (float-vector -79.5 53.5 57.2058) (float-vector -79.4 53.5 57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -4.49423) (float-vector -79.4 -49.0 -5.7) (float-vector -79.4 -44.5 -4.49423) (float-vector -79.4 -41.2058 -1.2) (float-vector -79.4 -40.0 3.3) (float-vector -79.4 -41.2058 7.8) (float-vector -79.4 -44.5 11.0942) (float-vector -79.4 -49.0 12.3) (float-vector -79.4 -53.5 11.0942) (float-vector -79.4 -56.7942 7.8) (float-vector -79.4 -58.0 3.3) (float-vector -79.4 -56.7942 -1.2)))
         (instance face :init :vertices (list (float-vector -79.5 -49.0 -5.7) (float-vector -79.5 -53.5 -4.49423) (float-vector -79.5 -56.7942 -1.2) (float-vector -79.5 -58.0 3.3) (float-vector -79.5 -56.7942 7.8) (float-vector -79.5 -53.5 11.0942) (float-vector -79.5 -49.0 12.3) (float-vector -79.5 -44.5 11.0942) (float-vector -79.5 -41.2058 7.8) (float-vector -79.5 -40.0 3.3) (float-vector -79.5 -41.2058 -1.2) (float-vector -79.5 -44.5 -4.49423)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -4.49423) (float-vector -79.5 -53.5 -4.49423) (float-vector -79.5 -49.0 -5.7) (float-vector -79.4 -49.0 -5.7)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -1.2) (float-vector -79.5 -56.7942 -1.2) (float-vector -79.5 -53.5 -4.49423) (float-vector -79.4 -53.5 -4.49423)))
         (instance face :init :vertices (list (float-vector -79.4 -58.0 3.3) (float-vector -79.5 -58.0 3.3) (float-vector -79.5 -56.7942 -1.2) (float-vector -79.4 -56.7942 -1.2)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 7.8) (float-vector -79.5 -56.7942 7.8) (float-vector -79.5 -58.0 3.3) (float-vector -79.4 -58.0 3.3)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 11.0942) (float-vector -79.5 -53.5 11.0942) (float-vector -79.5 -56.7942 7.8) (float-vector -79.4 -56.7942 7.8)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 12.3) (float-vector -79.5 -49.0 12.3) (float-vector -79.5 -53.5 11.0942) (float-vector -79.4 -53.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 11.0942) (float-vector -79.5 -44.5 11.0942) (float-vector -79.5 -49.0 12.3) (float-vector -79.4 -49.0 12.3)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 7.8) (float-vector -79.5 -41.2058 7.8) (float-vector -79.5 -44.5 11.0942) (float-vector -79.4 -44.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 3.3) (float-vector -79.5 -40.0 3.3) (float-vector -79.5 -41.2058 7.8) (float-vector -79.4 -41.2058 7.8)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -1.2) (float-vector -79.5 -41.2058 -1.2) (float-vector -79.5 -40.0 3.3) (float-vector -79.4 -40.0 3.3)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -4.49423) (float-vector -79.5 -44.5 -4.49423) (float-vector -79.5 -41.2058 -1.2) (float-vector -79.4 -41.2058 -1.2)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -5.7) (float-vector -79.5 -49.0 -5.7) (float-vector -79.5 -44.5 -4.49423) (float-vector -79.4 -44.5 -4.49423)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 44.5 -4.49423) (float-vector -79.4 49.0 -5.7) (float-vector -79.4 53.5 -4.49423) (float-vector -79.4 56.7942 -1.2) (float-vector -79.4 58.0 3.3) (float-vector -79.4 56.7942 7.8) (float-vector -79.4 53.5 11.0942) (float-vector -79.4 49.0 12.3) (float-vector -79.4 44.5 11.0942) (float-vector -79.4 41.2058 7.8) (float-vector -79.4 40.0 3.3) (float-vector -79.4 41.2058 -1.2)))
         (instance face :init :vertices (list (float-vector -79.5 49.0 -5.7) (float-vector -79.5 44.5 -4.49423) (float-vector -79.5 41.2058 -1.2) (float-vector -79.5 40.0 3.3) (float-vector -79.5 41.2058 7.8) (float-vector -79.5 44.5 11.0942) (float-vector -79.5 49.0 12.3) (float-vector -79.5 53.5 11.0942) (float-vector -79.5 56.7942 7.8) (float-vector -79.5 58.0 3.3) (float-vector -79.5 56.7942 -1.2) (float-vector -79.5 53.5 -4.49423)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -4.49423) (float-vector -79.5 44.5 -4.49423) (float-vector -79.5 49.0 -5.7) (float-vector -79.4 49.0 -5.7)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -1.2) (float-vector -79.5 41.2058 -1.2) (float-vector -79.5 44.5 -4.49423) (float-vector -79.4 44.5 -4.49423)))
         (instance face :init :vertices (list (float-vector -79.4 40.0 3.3) (float-vector -79.5 40.0 3.3) (float-vector -79.5 41.2058 -1.2) (float-vector -79.4 41.2058 -1.2)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 7.8) (float-vector -79.5 41.2058 7.8) (float-vector -79.5 40.0 3.3) (float-vector -79.4 40.0 3.3)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 11.0942) (float-vector -79.5 44.5 11.0942) (float-vector -79.5 41.2058 7.8) (float-vector -79.4 41.2058 7.8)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 12.3) (float-vector -79.5 49.0 12.3) (float-vector -79.5 44.5 11.0942) (float-vector -79.4 44.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 11.0942) (float-vector -79.5 53.5 11.0942) (float-vector -79.5 49.0 12.3) (float-vector -79.4 49.0 12.3)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 7.8) (float-vector -79.5 56.7942 7.8) (float-vector -79.5 53.5 11.0942) (float-vector -79.4 53.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 58.0 3.3) (float-vector -79.5 58.0 3.3) (float-vector -79.5 56.7942 7.8) (float-vector -79.4 56.7942 7.8)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -1.2) (float-vector -79.5 56.7942 -1.2) (float-vector -79.5 58.0 3.3) (float-vector -79.4 58.0 3.3)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -4.49423) (float-vector -79.5 53.5 -4.49423) (float-vector -79.5 56.7942 -1.2) (float-vector -79.4 56.7942 -1.2)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -5.7) (float-vector -79.5 49.0 -5.7) (float-vector -79.5 53.5 -4.49423) (float-vector -79.4 53.5 -4.49423)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -66.0942) (float-vector -79.4 -49.0 -67.3) (float-vector -79.4 -44.5 -66.0942) (float-vector -79.4 -41.2058 -62.8) (float-vector -79.4 -40.0 -58.3) (float-vector -79.4 -41.2058 -53.8) (float-vector -79.4 -44.5 -50.5058) (float-vector -79.4 -49.0 -49.3) (float-vector -79.4 -53.5 -50.5058) (float-vector -79.4 -56.7942 -53.8) (float-vector -79.4 -58.0 -58.3) (float-vector -79.4 -56.7942 -62.8)))
         (instance face :init :vertices (list (float-vector -79.5 -49.0 -67.3) (float-vector -79.5 -53.5 -66.0942) (float-vector -79.5 -56.7942 -62.8) (float-vector -79.5 -58.0 -58.3) (float-vector -79.5 -56.7942 -53.8) (float-vector -79.5 -53.5 -50.5058) (float-vector -79.5 -49.0 -49.3) (float-vector -79.5 -44.5 -50.5058) (float-vector -79.5 -41.2058 -53.8) (float-vector -79.5 -40.0 -58.3) (float-vector -79.5 -41.2058 -62.8) (float-vector -79.5 -44.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -66.0942) (float-vector -79.5 -53.5 -66.0942) (float-vector -79.5 -49.0 -67.3) (float-vector -79.4 -49.0 -67.3)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -62.8) (float-vector -79.5 -56.7942 -62.8) (float-vector -79.5 -53.5 -66.0942) (float-vector -79.4 -53.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -58.0 -58.3) (float-vector -79.5 -58.0 -58.3) (float-vector -79.5 -56.7942 -62.8) (float-vector -79.4 -56.7942 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -53.8) (float-vector -79.5 -56.7942 -53.8) (float-vector -79.5 -58.0 -58.3) (float-vector -79.4 -58.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -50.5058) (float-vector -79.5 -53.5 -50.5058) (float-vector -79.5 -56.7942 -53.8) (float-vector -79.4 -56.7942 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -49.3) (float-vector -79.5 -49.0 -49.3) (float-vector -79.5 -53.5 -50.5058) (float-vector -79.4 -53.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -50.5058) (float-vector -79.5 -44.5 -50.5058) (float-vector -79.5 -49.0 -49.3) (float-vector -79.4 -49.0 -49.3)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -53.8) (float-vector -79.5 -41.2058 -53.8) (float-vector -79.5 -44.5 -50.5058) (float-vector -79.4 -44.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 -58.3) (float-vector -79.5 -40.0 -58.3) (float-vector -79.5 -41.2058 -53.8) (float-vector -79.4 -41.2058 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -62.8) (float-vector -79.5 -41.2058 -62.8) (float-vector -79.5 -40.0 -58.3) (float-vector -79.4 -40.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -66.0942) (float-vector -79.5 -44.5 -66.0942) (float-vector -79.5 -41.2058 -62.8) (float-vector -79.4 -41.2058 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -67.3) (float-vector -79.5 -49.0 -67.3) (float-vector -79.5 -44.5 -66.0942) (float-vector -79.4 -44.5 -66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 44.5 -66.0942) (float-vector -79.4 49.0 -67.3) (float-vector -79.4 53.5 -66.0942) (float-vector -79.4 56.7942 -62.8) (float-vector -79.4 58.0 -58.3) (float-vector -79.4 56.7942 -53.8) (float-vector -79.4 53.5 -50.5058) (float-vector -79.4 49.0 -49.3) (float-vector -79.4 44.5 -50.5058) (float-vector -79.4 41.2058 -53.8) (float-vector -79.4 40.0 -58.3) (float-vector -79.4 41.2058 -62.8)))
         (instance face :init :vertices (list (float-vector -79.5 49.0 -67.3) (float-vector -79.5 44.5 -66.0942) (float-vector -79.5 41.2058 -62.8) (float-vector -79.5 40.0 -58.3) (float-vector -79.5 41.2058 -53.8) (float-vector -79.5 44.5 -50.5058) (float-vector -79.5 49.0 -49.3) (float-vector -79.5 53.5 -50.5058) (float-vector -79.5 56.7942 -53.8) (float-vector -79.5 58.0 -58.3) (float-vector -79.5 56.7942 -62.8) (float-vector -79.5 53.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -66.0942) (float-vector -79.5 44.5 -66.0942) (float-vector -79.5 49.0 -67.3) (float-vector -79.4 49.0 -67.3)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -62.8) (float-vector -79.5 41.2058 -62.8) (float-vector -79.5 44.5 -66.0942) (float-vector -79.4 44.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 40.0 -58.3) (float-vector -79.5 40.0 -58.3) (float-vector -79.5 41.2058 -62.8) (float-vector -79.4 41.2058 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -53.8) (float-vector -79.5 41.2058 -53.8) (float-vector -79.5 40.0 -58.3) (float-vector -79.4 40.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -50.5058) (float-vector -79.5 44.5 -50.5058) (float-vector -79.5 41.2058 -53.8) (float-vector -79.4 41.2058 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -49.3) (float-vector -79.5 49.0 -49.3) (float-vector -79.5 44.5 -50.5058) (float-vector -79.4 44.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -50.5058) (float-vector -79.5 53.5 -50.5058) (float-vector -79.5 49.0 -49.3) (float-vector -79.4 49.0 -49.3)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -53.8) (float-vector -79.5 56.7942 -53.8) (float-vector -79.5 53.5 -50.5058) (float-vector -79.4 53.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 58.0 -58.3) (float-vector -79.5 58.0 -58.3) (float-vector -79.5 56.7942 -53.8) (float-vector -79.4 56.7942 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -62.8) (float-vector -79.5 56.7942 -62.8) (float-vector -79.5 58.0 -58.3) (float-vector -79.4 58.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -66.0942) (float-vector -79.5 53.5 -66.0942) (float-vector -79.5 56.7942 -62.8) (float-vector -79.4 56.7942 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -67.3) (float-vector -79.5 49.0 -67.3) (float-vector -79.5 53.5 -66.0942) (float-vector -79.4 53.5 -66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -127.794) (float-vector -79.4 -49.0 -129.0) (float-vector -79.4 -44.5 -127.794) (float-vector -79.4 -41.2058 -124.5) (float-vector -79.4 -40.0 -120.0) (float-vector -79.4 -41.2058 -115.5) (float-vector -79.4 -44.5 -112.206) (float-vector -79.4 -49.0 -111.0) (float-vector -79.4 -53.5 -112.206) (float-vector -79.4 -56.7942 -115.5) (float-vector -79.4 -58.0 -120.0) (float-vector -79.4 -56.7942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.5 -49.0 -129.0) (float-vector -79.5 -53.5 -127.794) (float-vector -79.5 -56.7942 -124.5) (float-vector -79.5 -58.0 -120.0) (float-vector -79.5 -56.7942 -115.5) (float-vector -79.5 -53.5 -112.206) (float-vector -79.5 -49.0 -111.0) (float-vector -79.5 -44.5 -112.206) (float-vector -79.5 -41.2058 -115.5) (float-vector -79.5 -40.0 -120.0) (float-vector -79.5 -41.2058 -124.5) (float-vector -79.5 -44.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -127.794) (float-vector -79.5 -53.5 -127.794) (float-vector -79.5 -49.0 -129.0) (float-vector -79.4 -49.0 -129.0)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -124.5) (float-vector -79.5 -56.7942 -124.5) (float-vector -79.5 -53.5 -127.794) (float-vector -79.4 -53.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 -58.0 -120.0) (float-vector -79.5 -58.0 -120.0) (float-vector -79.5 -56.7942 -124.5) (float-vector -79.4 -56.7942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -115.5) (float-vector -79.5 -56.7942 -115.5) (float-vector -79.5 -58.0 -120.0) (float-vector -79.4 -58.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -112.206) (float-vector -79.5 -53.5 -112.206) (float-vector -79.5 -56.7942 -115.5) (float-vector -79.4 -56.7942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -111.0) (float-vector -79.5 -49.0 -111.0) (float-vector -79.5 -53.5 -112.206) (float-vector -79.4 -53.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -112.206) (float-vector -79.5 -44.5 -112.206) (float-vector -79.5 -49.0 -111.0) (float-vector -79.4 -49.0 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -115.5) (float-vector -79.5 -41.2058 -115.5) (float-vector -79.5 -44.5 -112.206) (float-vector -79.4 -44.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 -120.0) (float-vector -79.5 -40.0 -120.0) (float-vector -79.5 -41.2058 -115.5) (float-vector -79.4 -41.2058 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -124.5) (float-vector -79.5 -41.2058 -124.5) (float-vector -79.5 -40.0 -120.0) (float-vector -79.4 -40.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -127.794) (float-vector -79.5 -44.5 -127.794) (float-vector -79.5 -41.2058 -124.5) (float-vector -79.4 -41.2058 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -129.0) (float-vector -79.5 -49.0 -129.0) (float-vector -79.5 -44.5 -127.794) (float-vector -79.4 -44.5 -127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -20.8 -127.794) (float-vector -79.4 -16.3 -129.0) (float-vector -79.4 -11.8 -127.794) (float-vector -79.4 -8.50577 -124.5) (float-vector -79.4 -7.3 -120.0) (float-vector -79.4 -8.50577 -115.5) (float-vector -79.4 -11.8 -112.206) (float-vector -79.4 -16.3 -111.0) (float-vector -79.4 -20.8 -112.206) (float-vector -79.4 -24.0942 -115.5) (float-vector -79.4 -25.3 -120.0) (float-vector -79.4 -24.0942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.5 -16.3 -129.0) (float-vector -79.5 -20.8 -127.794) (float-vector -79.5 -24.0942 -124.5) (float-vector -79.5 -25.3 -120.0) (float-vector -79.5 -24.0942 -115.5) (float-vector -79.5 -20.8 -112.206) (float-vector -79.5 -16.3 -111.0) (float-vector -79.5 -11.8 -112.206) (float-vector -79.5 -8.50577 -115.5) (float-vector -79.5 -7.3 -120.0) (float-vector -79.5 -8.50577 -124.5) (float-vector -79.5 -11.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 -20.8 -127.794) (float-vector -79.5 -20.8 -127.794) (float-vector -79.5 -16.3 -129.0) (float-vector -79.4 -16.3 -129.0)))
         (instance face :init :vertices (list (float-vector -79.4 -24.0942 -124.5) (float-vector -79.5 -24.0942 -124.5) (float-vector -79.5 -20.8 -127.794) (float-vector -79.4 -20.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 -25.3 -120.0) (float-vector -79.5 -25.3 -120.0) (float-vector -79.5 -24.0942 -124.5) (float-vector -79.4 -24.0942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 -24.0942 -115.5) (float-vector -79.5 -24.0942 -115.5) (float-vector -79.5 -25.3 -120.0) (float-vector -79.4 -25.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 -20.8 -112.206) (float-vector -79.5 -20.8 -112.206) (float-vector -79.5 -24.0942 -115.5) (float-vector -79.4 -24.0942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 -16.3 -111.0) (float-vector -79.5 -16.3 -111.0) (float-vector -79.5 -20.8 -112.206) (float-vector -79.4 -20.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -11.8 -112.206) (float-vector -79.5 -11.8 -112.206) (float-vector -79.5 -16.3 -111.0) (float-vector -79.4 -16.3 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 -8.50577 -115.5) (float-vector -79.5 -8.50577 -115.5) (float-vector -79.5 -11.8 -112.206) (float-vector -79.4 -11.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -7.3 -120.0) (float-vector -79.5 -7.3 -120.0) (float-vector -79.5 -8.50577 -115.5) (float-vector -79.4 -8.50577 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 -8.50577 -124.5) (float-vector -79.5 -8.50577 -124.5) (float-vector -79.5 -7.3 -120.0) (float-vector -79.4 -7.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 -11.8 -127.794) (float-vector -79.5 -11.8 -127.794) (float-vector -79.5 -8.50577 -124.5) (float-vector -79.4 -8.50577 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 -16.3 -129.0) (float-vector -79.5 -16.3 -129.0) (float-vector -79.5 -11.8 -127.794) (float-vector -79.4 -11.8 -127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 11.8 -127.794) (float-vector -79.4 16.3 -129.0) (float-vector -79.4 20.8 -127.794) (float-vector -79.4 24.0942 -124.5) (float-vector -79.4 25.3 -120.0) (float-vector -79.4 24.0942 -115.5) (float-vector -79.4 20.8 -112.206) (float-vector -79.4 16.3 -111.0) (float-vector -79.4 11.8 -112.206) (float-vector -79.4 8.50577 -115.5) (float-vector -79.4 7.3 -120.0) (float-vector -79.4 8.50577 -124.5)))
         (instance face :init :vertices (list (float-vector -79.5 16.3 -129.0) (float-vector -79.5 11.8 -127.794) (float-vector -79.5 8.50577 -124.5) (float-vector -79.5 7.3 -120.0) (float-vector -79.5 8.50577 -115.5) (float-vector -79.5 11.8 -112.206) (float-vector -79.5 16.3 -111.0) (float-vector -79.5 20.8 -112.206) (float-vector -79.5 24.0942 -115.5) (float-vector -79.5 25.3 -120.0) (float-vector -79.5 24.0942 -124.5) (float-vector -79.5 20.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 11.8 -127.794) (float-vector -79.5 11.8 -127.794) (float-vector -79.5 16.3 -129.0) (float-vector -79.4 16.3 -129.0)))
         (instance face :init :vertices (list (float-vector -79.4 8.50577 -124.5) (float-vector -79.5 8.50577 -124.5) (float-vector -79.5 11.8 -127.794) (float-vector -79.4 11.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 7.3 -120.0) (float-vector -79.5 7.3 -120.0) (float-vector -79.5 8.50577 -124.5) (float-vector -79.4 8.50577 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 8.50577 -115.5) (float-vector -79.5 8.50577 -115.5) (float-vector -79.5 7.3 -120.0) (float-vector -79.4 7.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 11.8 -112.206) (float-vector -79.5 11.8 -112.206) (float-vector -79.5 8.50577 -115.5) (float-vector -79.4 8.50577 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 16.3 -111.0) (float-vector -79.5 16.3 -111.0) (float-vector -79.5 11.8 -112.206) (float-vector -79.4 11.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 20.8 -112.206) (float-vector -79.5 20.8 -112.206) (float-vector -79.5 16.3 -111.0) (float-vector -79.4 16.3 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 24.0942 -115.5) (float-vector -79.5 24.0942 -115.5) (float-vector -79.5 20.8 -112.206) (float-vector -79.4 20.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 25.3 -120.0) (float-vector -79.5 25.3 -120.0) (float-vector -79.5 24.0942 -115.5) (float-vector -79.4 24.0942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 24.0942 -124.5) (float-vector -79.5 24.0942 -124.5) (float-vector -79.5 25.3 -120.0) (float-vector -79.4 25.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 20.8 -127.794) (float-vector -79.5 20.8 -127.794) (float-vector -79.5 24.0942 -124.5) (float-vector -79.4 24.0942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 16.3 -129.0) (float-vector -79.5 16.3 -129.0) (float-vector -79.5 20.8 -127.794) (float-vector -79.4 20.8 -127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 44.5 -127.794) (float-vector -79.4 49.0 -129.0) (float-vector -79.4 53.5 -127.794) (float-vector -79.4 56.7942 -124.5) (float-vector -79.4 58.0 -120.0) (float-vector -79.4 56.7942 -115.5) (float-vector -79.4 53.5 -112.206) (float-vector -79.4 49.0 -111.0) (float-vector -79.4 44.5 -112.206) (float-vector -79.4 41.2058 -115.5) (float-vector -79.4 40.0 -120.0) (float-vector -79.4 41.2058 -124.5)))
         (instance face :init :vertices (list (float-vector -79.5 49.0 -129.0) (float-vector -79.5 44.5 -127.794) (float-vector -79.5 41.2058 -124.5) (float-vector -79.5 40.0 -120.0) (float-vector -79.5 41.2058 -115.5) (float-vector -79.5 44.5 -112.206) (float-vector -79.5 49.0 -111.0) (float-vector -79.5 53.5 -112.206) (float-vector -79.5 56.7942 -115.5) (float-vector -79.5 58.0 -120.0) (float-vector -79.5 56.7942 -124.5) (float-vector -79.5 53.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -127.794) (float-vector -79.5 44.5 -127.794) (float-vector -79.5 49.0 -129.0) (float-vector -79.4 49.0 -129.0)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -124.5) (float-vector -79.5 41.2058 -124.5) (float-vector -79.5 44.5 -127.794) (float-vector -79.4 44.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.4 40.0 -120.0) (float-vector -79.5 40.0 -120.0) (float-vector -79.5 41.2058 -124.5) (float-vector -79.4 41.2058 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -115.5) (float-vector -79.5 41.2058 -115.5) (float-vector -79.5 40.0 -120.0) (float-vector -79.4 40.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -112.206) (float-vector -79.5 44.5 -112.206) (float-vector -79.5 41.2058 -115.5) (float-vector -79.4 41.2058 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -111.0) (float-vector -79.5 49.0 -111.0) (float-vector -79.5 44.5 -112.206) (float-vector -79.4 44.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -112.206) (float-vector -79.5 53.5 -112.206) (float-vector -79.5 49.0 -111.0) (float-vector -79.4 49.0 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -115.5) (float-vector -79.5 56.7942 -115.5) (float-vector -79.5 53.5 -112.206) (float-vector -79.4 53.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 58.0 -120.0) (float-vector -79.5 58.0 -120.0) (float-vector -79.5 56.7942 -115.5) (float-vector -79.4 56.7942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -124.5) (float-vector -79.5 56.7942 -124.5) (float-vector -79.5 58.0 -120.0) (float-vector -79.4 58.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -127.794) (float-vector -79.5 53.5 -127.794) (float-vector -79.5 56.7942 -124.5) (float-vector -79.4 56.7942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -129.0) (float-vector -79.5 49.0 -129.0) (float-vector -79.5 53.5 -127.794) (float-vector -79.4 53.5 -127.794)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray40)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color :gray40)
     (send (elt bc 6) :set-color :gray40)
     (send (elt bc 7) :set-color :gray40)
     (send (elt bc 8) :set-color :gray40)
     (send (elt bc 9) :set-color :gray40)
     (send (elt bc 10) :set-color :gray40)
     (send (elt bc 11) :set-color :gray40)
     (send (elt bc 12) :set-color :gray40)
     (send (elt bc 13) :set-color :gray40)
     (setq blink22 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-r :weight 702.678 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :head-neck-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 42.0 30.0 -38.5) (float-vector -42.0 30.0 -38.5) (float-vector -42.0 24.7 -38.5) (float-vector -30.626 4.9999 -38.5) (float-vector -22.461 4.9511 -38.5) (float-vector -20.0 1.9999 -38.5) (float-vector -19.994 -0.50009 -38.5) (float-vector -18.199 -8.2935 -38.5) (float-vector -13.147 -15.072 -38.5) (float-vector -6.7425 -18.829 -38.5) (float-vector 0.0 -20.0 -38.5) (float-vector 6.7425 -18.829 -38.5) (float-vector 13.147 -15.072 -38.5) (float-vector 18.199 -8.2935 -38.5) (float-vector 19.994 -0.50009 -38.5) (float-vector 20.0 1.9999 -38.5) (float-vector 22.461 4.9511 -38.5) (float-vector 30.626 4.9999 -38.5) (float-vector 42.0 24.7 -38.5)))
         (instance face :init :vertices (list (float-vector -42.0 30.0 38.5) (float-vector -42.0 30.0 -38.5) (float-vector 42.0 30.0 -38.5) (float-vector 42.0 30.0 38.5)))
         (instance face :init :vertices (list (float-vector -42.0 24.7 38.5) (float-vector -42.0 30.0 38.5) (float-vector 42.0 30.0 38.5) (float-vector 42.0 24.7 38.5) (float-vector 30.626 4.9999 38.5) (float-vector 22.461 4.9511 38.5) (float-vector 20.0 1.9999 38.5) (float-vector 19.994 -0.50009 38.5) (float-vector 18.199 -8.2935 38.5) (float-vector 13.147 -15.072 38.5) (float-vector 6.7425 -18.829 38.5) (float-vector 0.0 -20.0 38.5) (float-vector -6.7425 -18.829 38.5) (float-vector -13.147 -15.072 38.5) (float-vector -18.199 -8.2935 38.5) (float-vector -19.994 -0.50009 38.5) (float-vector -20.0 1.9999 38.5) (float-vector -22.461 4.9511 38.5) (float-vector -30.626 4.9999 38.5)))
         (instance face :init :vertices (list (float-vector -42.0 35.0 43.5) (float-vector 42.0 35.0 43.5) (float-vector 42.0 35.0 -43.5) (float-vector -42.0 35.0 -43.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.105427e-15 35.0 -29.0) (float-vector 15.43 35.0 -28.898) (float-vector 25.632 35.0 -26.104) (float-vector 34.634 35.0 -19.312) (float-vector 40.384 35.0 -9.5464) (float-vector 41.5 35.0 1.031270e-14) (float-vector 40.384 35.0 9.5464) (float-vector 34.634 35.0 19.312) (float-vector 25.632 35.0 26.104) (float-vector 15.43 35.0 28.898) (float-vector -15.43 35.0 28.898) (float-vector -25.632 35.0 26.104) (float-vector -34.634 35.0 19.312) (float-vector -40.384 35.0 9.5464) (float-vector -41.5 35.0 5.230419e-15) (float-vector -40.384 35.0 -9.5464) (float-vector -34.634 35.0 -19.312) (float-vector -25.632 35.0 -26.104) (float-vector -15.43 35.0 -28.898)))
))
         (instance face :init :vertices (list (float-vector 42.0 24.7 43.5) (float-vector 42.0 35.0 43.5) (float-vector -42.0 35.0 43.5) (float-vector -42.0 24.7 43.5) (float-vector -30.626 4.9999 43.5) (float-vector -22.461 4.9511 43.5) (float-vector -20.0 1.9999 43.5) (float-vector -19.994 -0.50009 43.5) (float-vector -18.199 -8.2935 43.5) (float-vector -13.147 -15.072 43.5) (float-vector -6.7425 -18.829 43.5) (float-vector 0.0 -20.0 43.5) (float-vector 6.7425 -18.829 43.5) (float-vector 13.147 -15.072 43.5) (float-vector 18.199 -8.2935 43.5) (float-vector 19.994 -0.50009 43.5) (float-vector 20.0 1.9999 43.5) (float-vector 22.461 4.9511 43.5) (float-vector 30.626 4.9999 43.5)))
         (instance face :init :vertices (list (float-vector -42.0 24.7 -43.5) (float-vector -42.0 35.0 -43.5) (float-vector 42.0 35.0 -43.5) (float-vector 42.0 24.7 -43.5) (float-vector 30.626 4.9999 -43.5) (float-vector 22.461 4.9511 -43.5) (float-vector 20.0 1.9999 -43.5) (float-vector 19.994 -0.50009 -43.5) (float-vector 18.199 -8.2935 -43.5) (float-vector 13.147 -15.072 -43.5) (float-vector 6.7425 -18.829 -43.5) (float-vector 0.0 -20.0 -43.5) (float-vector -6.7425 -18.829 -43.5) (float-vector -13.147 -15.072 -43.5) (float-vector -18.199 -8.2935 -43.5) (float-vector -19.994 -0.50009 -43.5) (float-vector -20.0 1.9999 -43.5) (float-vector -22.461 4.9511 -43.5) (float-vector -30.626 4.9999 -43.5)))
         (instance face :init :vertices (list (float-vector -42.0 24.7 38.5) (float-vector -42.0 24.7 43.5) (float-vector -42.0 35.0 43.5) (float-vector -42.0 35.0 -43.5) (float-vector -42.0 24.7 -43.5) (float-vector -42.0 24.7 -38.5) (float-vector -42.0 30.0 -38.5) (float-vector -42.0 30.0 38.5)))
         (instance face :init :vertices (list (float-vector -30.626 4.9999 38.5) (float-vector -30.626 4.9999 43.5) (float-vector -42.0 24.7 43.5) (float-vector -42.0 24.7 38.5)))
         (instance face :init :vertices (list (float-vector -30.626 4.9999 -43.5) (float-vector -30.626 4.9999 -38.5) (float-vector -42.0 24.7 -38.5) (float-vector -42.0 24.7 -43.5)))
         (instance face :init :vertices (list (float-vector -22.461 4.9511 38.5) (float-vector -22.461 4.9511 43.5) (float-vector -30.626 4.9999 43.5) (float-vector -30.626 4.9999 38.5)))
         (instance face :init :vertices (list (float-vector -22.461 4.9511 -43.5) (float-vector -22.461 4.9511 -38.5) (float-vector -30.626 4.9999 -38.5) (float-vector -30.626 4.9999 -43.5)))
         (instance face :init :vertices (list (float-vector -20.0 1.9999 38.5) (float-vector -20.0 1.9999 43.5) (float-vector -22.461 4.9511 43.5) (float-vector -22.461 4.9511 38.5)))
         (instance face :init :vertices (list (float-vector -20.0 1.9999 -43.5) (float-vector -20.0 1.9999 -38.5) (float-vector -22.461 4.9511 -38.5) (float-vector -22.461 4.9511 -43.5)))
         (instance face :init :vertices (list (float-vector -19.994 -0.50009 38.5) (float-vector -19.994 -0.50009 43.5) (float-vector -20.0 1.9999 43.5) (float-vector -20.0 1.9999 38.5)))
         (instance face :init :vertices (list (float-vector -19.994 -0.50009 -43.5) (float-vector -19.994 -0.50009 -38.5) (float-vector -20.0 1.9999 -38.5) (float-vector -20.0 1.9999 -43.5)))
         (instance face :init :vertices (list (float-vector -18.199 -8.2935 38.5) (float-vector -18.199 -8.2935 43.5) (float-vector -19.994 -0.50009 43.5) (float-vector -19.994 -0.50009 38.5)))
         (instance face :init :vertices (list (float-vector -18.199 -8.2935 -43.5) (float-vector -18.199 -8.2935 -38.5) (float-vector -19.994 -0.50009 -38.5) (float-vector -19.994 -0.50009 -43.5)))
         (instance face :init :vertices (list (float-vector -13.147 -15.072 38.5) (float-vector -13.147 -15.072 43.5) (float-vector -18.199 -8.2935 43.5) (float-vector -18.199 -8.2935 38.5)))
         (instance face :init :vertices (list (float-vector -13.147 -15.072 -43.5) (float-vector -13.147 -15.072 -38.5) (float-vector -18.199 -8.2935 -38.5) (float-vector -18.199 -8.2935 -43.5)))
         (instance face :init :vertices (list (float-vector -6.7425 -18.829 38.5) (float-vector -6.7425 -18.829 43.5) (float-vector -13.147 -15.072 43.5) (float-vector -13.147 -15.072 38.5)))
         (instance face :init :vertices (list (float-vector -6.7425 -18.829 -43.5) (float-vector -6.7425 -18.829 -38.5) (float-vector -13.147 -15.072 -38.5) (float-vector -13.147 -15.072 -43.5)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 38.5) (float-vector 0.0 -20.0 43.5) (float-vector -6.7425 -18.829 43.5) (float-vector -6.7425 -18.829 38.5)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 -43.5) (float-vector 0.0 -20.0 -38.5) (float-vector -6.7425 -18.829 -38.5) (float-vector -6.7425 -18.829 -43.5)))
         (instance face :init :vertices (list (float-vector 6.7425 -18.829 38.5) (float-vector 6.7425 -18.829 43.5) (float-vector 0.0 -20.0 43.5) (float-vector 0.0 -20.0 38.5)))
         (instance face :init :vertices (list (float-vector 6.7425 -18.829 -43.5) (float-vector 6.7425 -18.829 -38.5) (float-vector 0.0 -20.0 -38.5) (float-vector 0.0 -20.0 -43.5)))
         (instance face :init :vertices (list (float-vector 13.147 -15.072 38.5) (float-vector 13.147 -15.072 43.5) (float-vector 6.7425 -18.829 43.5) (float-vector 6.7425 -18.829 38.5)))
         (instance face :init :vertices (list (float-vector 13.147 -15.072 -43.5) (float-vector 13.147 -15.072 -38.5) (float-vector 6.7425 -18.829 -38.5) (float-vector 6.7425 -18.829 -43.5)))
         (instance face :init :vertices (list (float-vector 18.199 -8.2935 38.5) (float-vector 18.199 -8.2935 43.5) (float-vector 13.147 -15.072 43.5) (float-vector 13.147 -15.072 38.5)))
         (instance face :init :vertices (list (float-vector 18.199 -8.2935 -43.5) (float-vector 18.199 -8.2935 -38.5) (float-vector 13.147 -15.072 -38.5) (float-vector 13.147 -15.072 -43.5)))
         (instance face :init :vertices (list (float-vector 19.994 -0.50009 38.5) (float-vector 19.994 -0.50009 43.5) (float-vector 18.199 -8.2935 43.5) (float-vector 18.199 -8.2935 38.5)))
         (instance face :init :vertices (list (float-vector 19.994 -0.50009 -43.5) (float-vector 19.994 -0.50009 -38.5) (float-vector 18.199 -8.2935 -38.5) (float-vector 18.199 -8.2935 -43.5)))
         (instance face :init :vertices (list (float-vector 20.0 1.9999 38.5) (float-vector 20.0 1.9999 43.5) (float-vector 19.994 -0.50009 43.5) (float-vector 19.994 -0.50009 38.5)))
         (instance face :init :vertices (list (float-vector 20.0 1.9999 -43.5) (float-vector 20.0 1.9999 -38.5) (float-vector 19.994 -0.50009 -38.5) (float-vector 19.994 -0.50009 -43.5)))
         (instance face :init :vertices (list (float-vector 22.461 4.9511 38.5) (float-vector 22.461 4.9511 43.5) (float-vector 20.0 1.9999 43.5) (float-vector 20.0 1.9999 38.5)))
         (instance face :init :vertices (list (float-vector 22.461 4.9511 -43.5) (float-vector 22.461 4.9511 -38.5) (float-vector 20.0 1.9999 -38.5) (float-vector 20.0 1.9999 -43.5)))
         (instance face :init :vertices (list (float-vector 30.626 4.9999 38.5) (float-vector 30.626 4.9999 43.5) (float-vector 22.461 4.9511 43.5) (float-vector 22.461 4.9511 38.5)))
         (instance face :init :vertices (list (float-vector 30.626 4.9999 -43.5) (float-vector 30.626 4.9999 -38.5) (float-vector 22.461 4.9511 -38.5) (float-vector 22.461 4.9511 -43.5)))
         (instance face :init :vertices (list (float-vector 42.0 24.7 38.5) (float-vector 42.0 24.7 43.5) (float-vector 30.626 4.9999 43.5) (float-vector 30.626 4.9999 38.5)))
         (instance face :init :vertices (list (float-vector 42.0 24.7 -43.5) (float-vector 42.0 24.7 -38.5) (float-vector 30.626 4.9999 -38.5) (float-vector 30.626 4.9999 -43.5)))
         (instance face :init :vertices (list (float-vector 42.0 24.7 -38.5) (float-vector 42.0 24.7 -43.5) (float-vector 42.0 35.0 -43.5) (float-vector 42.0 35.0 43.5) (float-vector 42.0 24.7 43.5) (float-vector 42.0 24.7 38.5) (float-vector 42.0 30.0 38.5) (float-vector 42.0 30.0 -38.5)))
         (instance face :init :vertices (list (float-vector -15.43 170.0 -28.898) (float-vector -15.43 35.0 -28.898) (float-vector -25.632 35.0 -26.104) (float-vector -25.632 170.0 -26.104)))
         (instance face :init :vertices (list (float-vector -34.634 35.0 -19.312) (float-vector -34.634 170.0 -19.312) (float-vector -25.632 170.0 -26.104) (float-vector -25.632 35.0 -26.104)))
         (instance face :init :vertices (list (float-vector -40.384 35.0 -9.5464) (float-vector -40.384 170.0 -9.5464) (float-vector -34.634 170.0 -19.312) (float-vector -34.634 35.0 -19.312)))
         (instance face :init :vertices (list (float-vector -41.5 35.0 5.230419e-15) (float-vector -41.5 170.0 3.520644e-14) (float-vector -40.384 170.0 -9.5464) (float-vector -40.384 35.0 -9.5464)))
         (instance face :init :vertices (list (float-vector -40.384 35.0 9.5464) (float-vector -40.384 170.0 9.5464) (float-vector -41.5 170.0 3.520644e-14) (float-vector -41.5 35.0 5.230419e-15)))
         (instance face :init :vertices (list (float-vector -34.634 35.0 19.312) (float-vector -34.634 170.0 19.312) (float-vector -40.384 170.0 9.5464) (float-vector -40.384 35.0 9.5464)))
         (instance face :init :vertices (list (float-vector -25.632 35.0 26.104) (float-vector -25.632 170.0 26.104) (float-vector -34.634 170.0 19.312) (float-vector -34.634 35.0 19.312)))
         (instance face :init :vertices (list (float-vector -15.43 35.0 28.898) (float-vector -15.43 170.0 28.898) (float-vector -25.632 170.0 26.104) (float-vector -25.632 35.0 26.104)))
         (instance face :init :vertices (list (float-vector 15.43 35.0 28.898) (float-vector 15.43 170.0 28.898) (float-vector -15.43 170.0 28.898) (float-vector -15.43 35.0 28.898)))
         (instance face :init :vertices (list (float-vector 25.632 35.0 26.104) (float-vector 25.632 170.0 26.104) (float-vector 15.43 170.0 28.898) (float-vector 15.43 35.0 28.898)))
         (instance face :init :vertices (list (float-vector 34.634 35.0 19.312) (float-vector 34.634 170.0 19.312) (float-vector 25.632 170.0 26.104) (float-vector 25.632 35.0 26.104)))
         (instance face :init :vertices (list (float-vector 40.384 35.0 9.5464) (float-vector 40.384 170.0 9.5464) (float-vector 34.634 170.0 19.312) (float-vector 34.634 35.0 19.312)))
         (instance face :init :vertices (list (float-vector 41.5 35.0 1.031270e-14) (float-vector 41.5 170.0 4.028872e-14) (float-vector 40.384 170.0 9.5464) (float-vector 40.384 35.0 9.5464)))
         (instance face :init :vertices (list (float-vector 40.384 35.0 -9.5464) (float-vector 40.384 170.0 -9.5464) (float-vector 41.5 170.0 4.028872e-14) (float-vector 41.5 35.0 1.031270e-14)))
         (instance face :init :vertices (list (float-vector 34.634 35.0 -19.312) (float-vector 34.634 170.0 -19.312) (float-vector 40.384 170.0 -9.5464) (float-vector 40.384 35.0 -9.5464)))
         (instance face :init :vertices (list (float-vector 25.632 35.0 -26.104) (float-vector 25.632 170.0 -26.104) (float-vector 34.634 170.0 -19.312) (float-vector 34.634 35.0 -19.312)))
         (instance face :init :vertices (list (float-vector 15.43 35.0 -28.898) (float-vector 15.43 170.0 -28.898) (float-vector 25.632 170.0 -26.104) (float-vector 25.632 35.0 -26.104)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 35.0 -29.0) (float-vector 7.105427e-15 170.0 -29.0) (float-vector 15.43 170.0 -28.898) (float-vector 15.43 35.0 -28.898)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 170.0 -29.0) (float-vector -15.43 170.0 -28.898) (float-vector -25.632 170.0 -26.104) (float-vector -34.634 170.0 -19.312) (float-vector -40.384 170.0 -9.5464) (float-vector -41.5 170.0 3.520644e-14) (float-vector -40.384 170.0 9.5464) (float-vector -34.634 170.0 19.312) (float-vector -25.632 170.0 26.104) (float-vector -15.43 170.0 28.898) (float-vector 15.43 170.0 28.898) (float-vector 25.632 170.0 26.104) (float-vector 34.634 170.0 19.312) (float-vector 40.384 170.0 9.5464) (float-vector 41.5 170.0 4.028872e-14) (float-vector 40.384 170.0 -9.5464) (float-vector 34.634 170.0 -19.312) (float-vector 25.632 170.0 -26.104) (float-vector 15.43 170.0 -28.898)))
         (instance face :init :vertices (list (float-vector -15.43 170.0 -28.898) (float-vector 7.105427e-15 170.0 -29.0) (float-vector 7.105427e-15 35.0 -29.0) (float-vector -15.43 35.0 -28.898)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink29 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-p :weight 245.86 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :head-neck-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 79.0 0.0) (float-vector 14.257 78.95 0.0) (float-vector 14.257 78.95 145.0) (float-vector 40.0 79.0 145.0)))
         (instance face :init :vertices (list (float-vector -2.7436 75.149 0.0) (float-vector -2.7436 75.149 145.0) (float-vector 14.257 78.95 145.0) (float-vector 14.257 78.95 0.0)))
         (instance face :init :vertices (list (float-vector -15.369 67.528 0.0) (float-vector -15.369 67.528 145.0) (float-vector -2.7436 75.149 145.0) (float-vector -2.7436 75.149 0.0)))
         (instance face :init :vertices (list (float-vector -25.877 55.536 0.0) (float-vector -25.877 55.536 145.0) (float-vector -15.369 67.528 145.0) (float-vector -15.369 67.528 0.0)))
         (instance face :init :vertices (list (float-vector -31.176 44.066 0.0) (float-vector -31.176 44.066 145.0) (float-vector -25.877 55.536 145.0) (float-vector -25.877 55.536 0.0)))
         (instance face :init :vertices (list (float-vector -33.5 29.0 0.0) (float-vector -33.5 29.0 145.0) (float-vector -31.176 44.066 145.0) (float-vector -31.176 44.066 0.0)))
         (instance face :init :vertices (list (float-vector -33.5 -6.310887e-30 0.0) (float-vector -33.5 -6.310887e-30 145.0) (float-vector -33.5 29.0 145.0) (float-vector -33.5 29.0 0.0)))
         (instance face :init :vertices (list (float-vector -33.5 -29.0 0.0) (float-vector -33.5 -29.0 145.0) (float-vector -33.5 -6.310887e-30 145.0) (float-vector -33.5 -6.310887e-30 0.0)))
         (instance face :init :vertices (list (float-vector -31.176 -44.066 0.0) (float-vector -31.176 -44.066 145.0) (float-vector -33.5 -29.0 145.0) (float-vector -33.5 -29.0 0.0)))
         (instance face :init :vertices (list (float-vector -25.877 -55.536 0.0) (float-vector -25.877 -55.536 145.0) (float-vector -31.176 -44.066 145.0) (float-vector -31.176 -44.066 0.0)))
         (instance face :init :vertices (list (float-vector -15.369 -67.528 0.0) (float-vector -15.369 -67.528 145.0) (float-vector -25.877 -55.536 145.0) (float-vector -25.877 -55.536 0.0)))
         (instance face :init :vertices (list (float-vector -2.7436 -75.149 0.0) (float-vector -2.7436 -75.149 145.0) (float-vector -15.369 -67.528 145.0) (float-vector -15.369 -67.528 0.0)))
         (instance face :init :vertices (list (float-vector 14.257 -78.95 0.0) (float-vector 14.257 -78.95 145.0) (float-vector -2.7436 -75.149 145.0) (float-vector -2.7436 -75.149 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 -79.0 0.0) (float-vector 40.0 -79.0 145.0) (float-vector 14.257 -78.95 145.0) (float-vector 14.257 -78.95 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 79.0 145.0) (float-vector 14.257 78.95 145.0) (float-vector -2.7436 75.149 145.0) (float-vector -15.369 67.528 145.0) (float-vector -25.877 55.536 145.0) (float-vector -31.176 44.066 145.0) (float-vector -33.5 29.0 145.0) (float-vector -33.5 -6.310887e-30 145.0) (float-vector -33.5 -29.0 145.0) (float-vector -31.176 -44.066 145.0) (float-vector -25.877 -55.536 145.0) (float-vector -15.369 -67.528 145.0) (float-vector -2.7436 -75.149 145.0) (float-vector 14.257 -78.95 145.0) (float-vector 40.0 -79.0 145.0)))
         (instance face :init :vertices (list (float-vector 40.0 -79.0 0.0) (float-vector 14.257 -78.95 0.0) (float-vector -2.7436 -75.149 0.0) (float-vector -15.369 -67.528 0.0) (float-vector -25.877 -55.536 0.0) (float-vector -31.176 -44.066 0.0) (float-vector -33.5 -29.0 0.0) (float-vector -33.5 -6.310887e-30 0.0) (float-vector -33.5 29.0 0.0) (float-vector -31.176 44.066 0.0) (float-vector -25.877 55.536 0.0) (float-vector -15.369 67.528 0.0) (float-vector -2.7436 75.149 0.0) (float-vector 14.257 78.95 0.0) (float-vector 40.0 79.0 0.0) (float-vector 40.0 77.4894 0.0) (float-vector 13.969 77.434 0.0) (float-vector -1.7971 73.916 0.0) (float-vector -14.126 66.607 0.0) (float-vector -24.579 54.784 0.0) (float-vector -29.709 43.73 0.0) (float-vector -32.0 29.0 0.0) (float-vector -32.0 -29.0 0.0) (float-vector -29.709 -43.73 0.0) (float-vector -24.579 -54.784 0.0) (float-vector -14.126 -66.607 0.0) (float-vector -1.7971 -73.916 0.0) (float-vector 13.969 -77.434 0.0) (float-vector 40.0 -77.4894 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 -77.4894 0.0) (float-vector 40.0 -77.4894 142.0) (float-vector 40.0 77.4894 142.0) (float-vector 40.0 77.4894 0.0) (float-vector 40.0 79.0 0.0) (float-vector 40.0 79.0 145.0) (float-vector 40.0 -79.0 145.0) (float-vector 40.0 -79.0 0.0)))
         (instance face :init :vertices (list (float-vector 13.969 77.434 0.0) (float-vector 40.0 77.4894 0.0) (float-vector 40.0 77.4894 142.0) (float-vector 13.969 77.434 142.0)))
         (instance face :init :vertices (list (float-vector -1.7971 73.916 0.0) (float-vector 13.969 77.434 0.0) (float-vector 13.969 77.434 142.0) (float-vector -1.7971 73.916 142.0)))
         (instance face :init :vertices (list (float-vector -14.126 66.607 0.0) (float-vector -1.7971 73.916 0.0) (float-vector -1.7971 73.916 142.0) (float-vector -14.126 66.607 142.0)))
         (instance face :init :vertices (list (float-vector -24.579 54.784 0.0) (float-vector -14.126 66.607 0.0) (float-vector -14.126 66.607 142.0) (float-vector -24.579 54.784 142.0)))
         (instance face :init :vertices (list (float-vector -29.709 43.73 0.0) (float-vector -24.579 54.784 0.0) (float-vector -24.579 54.784 142.0) (float-vector -29.709 43.73 142.0)))
         (instance face :init :vertices (list (float-vector -32.0 29.0 0.0) (float-vector -29.709 43.73 0.0) (float-vector -29.709 43.73 142.0) (float-vector -32.0 29.0 142.0)))
         (instance face :init :vertices (list (float-vector -32.0 -29.0 0.0) (float-vector -32.0 29.0 0.0) (float-vector -32.0 29.0 142.0) (float-vector -32.0 -29.0 142.0)))
         (instance face :init :vertices (list (float-vector -29.709 -43.73 0.0) (float-vector -32.0 -29.0 0.0) (float-vector -32.0 -29.0 142.0) (float-vector -29.709 -43.73 142.0)))
         (instance face :init :vertices (list (float-vector -24.579 -54.784 0.0) (float-vector -29.709 -43.73 0.0) (float-vector -29.709 -43.73 142.0) (float-vector -24.579 -54.784 142.0)))
         (instance face :init :vertices (list (float-vector -14.126 -66.607 0.0) (float-vector -24.579 -54.784 0.0) (float-vector -24.579 -54.784 142.0) (float-vector -14.126 -66.607 142.0)))
         (instance face :init :vertices (list (float-vector -1.7971 -73.916 0.0) (float-vector -14.126 -66.607 0.0) (float-vector -14.126 -66.607 142.0) (float-vector -1.7971 -73.916 142.0)))
         (instance face :init :vertices (list (float-vector 13.969 -77.434 0.0) (float-vector -1.7971 -73.916 0.0) (float-vector -1.7971 -73.916 142.0) (float-vector 13.969 -77.434 142.0)))
         (instance face :init :vertices (list (float-vector 13.969 -77.434 142.0) (float-vector -1.7971 -73.916 142.0) (float-vector -14.126 -66.607 142.0) (float-vector -24.579 -54.784 142.0) (float-vector -29.709 -43.73 142.0) (float-vector -32.0 -29.0 142.0) (float-vector -32.0 29.0 142.0) (float-vector -29.709 43.73 142.0) (float-vector -24.579 54.784 142.0) (float-vector -14.126 66.607 142.0) (float-vector -1.7971 73.916 142.0) (float-vector 13.969 77.434 142.0) (float-vector 40.0 77.4894 142.0) (float-vector 40.0 -77.4894 142.0)))
         (instance face :init :vertices (list (float-vector 40.0 -77.4894 142.0) (float-vector 40.0 -77.4894 0.0) (float-vector 13.969 -77.434 0.0) (float-vector 13.969 -77.434 142.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 77.5 62.5) (float-vector 40.0 77.5 0.0) (float-vector 125.0 77.5 0.0) (float-vector 125.0 77.5 1.0) (float-vector 43.0 77.5 1.0) (float-vector 43.0 77.5 62.5)))
         (instance face :init :vertices (list (float-vector 40.0 77.5 62.5) (float-vector 43.0 77.5 62.5) (float-vector 43.0 -77.5 62.5) (float-vector 40.0 -77.5 62.5)))
         (instance face :init :vertices (list (float-vector 125.0 77.5 1.0) (float-vector 125.0 77.5 0.0) (float-vector 125.0 -77.5 0.0) (float-vector 125.0 -77.5 1.0)))
         (instance face :init :vertices (list (float-vector 125.0 -77.5 1.0) (float-vector 125.0 -77.5 0.0) (float-vector 40.0 -77.5 0.0) (float-vector 40.0 -77.5 62.5) (float-vector 43.0 -77.5 62.5) (float-vector 43.0 -77.5 1.0)))
         (instance face :init :vertices (list (float-vector 144.59 -114.94 0.0) (float-vector 152.81 -112.43 0.0) (float-vector 152.81 -112.43 145.0) (float-vector 144.59 -114.94 145.0)))
         (instance face :init :vertices (list (float-vector 144.59 -114.94 0.0) (float-vector 144.59 -114.94 145.0) (float-vector 40.0 -115.0 145.0) (float-vector 40.0 -115.0 0.0)))
         (instance face :init :vertices (list (float-vector 152.81 -112.43 145.0) (float-vector 152.81 -112.43 0.0) (float-vector 160.07 -105.43 0.0) (float-vector 160.07 -105.43 20.0) (float-vector 158.2 -107.233 20.0) (float-vector 158.2 -107.233 125.0) (float-vector 160.07 -105.43 125.0) (float-vector 160.07 -105.43 145.0)))
         (instance face :init :vertices (list (float-vector 162.9 -96.948 20.0) (float-vector 160.07 -105.43 20.0) (float-vector 160.07 -105.43 0.0) (float-vector 162.9 -96.948 0.0)))
         (instance face :init :vertices (list (float-vector 160.07 -105.43 145.0) (float-vector 160.07 -105.43 125.0) (float-vector 162.9 -96.948 125.0) (float-vector 162.9 -96.948 145.0)))
         (instance face :init :vertices (list (float-vector 162.9 96.948 20.0) (float-vector 162.9 -96.948 20.0) (float-vector 162.9 -96.948 0.0) (float-vector 162.9 96.948 0.0)))
         (instance face :init :vertices (list (float-vector 162.9 -96.948 145.0) (float-vector 162.9 -96.948 125.0) (float-vector 162.9 96.948 125.0) (float-vector 162.9 96.948 145.0)))
         (instance face :init :vertices (list (float-vector 160.07 105.43 20.0) (float-vector 162.9 96.948 20.0) (float-vector 162.9 96.948 0.0) (float-vector 160.07 105.43 0.0)))
         (instance face :init :vertices (list (float-vector 162.9 96.948 145.0) (float-vector 162.9 96.948 125.0) (float-vector 160.07 105.43 125.0) (float-vector 160.07 105.43 145.0)))
         (instance face :init :vertices (list (float-vector 160.07 105.43 145.0) (float-vector 160.07 105.43 125.0) (float-vector 158.2 107.233 125.0) (float-vector 158.2 107.233 20.0) (float-vector 160.07 105.43 20.0) (float-vector 160.07 105.43 0.0) (float-vector 152.81 112.43 0.0) (float-vector 152.81 112.43 145.0)))
         (instance face :init :vertices (list (float-vector 152.81 112.43 145.0) (float-vector 152.81 112.43 0.0) (float-vector 144.59 114.94 0.0) (float-vector 144.59 114.94 145.0)))
         (instance face :init :vertices (list (float-vector 144.59 114.94 145.0) (float-vector 144.59 114.94 0.0) (float-vector 40.0 115.0 0.0) (float-vector 40.0 115.0 145.0)))
         (instance face :init :vertices (list (float-vector 40.0 -115.0 145.0) (float-vector 144.59 -114.94 145.0) (float-vector 152.81 -112.43 145.0) (float-vector 160.07 -105.43 145.0) (float-vector 162.9 -96.948 145.0) (float-vector 162.9 96.948 145.0) (float-vector 160.07 105.43 145.0) (float-vector 152.81 112.43 145.0) (float-vector 144.59 114.94 145.0) (float-vector 40.0 115.0 145.0)))
         (instance face :init :vertices (list (float-vector 40.0 115.0 0.0) (float-vector 144.59 114.94 0.0) (float-vector 152.81 112.43 0.0) (float-vector 160.07 105.43 0.0) (float-vector 162.9 96.948 0.0) (float-vector 162.9 -96.948 0.0) (float-vector 160.07 -105.43 0.0) (float-vector 152.81 -112.43 0.0) (float-vector 144.59 -114.94 0.0) (float-vector 40.0 -115.0 0.0) (float-vector 40.0 -77.5 0.0) (float-vector 125.0 -77.5 0.0) (float-vector 125.0 77.5 0.0) (float-vector 40.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 77.5 0.0) (float-vector 40.0 77.5 62.5) (float-vector 40.0 -77.5 62.5) (float-vector 40.0 -77.5 0.0) (float-vector 40.0 -115.0 0.0) (float-vector 40.0 -115.0 145.0) (float-vector 40.0 115.0 145.0) (float-vector 40.0 115.0 0.0)))
         (instance face :init :vertices (list (float-vector 143.0 -114.0 1.0) (float-vector 43.0 -114.0 1.0) (float-vector 43.0 -114.0 144.0) (float-vector 143.0 -114.0 144.0)))
         (instance face :init :vertices (list (float-vector 143.0 -114.0 1.0) (float-vector 143.0 -114.0 144.0) (float-vector 152.19 -111.63 144.0) (float-vector 152.19 -111.63 1.0)))
         (instance face :init :vertices (list (float-vector 152.19 -111.63 1.0) (float-vector 152.19 -111.63 144.0) (float-vector 159.09 -105.1 144.0) (float-vector 159.09 -105.1 125.0) (float-vector 158.2 -105.942 125.0) (float-vector 158.2 -105.942 20.0) (float-vector 159.09 -105.1 20.0) (float-vector 159.09 -105.1 1.0)))
         (instance face :init :vertices (list (float-vector 161.98 -95.934 125.0) (float-vector 159.09 -105.1 125.0) (float-vector 159.09 -105.1 144.0) (float-vector 161.98 -95.934 144.0)))
         (instance face :init :vertices (list (float-vector 159.09 -105.1 1.0) (float-vector 159.09 -105.1 20.0) (float-vector 161.98 -95.934 20.0) (float-vector 161.98 -95.934 1.0)))
         (instance face :init :vertices (list (float-vector 161.98 95.934 125.0) (float-vector 161.98 -95.934 125.0) (float-vector 161.98 -95.934 144.0) (float-vector 161.98 95.934 144.0)))
         (instance face :init :vertices (list (float-vector 161.98 -95.934 1.0) (float-vector 161.98 -95.934 20.0) (float-vector 161.98 95.934 20.0) (float-vector 161.98 95.934 1.0)))
         (instance face :init :vertices (list (float-vector 159.09 105.1 125.0) (float-vector 161.98 95.934 125.0) (float-vector 161.98 95.934 144.0) (float-vector 159.09 105.1 144.0)))
         (instance face :init :vertices (list (float-vector 161.98 95.934 1.0) (float-vector 161.98 95.934 20.0) (float-vector 159.09 105.1 20.0) (float-vector 159.09 105.1 1.0)))
         (instance face :init :vertices (list (float-vector 159.09 105.1 1.0) (float-vector 159.09 105.1 20.0) (float-vector 158.2 105.942 20.0) (float-vector 158.2 105.942 125.0) (float-vector 159.09 105.1 125.0) (float-vector 159.09 105.1 144.0) (float-vector 152.19 111.63 144.0) (float-vector 152.19 111.63 1.0)))
         (instance face :init :vertices (list (float-vector 152.19 111.63 1.0) (float-vector 152.19 111.63 144.0) (float-vector 143.0 114.0 144.0) (float-vector 143.0 114.0 1.0)))
         (instance face :init :vertices (list (float-vector 143.0 114.0 1.0) (float-vector 143.0 114.0 144.0) (float-vector 43.0 114.0 144.0) (float-vector 43.0 114.0 1.0)))
         (instance face :init :vertices (list (float-vector 43.0 114.0 144.0) (float-vector 143.0 114.0 144.0) (float-vector 152.19 111.63 144.0) (float-vector 159.09 105.1 144.0) (float-vector 161.98 95.934 144.0) (float-vector 161.98 -95.934 144.0) (float-vector 159.09 -105.1 144.0) (float-vector 152.19 -111.63 144.0) (float-vector 143.0 -114.0 144.0) (float-vector 43.0 -114.0 144.0)))
         (instance face :init :vertices (list (float-vector 43.0 114.0 1.0) (float-vector 43.0 114.0 144.0) (float-vector 43.0 -114.0 144.0) (float-vector 43.0 -114.0 1.0) (float-vector 43.0 -77.5 1.0) (float-vector 43.0 -77.5 62.5) (float-vector 43.0 77.5 62.5) (float-vector 43.0 77.5 1.0)))
         (instance face :init :vertices (list (float-vector 43.0 77.5 1.0) (float-vector 125.0 77.5 1.0) (float-vector 125.0 -77.5 1.0) (float-vector 43.0 -77.5 1.0) (float-vector 43.0 -114.0 1.0) (float-vector 143.0 -114.0 1.0) (float-vector 152.19 -111.63 1.0) (float-vector 159.09 -105.1 1.0) (float-vector 161.98 -95.934 1.0) (float-vector 161.98 95.934 1.0) (float-vector 159.09 105.1 1.0) (float-vector 152.19 111.63 1.0) (float-vector 143.0 114.0 1.0) (float-vector 43.0 114.0 1.0)))
         (instance face :init :vertices (list (float-vector 158.2 107.233 125.0) (float-vector 160.07 105.43 125.0) (float-vector 162.9 96.948 125.0) (float-vector 162.9 -96.948 125.0) (float-vector 160.07 -105.43 125.0) (float-vector 158.2 -107.233 125.0) (float-vector 158.2 -105.942 125.0) (float-vector 159.09 -105.1 125.0) (float-vector 161.98 -95.934 125.0) (float-vector 161.98 95.934 125.0) (float-vector 159.09 105.1 125.0) (float-vector 158.2 105.942 125.0)))
         (instance face :init :vertices (list (float-vector 158.2 -105.942 20.0) (float-vector 158.2 -105.942 125.0) (float-vector 158.2 -107.233 125.0) (float-vector 158.2 -107.233 20.0)))
         (instance face :init :vertices (list (float-vector 158.2 107.233 20.0) (float-vector 158.2 107.233 125.0) (float-vector 158.2 105.942 125.0) (float-vector 158.2 105.942 20.0)))
         (instance face :init :vertices (list (float-vector 158.2 105.942 20.0) (float-vector 159.09 105.1 20.0) (float-vector 161.98 95.934 20.0) (float-vector 161.98 -95.934 20.0) (float-vector 159.09 -105.1 20.0) (float-vector 158.2 -105.942 20.0) (float-vector 158.2 -107.233 20.0) (float-vector 160.07 -105.43 20.0) (float-vector 162.9 -96.948 20.0) (float-vector 162.9 96.948 20.0) (float-vector 160.07 105.43 20.0) (float-vector 158.2 107.233 20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 105.0 43.0 -50.0) (float-vector 0.0 77.5 0.0) (float-vector 125.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 43.0 -50.0) (float-vector 0.0 77.5 0.0) (float-vector 105.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 -43.0 -50.0) (float-vector 0.0 43.0 -50.0) (float-vector 105.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 105.0 -43.0 -50.0) (float-vector 0.0 -43.0 -50.0) (float-vector 105.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 125.0 -77.5 0.0) (float-vector 0.0 -43.0 -50.0) (float-vector 105.0 -43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 -77.5 0.0) (float-vector 0.0 -43.0 -50.0) (float-vector 125.0 -77.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 77.5 0.0) (float-vector 0.0 -77.5 0.0) (float-vector 125.0 -77.5 0.0)))
         (instance face :init :vertices (list (float-vector 125.0 77.5 0.0) (float-vector 0.0 77.5 0.0) (float-vector 125.0 -77.5 0.0)))
         (instance face :init :vertices (list (float-vector 125.0 -77.5 0.0) (float-vector 105.0 -43.0 -50.0) (float-vector 125.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 125.0 77.5 0.0) (float-vector 105.0 -43.0 -50.0) (float-vector 105.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 -77.5 0.0) (float-vector 0.0 77.5 0.0) (float-vector 0.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 43.0 -50.0) (float-vector 0.0 -43.0 -50.0) (float-vector 0.0 -77.5 0.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 96.5 66.0 86.5) (float-vector 96.5 66.0 42.5) (float-vector 96.5 -66.0 42.5) (float-vector 96.5 -66.0 86.5) (float-vector 96.5 -31.0 86.5) (float-vector 96.5 -31.0 43.5) (float-vector 96.5 31.0 43.5) (float-vector 96.5 31.0 86.5)))
         (instance face :init :vertices (list (float-vector 96.5 -66.0 42.5) (float-vector 123.5 -66.0 42.5) (float-vector 123.5 -66.0 86.5) (float-vector 96.5 -66.0 86.5)))
         (instance face :init :vertices (list (float-vector 123.5 -66.0 42.5) (float-vector 123.5 66.0 42.5) (float-vector 123.5 66.0 86.5) (float-vector 123.5 -66.0 86.5)))
         (instance face :init :vertices (list (float-vector 123.5 66.0 86.5) (float-vector 96.5 66.0 86.5) (float-vector 96.5 31.0 86.5) (float-vector 98.0 31.0 86.5) (float-vector 98.0 -31.0 86.5) (float-vector 96.5 -31.0 86.5) (float-vector 96.5 -66.0 86.5) (float-vector 123.5 -66.0 86.5)))
         (instance face :init :vertices (list (float-vector 123.5 66.0 42.5) (float-vector 96.5 66.0 42.5) (float-vector 96.5 66.0 86.5) (float-vector 123.5 66.0 86.5)))
         (instance face :init :vertices (list (float-vector 96.5 66.0 42.5) (float-vector 123.5 66.0 42.5) (float-vector 123.5 -66.0 42.5) (float-vector 96.5 -66.0 42.5)))
         (instance face :init :vertices (list (float-vector 84.0 31.0 128.5) (float-vector 84.0 31.0 43.5) (float-vector 84.0 -31.0 43.5) (float-vector 84.0 -31.0 128.5)))
         (instance face :init :vertices (list (float-vector 84.0 -31.0 43.5) (float-vector 96.5 -31.0 43.5) (float-vector 96.5 -31.0 86.5) (float-vector 98.0 -31.0 86.5) (float-vector 98.0 -31.0 128.5) (float-vector 84.0 -31.0 128.5)))
         (instance face :init :vertices (list (float-vector 98.0 31.0 86.5) (float-vector 98.0 31.0 128.5) (float-vector 98.0 -31.0 128.5) (float-vector 98.0 -31.0 86.5)))
         (instance face :init :vertices (list (float-vector 98.0 31.0 128.5) (float-vector 84.0 31.0 128.5) (float-vector 84.0 -31.0 128.5) (float-vector 98.0 -31.0 128.5)))
         (instance face :init :vertices (list (float-vector 96.5 31.0 43.5) (float-vector 84.0 31.0 43.5) (float-vector 84.0 31.0 128.5) (float-vector 98.0 31.0 128.5) (float-vector 98.0 31.0 86.5) (float-vector 96.5 31.0 86.5)))
         (instance face :init :vertices (list (float-vector 84.0 31.0 43.5) (float-vector 96.5 31.0 43.5) (float-vector 96.5 -31.0 43.5) (float-vector 84.0 -31.0 43.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 162.5 27.6795 75.0) (float-vector 162.5 25.0 65.0) (float-vector 162.5 27.6795 55.0) (float-vector 162.5 35.0 47.6795) (float-vector 162.5 45.0 45.0) (float-vector 162.5 55.0 47.6795) (float-vector 162.5 62.3205 55.0) (float-vector 162.5 65.0 65.0) (float-vector 162.5 62.3205 75.0) (float-vector 162.5 55.0 82.3205) (float-vector 162.5 45.0 85.0) (float-vector 162.5 35.0 82.3205)))
         (instance face :init :vertices (list (float-vector 122.5 25.0 65.0) (float-vector 122.5 27.6795 75.0) (float-vector 122.5 35.0 82.3205) (float-vector 122.5 45.0 85.0) (float-vector 122.5 55.0 82.3205) (float-vector 122.5 62.3205 75.0) (float-vector 122.5 65.0 65.0) (float-vector 122.5 62.3205 55.0) (float-vector 122.5 55.0 47.6795) (float-vector 122.5 45.0 45.0) (float-vector 122.5 35.0 47.6795) (float-vector 122.5 27.6795 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 27.6795 75.0) (float-vector 122.5 27.6795 75.0) (float-vector 122.5 25.0 65.0) (float-vector 162.5 25.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 35.0 82.3205) (float-vector 122.5 35.0 82.3205) (float-vector 122.5 27.6795 75.0) (float-vector 162.5 27.6795 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 45.0 85.0) (float-vector 122.5 45.0 85.0) (float-vector 122.5 35.0 82.3205) (float-vector 162.5 35.0 82.3205)))
         (instance face :init :vertices (list (float-vector 162.5 55.0 82.3205) (float-vector 122.5 55.0 82.3205) (float-vector 122.5 45.0 85.0) (float-vector 162.5 45.0 85.0)))
         (instance face :init :vertices (list (float-vector 162.5 62.3205 75.0) (float-vector 122.5 62.3205 75.0) (float-vector 122.5 55.0 82.3205) (float-vector 162.5 55.0 82.3205)))
         (instance face :init :vertices (list (float-vector 162.5 65.0 65.0) (float-vector 122.5 65.0 65.0) (float-vector 122.5 62.3205 75.0) (float-vector 162.5 62.3205 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 62.3205 55.0) (float-vector 122.5 62.3205 55.0) (float-vector 122.5 65.0 65.0) (float-vector 162.5 65.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 55.0 47.6795) (float-vector 122.5 55.0 47.6795) (float-vector 122.5 62.3205 55.0) (float-vector 162.5 62.3205 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 45.0 45.0) (float-vector 122.5 45.0 45.0) (float-vector 122.5 55.0 47.6795) (float-vector 162.5 55.0 47.6795)))
         (instance face :init :vertices (list (float-vector 162.5 35.0 47.6795) (float-vector 122.5 35.0 47.6795) (float-vector 122.5 45.0 45.0) (float-vector 162.5 45.0 45.0)))
         (instance face :init :vertices (list (float-vector 162.5 27.6795 55.0) (float-vector 122.5 27.6795 55.0) (float-vector 122.5 35.0 47.6795) (float-vector 162.5 35.0 47.6795)))
         (instance face :init :vertices (list (float-vector 162.5 25.0 65.0) (float-vector 122.5 25.0 65.0) (float-vector 122.5 27.6795 55.0) (float-vector 162.5 27.6795 55.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 162.5 -62.3205 75.0) (float-vector 162.5 -65.0 65.0) (float-vector 162.5 -62.3205 55.0) (float-vector 162.5 -55.0 47.6795) (float-vector 162.5 -45.0 45.0) (float-vector 162.5 -35.0 47.6795) (float-vector 162.5 -27.6795 55.0) (float-vector 162.5 -25.0 65.0) (float-vector 162.5 -27.6795 75.0) (float-vector 162.5 -35.0 82.3205) (float-vector 162.5 -45.0 85.0) (float-vector 162.5 -55.0 82.3205)))
         (instance face :init :vertices (list (float-vector 122.5 -65.0 65.0) (float-vector 122.5 -62.3205 75.0) (float-vector 122.5 -55.0 82.3205) (float-vector 122.5 -45.0 85.0) (float-vector 122.5 -35.0 82.3205) (float-vector 122.5 -27.6795 75.0) (float-vector 122.5 -25.0 65.0) (float-vector 122.5 -27.6795 55.0) (float-vector 122.5 -35.0 47.6795) (float-vector 122.5 -45.0 45.0) (float-vector 122.5 -55.0 47.6795) (float-vector 122.5 -62.3205 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 -62.3205 75.0) (float-vector 122.5 -62.3205 75.0) (float-vector 122.5 -65.0 65.0) (float-vector 162.5 -65.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 -55.0 82.3205) (float-vector 122.5 -55.0 82.3205) (float-vector 122.5 -62.3205 75.0) (float-vector 162.5 -62.3205 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 -45.0 85.0) (float-vector 122.5 -45.0 85.0) (float-vector 122.5 -55.0 82.3205) (float-vector 162.5 -55.0 82.3205)))
         (instance face :init :vertices (list (float-vector 162.5 -35.0 82.3205) (float-vector 122.5 -35.0 82.3205) (float-vector 122.5 -45.0 85.0) (float-vector 162.5 -45.0 85.0)))
         (instance face :init :vertices (list (float-vector 162.5 -27.6795 75.0) (float-vector 122.5 -27.6795 75.0) (float-vector 122.5 -35.0 82.3205) (float-vector 162.5 -35.0 82.3205)))
         (instance face :init :vertices (list (float-vector 162.5 -25.0 65.0) (float-vector 122.5 -25.0 65.0) (float-vector 122.5 -27.6795 75.0) (float-vector 162.5 -27.6795 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 -27.6795 55.0) (float-vector 122.5 -27.6795 55.0) (float-vector 122.5 -25.0 65.0) (float-vector 162.5 -25.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 -35.0 47.6795) (float-vector 122.5 -35.0 47.6795) (float-vector 122.5 -27.6795 55.0) (float-vector 162.5 -27.6795 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 -45.0 45.0) (float-vector 122.5 -45.0 45.0) (float-vector 122.5 -35.0 47.6795) (float-vector 162.5 -35.0 47.6795)))
         (instance face :init :vertices (list (float-vector 162.5 -55.0 47.6795) (float-vector 122.5 -55.0 47.6795) (float-vector 122.5 -45.0 45.0) (float-vector 162.5 -45.0 45.0)))
         (instance face :init :vertices (list (float-vector 162.5 -62.3205 55.0) (float-vector 122.5 -62.3205 55.0) (float-vector 122.5 -55.0 47.6795) (float-vector 162.5 -55.0 47.6795)))
         (instance face :init :vertices (list (float-vector 162.5 -65.0 65.0) (float-vector 122.5 -65.0 65.0) (float-vector 122.5 -62.3205 55.0) (float-vector 162.5 -62.3205 55.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 162.0 100.0 140.5) (float-vector 161.0 100.0 140.5) (float-vector 161.0 -100.0 140.5) (float-vector 162.0 -100.0 140.5)))
         (instance face :init :vertices (list (float-vector 161.0 100.0 0.5) (float-vector 162.0 100.0 0.5) (float-vector 162.0 -100.0 0.5) (float-vector 161.0 -100.0 0.5)))
         (instance face :init :vertices (list (float-vector 162.0 100.0 140.5) (float-vector 162.0 100.0 0.5) (float-vector 161.0 100.0 0.5) (float-vector 161.0 100.0 140.5)))
         (instance face :init :vertices (list (float-vector 162.0 -100.0 140.5) (float-vector 162.0 -100.0 0.5) (float-vector 162.0 100.0 0.5) (float-vector 162.0 100.0 140.5)))
         (instance face :init :vertices (list (float-vector 161.0 -100.0 140.5) (float-vector 161.0 -100.0 0.5) (float-vector 162.0 -100.0 0.5) (float-vector 162.0 -100.0 140.5)))
         (instance face :init :vertices (list (float-vector 161.0 100.0 140.5) (float-vector 161.0 100.0 0.5) (float-vector 161.0 -100.0 0.5) (float-vector 161.0 -100.0 140.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     ;; paste texture h7face2.ppm
     (send (elt bc 6) :paste-texture-to-face (elt (send (elt bc 6) :faces)3) :file "models/h7face2.ppm")
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (send (elt bc 3) :set-color :gray50)
     (send (elt bc 4) :set-color :gray50)
     (send (elt bc 5) :set-color :gray50)
     (send (elt bc 6) :set-color (list))
     (setq blink30 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-y :weight 1009.43 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of assoc
     (send blink16 :newcoords (make-coords :pos (float-vector 85.0 34.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink15 :assoc blink16)
     (send blink15 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink14 :assoc blink15)
     (send blink14 :newcoords (make-coords :pos (float-vector 0.0 1.136868e-13 -180.0) :rot #2f((1.110223e-16 1.0 -1.110223e-16) (-1.110223e-16 -1.110223e-16 -1.0) (-1.0 1.110223e-16 1.110223e-16))))
     (send blink13 :assoc blink14)
     (send blink13 :newcoords (make-coords :pos (float-vector -19.0 -70.0 0.0) :rot #2f((-3.330669e-16 1.0 1.110223e-16) (-1.110223e-16 -1.110223e-16 1.0) (1.0 3.330669e-16 1.110223e-16))))
     (send blink12 :assoc blink13)
     (send blink12 :newcoords (make-coords :pos (float-vector -250.0 8.0 18.0) :rot #2f((1.110223e-16 1.0 1.110223e-16) (-1.110223e-16 -1.110223e-16 1.0) (1.0 -1.110223e-16 1.110223e-16))))
     (send blink11 :assoc blink12)
     (send blink11 :newcoords (make-coords :pos (float-vector -18.0 1.136868e-13 0.0) :rot #2f((-1.110223e-16 1.110223e-16 1.0) (1.0 -1.110223e-16 1.110223e-16) (1.110223e-16 1.0 -1.110223e-16))))
     (send blink10 :assoc blink11)
     (send blink10 :newcoords (make-coords :pos (float-vector 3.552714e-14 -147.0 0.0) :rot #2f((1.0 1.232595e-32 1.570092e-16) (1.570092e-16 -2.220446e-16 -1.0) (1.232595e-32 1.0 -2.220446e-16))))
     (send blink9 :assoc blink10)
     (send blink8 :newcoords (make-coords :pos (float-vector 85.0 34.0 1.136868e-13) :rot #2f((1.0 0.0 1.729613e-33) (0.0 1.0 0.0) (-1.729613e-33 0.0 1.0))))
     (send blink7 :assoc blink8)
     (send blink7 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 -3.774823e-32 -2.220446e-16) (6.085939e-32 -1.0 4.440892e-16) (-2.220446e-16 -4.440892e-16 -1.0))))
     (send blink6 :assoc blink7)
     (send blink6 :newcoords (make-coords :pos (float-vector 0.0 0.0 180.0) :rot #2f((3.330669e-16 1.0 3.330669e-16) (-3.330669e-16 -3.330669e-16 1.0) (1.0 -3.330669e-16 3.330669e-16))))
     (send blink5 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector -19.0 -70.0 5.684342e-14) :rot #2f((-7.771561e-16 -1.0 -5.551115e-16) (-1.110223e-16 5.551115e-16 -1.0) (1.0 -7.771561e-16 -1.110223e-16))))
     (send blink4 :assoc blink5)
     (send blink4 :newcoords (make-coords :pos (float-vector -250.0 8.0 -18.0) :rot #2f((-5.551115e-17 1.0 0.0) (3.885781e-16 -5.551115e-17 -1.0) (-1.0 0.0 -3.885781e-16))))
     (send blink3 :assoc blink4)
     (send blink3 :newcoords (make-coords :pos (float-vector -18.0 0.0 0.0) :rot #2f((-3.885781e-16 0.0 -1.0) (1.0 -1.665335e-16 -3.885781e-16) (-2.220446e-16 -1.0 5.551115e-17))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector -3.552714e-14 -147.0 0.0) :rot #2f((1.0 -6.123234e-17 1.570092e-16) (-1.570092e-16 -2.220446e-16 1.0) (-6.123234e-17 -1.0 -2.220446e-16))))
     (send blink1 :assoc blink2)
     (send blink28 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.110223e-16 -1.110223e-16 1.0) (-1.0 1.110223e-16 1.110223e-16) (-1.110223e-16 -1.0 -1.110223e-16))))
     (send blink27 :assoc blink28)
     (send blink27 :newcoords (make-coords :pos (float-vector 1.421085e-14 -250.0 0.0) :rot #2f((1.0 6.162976e-33 0.0) (-6.162976e-33 1.0 0.0) (0.0 0.0 1.0))))
     (send blink26 :assoc blink27)
     (send blink26 :newcoords (make-coords :pos (float-vector -20.0 -250.0 -2.842171e-14) :rot #2f((1.0 -6.162976e-33 1.232595e-32) (6.162976e-33 1.0 6.842278e-49) (-1.232595e-32 -6.842278e-49 1.0))))
     (send blink25 :assoc blink26)
     (send blink25 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((0.0 -1.0 2.220446e-16) (0.0 -2.220446e-16 -1.0) (1.0 0.0 0.0))))
     (send blink24 :assoc blink25)
     (send blink24 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((-2.220446e-16 -1.570092e-16 1.0) (-1.232595e-32 1.0 1.570092e-16) (-1.0 1.232595e-32 -2.220446e-16))))
     (send blink23 :assoc blink24)
     (send blink22 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.110223e-16 1.110223e-16 -1.0) (1.0 1.110223e-16 1.110223e-16) (1.110223e-16 -1.0 -1.110223e-16))))
     (send blink21 :assoc blink22)
     (send blink21 :newcoords (make-coords :pos (float-vector 1.421085e-14 -250.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink20 :assoc blink21)
     (send blink20 :newcoords (make-coords :pos (float-vector -20.0 -250.0 0.0) :rot #2f((1.0 2.465190e-32 -2.465190e-32) (-2.465190e-32 1.0 1.368456e-48) (2.465190e-32 -1.368456e-48 1.0))))
     (send blink19 :assoc blink20)
     (send blink19 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.110223e-16 1.0 -1.110223e-16) (3.330669e-16 -1.110223e-16 -1.0) (-1.0 1.110223e-16 -3.330669e-16))))
     (send blink18 :assoc blink19)
     (send blink18 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((-2.220446e-16 -1.570092e-16 -1.0) (-6.123234e-17 -1.0 1.570092e-16) (-1.0 6.123234e-17 2.220446e-16))))
     (send blink17 :assoc blink18)
     (send blink30 :newcoords (make-coords :pos (float-vector -13.0 119.0 0.0) :rot #2f((1.0 1.570092e-16 1.232595e-32) (1.232595e-32 -2.220446e-16 1.0) (1.570092e-16 -1.0 -2.220446e-16))))
     (send blink29 :assoc blink30)
     (send blink29 :newcoords (make-coords :pos (float-vector -53.5 -7.438494e-15 509.5) :rot #2f((1.0 1.232595e-32 1.570092e-16) (1.570092e-16 -2.220446e-16 -1.0) (1.232595e-32 1.0 -2.220446e-16))))
     (send blink0 :assoc blink29)
     (send blink17 :newcoords (make-coords :pos (float-vector -2.131628e-14 88.0 0.0) :rot #2f((1.0 7.547469e-49 -1.224647e-16) (-7.547469e-49 -1.0 -1.232595e-32) (-1.224647e-16 1.232595e-32 -1.0))))
     (send blink0 :assoc blink17)
     (send blink23 :newcoords (make-coords :pos (float-vector 2.131628e-14 -88.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink23)
     (send blink1 :newcoords (make-coords :pos (float-vector 28.0 105.0 456.0) :rot #2f((1.0 7.547469e-49 -1.224647e-16) (-7.547469e-49 -1.0 -1.232595e-32) (-1.224647e-16 1.232595e-32 -1.0))))
     (send blink0 :assoc blink1)
     (send blink9 :newcoords (make-coords :pos (float-vector 28.0 -105.0 456.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink9)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 161.5 1.774933e-14 70.5) :rot #2f((1.0 1.935288e-48 2.465190e-32) (1.935288e-48 1.0 -1.570092e-16) (-2.465190e-32 1.570092e-16 1.0))))))
     (send blink30 :assoc head-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -80.0 0.0 0.0) :rot #2f((-2.220446e-16 -2.465190e-32 1.0) (-1.570092e-16 1.0 0.0) (-1.0 -1.570092e-16 -2.220446e-16))))))
     (send blink22 :assoc lleg-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 80.0 0.0 -3.552714e-15) :rot #2f((-2.220446e-16 -3.697785e-32 -1.0) (-1.570092e-16 1.0 -1.232595e-32) (1.0 1.570092e-16 -2.220446e-16))))))
     (send blink28 :assoc rleg-end-coords)

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink8 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((3.885781e-16 -2.220446e-16 -1.0) (-1.0 3.885781e-16 -3.885781e-16) (3.885781e-16 1.0 -1.665335e-16))))))
     (send blink8 :assoc larm-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink16 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.110223e-16 1.110223e-16 -1.0) (-1.0 -3.330669e-16 -1.110223e-16) (-3.330669e-16 1.0 1.110223e-16))))))
     (send blink16 :assoc rarm-end-coords)

     ;; definition of joint

     ;; definition of :head-neck-p
     (setq joint28 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink29 :name :head-neck-p :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :head-neck-y
     (setq joint29 (instance rotational-joint :init
			     :parent-link blink29 :child-link blink30 :name :head-neck-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-y
     (setq joint16 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink17 :name :lleg-crotch-y :axis :-z
			     :min  -30.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-r
     (setq joint17 (instance rotational-joint :init
			     :parent-link blink17 :child-link blink18 :name :lleg-crotch-r :axis :-z
			     :min  -30.0 :max   30.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-p
     (setq joint18 (instance rotational-joint :init
			     :parent-link blink18 :child-link blink19 :name :lleg-crotch-p :axis :-z
			     :min -135.0 :max   40.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-knee-p
     (setq joint19 (instance rotational-joint :init
			     :parent-link blink19 :child-link blink20 :name :lleg-knee-p :axis :-z
			     :min    0.0 :max  150.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-ankle-p
     (setq joint20 (instance rotational-joint :init
			     :parent-link blink20 :child-link blink21 :name :lleg-ankle-p :axis :-z
			     :min  -82.0 :max   80.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-ankle-r
     (setq joint21 (instance rotational-joint :init
			     :parent-link blink21 :child-link blink22 :name :lleg-ankle-r :axis :-z
			     :min  -30.0 :max   30.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-y
     (setq joint22 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink23 :name :rleg-crotch-y :axis :-z
			     :min  -30.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-r
     (setq joint23 (instance rotational-joint :init
			     :parent-link blink23 :child-link blink24 :name :rleg-crotch-r :axis :-z
			     :min  -30.0 :max   30.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-p
     (setq joint24 (instance rotational-joint :init
			     :parent-link blink24 :child-link blink25 :name :rleg-crotch-p :axis :-z
			     :min -135.0 :max   40.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-knee-p
     (setq joint25 (instance rotational-joint :init
			     :parent-link blink25 :child-link blink26 :name :rleg-knee-p :axis :-z
			     :min    0.0 :max  150.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-ankle-p
     (setq joint26 (instance rotational-joint :init
			     :parent-link blink26 :child-link blink27 :name :rleg-ankle-p :axis :-z
			     :min  -82.0 :max   80.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-ankle-r
     (setq joint27 (instance rotational-joint :init
			     :parent-link blink27 :child-link blink28 :name :rleg-ankle-r :axis :-z
			     :min  -30.0 :max   30.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-y
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :larm-shoulder-y :axis :-z
			     :min  -90.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :larm-shoulder-p :axis :-z
			     :min -180.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-r
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :larm-shoulder-r :axis :-z
			     :min  -20.0 :max   95.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-elbow-p
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink3 :child-link blink4 :name :larm-elbow-p :axis :-z
			     :min -137.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-wrist-y
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :larm-wrist-y :axis :-z
			     :min -180.0 :max  150.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-wrist-p
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink6 :name :larm-wrist-p :axis :-y
			     :min  -30.0 :max   30.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-wrist-r
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink7 :name :larm-wrist-r :axis :z 
			     :min  -85.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-gripper
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink8 :name :larm-gripper :axis :z 
			     :min  -90.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-y
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink9 :name :rarm-shoulder-y :axis :-z
			     :min  -90.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-p
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink9 :child-link blink10 :name :rarm-shoulder-p :axis :-z
			     :min -180.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-r
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink11 :name :rarm-shoulder-r :axis :-z
			     :min  -20.0 :max   95.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-elbow-p
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink12 :name :rarm-elbow-p :axis :-z
			     :min -137.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-wrist-y
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink12 :child-link blink13 :name :rarm-wrist-y :axis :-z
			     :min -180.0 :max  150.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-wrist-p
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink14 :name :rarm-wrist-p :axis :-y
			     :min  -30.0 :max   30.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-wrist-r
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink15 :name :rarm-wrist-r :axis :z 
			     :min  -85.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-gripper
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink15 :child-link blink16 :name :rarm-gripper :axis :z 
			     :min  -90.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     (setq head-root-link blink29)
     (setq head (list blink29 blink30))
     (setq lleg-root-link blink17)
     (setq lleg (list blink17 blink18 blink19 blink20 blink21 blink22))
     (setq rleg-root-link blink23)
     (setq rleg (list blink23 blink24 blink25 blink26 blink27 blink28))
     (setq larm-root-link blink1)
     (setq larm (list blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8))
     (setq rarm-root-link blink9)
     (setq rarm (list blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16))

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20 blink21 blink22 blink23 blink24 blink25 blink26 blink27 blink28 blink29 blink30))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 joint20 joint21 joint22 joint23 joint24 joint25 joint26 joint27 joint28 joint29))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     ;; definition of head camera-coords
     (setq sensor0
       (make-camera-from-param :pwidth 320.0 :pheight 240.0 :fx 4.8 :fy 4.8 :cx 159.5 :cy 119.5 :parent-coords
         (make-cascoords
    	:coords (send (send blink30 :copy-worldcoords) :transform 
    		      (make-coords :pos (float-vector 122.5 -45.0 65.0) :rot #2f((0.0 0.0 1.0) (-1.0 0.0 0.0) (0.0 -1.0 0.0))))
            :name "head-camera1")))
     (send blink30 :assoc sensor0)

     ;; definition of head camera-coords
     (setq sensor1
       (make-camera-from-param :pwidth 320.0 :pheight 240.0 :fx 4.8 :fy 4.8 :cx 159.5 :cy 119.5 :parent-coords
         (make-cascoords
    	:coords (send (send blink30 :copy-worldcoords) :transform 
    		      (make-coords :pos (float-vector 122.5 45.0 65.0) :rot #2f((0.0 0.0 1.0) (-1.0 0.0 0.0) (0.0 -1.0 0.0))))
            :name "head-camera0")))
     (send blink30 :assoc sensor1)

     ;; definition of lleg force-sensor-coords
     (setq sensor2
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 49.0 -120.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor11"))
     (send blink22 :assoc sensor2)

     ;; definition of lleg force-sensor-coords
     (setq sensor3
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 16.3 -120.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor10"))
     (send blink22 :assoc sensor3)

     ;; definition of lleg force-sensor-coords
     (setq sensor4
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -16.3 -120.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor9"))
     (send blink22 :assoc sensor4)

     ;; definition of lleg force-sensor-coords
     (setq sensor5
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -49.0 -120.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor8"))
     (send blink22 :assoc sensor5)

     ;; definition of lleg force-sensor-coords
     (setq sensor6
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 49.0 -58.3) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor7"))
     (send blink22 :assoc sensor6)

     ;; definition of lleg force-sensor-coords
     (setq sensor7
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -49.0 -58.3) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor6"))
     (send blink22 :assoc sensor7)

     ;; definition of lleg force-sensor-coords
     (setq sensor8
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 49.0 3.3) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor5"))
     (send blink22 :assoc sensor8)

     ;; definition of lleg force-sensor-coords
     (setq sensor9
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -49.0 3.3) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor4"))
     (send blink22 :assoc sensor9)

     ;; definition of lleg force-sensor-coords
     (setq sensor10
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 49.0 65.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor3"))
     (send blink22 :assoc sensor10)

     ;; definition of lleg force-sensor-coords
     (setq sensor11
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 16.3 65.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor2"))
     (send blink22 :assoc sensor11)

     ;; definition of lleg force-sensor-coords
     (setq sensor12
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -16.3 65.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor1"))
     (send blink22 :assoc sensor12)

     ;; definition of lleg force-sensor-coords
     (setq sensor13
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -49.0 65.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-sensor0"))
     (send blink22 :assoc sensor13)

     ;; definition of lleg force-plate-coords
     (setq sensor14
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -77.0 0.0 -30.0) :rot #2f((2.220446e-16 8.715764e-33 1.0) (-5.229458e-32 1.0 -8.715764e-33) (-1.0 -5.229458e-32 2.220446e-16))))
        :name "lleg-force-plate0"))
     (send blink22 :assoc sensor14)

     ;; definition of rleg force-sensor-coords
     (setq sensor15
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 120.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor23"))
     (send blink28 :assoc sensor15)

     ;; definition of rleg force-sensor-coords
     (setq sensor16
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 16.3 120.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor22"))
     (send blink28 :assoc sensor16)

     ;; definition of rleg force-sensor-coords
     (setq sensor17
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -16.3 120.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor21"))
     (send blink28 :assoc sensor17)

     ;; definition of rleg force-sensor-coords
     (setq sensor18
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 120.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor20"))
     (send blink28 :assoc sensor18)

     ;; definition of rleg force-sensor-coords
     (setq sensor19
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 58.3) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor19"))
     (send blink28 :assoc sensor19)

     ;; definition of rleg force-sensor-coords
     (setq sensor20
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 58.3) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor18"))
     (send blink28 :assoc sensor20)

     ;; definition of rleg force-sensor-coords
     (setq sensor21
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 -3.3) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor17"))
     (send blink28 :assoc sensor21)

     ;; definition of rleg force-sensor-coords
     (setq sensor22
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 -3.3) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor16"))
     (send blink28 :assoc sensor22)

     ;; definition of rleg force-sensor-coords
     (setq sensor23
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 -65.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor15"))
     (send blink28 :assoc sensor23)

     ;; definition of rleg force-sensor-coords
     (setq sensor24
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 16.3 -65.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor14"))
     (send blink28 :assoc sensor24)

     ;; definition of rleg force-sensor-coords
     (setq sensor25
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -16.3 -65.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor13"))
     (send blink28 :assoc sensor25)

     ;; definition of rleg force-sensor-coords
     (setq sensor26
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 -65.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-sensor12"))
     (send blink28 :assoc sensor26)

     ;; definition of rleg force-plate-coords
     (setq sensor27
       (make-cascoords
	:coords (send (send blink28 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 77.0 1.421085e-14 30.0) :rot #2f((2.220446e-16 4.139988e-32 -1.0) (-2.832623e-32 1.0 4.139988e-32) (1.0 2.832623e-32 2.220446e-16))))
        :name "rleg-force-plate1"))
     (send blink28 :assoc sensor27)

     (setq cameras (list sensor0 sensor1))
     (setq force-sensors (list sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor10 sensor11 sensor12 sensor13 sensor14 sensor15 sensor16 sensor17 sensor18 sensor19 sensor20 sensor21 sensor22 sensor23 sensor24 sensor25 sensor26 sensor27))
     (setq sensors (list sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor10 sensor11 sensor12 sensor13 sensor14 sensor15 sensor16 sensor17 sensor18 sensor19 sensor20 sensor21 sensor22 sensor23 sensor24 sensor25 sensor26 sensor27))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:reset-pose () (send self :angle-vector (float-vector 0.0 30.0 0.0 -100.0 0.0 0.0 0.0 0.0 0.0 30.0 0.0 -100.0 0.0 0.0 0.0 0.0 0.0 0.0 -30.0 60.0 -30.0 0.0 0.0 0.0 -30.0 60.0 -30.0 0.0 0.0 0.0)))
  (:head-neck-p (&rest args) (forward-message-to joint28 args))
  (:head-neck-y (&rest args) (forward-message-to joint29 args))
  (:lleg-crotch-y (&rest args) (forward-message-to joint16 args))
  (:lleg-crotch-r (&rest args) (forward-message-to joint17 args))
  (:lleg-crotch-p (&rest args) (forward-message-to joint18 args))
  (:lleg-knee-p (&rest args) (forward-message-to joint19 args))
  (:lleg-ankle-p (&rest args) (forward-message-to joint20 args))
  (:lleg-ankle-r (&rest args) (forward-message-to joint21 args))
  (:rleg-crotch-y (&rest args) (forward-message-to joint22 args))
  (:rleg-crotch-r (&rest args) (forward-message-to joint23 args))
  (:rleg-crotch-p (&rest args) (forward-message-to joint24 args))
  (:rleg-knee-p (&rest args) (forward-message-to joint25 args))
  (:rleg-ankle-p (&rest args) (forward-message-to joint26 args))
  (:rleg-ankle-r (&rest args) (forward-message-to joint27 args))
  (:larm-shoulder-y (&rest args) (forward-message-to joint0 args))
  (:larm-shoulder-p (&rest args) (forward-message-to joint1 args))
  (:larm-shoulder-r (&rest args) (forward-message-to joint2 args))
  (:larm-elbow-p (&rest args) (forward-message-to joint3 args))
  (:larm-wrist-y (&rest args) (forward-message-to joint4 args))
  (:larm-wrist-p (&rest args) (forward-message-to joint5 args))
  (:larm-wrist-r (&rest args) (forward-message-to joint6 args))
  (:larm-gripper (&rest args) (forward-message-to joint7 args))
  (:rarm-shoulder-y (&rest args) (forward-message-to joint8 args))
  (:rarm-shoulder-p (&rest args) (forward-message-to joint9 args))
  (:rarm-shoulder-r (&rest args) (forward-message-to joint10 args))
  (:rarm-elbow-p (&rest args) (forward-message-to joint11 args))
  (:rarm-wrist-y (&rest args) (forward-message-to joint12 args))
  (:rarm-wrist-p (&rest args) (forward-message-to joint13 args))
  (:rarm-wrist-r (&rest args) (forward-message-to joint14 args))
  (:rarm-gripper (&rest args) (forward-message-to joint15 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun h6 (&rest args) (instance* h6-robot :init args))
;; (format *error-output* "(instance h6-robot :init) for generating model~%")
