;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass ape-robot
  :super robot-model
  :slots (sensors
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 ))
(defmethod ape-robot
  (:init
   (&rest args &key (name "ape") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -7.5 -90.0) (float-vector 10.0 -7.5 -60.0) (float-vector 10.0 -62.5 -60.0) (float-vector 10.0 -62.5 -90.0) (float-vector 10.0 -61.5 -90.0) (float-vector 10.0 -61.5 -61.0) (float-vector 10.0 -8.5 -61.0) (float-vector 10.0 -8.5 -90.0)))
         (instance face :init :vertices (list (float-vector -10.0 -7.5 -60.0) (float-vector -10.0 -62.5 -60.0) (float-vector 10.0 -62.5 -60.0) (float-vector 10.0 -7.5 -60.0)))
         (instance face :init :vertices (list (float-vector -10.0 -7.5 -90.0) (float-vector -10.0 -8.5 -90.0) (float-vector -10.0 -8.5 -61.0) (float-vector -10.0 -61.5 -61.0) (float-vector -10.0 -61.5 -90.0) (float-vector -10.0 -62.5 -90.0) (float-vector -10.0 -62.5 -60.0) (float-vector -10.0 -7.5 -60.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -62.5 -97.0711) (float-vector -10.0 -62.5 -90.0) (float-vector -10.0 -61.5 -90.0) (float-vector -7.07107 -61.5 -97.0711)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.5 -97.0711) (float-vector -7.07107 -8.5 -97.0711) (float-vector -10.0 -8.5 -90.0) (float-vector -10.0 -7.5 -90.0)))
         (instance face :init :vertices (list (float-vector 9.145392e-15 -62.5 -100.0) (float-vector -7.07107 -62.5 -97.0711) (float-vector -7.07107 -61.5 -97.0711) (float-vector 9.066887e-15 -61.5 -100.0)))
         (instance face :init :vertices (list (float-vector 4.827638e-15 -7.5 -100.0) (float-vector 4.906142e-15 -8.5 -100.0) (float-vector -7.07107 -8.5 -97.0711) (float-vector -7.07107 -7.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07107 -62.5 -97.0711) (float-vector 9.145392e-15 -62.5 -100.0) (float-vector 9.066887e-15 -61.5 -100.0) (float-vector 7.07107 -61.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.5 -97.0711) (float-vector 7.07107 -8.5 -97.0711) (float-vector 4.906142e-15 -8.5 -100.0) (float-vector 4.827638e-15 -7.5 -100.0)))
         (instance face :init :vertices (list (float-vector 10.0 -62.5 -90.0) (float-vector 10.0 -62.5 -60.0) (float-vector -10.0 -62.5 -60.0) (float-vector -10.0 -62.5 -90.0) (float-vector -7.07107 -62.5 -97.0711) (float-vector 9.145392e-15 -62.5 -100.0) (float-vector 7.07107 -62.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.5 -97.0711) (float-vector 4.827638e-15 -7.5 -100.0) (float-vector -7.07107 -7.5 -97.0711) (float-vector -10.0 -7.5 -90.0) (float-vector -10.0 -7.5 -60.0) (float-vector 10.0 -7.5 -60.0) (float-vector 10.0 -7.5 -90.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -62.5 -97.0711) (float-vector 7.07107 -61.5 -97.0711) (float-vector 10.0 -61.5 -90.0) (float-vector 10.0 -62.5 -90.0)))
         (instance face :init :vertices (list (float-vector 10.0 -7.5 -90.0) (float-vector 10.0 -8.5 -90.0) (float-vector 7.07107 -8.5 -97.0711) (float-vector 7.07107 -7.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 10.0 -61.5 -61.0) (float-vector 10.0 -61.5 -90.0) (float-vector 7.07107 -61.5 -97.0711) (float-vector 9.066887e-15 -61.5 -100.0) (float-vector -7.07107 -61.5 -97.0711) (float-vector -10.0 -61.5 -90.0) (float-vector -10.0 -61.5 -61.0)))
         (instance face :init :vertices (list (float-vector 10.0 -8.5 -61.0) (float-vector 10.0 -61.5 -61.0) (float-vector -10.0 -61.5 -61.0) (float-vector -10.0 -8.5 -61.0)))
         (instance face :init :vertices (list (float-vector -10.0 -8.5 -61.0) (float-vector -10.0 -8.5 -90.0) (float-vector -7.07107 -8.5 -97.0711) (float-vector 4.906142e-15 -8.5 -100.0) (float-vector 7.07107 -8.5 -97.0711) (float-vector 10.0 -8.5 -90.0) (float-vector 10.0 -8.5 -61.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -136.15 -0.5) (float-vector 35.0 -93.85 -0.5) (float-vector -10.0 -93.85 -0.5) (float-vector -10.0 -136.15 -0.5)))
         (instance face :init :vertices (list (float-vector -10.0 -93.85 -0.5) (float-vector -10.0 -93.85 -23.5) (float-vector -10.0 -136.15 -23.5) (float-vector -10.0 -136.15 -0.5)))
         (instance face :init :vertices (list (float-vector -10.0 -93.85 -23.5) (float-vector 35.0 -93.85 -23.5) (float-vector 35.0 -136.15 -23.5) (float-vector -10.0 -136.15 -23.5)))
         (instance face :init :vertices (list (float-vector 35.0 -136.15 -23.5) (float-vector 35.0 -136.15 -0.5) (float-vector -10.0 -136.15 -0.5) (float-vector -10.0 -136.15 -23.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 28.25 -136.15 -2.90673) (float-vector 32.0933 -136.15 -6.75) (float-vector 33.5 -136.15 -12.0) (float-vector 32.0933 -136.15 -17.25) (float-vector 28.25 -136.15 -21.0933) (float-vector 23.0 -136.15 -22.5) (float-vector 17.75 -136.15 -21.0933) (float-vector 13.9067 -136.15 -17.25) (float-vector 12.5 -136.15 -12.0) (float-vector 13.9067 -136.15 -6.75) (float-vector 17.75 -136.15 -2.90673) (float-vector 23.0 -136.15 -1.5)))
))
         (instance face :init :vertices (list (float-vector 35.0 -93.85 -23.5) (float-vector 35.0 -93.85 -0.5) (float-vector 35.0 -136.15 -0.5) (float-vector 35.0 -136.15 -23.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.85 -0.5) (float-vector 35.0 -93.85 -23.5) (float-vector -10.0 -93.85 -23.5) (float-vector -10.0 -93.85 -0.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 32.0933 -93.85 -6.75) (float-vector 28.25 -93.85 -2.90673) (float-vector 23.0 -93.85 -1.5) (float-vector 17.75 -93.85 -2.90673) (float-vector 13.9067 -93.85 -6.75) (float-vector 12.5 -93.85 -12.0) (float-vector 13.9067 -93.85 -17.25) (float-vector 17.75 -93.85 -21.0933) (float-vector 23.0 -93.85 -22.5) (float-vector 28.25 -93.85 -21.0933) (float-vector 32.0933 -93.85 -17.25) (float-vector 33.5 -93.85 -12.0)))
))
         (instance face :init :vertices (list (float-vector 23.0 -138.15 -1.5) (float-vector 23.0 -136.15 -1.5) (float-vector 17.75 -136.15 -2.90673) (float-vector 17.75 -138.15 -2.90673)))
         (instance face :init :vertices (list (float-vector 23.0 -93.85 -1.5) (float-vector 23.0 -91.85 -1.5) (float-vector 17.75 -91.85 -2.90673) (float-vector 17.75 -93.85 -2.90673)))
         (instance face :init :vertices (list (float-vector 13.9067 -136.15 -6.75) (float-vector 13.9067 -138.15 -6.75) (float-vector 17.75 -138.15 -2.90673) (float-vector 17.75 -136.15 -2.90673)))
         (instance face :init :vertices (list (float-vector 17.75 -91.85 -2.90673) (float-vector 13.9067 -91.85 -6.75) (float-vector 13.9067 -93.85 -6.75) (float-vector 17.75 -93.85 -2.90673)))
         (instance face :init :vertices (list (float-vector 12.5 -136.15 -12.0) (float-vector 12.5 -138.15 -12.0) (float-vector 13.9067 -138.15 -6.75) (float-vector 13.9067 -136.15 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9067 -91.85 -6.75) (float-vector 12.5 -91.85 -12.0) (float-vector 12.5 -93.85 -12.0) (float-vector 13.9067 -93.85 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9067 -136.15 -17.25) (float-vector 13.9067 -138.15 -17.25) (float-vector 12.5 -138.15 -12.0) (float-vector 12.5 -136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 12.5 -91.85 -12.0) (float-vector 13.9067 -91.85 -17.25) (float-vector 13.9067 -93.85 -17.25) (float-vector 12.5 -93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 17.75 -136.15 -21.0933) (float-vector 17.75 -138.15 -21.0933) (float-vector 13.9067 -138.15 -17.25) (float-vector 13.9067 -136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 13.9067 -91.85 -17.25) (float-vector 17.75 -91.85 -21.0933) (float-vector 17.75 -93.85 -21.0933) (float-vector 13.9067 -93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 23.0 -136.15 -22.5) (float-vector 23.0 -138.15 -22.5) (float-vector 17.75 -138.15 -21.0933) (float-vector 17.75 -136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 17.75 -91.85 -21.0933) (float-vector 23.0 -91.85 -22.5) (float-vector 23.0 -93.85 -22.5) (float-vector 17.75 -93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.25 -136.15 -21.0933) (float-vector 28.25 -138.15 -21.0933) (float-vector 23.0 -138.15 -22.5) (float-vector 23.0 -136.15 -22.5)))
         (instance face :init :vertices (list (float-vector 23.0 -91.85 -22.5) (float-vector 28.25 -91.85 -21.0933) (float-vector 28.25 -93.85 -21.0933) (float-vector 23.0 -93.85 -22.5)))
         (instance face :init :vertices (list (float-vector 32.0933 -136.15 -17.25) (float-vector 32.0933 -138.15 -17.25) (float-vector 28.25 -138.15 -21.0933) (float-vector 28.25 -136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.25 -91.85 -21.0933) (float-vector 32.0933 -91.85 -17.25) (float-vector 32.0933 -93.85 -17.25) (float-vector 28.25 -93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 33.5 -136.15 -12.0) (float-vector 33.5 -138.15 -12.0) (float-vector 32.0933 -138.15 -17.25) (float-vector 32.0933 -136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0933 -91.85 -17.25) (float-vector 33.5 -91.85 -12.0) (float-vector 33.5 -93.85 -12.0) (float-vector 32.0933 -93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0933 -136.15 -6.75) (float-vector 32.0933 -138.15 -6.75) (float-vector 33.5 -138.15 -12.0) (float-vector 33.5 -136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 33.5 -91.85 -12.0) (float-vector 32.0933 -91.85 -6.75) (float-vector 32.0933 -93.85 -6.75) (float-vector 33.5 -93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 28.25 -136.15 -2.90673) (float-vector 28.25 -138.15 -2.90673) (float-vector 32.0933 -138.15 -6.75) (float-vector 32.0933 -136.15 -6.75)))
         (instance face :init :vertices (list (float-vector 32.0933 -91.85 -6.75) (float-vector 28.25 -91.85 -2.90673) (float-vector 28.25 -93.85 -2.90673) (float-vector 32.0933 -93.85 -6.75)))
         (instance face :init :vertices (list (float-vector 28.25 -138.15 -2.90673) (float-vector 23.0 -138.15 -1.5) (float-vector 17.75 -138.15 -2.90673) (float-vector 13.9067 -138.15 -6.75) (float-vector 12.5 -138.15 -12.0) (float-vector 13.9067 -138.15 -17.25) (float-vector 17.75 -138.15 -21.0933) (float-vector 23.0 -138.15 -22.5) (float-vector 28.25 -138.15 -21.0933) (float-vector 32.0933 -138.15 -17.25) (float-vector 33.5 -138.15 -12.0) (float-vector 32.0933 -138.15 -6.75)))
         (instance face :init :vertices (list (float-vector 23.0 -138.15 -1.5) (float-vector 28.25 -138.15 -2.90673) (float-vector 28.25 -136.15 -2.90673) (float-vector 23.0 -136.15 -1.5)))
         (instance face :init :vertices (list (float-vector 28.25 -91.85 -2.90673) (float-vector 23.0 -91.85 -1.5) (float-vector 23.0 -93.85 -1.5) (float-vector 28.25 -93.85 -2.90673)))
         (instance face :init :vertices (list (float-vector 23.0 -91.85 -1.5) (float-vector 28.25 -91.85 -2.90673) (float-vector 32.0933 -91.85 -6.75) (float-vector 33.5 -91.85 -12.0) (float-vector 32.0933 -91.85 -17.25) (float-vector 28.25 -91.85 -21.0933) (float-vector 23.0 -91.85 -22.5) (float-vector 17.75 -91.85 -21.0933) (float-vector 13.9067 -91.85 -17.25) (float-vector 12.5 -91.85 -12.0) (float-vector 13.9067 -91.85 -6.75) (float-vector 17.75 -91.85 -2.90673)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 62.5 -90.0) (float-vector 10.0 62.5 -60.0) (float-vector 10.0 7.5 -60.0) (float-vector 10.0 7.5 -90.0) (float-vector 10.0 8.5 -90.0) (float-vector 10.0 8.5 -61.0) (float-vector 10.0 61.5 -61.0) (float-vector 10.0 61.5 -90.0)))
         (instance face :init :vertices (list (float-vector -10.0 62.5 -60.0) (float-vector -10.0 7.5 -60.0) (float-vector 10.0 7.5 -60.0) (float-vector 10.0 62.5 -60.0)))
         (instance face :init :vertices (list (float-vector -10.0 62.5 -90.0) (float-vector -10.0 61.5 -90.0) (float-vector -10.0 61.5 -61.0) (float-vector -10.0 8.5 -61.0) (float-vector -10.0 8.5 -90.0) (float-vector -10.0 7.5 -90.0) (float-vector -10.0 7.5 -60.0) (float-vector -10.0 62.5 -60.0)))
         (instance face :init :vertices (list (float-vector -7.07107 7.5 -97.0711) (float-vector -10.0 7.5 -90.0) (float-vector -10.0 8.5 -90.0) (float-vector -7.07107 8.5 -97.0711)))
         (instance face :init :vertices (list (float-vector -7.07107 62.5 -97.0711) (float-vector -7.07107 61.5 -97.0711) (float-vector -10.0 61.5 -90.0) (float-vector -10.0 62.5 -90.0)))
         (instance face :init :vertices (list (float-vector -6.397730e-15 7.5 -100.0) (float-vector -7.07107 7.5 -97.0711) (float-vector -7.07107 8.5 -97.0711) (float-vector -6.476235e-15 8.5 -100.0)))
         (instance face :init :vertices (list (float-vector -1.071548e-14 62.5 -100.0) (float-vector -1.063698e-14 61.5 -100.0) (float-vector -7.07107 61.5 -97.0711) (float-vector -7.07107 62.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07107 7.5 -97.0711) (float-vector -6.397730e-15 7.5 -100.0) (float-vector -6.476235e-15 8.5 -100.0) (float-vector 7.07107 8.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07107 62.5 -97.0711) (float-vector 7.07107 61.5 -97.0711) (float-vector -1.063698e-14 61.5 -100.0) (float-vector -1.071548e-14 62.5 -100.0)))
         (instance face :init :vertices (list (float-vector 10.0 7.5 -90.0) (float-vector 10.0 7.5 -60.0) (float-vector -10.0 7.5 -60.0) (float-vector -10.0 7.5 -90.0) (float-vector -7.07107 7.5 -97.0711) (float-vector -6.397730e-15 7.5 -100.0) (float-vector 7.07107 7.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07107 62.5 -97.0711) (float-vector -1.071548e-14 62.5 -100.0) (float-vector -7.07107 62.5 -97.0711) (float-vector -10.0 62.5 -90.0) (float-vector -10.0 62.5 -60.0) (float-vector 10.0 62.5 -60.0) (float-vector 10.0 62.5 -90.0)))
         (instance face :init :vertices (list (float-vector 7.07107 7.5 -97.0711) (float-vector 7.07107 8.5 -97.0711) (float-vector 10.0 8.5 -90.0) (float-vector 10.0 7.5 -90.0)))
         (instance face :init :vertices (list (float-vector 10.0 62.5 -90.0) (float-vector 10.0 61.5 -90.0) (float-vector 7.07107 61.5 -97.0711) (float-vector 7.07107 62.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 10.0 8.5 -61.0) (float-vector 10.0 8.5 -90.0) (float-vector 7.07107 8.5 -97.0711) (float-vector -6.476235e-15 8.5 -100.0) (float-vector -7.07107 8.5 -97.0711) (float-vector -10.0 8.5 -90.0) (float-vector -10.0 8.5 -61.0)))
         (instance face :init :vertices (list (float-vector 10.0 61.5 -61.0) (float-vector 10.0 8.5 -61.0) (float-vector -10.0 8.5 -61.0) (float-vector -10.0 61.5 -61.0)))
         (instance face :init :vertices (list (float-vector -10.0 61.5 -61.0) (float-vector -10.0 61.5 -90.0) (float-vector -7.07107 61.5 -97.0711) (float-vector -1.063698e-14 61.5 -100.0) (float-vector 7.07107 61.5 -97.0711) (float-vector 10.0 61.5 -90.0) (float-vector 10.0 61.5 -61.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 93.85 -0.5) (float-vector 35.0 136.15 -0.5) (float-vector -10.0 136.15 -0.5) (float-vector -10.0 93.85 -0.5)))
         (instance face :init :vertices (list (float-vector -10.0 136.15 -0.5) (float-vector -10.0 136.15 -23.5) (float-vector -10.0 93.85 -23.5) (float-vector -10.0 93.85 -0.5)))
         (instance face :init :vertices (list (float-vector -10.0 136.15 -23.5) (float-vector 35.0 136.15 -23.5) (float-vector 35.0 93.85 -23.5) (float-vector -10.0 93.85 -23.5)))
         (instance face :init :vertices (list (float-vector 35.0 93.85 -23.5) (float-vector 35.0 93.85 -0.5) (float-vector -10.0 93.85 -0.5) (float-vector -10.0 93.85 -23.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 28.25 93.85 -2.90673) (float-vector 32.0933 93.85 -6.75) (float-vector 33.5 93.85 -12.0) (float-vector 32.0933 93.85 -17.25) (float-vector 28.25 93.85 -21.0933) (float-vector 23.0 93.85 -22.5) (float-vector 17.75 93.85 -21.0933) (float-vector 13.9067 93.85 -17.25) (float-vector 12.5 93.85 -12.0) (float-vector 13.9067 93.85 -6.75) (float-vector 17.75 93.85 -2.90673) (float-vector 23.0 93.85 -1.5)))
))
         (instance face :init :vertices (list (float-vector 35.0 136.15 -23.5) (float-vector 35.0 136.15 -0.5) (float-vector 35.0 93.85 -0.5) (float-vector 35.0 93.85 -23.5)))
         (instance face :init :vertices (list (float-vector 35.0 136.15 -0.5) (float-vector 35.0 136.15 -23.5) (float-vector -10.0 136.15 -23.5) (float-vector -10.0 136.15 -0.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 32.0933 136.15 -6.75) (float-vector 28.25 136.15 -2.90673) (float-vector 23.0 136.15 -1.5) (float-vector 17.75 136.15 -2.90673) (float-vector 13.9067 136.15 -6.75) (float-vector 12.5 136.15 -12.0) (float-vector 13.9067 136.15 -17.25) (float-vector 17.75 136.15 -21.0933) (float-vector 23.0 136.15 -22.5) (float-vector 28.25 136.15 -21.0933) (float-vector 32.0933 136.15 -17.25) (float-vector 33.5 136.15 -12.0)))
))
         (instance face :init :vertices (list (float-vector 23.0 91.85 -1.5) (float-vector 23.0 93.85 -1.5) (float-vector 17.75 93.85 -2.90673) (float-vector 17.75 91.85 -2.90673)))
         (instance face :init :vertices (list (float-vector 23.0 136.15 -1.5) (float-vector 23.0 138.15 -1.5) (float-vector 17.75 138.15 -2.90673) (float-vector 17.75 136.15 -2.90673)))
         (instance face :init :vertices (list (float-vector 13.9067 93.85 -6.75) (float-vector 13.9067 91.85 -6.75) (float-vector 17.75 91.85 -2.90673) (float-vector 17.75 93.85 -2.90673)))
         (instance face :init :vertices (list (float-vector 17.75 138.15 -2.90673) (float-vector 13.9067 138.15 -6.75) (float-vector 13.9067 136.15 -6.75) (float-vector 17.75 136.15 -2.90673)))
         (instance face :init :vertices (list (float-vector 12.5 93.85 -12.0) (float-vector 12.5 91.85 -12.0) (float-vector 13.9067 91.85 -6.75) (float-vector 13.9067 93.85 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9067 138.15 -6.75) (float-vector 12.5 138.15 -12.0) (float-vector 12.5 136.15 -12.0) (float-vector 13.9067 136.15 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9067 93.85 -17.25) (float-vector 13.9067 91.85 -17.25) (float-vector 12.5 91.85 -12.0) (float-vector 12.5 93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 12.5 138.15 -12.0) (float-vector 13.9067 138.15 -17.25) (float-vector 13.9067 136.15 -17.25) (float-vector 12.5 136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 17.75 93.85 -21.0933) (float-vector 17.75 91.85 -21.0933) (float-vector 13.9067 91.85 -17.25) (float-vector 13.9067 93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 13.9067 138.15 -17.25) (float-vector 17.75 138.15 -21.0933) (float-vector 17.75 136.15 -21.0933) (float-vector 13.9067 136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 23.0 93.85 -22.5) (float-vector 23.0 91.85 -22.5) (float-vector 17.75 91.85 -21.0933) (float-vector 17.75 93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 17.75 138.15 -21.0933) (float-vector 23.0 138.15 -22.5) (float-vector 23.0 136.15 -22.5) (float-vector 17.75 136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.25 93.85 -21.0933) (float-vector 28.25 91.85 -21.0933) (float-vector 23.0 91.85 -22.5) (float-vector 23.0 93.85 -22.5)))
         (instance face :init :vertices (list (float-vector 23.0 138.15 -22.5) (float-vector 28.25 138.15 -21.0933) (float-vector 28.25 136.15 -21.0933) (float-vector 23.0 136.15 -22.5)))
         (instance face :init :vertices (list (float-vector 32.0933 93.85 -17.25) (float-vector 32.0933 91.85 -17.25) (float-vector 28.25 91.85 -21.0933) (float-vector 28.25 93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.25 138.15 -21.0933) (float-vector 32.0933 138.15 -17.25) (float-vector 32.0933 136.15 -17.25) (float-vector 28.25 136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 33.5 93.85 -12.0) (float-vector 33.5 91.85 -12.0) (float-vector 32.0933 91.85 -17.25) (float-vector 32.0933 93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0933 138.15 -17.25) (float-vector 33.5 138.15 -12.0) (float-vector 33.5 136.15 -12.0) (float-vector 32.0933 136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0933 93.85 -6.75) (float-vector 32.0933 91.85 -6.75) (float-vector 33.5 91.85 -12.0) (float-vector 33.5 93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 33.5 138.15 -12.0) (float-vector 32.0933 138.15 -6.75) (float-vector 32.0933 136.15 -6.75) (float-vector 33.5 136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 28.25 93.85 -2.90673) (float-vector 28.25 91.85 -2.90673) (float-vector 32.0933 91.85 -6.75) (float-vector 32.0933 93.85 -6.75)))
         (instance face :init :vertices (list (float-vector 32.0933 138.15 -6.75) (float-vector 28.25 138.15 -2.90673) (float-vector 28.25 136.15 -2.90673) (float-vector 32.0933 136.15 -6.75)))
         (instance face :init :vertices (list (float-vector 28.25 91.85 -2.90673) (float-vector 23.0 91.85 -1.5) (float-vector 17.75 91.85 -2.90673) (float-vector 13.9067 91.85 -6.75) (float-vector 12.5 91.85 -12.0) (float-vector 13.9067 91.85 -17.25) (float-vector 17.75 91.85 -21.0933) (float-vector 23.0 91.85 -22.5) (float-vector 28.25 91.85 -21.0933) (float-vector 32.0933 91.85 -17.25) (float-vector 33.5 91.85 -12.0) (float-vector 32.0933 91.85 -6.75)))
         (instance face :init :vertices (list (float-vector 23.0 91.85 -1.5) (float-vector 28.25 91.85 -2.90673) (float-vector 28.25 93.85 -2.90673) (float-vector 23.0 93.85 -1.5)))
         (instance face :init :vertices (list (float-vector 28.25 138.15 -2.90673) (float-vector 23.0 138.15 -1.5) (float-vector 23.0 136.15 -1.5) (float-vector 28.25 136.15 -2.90673)))
         (instance face :init :vertices (list (float-vector 23.0 138.15 -1.5) (float-vector 28.25 138.15 -2.90673) (float-vector 32.0933 138.15 -6.75) (float-vector 33.5 138.15 -12.0) (float-vector 32.0933 138.15 -17.25) (float-vector 28.25 138.15 -21.0933) (float-vector 23.0 138.15 -22.5) (float-vector 17.75 138.15 -21.0933) (float-vector 13.9067 138.15 -17.25) (float-vector 12.5 138.15 -12.0) (float-vector 13.9067 138.15 -6.75) (float-vector 17.75 138.15 -2.90673)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 -115.0 0.0) (float-vector -15.0 115.0 0.0) (float-vector -15.0 115.0 -2.0) (float-vector -15.0 65.0 -2.0) (float-vector -15.0 65.0 -60.0) (float-vector -15.0 -65.0 -60.0) (float-vector -15.0 -65.0 -2.0) (float-vector -15.0 -115.0 -2.0)))
         (instance face :init :vertices (list (float-vector 15.0 115.0 0.0) (float-vector 15.0 -115.0 0.0) (float-vector 15.0 -115.0 -2.0) (float-vector 15.0 -65.0 -2.0) (float-vector 15.0 -65.0 -60.0) (float-vector 15.0 65.0 -60.0) (float-vector 15.0 65.0 -2.0) (float-vector 15.0 115.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 -115.0 0.0) (float-vector 15.0 -115.0 0.0) (float-vector 15.0 115.0 0.0) (float-vector -15.0 115.0 0.0)))
         (instance face :init :vertices (list (float-vector -15.0 -115.0 -2.0) (float-vector 15.0 -115.0 -2.0) (float-vector 15.0 -115.0 0.0) (float-vector -15.0 -115.0 0.0)))
         (instance face :init :vertices (list (float-vector -15.0 -65.0 -2.0) (float-vector 15.0 -65.0 -2.0) (float-vector 15.0 -115.0 -2.0) (float-vector -15.0 -115.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 -65.0 -60.0) (float-vector 15.0 -65.0 -60.0) (float-vector 15.0 -65.0 -2.0) (float-vector -15.0 -65.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 65.0 -60.0) (float-vector 15.0 65.0 -60.0) (float-vector 15.0 -65.0 -60.0) (float-vector -15.0 -65.0 -60.0)))
         (instance face :init :vertices (list (float-vector -15.0 65.0 -2.0) (float-vector 15.0 65.0 -2.0) (float-vector 15.0 65.0 -60.0) (float-vector -15.0 65.0 -60.0)))
         (instance face :init :vertices (list (float-vector -15.0 115.0 -2.0) (float-vector 15.0 115.0 -2.0) (float-vector 15.0 65.0 -2.0) (float-vector -15.0 65.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 115.0 0.0) (float-vector 15.0 115.0 0.0) (float-vector 15.0 115.0 -2.0) (float-vector -15.0 115.0 -2.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 44.0 -13.0 23.5) (float-vector 44.0 -11.2583 30.0) (float-vector 38.0 -11.2583 30.0) (float-vector 38.0 -13.0 23.5)))
         (instance face :init :vertices (list (float-vector 44.0 -13.0 23.5) (float-vector 44.0 -11.2583 17.0) (float-vector 44.0 -6.5 12.2417) (float-vector 44.0 3.552714e-15 10.5) (float-vector 44.0 6.5 12.2417) (float-vector 44.0 11.2583 17.0) (float-vector 44.0 13.0 23.5) (float-vector 44.0 11.2583 30.0) (float-vector 44.0 6.5 34.7583) (float-vector 44.0 2.664535e-14 36.5) (float-vector 44.0 -6.5 34.7583) (float-vector 44.0 -11.2583 30.0)))
         (instance face :init :vertices (list (float-vector 44.0 -6.5 34.7583) (float-vector 38.0 -6.5 34.7583) (float-vector 38.0 -11.2583 30.0) (float-vector 44.0 -11.2583 30.0)))
         (instance face :init :vertices (list (float-vector 44.0 2.664535e-14 36.5) (float-vector 38.0 2.531308e-14 36.5) (float-vector 38.0 -6.5 34.7583) (float-vector 44.0 -6.5 34.7583)))
         (instance face :init :vertices (list (float-vector 44.0 6.5 34.7583) (float-vector 38.0 6.5 34.7583) (float-vector 38.0 2.531308e-14 36.5) (float-vector 44.0 2.664535e-14 36.5)))
         (instance face :init :vertices (list (float-vector 44.0 11.2583 30.0) (float-vector 38.0 11.2583 30.0) (float-vector 38.0 6.5 34.7583) (float-vector 44.0 6.5 34.7583)))
         (instance face :init :vertices (list (float-vector 44.0 13.0 23.5) (float-vector 38.0 13.0 23.5) (float-vector 38.0 11.2583 30.0) (float-vector 44.0 11.2583 30.0)))
         (instance face :init :vertices (list (float-vector 44.0 11.2583 17.0) (float-vector 38.0 11.2583 17.0) (float-vector 38.0 13.0 23.5) (float-vector 44.0 13.0 23.5)))
         (instance face :init :vertices (list (float-vector 44.0 6.5 12.2417) (float-vector 38.0 6.5 12.2417) (float-vector 38.0 11.2583 17.0) (float-vector 44.0 11.2583 17.0)))
         (instance face :init :vertices (list (float-vector 44.0 3.552714e-15 10.5) (float-vector 38.0 2.220446e-15 10.5) (float-vector 38.0 6.5 12.2417) (float-vector 44.0 6.5 12.2417)))
         (instance face :init :vertices (list (float-vector 44.0 -6.5 12.2417) (float-vector 38.0 -6.5 12.2417) (float-vector 38.0 2.220446e-15 10.5) (float-vector 44.0 3.552714e-15 10.5)))
         (instance face :init :vertices (list (float-vector 44.0 -11.2583 17.0) (float-vector 38.0 -11.2583 17.0) (float-vector 38.0 -6.5 12.2417) (float-vector 44.0 -6.5 12.2417)))
         (instance face :init :vertices (list (float-vector 38.0 -13.0 23.5) (float-vector 38.0 -11.2583 17.0) (float-vector 44.0 -11.2583 17.0) (float-vector 44.0 -13.0 23.5)))
         (instance face :init :vertices (list (float-vector -20.0 19.0 43.5) (float-vector -20.0 19.0 1.5) (float-vector -20.0 -19.0 1.5) (float-vector -20.0 -19.0 43.5)))
         (instance face :init :vertices (list (float-vector -20.0 19.0 43.5) (float-vector 38.0 19.0 43.5) (float-vector 38.0 19.0 1.5) (float-vector -20.0 19.0 1.5)))
         (instance face :init :vertices (list (float-vector 38.0 19.0 43.5) (float-vector 38.0 -19.0 43.5) (float-vector 38.0 -19.0 1.5) (float-vector 38.0 19.0 1.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 38.0 -11.2583 17.0) (float-vector 38.0 -13.0 23.5) (float-vector 38.0 -11.2583 30.0) (float-vector 38.0 -6.5 34.7583) (float-vector 38.0 2.531308e-14 36.5) (float-vector 38.0 6.5 34.7583) (float-vector 38.0 11.2583 30.0) (float-vector 38.0 13.0 23.5) (float-vector 38.0 11.2583 17.0) (float-vector 38.0 6.5 12.2417) (float-vector 38.0 2.220446e-15 10.5) (float-vector 38.0 -6.5 12.2417)))
))
         (instance face :init :vertices (list (float-vector 38.0 -19.0 1.5) (float-vector -20.0 -19.0 1.5) (float-vector -20.0 19.0 1.5) (float-vector 38.0 19.0 1.5)))
         (instance face :init :vertices (list (float-vector 38.0 -19.0 43.5) (float-vector -20.0 -19.0 43.5) (float-vector -20.0 -19.0 1.5) (float-vector 38.0 -19.0 1.5)))
         (instance face :init :vertices (list (float-vector -20.0 -19.0 43.5) (float-vector 38.0 -19.0 43.5) (float-vector 38.0 19.0 43.5) (float-vector -20.0 19.0 43.5)))
         (instance face :init :vertices (list (float-vector -60.0 -20.5 48.5) (float-vector 60.0 -20.5 48.5) (float-vector 60.0 -20.5 -0.5) (float-vector -20.0 -20.5 -0.5) (float-vector -20.0 -20.5 24.5) (float-vector -60.0 -20.5 24.5)))
         (instance face :init :vertices (list (float-vector 60.0 20.5 48.5) (float-vector 60.0 -20.5 48.5) (float-vector -60.0 -20.5 48.5) (float-vector -60.0 20.5 48.5)))
         (instance face :init :vertices (list (float-vector 60.0 20.5 -0.5) (float-vector 60.0 20.5 48.5) (float-vector -60.0 20.5 48.5) (float-vector -60.0 20.5 24.5) (float-vector -20.0 20.5 24.5) (float-vector -20.0 20.5 -0.5)))
         (instance face :init :vertices (list (float-vector -20.0 -21.5 -0.5) (float-vector -20.0 -21.5 24.5) (float-vector -20.0 -20.5 24.5) (float-vector -20.0 -20.5 -0.5)))
         (instance face :init :vertices (list (float-vector -20.0 21.5 24.5) (float-vector -20.0 21.5 -0.5) (float-vector -20.0 20.5 -0.5) (float-vector -20.0 20.5 24.5)))
         (instance face :init :vertices (list (float-vector -60.0 -21.5 24.5) (float-vector -20.0 -21.5 24.5) (float-vector -20.0 -21.5 -0.5) (float-vector 60.0 -21.5 -0.5) (float-vector 60.0 -21.5 49.5) (float-vector -60.0 -21.5 49.5)))
         (instance face :init :vertices (list (float-vector 60.0 21.5 -0.5) (float-vector -20.0 21.5 -0.5) (float-vector -20.0 21.5 24.5) (float-vector -60.0 21.5 24.5) (float-vector -60.0 21.5 49.5) (float-vector 60.0 21.5 49.5)))
         (instance face :init :vertices (list (float-vector 60.0 -20.5 -0.5) (float-vector 60.0 -21.5 -0.5) (float-vector -20.0 -21.5 -0.5) (float-vector -20.0 -20.5 -0.5)))
         (instance face :init :vertices (list (float-vector 60.0 21.5 -0.5) (float-vector 60.0 20.5 -0.5) (float-vector -20.0 20.5 -0.5) (float-vector -20.0 21.5 -0.5)))
         (instance face :init :vertices (list (float-vector 60.0 21.5 49.5) (float-vector 60.0 -21.5 49.5) (float-vector 60.0 -21.5 -0.5) (float-vector 60.0 -20.5 -0.5) (float-vector 60.0 -20.5 48.5) (float-vector 60.0 20.5 48.5) (float-vector 60.0 20.5 -0.5) (float-vector 60.0 21.5 -0.5)))
         (instance face :init :vertices (list (float-vector -60.0 21.5 49.5) (float-vector -60.0 -21.5 49.5) (float-vector 60.0 -21.5 49.5) (float-vector 60.0 21.5 49.5)))
         (instance face :init :vertices (list (float-vector -60.0 20.5 24.5) (float-vector -60.0 21.5 24.5) (float-vector -20.0 21.5 24.5) (float-vector -20.0 20.5 24.5)))
         (instance face :init :vertices (list (float-vector -60.0 -20.5 24.5) (float-vector -60.0 -21.5 24.5) (float-vector -60.0 -21.5 49.5) (float-vector -60.0 21.5 49.5) (float-vector -60.0 21.5 24.5) (float-vector -60.0 20.5 24.5) (float-vector -60.0 20.5 48.5) (float-vector -60.0 -20.5 48.5)))
         (instance face :init :vertices (list (float-vector -60.0 -21.5 24.5) (float-vector -60.0 -20.5 24.5) (float-vector -20.0 -20.5 24.5) (float-vector -20.0 -21.5 24.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray90)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray90)
     (send (elt bc 5) :set-color :gray90)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 363.731 :centroid (float-vector 4.57766 -2.537131e-14 -24.6787) :inertia-tensor #2f((2.201620e+06 4.393195e-10 -21110.5) (4.393195e-10 1.817533e+05 -6.226938e-11) (-21110.5 -6.226938e-11 2.125065e+06))))

     ;; definition of :rleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -5.25 83.0933 21.15) (float-vector 1.904945e-14 84.5 21.15) (float-vector 5.25 83.0933 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09327 68.75 21.15) (float-vector 5.25 64.9067 21.15) (float-vector -7.503128e-15 63.5 21.15) (float-vector -5.25 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.25 83.0933 -21.15) (float-vector -9.09327 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector 5.25 64.9067 -21.15) (float-vector 9.09327 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 21.15) (float-vector -5.25 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -5.25 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 21.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector -5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 21.15) (float-vector 5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -7.503128e-15 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector 5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 21.15) (float-vector 9.09327 68.75 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 9.09327 68.75 -21.15) (float-vector 5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 21.15) (float-vector 5.25 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 5.25 83.0933 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 21.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 1.904945e-14 84.5 -21.15) (float-vector 5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 21.15) (float-vector -5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 1.904945e-14 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector -5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -9.09327 79.25 23.15) (float-vector -5.25 83.0933 23.15) (float-vector -5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -9.09327 79.25 -21.15) (float-vector -5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector -5.25 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09327 79.25 23.15) (float-vector -9.09327 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-p :weight 130 :centroid (float-vector -8.620680e-15 37.0 1.290535e-14) :inertia-tensor #2f((1.347484e+05 2.270074e-11 7.579016e-13) (2.270074e-11 25114.8 -2.271667e-11) (7.579016e-13 -2.271667e-11 1.210952e+05))))

     ;; definition of :rleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 -1.421085e-14 26.5) (float-vector -10.0 -1.421085e-14 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 -1.421085e-14 27.5) (float-vector -10.0 -1.421085e-14 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector -1.262177e-29 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -1.262177e-29 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector -1.262177e-29 -10.0 27.5) (float-vector -1.262177e-29 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 -1.421085e-14 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -1.262177e-29 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector -1.262177e-29 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 -1.421085e-14 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 75.0 27.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 31.0 26.5) (float-vector -10.0 31.0 -26.5) (float-vector -10.0 75.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 75.0 -27.5) (float-vector 10.0 75.0 -26.5) (float-vector 10.0 31.0 -26.5) (float-vector 10.0 31.0 26.5) (float-vector 10.0 75.0 26.5) (float-vector 10.0 75.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.0711 27.5) (float-vector 10.0 75.0 27.5) (float-vector 10.0 75.0 26.5) (float-vector 7.07107 82.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.0711 -27.5) (float-vector 7.07107 82.0711 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 85.0 27.5) (float-vector 7.07107 82.0711 27.5) (float-vector 7.07107 82.0711 26.5) (float-vector 1.224647e-15 85.0 26.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 85.0 -27.5) (float-vector 1.224647e-15 85.0 -26.5) (float-vector 7.07107 82.0711 -26.5) (float-vector 7.07107 82.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 27.5) (float-vector 1.224647e-15 85.0 27.5) (float-vector 1.224647e-15 85.0 26.5) (float-vector -7.07107 82.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 -27.5) (float-vector -7.07107 82.0711 -26.5) (float-vector 1.224647e-15 85.0 -26.5) (float-vector 1.224647e-15 85.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 75.0 27.5) (float-vector 7.07107 82.0711 27.5) (float-vector 1.224647e-15 85.0 27.5) (float-vector -7.07107 82.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 -27.5) (float-vector 1.224647e-15 85.0 -27.5) (float-vector 7.07107 82.0711 -27.5) (float-vector 10.0 75.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 27.5) (float-vector -7.07107 82.0711 26.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 75.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 75.0 -26.5) (float-vector -7.07107 82.0711 -26.5) (float-vector -7.07107 82.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 26.5) (float-vector -10.0 75.0 26.5) (float-vector -7.07107 82.0711 26.5) (float-vector 1.224647e-15 85.0 26.5) (float-vector 7.07107 82.0711 26.5) (float-vector 10.0 75.0 26.5) (float-vector 10.0 31.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -26.5) (float-vector -10.0 31.0 26.5) (float-vector 10.0 31.0 26.5) (float-vector 10.0 31.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 31.0 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 7.07107 82.0711 -26.5) (float-vector 1.224647e-15 85.0 -26.5) (float-vector -7.07107 82.0711 -26.5) (float-vector -10.0 75.0 -26.5) (float-vector -10.0 31.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-knee-p :weight 15.3514 :centroid (float-vector 2.990449e-15 34.7035 1.179232e-13) :inertia-tensor #2f((15413.0 -5.665665e-14 4.981813e-13) (-5.665665e-14 8870.75 1.314989e-12) (4.981813e-13 1.314989e-12 7565.65))))

     ;; definition of :rleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 1.421085e-14 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 1.421085e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 3.552714e-15 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 3.552714e-15 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.421085e-14 21.15) (float-vector -10.5 1.421085e-14 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 1.421085e-14 -23.15) (float-vector -10.5 1.421085e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 1.421085e-14 23.15) (float-vector -10.5 1.421085e-14 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.421085e-14 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 1.421085e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 3.552714e-15 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 1.421085e-14 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 3.552714e-15 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 3.552714e-15 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 3.552714e-15 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 1.421085e-14 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -20.0 25.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 30.0 -20.0 25.0) (float-vector 30.0 10.0 15.0) (float-vector 30.0 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 10.0 15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -20.0 25.0) (float-vector 30.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 -15.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 -20.0 -25.0) (float-vector 30.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 15.0) (float-vector 75.0 10.0 15.0) (float-vector 75.0 10.0 -15.0) (float-vector 30.0 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 10.0 15.0) (float-vector 30.0 10.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-p :weight 230.0 :centroid (float-vector 35.4891 -3.01639 1.851686e-15) :inertia-tensor #2f((86400.8 35331.9 2.208417e-12) (35331.9 2.115440e+05 -2.715443e-13) (2.208417e-12 -2.715443e-13 2.098109e+05))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 -10.0 -27.5) (float-vector 3.552714e-15 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 3.552714e-15 -10.0 -26.5) (float-vector 3.552714e-15 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 3.552714e-15 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 3.552714e-15 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 80.0 27.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 41.0 26.5) (float-vector -10.0 41.0 -26.5) (float-vector -10.0 80.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -27.5) (float-vector 10.0 80.0 -26.5) (float-vector 10.0 41.0 -26.5) (float-vector 10.0 41.0 26.5) (float-vector 10.0 80.0 26.5) (float-vector 10.0 80.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 27.5) (float-vector 10.0 80.0 27.5) (float-vector 10.0 80.0 26.5) (float-vector 7.07107 87.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 -27.5) (float-vector 7.07107 87.0711 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 90.0 27.5) (float-vector 7.07107 87.0711 27.5) (float-vector 7.07107 87.0711 26.5) (float-vector 3.552714e-15 90.0 26.5)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 90.0 -27.5) (float-vector 3.552714e-15 90.0 -26.5) (float-vector 7.07107 87.0711 -26.5) (float-vector 7.07107 87.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector 3.552714e-15 90.0 27.5) (float-vector 3.552714e-15 90.0 26.5) (float-vector -7.07107 87.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -27.5) (float-vector -7.07107 87.0711 -26.5) (float-vector 3.552714e-15 90.0 -26.5) (float-vector 3.552714e-15 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 80.0 27.5) (float-vector 7.07107 87.0711 27.5) (float-vector 3.552714e-15 90.0 27.5) (float-vector -7.07107 87.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -27.5) (float-vector 3.552714e-15 90.0 -27.5) (float-vector 7.07107 87.0711 -27.5) (float-vector 10.0 80.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector -7.07107 87.0711 26.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 80.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 80.0 -26.5) (float-vector -7.07107 87.0711 -26.5) (float-vector -7.07107 87.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 26.5) (float-vector -10.0 80.0 26.5) (float-vector -7.07107 87.0711 26.5) (float-vector 3.552714e-15 90.0 26.5) (float-vector 7.07107 87.0711 26.5) (float-vector 10.0 80.0 26.5) (float-vector 10.0 41.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 -26.5) (float-vector -10.0 41.0 26.5) (float-vector 10.0 41.0 26.5) (float-vector 10.0 41.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 41.0 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 7.07107 87.0711 -26.5) (float-vector 3.552714e-15 90.0 -26.5) (float-vector -7.07107 87.0711 -26.5) (float-vector -10.0 80.0 -26.5) (float-vector -10.0 41.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 15.8914 :centroid (float-vector 1.310900e-15 40.0 1.149441e-13) :inertia-tensor #2f((16776.9 3.281650e-12 -1.369409e-12) (3.281650e-12 9282.45 2.869896e-13) (-1.369409e-12 2.869896e-13 8553.87))))

     ;; definition of :rarm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 7.105427e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 3.552714e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 10.5 21.15) (float-vector 7.105427e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 7.105427e-15 10.5 -23.15) (float-vector 3.552714e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 7.105427e-15 10.5 23.15) (float-vector 7.105427e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 3.552714e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 7.105427e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 7.105427e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector -10.0 33.0 -15.0) (float-vector -10.0 103.0 -15.0) (float-vector 1.776357e-14 113.0 -15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -10.0 33.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 1.776357e-14 113.0 15.0) (float-vector -10.0 103.0 15.0)))
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector 10.0 33.0 15.0) (float-vector -10.0 33.0 15.0) (float-vector -10.0 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 10.0 103.0 -15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 1.776357e-14 113.0 -15.0) (float-vector 1.776357e-14 113.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -10.0 103.0 -15.0) (float-vector -10.0 103.0 15.0) (float-vector 1.776357e-14 113.0 15.0) (float-vector 1.776357e-14 113.0 -15.0)))
         (instance face :init :vertices (list (float-vector -10.0 33.0 -15.0) (float-vector -10.0 33.0 15.0) (float-vector -10.0 103.0 15.0) (float-vector -10.0 103.0 -15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray90)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-p :weight 105 :centroid (float-vector -3.101353e-16 33.1876 5.855050e-15) :inertia-tensor #2f((1.354595e+05 -9.573598e-12 6.542052e-14) (-9.573598e-12 16890.7 -5.699387e-14) (6.542052e-14 -5.699387e-14 1.269662e+05))))

     ;; definition of :lleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -5.25 83.0933 21.15) (float-vector 1.904945e-14 84.5 21.15) (float-vector 5.25 83.0933 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09327 68.75 21.15) (float-vector 5.25 64.9067 21.15) (float-vector -7.503128e-15 63.5 21.15) (float-vector -5.25 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.25 83.0933 -21.15) (float-vector -9.09327 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector 5.25 64.9067 -21.15) (float-vector 9.09327 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 21.15) (float-vector -5.25 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -5.25 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 21.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector -5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 21.15) (float-vector 5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -7.503128e-15 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector 5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 21.15) (float-vector 9.09327 68.75 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 9.09327 68.75 -21.15) (float-vector 5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 21.15) (float-vector 5.25 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 5.25 83.0933 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 21.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 1.904945e-14 84.5 -21.15) (float-vector 5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 21.15) (float-vector -5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 1.904945e-14 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector -5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -9.09327 79.25 23.15) (float-vector -5.25 83.0933 23.15) (float-vector -5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -9.09327 79.25 -21.15) (float-vector -5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector -5.25 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09327 79.25 23.15) (float-vector -9.09327 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-p :weight 130 :centroid (float-vector -8.620680e-15 37.0 1.290535e-14) :inertia-tensor #2f((1.347484e+05 2.270074e-11 7.579016e-13) (2.270074e-11 25114.8 -2.271667e-11) (7.579016e-13 -2.271667e-11 1.210952e+05))))

     ;; definition of :lleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 1.421085e-14 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 1.421085e-14 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector -1.262177e-29 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -1.262177e-29 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector -1.262177e-29 -10.0 -27.5) (float-vector -1.262177e-29 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector -1.262177e-29 -10.0 27.5) (float-vector -1.262177e-29 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector -1.262177e-29 -10.0 -26.5) (float-vector -1.262177e-29 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -1.262177e-29 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector -1.262177e-29 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 1.421085e-14 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 1.421085e-14 -27.5) (float-vector 10.0 1.421085e-14 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector -1.262177e-29 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -1.262177e-29 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 1.421085e-14 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 75.0 27.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 31.0 26.5) (float-vector -10.0 31.0 -26.5) (float-vector -10.0 75.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 75.0 -27.5) (float-vector 10.0 75.0 -26.5) (float-vector 10.0 31.0 -26.5) (float-vector 10.0 31.0 26.5) (float-vector 10.0 75.0 26.5) (float-vector 10.0 75.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.0711 27.5) (float-vector 10.0 75.0 27.5) (float-vector 10.0 75.0 26.5) (float-vector 7.07107 82.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.0711 -27.5) (float-vector 7.07107 82.0711 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 85.0 27.5) (float-vector 7.07107 82.0711 27.5) (float-vector 7.07107 82.0711 26.5) (float-vector 1.224647e-15 85.0 26.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 85.0 -27.5) (float-vector 1.224647e-15 85.0 -26.5) (float-vector 7.07107 82.0711 -26.5) (float-vector 7.07107 82.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 27.5) (float-vector 1.224647e-15 85.0 27.5) (float-vector 1.224647e-15 85.0 26.5) (float-vector -7.07107 82.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 -27.5) (float-vector -7.07107 82.0711 -26.5) (float-vector 1.224647e-15 85.0 -26.5) (float-vector 1.224647e-15 85.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 75.0 27.5) (float-vector 7.07107 82.0711 27.5) (float-vector 1.224647e-15 85.0 27.5) (float-vector -7.07107 82.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 -27.5) (float-vector 1.224647e-15 85.0 -27.5) (float-vector 7.07107 82.0711 -27.5) (float-vector 10.0 75.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 82.0711 27.5) (float-vector -7.07107 82.0711 26.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 75.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 75.0 -26.5) (float-vector -7.07107 82.0711 -26.5) (float-vector -7.07107 82.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 26.5) (float-vector -10.0 75.0 26.5) (float-vector -7.07107 82.0711 26.5) (float-vector 1.224647e-15 85.0 26.5) (float-vector 7.07107 82.0711 26.5) (float-vector 10.0 75.0 26.5) (float-vector 10.0 31.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -26.5) (float-vector -10.0 31.0 26.5) (float-vector 10.0 31.0 26.5) (float-vector 10.0 31.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 31.0 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 7.07107 82.0711 -26.5) (float-vector 1.224647e-15 85.0 -26.5) (float-vector -7.07107 82.0711 -26.5) (float-vector -10.0 75.0 -26.5) (float-vector -10.0 31.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-knee-p :weight 15.3514 :centroid (float-vector 2.990449e-15 34.7035 1.179232e-13) :inertia-tensor #2f((15413.0 -5.665665e-14 4.981813e-13) (-5.665665e-14 8870.75 1.314989e-12) (4.981813e-13 1.314989e-12 7565.65))))

     ;; definition of :lleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 1.065814e-14 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 -3.552714e-15 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 1.421085e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 -3.552714e-15 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.065814e-14 21.15) (float-vector -10.5 1.065814e-14 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 1.065814e-14 -23.15) (float-vector -10.5 1.421085e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 1.065814e-14 23.15) (float-vector -10.5 1.065814e-14 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.065814e-14 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 1.421085e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 1.065814e-14 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 -3.552714e-15 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 1.065814e-14 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -20.0 25.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 30.0 -20.0 25.0) (float-vector 30.0 10.0 15.0) (float-vector 30.0 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 10.0 15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -20.0 25.0) (float-vector 30.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 -15.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 -20.0 -25.0) (float-vector 30.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 15.0) (float-vector 75.0 10.0 15.0) (float-vector 75.0 10.0 -15.0) (float-vector 30.0 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 10.0 15.0) (float-vector 30.0 10.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-p :weight 230.0 :centroid (float-vector 35.4891 -3.01639 1.851686e-15) :inertia-tensor #2f((86400.8 35331.9 2.208417e-12) (35331.9 2.115440e+05 -2.715443e-13) (2.208417e-12 -2.715443e-13 2.098109e+05))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 -10.0 -27.5) (float-vector 3.552714e-15 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 3.552714e-15 -10.0 -26.5) (float-vector 3.552714e-15 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 3.552714e-15 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 3.552714e-15 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 80.0 27.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 41.0 26.5) (float-vector -10.0 41.0 -26.5) (float-vector -10.0 80.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -27.5) (float-vector 10.0 80.0 -26.5) (float-vector 10.0 41.0 -26.5) (float-vector 10.0 41.0 26.5) (float-vector 10.0 80.0 26.5) (float-vector 10.0 80.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 27.5) (float-vector 10.0 80.0 27.5) (float-vector 10.0 80.0 26.5) (float-vector 7.07107 87.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 -27.5) (float-vector 7.07107 87.0711 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 90.0 27.5) (float-vector 7.07107 87.0711 27.5) (float-vector 7.07107 87.0711 26.5) (float-vector 3.552714e-15 90.0 26.5)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 90.0 -27.5) (float-vector 3.552714e-15 90.0 -26.5) (float-vector 7.07107 87.0711 -26.5) (float-vector 7.07107 87.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector 3.552714e-15 90.0 27.5) (float-vector 3.552714e-15 90.0 26.5) (float-vector -7.07107 87.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -27.5) (float-vector -7.07107 87.0711 -26.5) (float-vector 3.552714e-15 90.0 -26.5) (float-vector 3.552714e-15 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 80.0 27.5) (float-vector 7.07107 87.0711 27.5) (float-vector 3.552714e-15 90.0 27.5) (float-vector -7.07107 87.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -27.5) (float-vector 3.552714e-15 90.0 -27.5) (float-vector 7.07107 87.0711 -27.5) (float-vector 10.0 80.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector -7.07107 87.0711 26.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 80.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 80.0 -26.5) (float-vector -7.07107 87.0711 -26.5) (float-vector -7.07107 87.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 26.5) (float-vector -10.0 80.0 26.5) (float-vector -7.07107 87.0711 26.5) (float-vector 3.552714e-15 90.0 26.5) (float-vector 7.07107 87.0711 26.5) (float-vector 10.0 80.0 26.5) (float-vector 10.0 41.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 -26.5) (float-vector -10.0 41.0 26.5) (float-vector 10.0 41.0 26.5) (float-vector 10.0 41.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 41.0 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 7.07107 87.0711 -26.5) (float-vector 3.552714e-15 90.0 -26.5) (float-vector -7.07107 87.0711 -26.5) (float-vector -10.0 80.0 -26.5) (float-vector -10.0 41.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 15.8914 :centroid (float-vector 1.310900e-15 40.0 1.149441e-13) :inertia-tensor #2f((16776.9 3.281650e-12 -1.369409e-12) (3.281650e-12 9282.45 2.869896e-13) (-1.369409e-12 2.869896e-13 8553.87))))

     ;; definition of :larm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -2.131628e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 3.552714e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 0.0 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -2.131628e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 10.5 21.15) (float-vector 3.552714e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 3.552714e-15 10.5 -23.15) (float-vector 0.0 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 3.552714e-15 10.5 23.15) (float-vector 3.552714e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.552714e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 0.0 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -2.131628e-14 -10.5 21.15) (float-vector -2.131628e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -2.131628e-14 -10.5 -23.15) (float-vector -2.131628e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -2.131628e-14 -10.5 23.15) (float-vector -2.131628e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -2.131628e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -2.131628e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 3.552714e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -2.131628e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -2.131628e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 3.552714e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector -10.0 33.0 -15.0) (float-vector -10.0 103.0 -15.0) (float-vector 1.421085e-14 113.0 -15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -10.0 33.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 1.421085e-14 113.0 15.0) (float-vector -10.0 103.0 15.0)))
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector 10.0 33.0 15.0) (float-vector -10.0 33.0 15.0) (float-vector -10.0 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 10.0 103.0 -15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 113.0 -15.0) (float-vector 1.421085e-14 113.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -10.0 103.0 -15.0) (float-vector -10.0 103.0 15.0) (float-vector 1.421085e-14 113.0 15.0) (float-vector 1.421085e-14 113.0 -15.0)))
         (instance face :init :vertices (list (float-vector -10.0 33.0 -15.0) (float-vector -10.0 33.0 15.0) (float-vector -10.0 103.0 15.0) (float-vector -10.0 103.0 -15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray90)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-p :weight 105 :centroid (float-vector -3.101353e-16 33.1876 5.855050e-15) :inertia-tensor #2f((1.354595e+05 -9.573598e-12 6.542052e-14) (-9.573598e-12 16890.7 -5.699387e-14) (6.542052e-14 -5.699387e-14 1.269662e+05))))

     ;; definition of assoc
     (send blink6 :newcoords (make-coords :pos (float-vector 1.249001e-14 75.0 7.105427e-15) :rot #2f((-1.0 -5.551115e-16 -2.220446e-16) (5.551115e-16 -1.0 4.440892e-16) (-2.220446e-16 4.440892e-16 1.0))))
     (send blink10 :assoc blink6)
     (send blink10 :newcoords (make-coords :pos (float-vector -1.643130e-14 74.0 2.131628e-14) :rot #2f((1.0 7.771561e-16 -2.220446e-16) (-7.771561e-16 1.0 8.628166e-32) (2.220446e-16 8.628166e-32 1.0))))
     (send blink9 :assoc blink10)
     (send blink8 :newcoords (make-coords :pos (float-vector -3.552714e-15 80.0 0.0) :rot #2f((1.0 3.081488e-32 1.110223e-16) (1.848893e-32 1.0 -4.440892e-16) (-1.110223e-16 4.440892e-16 1.0))))
     (send blink7 :assoc blink8)
     (send blink3 :newcoords (make-coords :pos (float-vector 1.249001e-14 75.0 7.105427e-15) :rot #2f((-1.0 -5.551115e-16 -2.220446e-16) (5.551115e-16 -1.0 4.440892e-16) (-2.220446e-16 4.440892e-16 1.0))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector -1.643130e-14 74.0 2.131628e-14) :rot #2f((1.0 7.771561e-16 -2.220446e-16) (-7.771561e-16 1.0 8.628166e-32) (2.220446e-16 8.628166e-32 1.0))))
     (send blink1 :assoc blink2)
     (send blink5 :newcoords (make-coords :pos (float-vector -3.552714e-15 80.0 0.0) :rot #2f((1.0 3.081488e-32 1.110223e-16) (1.848893e-32 1.0 -4.440892e-16) (-1.110223e-16 4.440892e-16 1.0))))
     (send blink4 :assoc blink5)
     (send blink4 :newcoords (make-coords :pos (float-vector 23.0 115.0 -12.0) :rot #2f((-1.0 -1.570092e-16 1.570092e-16) (-1.570092e-16 2.220446e-16 -1.0) (1.570092e-16 -1.0 -2.220446e-16))))
     (send blink0 :assoc blink4)
     (send blink1 :newcoords (make-coords :pos (float-vector -7.771561e-15 35.0 -90.0) :rot #2f((-1.0 0.0 0.0) (0.0 -2.220446e-16 -1.0) (0.0 -1.0 2.220446e-16))))
     (send blink0 :assoc blink1)
     (send blink7 :newcoords (make-coords :pos (float-vector 23.0 -115.0 -12.0) :rot #2f((-1.0 -1.570092e-16 1.570092e-16) (-1.570092e-16 2.220446e-16 -1.0) (1.570092e-16 -1.0 -2.220446e-16))))
     (send blink0 :assoc blink7)
     (send blink9 :newcoords (make-coords :pos (float-vector 7.771561e-15 -35.0 -90.0) :rot #2f((-1.0 0.0 0.0) (0.0 -2.220446e-16 -1.0) (0.0 -1.0 2.220446e-16))))
     (send blink0 :assoc blink9)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink5 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 1.065814e-14 113.0 0.0) :rot #2f((-1.110223e-16 -1.0 2.220446e-16) (5.551115e-17 -2.220446e-16 -1.0) (1.0 -5.551115e-17 1.110223e-16))))))
     (send blink5 :assoc larm-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink3 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 7.105427e-15) :rot #2f((-3.330669e-16 1.0 -3.330669e-16) (-1.110223e-16 3.330669e-16 1.0) (1.0 3.330669e-16 1.110223e-16))))))
     (send blink3 :assoc lleg-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink8 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 1.065814e-14 113.0 0.0) :rot #2f((-1.110223e-16 -1.0 2.220446e-16) (5.551115e-17 -2.220446e-16 -1.0) (1.0 -5.551115e-17 1.110223e-16))))))
     (send blink8 :assoc rarm-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink6 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 7.105427e-15) :rot #2f((-3.330669e-16 1.0 -3.330669e-16) (-1.110223e-16 3.330669e-16 1.0) (1.0 3.330669e-16 1.110223e-16))))))
     (send blink6 :assoc rleg-end-coords)

     ;; definition of joint

     ;; definition of :larm-shoulder-p
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :larm-shoulder-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-elbow-p
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :larm-elbow-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-p
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :lleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-knee-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :lleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-ankle-p
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :lleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-p
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink7 :name :rarm-shoulder-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-elbow-p
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink8 :name :rarm-elbow-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-p
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink9 :name :rleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-knee-p
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink9 :child-link blink10 :name :rleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-ankle-p
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink6 :name :rleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     (setq larm-root-link blink4)
     (setq larm (list blink4 blink5))
     (setq lleg-root-link blink1)
     (setq lleg (list blink1 blink2 blink3))
     (setq rarm-root-link blink7)
     (setq rarm (list blink7 blink8))
     (setq rleg-root-link blink9)
     (setq rleg (list blink9 blink10 blink6))

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:larm-shoulder-p (&rest args) (forward-message-to joint3 args))
  (:larm-elbow-p (&rest args) (forward-message-to joint4 args))
  (:lleg-crotch-p (&rest args) (forward-message-to joint0 args))
  (:lleg-knee-p (&rest args) (forward-message-to joint1 args))
  (:lleg-ankle-p (&rest args) (forward-message-to joint2 args))
  (:rarm-shoulder-p (&rest args) (forward-message-to joint6 args))
  (:rarm-elbow-p (&rest args) (forward-message-to joint7 args))
  (:rleg-crotch-p (&rest args) (forward-message-to joint8 args))
  (:rleg-knee-p (&rest args) (forward-message-to joint9 args))
  (:rleg-ankle-p (&rest args) (forward-message-to joint5 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun ape (&rest args) (instance* ape-robot :init args))
;; (format *error-output* "(instance ape-robot :init) for generating model~%")
