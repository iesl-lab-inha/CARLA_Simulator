;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass jrob1-robot
  :super robot-model
  :slots (sensors
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 ))
(defmethod jrob1-robot
  (:init
   (&rest args &key (name "jrob1") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -227.0 3.0 63.0) (float-vector -77.0 3.0 63.0) (float-vector -77.0 3.0 -87.0) (float-vector -227.0 3.0 -87.0)))
         (instance face :init :vertices (list (float-vector -77.0 -67.0 63.0) (float-vector -77.0 -67.0 -87.0) (float-vector -77.0 3.0 -87.0) (float-vector -77.0 3.0 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 -67.0 63.0) (float-vector -227.0 -67.0 53.0) (float-vector -87.0 -67.0 53.0) (float-vector -87.0 -67.0 -77.0) (float-vector -227.0 -67.0 -77.0) (float-vector -227.0 -67.0 -87.0) (float-vector -77.0 -67.0 -87.0) (float-vector -77.0 -67.0 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 3.0 -87.0) (float-vector -77.0 3.0 -87.0) (float-vector -77.0 -67.0 -87.0) (float-vector -227.0 -67.0 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 -67.0 63.0) (float-vector -77.0 -67.0 63.0) (float-vector -77.0 3.0 63.0) (float-vector -227.0 3.0 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 3.0 63.0) (float-vector -227.0 3.0 -87.0) (float-vector -227.0 -67.0 -87.0) (float-vector -227.0 -67.0 -77.0) (float-vector -227.0 -7.0 -77.0) (float-vector -227.0 -7.0 53.0) (float-vector -227.0 -67.0 53.0) (float-vector -227.0 -67.0 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 -7.0 53.0) (float-vector -227.0 -7.0 -77.0) (float-vector -87.0 -7.0 -77.0) (float-vector -87.0 -7.0 53.0)))
         (instance face :init :vertices (list (float-vector -87.0 -7.0 -77.0) (float-vector -227.0 -7.0 -77.0) (float-vector -227.0 -67.0 -77.0) (float-vector -87.0 -67.0 -77.0)))
         (instance face :init :vertices (list (float-vector -87.0 -7.0 53.0) (float-vector -87.0 -7.0 -77.0) (float-vector -87.0 -67.0 -77.0) (float-vector -87.0 -67.0 53.0)))
         (instance face :init :vertices (list (float-vector -87.0 -67.0 53.0) (float-vector -227.0 -67.0 53.0) (float-vector -227.0 -7.0 53.0) (float-vector -87.0 -7.0 53.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 227.0 3.0 -87.0) (float-vector 77.0 3.0 -87.0) (float-vector 77.0 3.0 63.0) (float-vector 227.0 3.0 63.0)))
         (instance face :init :vertices (list (float-vector 77.0 -67.0 -87.0) (float-vector 77.0 -67.0 63.0) (float-vector 77.0 3.0 63.0) (float-vector 77.0 3.0 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 -67.0 -87.0) (float-vector 227.0 -67.0 -77.0) (float-vector 87.0 -67.0 -77.0) (float-vector 87.0 -67.0 53.0) (float-vector 227.0 -67.0 53.0) (float-vector 227.0 -67.0 63.0) (float-vector 77.0 -67.0 63.0) (float-vector 77.0 -67.0 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 3.0 63.0) (float-vector 77.0 3.0 63.0) (float-vector 77.0 -67.0 63.0) (float-vector 227.0 -67.0 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 -67.0 -87.0) (float-vector 77.0 -67.0 -87.0) (float-vector 77.0 3.0 -87.0) (float-vector 227.0 3.0 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 3.0 -87.0) (float-vector 227.0 3.0 63.0) (float-vector 227.0 -67.0 63.0) (float-vector 227.0 -67.0 53.0) (float-vector 227.0 -7.0 53.0) (float-vector 227.0 -7.0 -77.0) (float-vector 227.0 -67.0 -77.0) (float-vector 227.0 -67.0 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 -7.0 -77.0) (float-vector 227.0 -7.0 53.0) (float-vector 87.0 -7.0 53.0) (float-vector 87.0 -7.0 -77.0)))
         (instance face :init :vertices (list (float-vector 87.0 -7.0 53.0) (float-vector 227.0 -7.0 53.0) (float-vector 227.0 -67.0 53.0) (float-vector 87.0 -67.0 53.0)))
         (instance face :init :vertices (list (float-vector 87.0 -7.0 -77.0) (float-vector 87.0 -7.0 53.0) (float-vector 87.0 -67.0 53.0) (float-vector 87.0 -67.0 -77.0)))
         (instance face :init :vertices (list (float-vector 87.0 -67.0 -77.0) (float-vector 227.0 -67.0 -77.0) (float-vector 227.0 -7.0 -77.0) (float-vector 87.0 -7.0 -77.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -227.0 -3.0 -87.0) (float-vector -77.0 -3.0 -87.0) (float-vector -77.0 -3.0 63.0) (float-vector -227.0 -3.0 63.0)))
         (instance face :init :vertices (list (float-vector -77.0 67.0 -87.0) (float-vector -77.0 67.0 63.0) (float-vector -77.0 -3.0 63.0) (float-vector -77.0 -3.0 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 67.0 -87.0) (float-vector -227.0 67.0 -77.0) (float-vector -87.0 67.0 -77.0) (float-vector -87.0 67.0 53.0) (float-vector -227.0 67.0 53.0) (float-vector -227.0 67.0 63.0) (float-vector -77.0 67.0 63.0) (float-vector -77.0 67.0 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 -3.0 63.0) (float-vector -77.0 -3.0 63.0) (float-vector -77.0 67.0 63.0) (float-vector -227.0 67.0 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 67.0 -87.0) (float-vector -77.0 67.0 -87.0) (float-vector -77.0 -3.0 -87.0) (float-vector -227.0 -3.0 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 -3.0 -87.0) (float-vector -227.0 -3.0 63.0) (float-vector -227.0 67.0 63.0) (float-vector -227.0 67.0 53.0) (float-vector -227.0 7.0 53.0) (float-vector -227.0 7.0 -77.0) (float-vector -227.0 67.0 -77.0) (float-vector -227.0 67.0 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 7.0 -77.0) (float-vector -227.0 7.0 53.0) (float-vector -87.0 7.0 53.0) (float-vector -87.0 7.0 -77.0)))
         (instance face :init :vertices (list (float-vector -87.0 7.0 53.0) (float-vector -227.0 7.0 53.0) (float-vector -227.0 67.0 53.0) (float-vector -87.0 67.0 53.0)))
         (instance face :init :vertices (list (float-vector -87.0 7.0 -77.0) (float-vector -87.0 7.0 53.0) (float-vector -87.0 67.0 53.0) (float-vector -87.0 67.0 -77.0)))
         (instance face :init :vertices (list (float-vector -87.0 67.0 -77.0) (float-vector -227.0 67.0 -77.0) (float-vector -227.0 7.0 -77.0) (float-vector -87.0 7.0 -77.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 227.0 -3.0 63.0) (float-vector 77.0 -3.0 63.0) (float-vector 77.0 -3.0 -87.0) (float-vector 227.0 -3.0 -87.0)))
         (instance face :init :vertices (list (float-vector 77.0 67.0 63.0) (float-vector 77.0 67.0 -87.0) (float-vector 77.0 -3.0 -87.0) (float-vector 77.0 -3.0 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 67.0 63.0) (float-vector 227.0 67.0 53.0) (float-vector 87.0 67.0 53.0) (float-vector 87.0 67.0 -77.0) (float-vector 227.0 67.0 -77.0) (float-vector 227.0 67.0 -87.0) (float-vector 77.0 67.0 -87.0) (float-vector 77.0 67.0 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 -3.0 -87.0) (float-vector 77.0 -3.0 -87.0) (float-vector 77.0 67.0 -87.0) (float-vector 227.0 67.0 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 67.0 63.0) (float-vector 77.0 67.0 63.0) (float-vector 77.0 -3.0 63.0) (float-vector 227.0 -3.0 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 -3.0 63.0) (float-vector 227.0 -3.0 -87.0) (float-vector 227.0 67.0 -87.0) (float-vector 227.0 67.0 -77.0) (float-vector 227.0 7.0 -77.0) (float-vector 227.0 7.0 53.0) (float-vector 227.0 67.0 53.0) (float-vector 227.0 67.0 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 7.0 53.0) (float-vector 227.0 7.0 -77.0) (float-vector 87.0 7.0 -77.0) (float-vector 87.0 7.0 53.0)))
         (instance face :init :vertices (list (float-vector 87.0 7.0 -77.0) (float-vector 227.0 7.0 -77.0) (float-vector 227.0 67.0 -77.0) (float-vector 87.0 67.0 -77.0)))
         (instance face :init :vertices (list (float-vector 87.0 7.0 53.0) (float-vector 87.0 7.0 -77.0) (float-vector 87.0 67.0 -77.0) (float-vector 87.0 67.0 53.0)))
         (instance face :init :vertices (list (float-vector 87.0 67.0 53.0) (float-vector 227.0 67.0 53.0) (float-vector 227.0 7.0 53.0) (float-vector 87.0 7.0 53.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 200.0 -36.0 194.0) (float-vector 193.5 -34.2583 194.0) (float-vector 188.742 -29.5 194.0) (float-vector 187.0 -23.0 194.0) (float-vector 188.742 -16.5 194.0) (float-vector 193.5 -11.7417 194.0) (float-vector 200.0 -10.0 194.0) (float-vector 206.5 -11.7417 194.0) (float-vector 211.258 -16.5 194.0) (float-vector 213.0 -23.0 194.0) (float-vector 211.258 -29.5 194.0) (float-vector 206.5 -34.2583 194.0)))
         (instance face :init :vertices (list (float-vector 200.0 -36.0 194.0) (float-vector 200.0 -36.0 296.0) (float-vector 193.5 -34.2583 296.0) (float-vector 193.5 -34.2583 194.0)))
         (instance face :init :vertices (list (float-vector 193.5 -34.2583 296.0) (float-vector 188.742 -29.5 296.0) (float-vector 188.742 -29.5 194.0) (float-vector 193.5 -34.2583 194.0)))
         (instance face :init :vertices (list (float-vector 188.742 -29.5 296.0) (float-vector 187.0 -23.0 296.0) (float-vector 187.0 -23.0 194.0) (float-vector 188.742 -29.5 194.0)))
         (instance face :init :vertices (list (float-vector 187.0 -23.0 296.0) (float-vector 188.742 -16.5 296.0) (float-vector 188.742 -16.5 194.0) (float-vector 187.0 -23.0 194.0)))
         (instance face :init :vertices (list (float-vector 188.742 -16.5 296.0) (float-vector 193.5 -11.7417 296.0) (float-vector 193.5 -11.7417 194.0) (float-vector 188.742 -16.5 194.0)))
         (instance face :init :vertices (list (float-vector 193.5 -11.7417 296.0) (float-vector 200.0 -10.0 296.0) (float-vector 200.0 -10.0 194.0) (float-vector 193.5 -11.7417 194.0)))
         (instance face :init :vertices (list (float-vector 200.0 -10.0 296.0) (float-vector 206.5 -11.7417 296.0) (float-vector 206.5 -11.7417 194.0) (float-vector 200.0 -10.0 194.0)))
         (instance face :init :vertices (list (float-vector 206.5 -11.7417 296.0) (float-vector 211.258 -16.5 296.0) (float-vector 211.258 -16.5 194.0) (float-vector 206.5 -11.7417 194.0)))
         (instance face :init :vertices (list (float-vector 211.258 -16.5 296.0) (float-vector 213.0 -23.0 296.0) (float-vector 213.0 -23.0 194.0) (float-vector 211.258 -16.5 194.0)))
         (instance face :init :vertices (list (float-vector 213.0 -23.0 296.0) (float-vector 211.258 -29.5 296.0) (float-vector 211.258 -29.5 194.0) (float-vector 213.0 -23.0 194.0)))
         (instance face :init :vertices (list (float-vector 211.258 -29.5 296.0) (float-vector 206.5 -34.2583 296.0) (float-vector 206.5 -34.2583 194.0) (float-vector 211.258 -29.5 194.0)))
         (instance face :init :vertices (list (float-vector 206.5 -34.2583 296.0) (float-vector 200.0 -36.0 296.0) (float-vector 200.0 -36.0 194.0) (float-vector 206.5 -34.2583 194.0)))
         (instance face :init :vertices (list (float-vector 147.5 59.0 296.0) (float-vector 147.5 59.0 304.0) (float-vector 252.5 59.0 304.0) (float-vector 252.5 59.0 296.0)))
         (instance face :init :vertices (list (float-vector 147.5 59.0 296.0) (float-vector 147.5 -59.0 296.0) (float-vector 147.5 -59.0 304.0) (float-vector 147.5 59.0 304.0)))
         (instance face :init :vertices (list (float-vector 147.5 -59.0 296.0) (float-vector 252.5 -59.0 296.0) (float-vector 252.5 -59.0 304.0) (float-vector 147.5 -59.0 304.0)))
         (instance face :init :vertices (list (float-vector 252.5 -59.0 304.0) (float-vector 252.5 59.0 304.0) (float-vector 147.5 59.0 304.0) (float-vector 147.5 -59.0 304.0)))
         (instance face :init :vertices (list (float-vector 252.5 -59.0 296.0) (float-vector 252.5 59.0 296.0) (float-vector 252.5 59.0 304.0) (float-vector 252.5 -59.0 304.0)))
         (instance face :init :vertices (list (float-vector 252.5 59.0 296.0) (float-vector 252.5 -59.0 296.0) (float-vector 147.5 -59.0 296.0) (float-vector 147.5 59.0 296.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 210.0 17.0 296.0) (float-vector 190.0 17.0 296.0) (float-vector 190.0 -7.0 296.0) (float-vector 210.0 -7.0 296.0)))
         (instance hole :init :vertices (list (float-vector 200.0 -36.0 296.0) (float-vector 206.5 -34.2583 296.0) (float-vector 211.258 -29.5 296.0) (float-vector 213.0 -23.0 296.0) (float-vector 211.258 -16.5 296.0) (float-vector 206.5 -11.7417 296.0) (float-vector 200.0 -10.0 296.0) (float-vector 193.5 -11.7417 296.0) (float-vector 188.742 -16.5 296.0) (float-vector 187.0 -23.0 296.0) (float-vector 188.742 -29.5 296.0) (float-vector 193.5 -34.2583 296.0)))
         (instance hole :init :vertices (list (float-vector 187.876 26.0 296.0) (float-vector 193.0 20.8756 296.0) (float-vector 200.0 19.0 296.0) (float-vector 207.0 20.8756 296.0) (float-vector 212.124 26.0 296.0) (float-vector 214.0 33.0 296.0) (float-vector 212.124 40.0 296.0) (float-vector 207.0 45.1244 296.0) (float-vector 200.0 47.0 296.0) (float-vector 193.0 45.1244 296.0) (float-vector 187.876 40.0 296.0) (float-vector 186.0 33.0 296.0)))
))
         (instance face :init :vertices (list (float-vector 210.0 17.0 296.0) (float-vector 210.0 17.0 251.5) (float-vector 190.0 17.0 251.5) (float-vector 190.0 17.0 296.0)))
         (instance face :init :vertices (list (float-vector 190.0 17.0 251.5) (float-vector 190.0 -7.0 251.5) (float-vector 190.0 -7.0 296.0) (float-vector 190.0 17.0 296.0)))
         (instance face :init :vertices (list (float-vector 190.0 -7.0 251.5) (float-vector 210.0 -7.0 251.5) (float-vector 210.0 -7.0 296.0) (float-vector 190.0 -7.0 296.0)))
         (instance face :init :vertices (list (float-vector 210.0 -7.0 251.5) (float-vector 210.0 17.0 251.5) (float-vector 210.0 17.0 296.0) (float-vector 210.0 -7.0 296.0)))
         (instance face :init :vertices (list (float-vector 210.0 17.0 251.5) (float-vector 210.0 -7.0 251.5) (float-vector 190.0 -7.0 251.5) (float-vector 190.0 17.0 251.5)))
         (instance face :init :vertices (list (float-vector 200.0 19.0 296.0) (float-vector 200.0 19.0 286.0) (float-vector 207.0 20.8756 286.0) (float-vector 207.0 20.8756 296.0)))
         (instance face :init :vertices (list (float-vector 207.0 20.8756 286.0) (float-vector 212.124 26.0 286.0) (float-vector 212.124 26.0 296.0) (float-vector 207.0 20.8756 296.0)))
         (instance face :init :vertices (list (float-vector 212.124 26.0 286.0) (float-vector 214.0 33.0 286.0) (float-vector 214.0 33.0 296.0) (float-vector 212.124 26.0 296.0)))
         (instance face :init :vertices (list (float-vector 214.0 33.0 286.0) (float-vector 212.124 40.0 286.0) (float-vector 212.124 40.0 296.0) (float-vector 214.0 33.0 296.0)))
         (instance face :init :vertices (list (float-vector 212.124 40.0 286.0) (float-vector 207.0 45.1244 286.0) (float-vector 207.0 45.1244 296.0) (float-vector 212.124 40.0 296.0)))
         (instance face :init :vertices (list (float-vector 207.0 45.1244 286.0) (float-vector 200.0 47.0 286.0) (float-vector 200.0 47.0 296.0) (float-vector 207.0 45.1244 296.0)))
         (instance face :init :vertices (list (float-vector 200.0 47.0 286.0) (float-vector 193.0 45.1244 286.0) (float-vector 193.0 45.1244 296.0) (float-vector 200.0 47.0 296.0)))
         (instance face :init :vertices (list (float-vector 193.0 45.1244 286.0) (float-vector 187.876 40.0 286.0) (float-vector 187.876 40.0 296.0) (float-vector 193.0 45.1244 296.0)))
         (instance face :init :vertices (list (float-vector 187.876 40.0 286.0) (float-vector 186.0 33.0 286.0) (float-vector 186.0 33.0 296.0) (float-vector 187.876 40.0 296.0)))
         (instance face :init :vertices (list (float-vector 186.0 33.0 286.0) (float-vector 187.876 26.0 286.0) (float-vector 187.876 26.0 296.0) (float-vector 186.0 33.0 296.0)))
         (instance face :init :vertices (list (float-vector 187.876 26.0 286.0) (float-vector 193.0 20.8756 286.0) (float-vector 193.0 20.8756 296.0) (float-vector 187.876 26.0 296.0)))
         (instance face :init :vertices (list (float-vector 193.0 20.8756 286.0) (float-vector 200.0 19.0 286.0) (float-vector 200.0 19.0 296.0) (float-vector 193.0 20.8756 296.0)))
         (instance face :init :vertices (list (float-vector 200.0 19.0 286.0) (float-vector 193.0 20.8756 286.0) (float-vector 187.876 26.0 286.0) (float-vector 186.0 33.0 286.0) (float-vector 187.876 40.0 286.0) (float-vector 193.0 45.1244 286.0) (float-vector 200.0 47.0 286.0) (float-vector 207.0 45.1244 286.0) (float-vector 212.124 40.0 286.0) (float-vector 214.0 33.0 286.0) (float-vector 212.124 26.0 286.0) (float-vector 207.0 20.8756 286.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 77.0 -102.0 -71.0) (float-vector 77.0 102.0 -71.0) (float-vector -77.0 102.0 -71.0) (float-vector -77.0 -102.0 -71.0)))
         (instance face :init :vertices (list (float-vector 77.0 102.0 63.0) (float-vector 77.0 102.0 -71.0) (float-vector 77.0 -102.0 -71.0) (float-vector 77.0 -102.0 63.0)))
         (instance face :init :vertices (list (float-vector -77.0 102.0 63.0) (float-vector 77.0 102.0 63.0) (float-vector 77.0 -102.0 63.0) (float-vector -77.0 -102.0 63.0)))
         (instance face :init :vertices (list (float-vector -77.0 -102.0 63.0) (float-vector -77.0 -102.0 -71.0) (float-vector -77.0 102.0 -71.0) (float-vector -77.0 102.0 63.0)))
         (instance face :init :vertices (list (float-vector 79.0 -102.0 -87.0) (float-vector 79.0 102.0 -87.0) (float-vector 79.0 102.0 87.0) (float-vector 79.0 72.0 87.0) (float-vector 79.0 72.0 82.0) (float-vector 79.0 -72.0 82.0) (float-vector 79.0 -72.0 87.0) (float-vector 79.0 -102.0 87.0)))
         (instance face :init :vertices (list (float-vector -79.0 102.0 -87.0) (float-vector 79.0 102.0 -87.0) (float-vector 79.0 -102.0 -87.0) (float-vector -79.0 -102.0 -87.0)))
         (instance face :init :vertices (list (float-vector -79.0 102.0 87.0) (float-vector -79.0 72.0 87.0) (float-vector 79.0 72.0 87.0) (float-vector 79.0 102.0 87.0)))
         (instance face :init :vertices (list (float-vector -79.0 -102.0 87.0) (float-vector 79.0 -102.0 87.0) (float-vector 79.0 -72.0 87.0) (float-vector -79.0 -72.0 87.0)))
         (instance face :init :vertices (list (float-vector -79.0 -102.0 87.0) (float-vector -79.0 -102.0 -87.0) (float-vector 79.0 -102.0 -87.0) (float-vector 79.0 -102.0 87.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -77.0 -102.0 -71.0) (float-vector -77.0 -102.0 63.0) (float-vector 77.0 -102.0 63.0) (float-vector 77.0 -102.0 -71.0)))
))
         (instance face :init :vertices (list (float-vector -79.0 102.0 87.0) (float-vector -79.0 102.0 -87.0) (float-vector -79.0 -102.0 -87.0) (float-vector -79.0 -102.0 87.0) (float-vector -79.0 -72.0 87.0) (float-vector -79.0 -72.0 82.0) (float-vector -79.0 72.0 82.0) (float-vector -79.0 72.0 87.0)))
         (instance face :init :vertices (list (float-vector -79.0 102.0 -87.0) (float-vector -79.0 102.0 87.0) (float-vector 79.0 102.0 87.0) (float-vector 79.0 102.0 -87.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -77.0 102.0 63.0) (float-vector -77.0 102.0 -71.0) (float-vector 77.0 102.0 -71.0) (float-vector 77.0 102.0 63.0)))
))
         (instance face :init :vertices (list (float-vector 190.0 72.0 302.0) (float-vector 190.0 72.0 82.0) (float-vector 79.0 72.0 82.0) (float-vector 79.0 72.0 87.0) (float-vector -79.0 72.0 87.0) (float-vector -79.0 72.0 82.0) (float-vector -190.0 72.0 82.0) (float-vector -190.0 72.0 302.0)))
         (instance face :init :vertices (list (float-vector -190.0 72.0 82.0) (float-vector -190.0 -72.0 82.0) (float-vector -190.0 -72.0 302.0) (float-vector -190.0 72.0 302.0)))
         (instance face :init :vertices (list (float-vector -190.0 -72.0 82.0) (float-vector -79.0 -72.0 82.0) (float-vector -79.0 -72.0 87.0) (float-vector 79.0 -72.0 87.0) (float-vector 79.0 -72.0 82.0) (float-vector 190.0 -72.0 82.0) (float-vector 190.0 -72.0 302.0) (float-vector -190.0 -72.0 302.0)))
         (instance face :init :vertices (list (float-vector 190.0 -72.0 302.0) (float-vector 190.0 72.0 302.0) (float-vector -190.0 72.0 302.0) (float-vector -190.0 -72.0 302.0)))
         (instance face :init :vertices (list (float-vector 190.0 -72.0 82.0) (float-vector 190.0 72.0 82.0) (float-vector 190.0 72.0 302.0) (float-vector 190.0 -72.0 302.0)))
         (instance face :init :vertices (list (float-vector -79.0 -72.0 82.0) (float-vector -190.0 -72.0 82.0) (float-vector -190.0 72.0 82.0) (float-vector -79.0 72.0 82.0)))
         (instance face :init :vertices (list (float-vector 190.0 72.0 82.0) (float-vector 190.0 -72.0 82.0) (float-vector 79.0 -72.0 82.0) (float-vector 79.0 72.0 82.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -110.0 97.0 297.5) (float-vector -110.0 97.0 182.5) (float-vector -170.0 97.0 182.5) (float-vector -170.0 97.0 297.5)))
         (instance face :init :vertices (list (float-vector -170.0 97.0 182.5) (float-vector -170.0 72.0 182.5) (float-vector -170.0 72.0 297.5) (float-vector -170.0 97.0 297.5)))
         (instance face :init :vertices (list (float-vector -170.0 72.0 182.5) (float-vector -110.0 72.0 182.5) (float-vector -110.0 72.0 297.5) (float-vector -170.0 72.0 297.5)))
         (instance face :init :vertices (list (float-vector -110.0 72.0 297.5) (float-vector -110.0 97.0 297.5) (float-vector -170.0 97.0 297.5) (float-vector -170.0 72.0 297.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -121.5 81.9019 297.5) (float-vector -122.598 83.0 297.5) (float-vector -123.0 84.5 297.5) (float-vector -122.598 86.0 297.5) (float-vector -121.5 87.0981 297.5) (float-vector -120.0 87.5 297.5) (float-vector -118.5 87.0981 297.5) (float-vector -117.402 86.0 297.5) (float-vector -117.0 84.5 297.5) (float-vector -117.402 83.0 297.5) (float-vector -118.5 81.9019 297.5) (float-vector -120.0 81.5 297.5)))
))
         (instance face :init :vertices (list (float-vector -110.0 72.0 182.5) (float-vector -110.0 97.0 182.5) (float-vector -110.0 97.0 297.5) (float-vector -110.0 72.0 297.5)))
         (instance face :init :vertices (list (float-vector -110.0 97.0 182.5) (float-vector -110.0 72.0 182.5) (float-vector -170.0 72.0 182.5) (float-vector -170.0 97.0 182.5)))
         (instance face :init :vertices (list (float-vector -120.0 81.5 359.0) (float-vector -120.0 81.5 297.5) (float-vector -118.5 81.9019 297.5) (float-vector -118.5 81.9019 359.0)))
         (instance face :init :vertices (list (float-vector -117.402 83.0 297.5) (float-vector -117.402 83.0 359.0) (float-vector -118.5 81.9019 359.0) (float-vector -118.5 81.9019 297.5)))
         (instance face :init :vertices (list (float-vector -117.0 84.5 297.5) (float-vector -117.0 84.5 359.0) (float-vector -117.402 83.0 359.0) (float-vector -117.402 83.0 297.5)))
         (instance face :init :vertices (list (float-vector -117.402 86.0 297.5) (float-vector -117.402 86.0 359.0) (float-vector -117.0 84.5 359.0) (float-vector -117.0 84.5 297.5)))
         (instance face :init :vertices (list (float-vector -118.5 87.0981 297.5) (float-vector -118.5 87.0981 359.0) (float-vector -117.402 86.0 359.0) (float-vector -117.402 86.0 297.5)))
         (instance face :init :vertices (list (float-vector -120.0 87.5 297.5) (float-vector -120.0 87.5 359.0) (float-vector -118.5 87.0981 359.0) (float-vector -118.5 87.0981 297.5)))
         (instance face :init :vertices (list (float-vector -121.5 87.0981 297.5) (float-vector -121.5 87.0981 359.0) (float-vector -120.0 87.5 359.0) (float-vector -120.0 87.5 297.5)))
         (instance face :init :vertices (list (float-vector -122.598 86.0 297.5) (float-vector -122.598 86.0 359.0) (float-vector -121.5 87.0981 359.0) (float-vector -121.5 87.0981 297.5)))
         (instance face :init :vertices (list (float-vector -123.0 84.5 297.5) (float-vector -123.0 84.5 359.0) (float-vector -122.598 86.0 359.0) (float-vector -122.598 86.0 297.5)))
         (instance face :init :vertices (list (float-vector -122.598 83.0 297.5) (float-vector -122.598 83.0 359.0) (float-vector -123.0 84.5 359.0) (float-vector -123.0 84.5 297.5)))
         (instance face :init :vertices (list (float-vector -121.5 81.9019 297.5) (float-vector -121.5 81.9019 359.0) (float-vector -122.598 83.0 359.0) (float-vector -122.598 83.0 297.5)))
         (instance face :init :vertices (list (float-vector -121.5 81.9019 359.0) (float-vector -120.0 81.5 359.0) (float-vector -118.5 81.9019 359.0) (float-vector -117.402 83.0 359.0) (float-vector -117.0 84.5 359.0) (float-vector -117.402 86.0 359.0) (float-vector -118.5 87.0981 359.0) (float-vector -120.0 87.5 359.0) (float-vector -121.5 87.0981 359.0) (float-vector -122.598 86.0 359.0) (float-vector -123.0 84.5 359.0) (float-vector -122.598 83.0 359.0)))
         (instance face :init :vertices (list (float-vector -120.0 81.5 359.0) (float-vector -121.5 81.9019 359.0) (float-vector -121.5 81.9019 297.5) (float-vector -120.0 81.5 297.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 72.0 -45.0 20.0) (float-vector 72.0 45.0 20.0) (float-vector 2.0 45.0 20.0) (float-vector 2.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector 72.0 45.0 -80.0) (float-vector 72.0 -45.0 -80.0) (float-vector 2.0 -45.0 -80.0) (float-vector 2.0 45.0 -80.0)))
         (instance face :init :vertices (list (float-vector 72.0 -45.0 20.0) (float-vector 72.0 -45.0 -80.0) (float-vector 72.0 45.0 -80.0) (float-vector 72.0 45.0 20.0)))
         (instance face :init :vertices (list (float-vector 2.0 -45.0 20.0) (float-vector 2.0 -45.0 -80.0) (float-vector 72.0 -45.0 -80.0) (float-vector 72.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector 2.0 45.0 20.0) (float-vector 2.0 45.0 -80.0) (float-vector 2.0 -45.0 -80.0) (float-vector 2.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector 72.0 45.0 20.0) (float-vector 72.0 45.0 -80.0) (float-vector 2.0 45.0 -80.0) (float-vector 2.0 45.0 20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -2.0 -45.0 20.0) (float-vector -2.0 45.0 20.0) (float-vector -72.0 45.0 20.0) (float-vector -72.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector -2.0 45.0 -80.0) (float-vector -2.0 -45.0 -80.0) (float-vector -72.0 -45.0 -80.0) (float-vector -72.0 45.0 -80.0)))
         (instance face :init :vertices (list (float-vector -2.0 -45.0 20.0) (float-vector -2.0 -45.0 -80.0) (float-vector -2.0 45.0 -80.0) (float-vector -2.0 45.0 20.0)))
         (instance face :init :vertices (list (float-vector -72.0 -45.0 20.0) (float-vector -72.0 -45.0 -80.0) (float-vector -2.0 -45.0 -80.0) (float-vector -2.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector -72.0 45.0 20.0) (float-vector -72.0 45.0 -80.0) (float-vector -72.0 -45.0 -80.0) (float-vector -72.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector -2.0 45.0 20.0) (float-vector -2.0 45.0 -80.0) (float-vector -72.0 45.0 -80.0) (float-vector -72.0 45.0 20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -205.0 49.5 274.5) (float-vector -190.0 49.5 274.5) (float-vector -190.0 49.5 249.5) (float-vector -205.0 49.5 249.5)))
         (instance face :init :vertices (list (float-vector -190.0 49.5 249.5) (float-vector -190.0 0.5 249.5) (float-vector -205.0 0.5 249.5) (float-vector -205.0 49.5 249.5)))
         (instance face :init :vertices (list (float-vector -190.0 0.5 249.5) (float-vector -190.0 0.5 274.5) (float-vector -205.0 0.5 274.5) (float-vector -205.0 0.5 249.5)))
         (instance face :init :vertices (list (float-vector -205.0 0.5 274.5) (float-vector -205.0 49.5 274.5) (float-vector -205.0 49.5 249.5) (float-vector -205.0 0.5 249.5)))
         (instance face :init :vertices (list (float-vector -190.0 0.5 274.5) (float-vector -190.0 49.5 274.5) (float-vector -205.0 49.5 274.5) (float-vector -205.0 0.5 274.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -195.0 30.6699 274.5) (float-vector -197.5 30.0 274.5) (float-vector -200.0 30.6699 274.5) (float-vector -201.83 32.5 274.5) (float-vector -202.5 35.0 274.5) (float-vector -201.83 37.5 274.5) (float-vector -200.0 39.3301 274.5) (float-vector -197.5 40.0 274.5) (float-vector -195.0 39.3301 274.5) (float-vector -193.17 37.5 274.5) (float-vector -192.5 35.0 274.5) (float-vector -193.17 32.5 274.5)))
))
         (instance face :init :vertices (list (float-vector -190.0 49.5 274.5) (float-vector -190.0 0.5 274.5) (float-vector -190.0 0.5 249.5) (float-vector -190.0 49.5 249.5)))
         (instance face :init :vertices (list (float-vector -197.5 34.0 387.5) (float-vector -198.0 34.134 387.5) (float-vector -198.0 34.134 288.5) (float-vector -197.5 34.0 288.5)))
         (instance face :init :vertices (list (float-vector -197.5 34.0 387.5) (float-vector -197.0 34.134 387.5) (float-vector -196.634 34.5 387.5) (float-vector -196.5 35.0 387.5) (float-vector -196.634 35.5 387.5) (float-vector -197.0 35.866 387.5) (float-vector -197.5 36.0 387.5) (float-vector -198.0 35.866 387.5) (float-vector -198.366 35.5 387.5) (float-vector -198.5 35.0 387.5) (float-vector -198.366 34.5 387.5) (float-vector -198.0 34.134 387.5)))
         (instance face :init :vertices (list (float-vector -198.366 34.5 387.5) (float-vector -198.366 34.5 288.5) (float-vector -198.0 34.134 288.5) (float-vector -198.0 34.134 387.5)))
         (instance face :init :vertices (list (float-vector -198.5 35.0 387.5) (float-vector -198.5 35.0 288.5) (float-vector -198.366 34.5 288.5) (float-vector -198.366 34.5 387.5)))
         (instance face :init :vertices (list (float-vector -198.366 35.5 387.5) (float-vector -198.366 35.5 288.5) (float-vector -198.5 35.0 288.5) (float-vector -198.5 35.0 387.5)))
         (instance face :init :vertices (list (float-vector -198.0 35.866 387.5) (float-vector -198.0 35.866 288.5) (float-vector -198.366 35.5 288.5) (float-vector -198.366 35.5 387.5)))
         (instance face :init :vertices (list (float-vector -197.5 36.0 387.5) (float-vector -197.5 36.0 288.5) (float-vector -198.0 35.866 288.5) (float-vector -198.0 35.866 387.5)))
         (instance face :init :vertices (list (float-vector -197.0 35.866 387.5) (float-vector -197.0 35.866 288.5) (float-vector -197.5 36.0 288.5) (float-vector -197.5 36.0 387.5)))
         (instance face :init :vertices (list (float-vector -196.634 35.5 387.5) (float-vector -196.634 35.5 288.5) (float-vector -197.0 35.866 288.5) (float-vector -197.0 35.866 387.5)))
         (instance face :init :vertices (list (float-vector -196.5 35.0 387.5) (float-vector -196.5 35.0 288.5) (float-vector -196.634 35.5 288.5) (float-vector -196.634 35.5 387.5)))
         (instance face :init :vertices (list (float-vector -196.634 34.5 387.5) (float-vector -196.634 34.5 288.5) (float-vector -196.5 35.0 288.5) (float-vector -196.5 35.0 387.5)))
         (instance face :init :vertices (list (float-vector -197.0 34.134 387.5) (float-vector -197.0 34.134 288.5) (float-vector -196.634 34.5 288.5) (float-vector -196.634 34.5 387.5)))
         (instance face :init :vertices (list (float-vector -197.5 34.0 288.5) (float-vector -197.0 34.134 288.5) (float-vector -197.0 34.134 387.5) (float-vector -197.5 34.0 387.5)))
         (instance face :init :vertices (list (float-vector -197.5 30.0 274.5) (float-vector -197.5 30.0 288.5) (float-vector -200.0 30.6699 288.5) (float-vector -200.0 30.6699 274.5)))
         (instance face :init :vertices (list (float-vector -197.5 30.0 288.5) (float-vector -195.0 30.6699 288.5) (float-vector -193.17 32.5 288.5) (float-vector -192.5 35.0 288.5) (float-vector -193.17 37.5 288.5) (float-vector -195.0 39.3301 288.5) (float-vector -197.5 40.0 288.5) (float-vector -200.0 39.3301 288.5) (float-vector -201.83 37.5 288.5) (float-vector -202.5 35.0 288.5) (float-vector -201.83 32.5 288.5) (float-vector -200.0 30.6699 288.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -197.0 34.134 288.5) (float-vector -197.5 34.0 288.5) (float-vector -198.0 34.134 288.5) (float-vector -198.366 34.5 288.5) (float-vector -198.5 35.0 288.5) (float-vector -198.366 35.5 288.5) (float-vector -198.0 35.866 288.5) (float-vector -197.5 36.0 288.5) (float-vector -197.0 35.866 288.5) (float-vector -196.634 35.5 288.5) (float-vector -196.5 35.0 288.5) (float-vector -196.634 34.5 288.5)))
))
         (instance face :init :vertices (list (float-vector -201.83 32.5 288.5) (float-vector -201.83 32.5 274.5) (float-vector -200.0 30.6699 274.5) (float-vector -200.0 30.6699 288.5)))
         (instance face :init :vertices (list (float-vector -202.5 35.0 288.5) (float-vector -202.5 35.0 274.5) (float-vector -201.83 32.5 274.5) (float-vector -201.83 32.5 288.5)))
         (instance face :init :vertices (list (float-vector -201.83 37.5 288.5) (float-vector -201.83 37.5 274.5) (float-vector -202.5 35.0 274.5) (float-vector -202.5 35.0 288.5)))
         (instance face :init :vertices (list (float-vector -200.0 39.3301 288.5) (float-vector -200.0 39.3301 274.5) (float-vector -201.83 37.5 274.5) (float-vector -201.83 37.5 288.5)))
         (instance face :init :vertices (list (float-vector -197.5 40.0 288.5) (float-vector -197.5 40.0 274.5) (float-vector -200.0 39.3301 274.5) (float-vector -200.0 39.3301 288.5)))
         (instance face :init :vertices (list (float-vector -195.0 39.3301 288.5) (float-vector -195.0 39.3301 274.5) (float-vector -197.5 40.0 274.5) (float-vector -197.5 40.0 288.5)))
         (instance face :init :vertices (list (float-vector -193.17 37.5 288.5) (float-vector -193.17 37.5 274.5) (float-vector -195.0 39.3301 274.5) (float-vector -195.0 39.3301 288.5)))
         (instance face :init :vertices (list (float-vector -192.5 35.0 288.5) (float-vector -192.5 35.0 274.5) (float-vector -193.17 37.5 274.5) (float-vector -193.17 37.5 288.5)))
         (instance face :init :vertices (list (float-vector -193.17 32.5 288.5) (float-vector -193.17 32.5 274.5) (float-vector -192.5 35.0 274.5) (float-vector -192.5 35.0 288.5)))
         (instance face :init :vertices (list (float-vector -195.0 30.6699 288.5) (float-vector -195.0 30.6699 274.5) (float-vector -193.17 32.5 274.5) (float-vector -193.17 32.5 288.5)))
         (instance face :init :vertices (list (float-vector -195.0 30.6699 274.5) (float-vector -195.0 30.6699 288.5) (float-vector -197.5 30.0 288.5) (float-vector -197.5 30.0 274.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 180.0 65.0 100.0) (float-vector -40.0 65.0 100.0) (float-vector -50.0 125.0 100.0) (float-vector -40.0 164.0 100.0) (float-vector -20.0 181.0 100.0) (float-vector -2.842171e-14 191.0 100.0) (float-vector 20.0 192.0 100.0) (float-vector 40.0 189.0 100.0) (float-vector 60.0 176.0 100.0) (float-vector 80.0 155.0 100.0) (float-vector 100.0 121.0 100.0) (float-vector 120.0 88.0 100.0) (float-vector 140.0 75.0 100.0) (float-vector 160.0 67.0 100.0)))
         (instance face :init :vertices (list (float-vector -40.0 65.0 300.0) (float-vector 180.0 65.0 300.0) (float-vector 160.0 67.0 300.0) (float-vector 140.0 75.0 300.0) (float-vector 120.0 88.0 300.0) (float-vector 100.0 121.0 300.0) (float-vector 80.0 155.0 300.0) (float-vector 60.0 176.0 300.0) (float-vector 40.0 189.0 300.0) (float-vector 20.0 192.0 300.0) (float-vector -5.684342e-14 191.0 300.0) (float-vector -20.0 181.0 300.0) (float-vector -40.0 164.0 300.0) (float-vector -50.0 125.0 300.0)))
         (instance face :init :vertices (list (float-vector 180.0 65.0 100.0) (float-vector 180.0 65.0 300.0) (float-vector -40.0 65.0 300.0) (float-vector -40.0 65.0 100.0)))
         (instance face :init :vertices (list (float-vector 160.0 67.0 100.0) (float-vector 160.0 67.0 300.0) (float-vector 180.0 65.0 300.0) (float-vector 180.0 65.0 100.0)))
         (instance face :init :vertices (list (float-vector 140.0 75.0 100.0) (float-vector 140.0 75.0 300.0) (float-vector 160.0 67.0 300.0) (float-vector 160.0 67.0 100.0)))
         (instance face :init :vertices (list (float-vector 120.0 88.0 100.0) (float-vector 120.0 88.0 300.0) (float-vector 140.0 75.0 300.0) (float-vector 140.0 75.0 100.0)))
         (instance face :init :vertices (list (float-vector 100.0 121.0 100.0) (float-vector 100.0 121.0 300.0) (float-vector 120.0 88.0 300.0) (float-vector 120.0 88.0 100.0)))
         (instance face :init :vertices (list (float-vector 80.0 155.0 100.0) (float-vector 80.0 155.0 300.0) (float-vector 100.0 121.0 300.0) (float-vector 100.0 121.0 100.0)))
         (instance face :init :vertices (list (float-vector 60.0 176.0 100.0) (float-vector 60.0 176.0 300.0) (float-vector 80.0 155.0 300.0) (float-vector 80.0 155.0 100.0)))
         (instance face :init :vertices (list (float-vector 40.0 189.0 100.0) (float-vector 40.0 189.0 300.0) (float-vector 60.0 176.0 300.0) (float-vector 60.0 176.0 100.0)))
         (instance face :init :vertices (list (float-vector 20.0 192.0 100.0) (float-vector 20.0 192.0 300.0) (float-vector 40.0 189.0 300.0) (float-vector 40.0 189.0 100.0)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 191.0 100.0) (float-vector -5.684342e-14 191.0 300.0) (float-vector 20.0 192.0 300.0) (float-vector 20.0 192.0 100.0)))
         (instance face :init :vertices (list (float-vector -20.0 181.0 100.0) (float-vector -20.0 181.0 300.0) (float-vector -5.684342e-14 191.0 300.0) (float-vector -2.842171e-14 191.0 100.0)))
         (instance face :init :vertices (list (float-vector -40.0 164.0 100.0) (float-vector -40.0 164.0 300.0) (float-vector -20.0 181.0 300.0) (float-vector -20.0 181.0 100.0)))
         (instance face :init :vertices (list (float-vector -50.0 125.0 100.0) (float-vector -50.0 125.0 300.0) (float-vector -40.0 164.0 300.0) (float-vector -40.0 164.0 100.0)))
         (instance face :init :vertices (list (float-vector -40.0 65.0 100.0) (float-vector -40.0 65.0 300.0) (float-vector -50.0 125.0 300.0) (float-vector -50.0 125.0 100.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 180.0 -65.0 300.0) (float-vector -40.0 -65.0 300.0) (float-vector -50.0 -125.0 300.0) (float-vector -40.0 -164.0 300.0) (float-vector -20.0 -181.0 300.0) (float-vector 8.526513e-14 -191.0 300.0) (float-vector 20.0 -192.0 300.0) (float-vector 40.0 -189.0 300.0) (float-vector 60.0 -176.0 300.0) (float-vector 80.0 -155.0 300.0) (float-vector 100.0 -121.0 300.0) (float-vector 120.0 -88.0 300.0) (float-vector 140.0 -75.0 300.0) (float-vector 160.0 -67.0 300.0)))
         (instance face :init :vertices (list (float-vector -40.0 -65.0 100.0) (float-vector 180.0 -65.0 100.0) (float-vector 160.0 -67.0 100.0) (float-vector 140.0 -75.0 100.0) (float-vector 120.0 -88.0 100.0) (float-vector 100.0 -121.0 100.0) (float-vector 80.0 -155.0 100.0) (float-vector 60.0 -176.0 100.0) (float-vector 40.0 -189.0 100.0) (float-vector 20.0 -192.0 100.0) (float-vector 8.526513e-14 -191.0 100.0) (float-vector -20.0 -181.0 100.0) (float-vector -40.0 -164.0 100.0) (float-vector -50.0 -125.0 100.0)))
         (instance face :init :vertices (list (float-vector 180.0 -65.0 300.0) (float-vector 180.0 -65.0 100.0) (float-vector -40.0 -65.0 100.0) (float-vector -40.0 -65.0 300.0)))
         (instance face :init :vertices (list (float-vector 160.0 -67.0 300.0) (float-vector 160.0 -67.0 100.0) (float-vector 180.0 -65.0 100.0) (float-vector 180.0 -65.0 300.0)))
         (instance face :init :vertices (list (float-vector 140.0 -75.0 300.0) (float-vector 140.0 -75.0 100.0) (float-vector 160.0 -67.0 100.0) (float-vector 160.0 -67.0 300.0)))
         (instance face :init :vertices (list (float-vector 120.0 -88.0 300.0) (float-vector 120.0 -88.0 100.0) (float-vector 140.0 -75.0 100.0) (float-vector 140.0 -75.0 300.0)))
         (instance face :init :vertices (list (float-vector 100.0 -121.0 300.0) (float-vector 100.0 -121.0 100.0) (float-vector 120.0 -88.0 100.0) (float-vector 120.0 -88.0 300.0)))
         (instance face :init :vertices (list (float-vector 80.0 -155.0 300.0) (float-vector 80.0 -155.0 100.0) (float-vector 100.0 -121.0 100.0) (float-vector 100.0 -121.0 300.0)))
         (instance face :init :vertices (list (float-vector 60.0 -176.0 300.0) (float-vector 60.0 -176.0 100.0) (float-vector 80.0 -155.0 100.0) (float-vector 80.0 -155.0 300.0)))
         (instance face :init :vertices (list (float-vector 40.0 -189.0 300.0) (float-vector 40.0 -189.0 100.0) (float-vector 60.0 -176.0 100.0) (float-vector 60.0 -176.0 300.0)))
         (instance face :init :vertices (list (float-vector 20.0 -192.0 300.0) (float-vector 20.0 -192.0 100.0) (float-vector 40.0 -189.0 100.0) (float-vector 40.0 -189.0 300.0)))
         (instance face :init :vertices (list (float-vector 8.526513e-14 -191.0 300.0) (float-vector 8.526513e-14 -191.0 100.0) (float-vector 20.0 -192.0 100.0) (float-vector 20.0 -192.0 300.0)))
         (instance face :init :vertices (list (float-vector -20.0 -181.0 300.0) (float-vector -20.0 -181.0 100.0) (float-vector 8.526513e-14 -191.0 100.0) (float-vector 8.526513e-14 -191.0 300.0)))
         (instance face :init :vertices (list (float-vector -40.0 -164.0 300.0) (float-vector -40.0 -164.0 100.0) (float-vector -20.0 -181.0 100.0) (float-vector -20.0 -181.0 300.0)))
         (instance face :init :vertices (list (float-vector -50.0 -125.0 300.0) (float-vector -50.0 -125.0 100.0) (float-vector -40.0 -164.0 100.0) (float-vector -40.0 -164.0 300.0)))
         (instance face :init :vertices (list (float-vector -40.0 -65.0 300.0) (float-vector -40.0 -65.0 100.0) (float-vector -50.0 -125.0 100.0) (float-vector -50.0 -125.0 300.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 205.0 69.5 299.5) (float-vector 190.0 69.5 299.5) (float-vector 190.0 44.5 299.5) (float-vector 205.0 44.5 299.5)))
         (instance face :init :vertices (list (float-vector 190.0 44.5 299.5) (float-vector 190.0 44.5 250.5) (float-vector 205.0 44.5 250.5) (float-vector 205.0 44.5 299.5)))
         (instance face :init :vertices (list (float-vector 190.0 44.5 250.5) (float-vector 190.0 69.5 250.5) (float-vector 205.0 69.5 250.5) (float-vector 205.0 44.5 250.5)))
         (instance face :init :vertices (list (float-vector 205.0 69.5 250.5) (float-vector 205.0 69.5 299.5) (float-vector 205.0 44.5 299.5) (float-vector 205.0 44.5 250.5)))
         (instance face :init :vertices (list (float-vector 190.0 69.5 250.5) (float-vector 190.0 69.5 299.5) (float-vector 205.0 69.5 299.5) (float-vector 205.0 69.5 250.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 195.0 69.5 280.67) (float-vector 197.5 69.5 280.0) (float-vector 200.0 69.5 280.67) (float-vector 201.83 69.5 282.5) (float-vector 202.5 69.5 285.0) (float-vector 201.83 69.5 287.5) (float-vector 200.0 69.5 289.33) (float-vector 197.5 69.5 290.0) (float-vector 195.0 69.5 289.33) (float-vector 193.17 69.5 287.5) (float-vector 192.5 69.5 285.0) (float-vector 193.17 69.5 282.5)))
))
         (instance face :init :vertices (list (float-vector 190.0 69.5 299.5) (float-vector 190.0 69.5 250.5) (float-vector 190.0 44.5 250.5) (float-vector 190.0 44.5 299.5)))
         (instance face :init :vertices (list (float-vector 197.5 182.5 284.0) (float-vector 198.0 182.5 284.134) (float-vector 198.0 83.5 284.134) (float-vector 197.5 83.5 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 182.5 284.0) (float-vector 197.0 182.5 284.134) (float-vector 196.634 182.5 284.5) (float-vector 196.5 182.5 285.0) (float-vector 196.634 182.5 285.5) (float-vector 197.0 182.5 285.866) (float-vector 197.5 182.5 286.0) (float-vector 198.0 182.5 285.866) (float-vector 198.366 182.5 285.5) (float-vector 198.5 182.5 285.0) (float-vector 198.366 182.5 284.5) (float-vector 198.0 182.5 284.134)))
         (instance face :init :vertices (list (float-vector 198.366 182.5 284.5) (float-vector 198.366 83.5 284.5) (float-vector 198.0 83.5 284.134) (float-vector 198.0 182.5 284.134)))
         (instance face :init :vertices (list (float-vector 198.5 182.5 285.0) (float-vector 198.5 83.5 285.0) (float-vector 198.366 83.5 284.5) (float-vector 198.366 182.5 284.5)))
         (instance face :init :vertices (list (float-vector 198.366 182.5 285.5) (float-vector 198.366 83.5 285.5) (float-vector 198.5 83.5 285.0) (float-vector 198.5 182.5 285.0)))
         (instance face :init :vertices (list (float-vector 198.0 182.5 285.866) (float-vector 198.0 83.5 285.866) (float-vector 198.366 83.5 285.5) (float-vector 198.366 182.5 285.5)))
         (instance face :init :vertices (list (float-vector 197.5 182.5 286.0) (float-vector 197.5 83.5 286.0) (float-vector 198.0 83.5 285.866) (float-vector 198.0 182.5 285.866)))
         (instance face :init :vertices (list (float-vector 197.0 182.5 285.866) (float-vector 197.0 83.5 285.866) (float-vector 197.5 83.5 286.0) (float-vector 197.5 182.5 286.0)))
         (instance face :init :vertices (list (float-vector 196.634 182.5 285.5) (float-vector 196.634 83.5 285.5) (float-vector 197.0 83.5 285.866) (float-vector 197.0 182.5 285.866)))
         (instance face :init :vertices (list (float-vector 196.5 182.5 285.0) (float-vector 196.5 83.5 285.0) (float-vector 196.634 83.5 285.5) (float-vector 196.634 182.5 285.5)))
         (instance face :init :vertices (list (float-vector 196.634 182.5 284.5) (float-vector 196.634 83.5 284.5) (float-vector 196.5 83.5 285.0) (float-vector 196.5 182.5 285.0)))
         (instance face :init :vertices (list (float-vector 197.0 182.5 284.134) (float-vector 197.0 83.5 284.134) (float-vector 196.634 83.5 284.5) (float-vector 196.634 182.5 284.5)))
         (instance face :init :vertices (list (float-vector 197.5 83.5 284.0) (float-vector 197.0 83.5 284.134) (float-vector 197.0 182.5 284.134) (float-vector 197.5 182.5 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 69.5 280.0) (float-vector 197.5 83.5 280.0) (float-vector 200.0 83.5 280.67) (float-vector 200.0 69.5 280.67)))
         (instance face :init :vertices (list (float-vector 197.5 83.5 280.0) (float-vector 195.0 83.5 280.67) (float-vector 193.17 83.5 282.5) (float-vector 192.5 83.5 285.0) (float-vector 193.17 83.5 287.5) (float-vector 195.0 83.5 289.33) (float-vector 197.5 83.5 290.0) (float-vector 200.0 83.5 289.33) (float-vector 201.83 83.5 287.5) (float-vector 202.5 83.5 285.0) (float-vector 201.83 83.5 282.5) (float-vector 200.0 83.5 280.67))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 197.0 83.5 284.134) (float-vector 197.5 83.5 284.0) (float-vector 198.0 83.5 284.134) (float-vector 198.366 83.5 284.5) (float-vector 198.5 83.5 285.0) (float-vector 198.366 83.5 285.5) (float-vector 198.0 83.5 285.866) (float-vector 197.5 83.5 286.0) (float-vector 197.0 83.5 285.866) (float-vector 196.634 83.5 285.5) (float-vector 196.5 83.5 285.0) (float-vector 196.634 83.5 284.5)))
))
         (instance face :init :vertices (list (float-vector 201.83 83.5 282.5) (float-vector 201.83 69.5 282.5) (float-vector 200.0 69.5 280.67) (float-vector 200.0 83.5 280.67)))
         (instance face :init :vertices (list (float-vector 202.5 83.5 285.0) (float-vector 202.5 69.5 285.0) (float-vector 201.83 69.5 282.5) (float-vector 201.83 83.5 282.5)))
         (instance face :init :vertices (list (float-vector 201.83 83.5 287.5) (float-vector 201.83 69.5 287.5) (float-vector 202.5 69.5 285.0) (float-vector 202.5 83.5 285.0)))
         (instance face :init :vertices (list (float-vector 200.0 83.5 289.33) (float-vector 200.0 69.5 289.33) (float-vector 201.83 69.5 287.5) (float-vector 201.83 83.5 287.5)))
         (instance face :init :vertices (list (float-vector 197.5 83.5 290.0) (float-vector 197.5 69.5 290.0) (float-vector 200.0 69.5 289.33) (float-vector 200.0 83.5 289.33)))
         (instance face :init :vertices (list (float-vector 195.0 83.5 289.33) (float-vector 195.0 69.5 289.33) (float-vector 197.5 69.5 290.0) (float-vector 197.5 83.5 290.0)))
         (instance face :init :vertices (list (float-vector 193.17 83.5 287.5) (float-vector 193.17 69.5 287.5) (float-vector 195.0 69.5 289.33) (float-vector 195.0 83.5 289.33)))
         (instance face :init :vertices (list (float-vector 192.5 83.5 285.0) (float-vector 192.5 69.5 285.0) (float-vector 193.17 69.5 287.5) (float-vector 193.17 83.5 287.5)))
         (instance face :init :vertices (list (float-vector 193.17 83.5 282.5) (float-vector 193.17 69.5 282.5) (float-vector 192.5 69.5 285.0) (float-vector 192.5 83.5 285.0)))
         (instance face :init :vertices (list (float-vector 195.0 83.5 280.67) (float-vector 195.0 69.5 280.67) (float-vector 193.17 69.5 282.5) (float-vector 193.17 83.5 282.5)))
         (instance face :init :vertices (list (float-vector 195.0 69.5 280.67) (float-vector 195.0 83.5 280.67) (float-vector 197.5 83.5 280.0) (float-vector 197.5 69.5 280.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 -69.5 299.5) (float-vector 205.0 -69.5 299.5) (float-vector 205.0 -44.5 299.5) (float-vector 190.0 -44.5 299.5)))
         (instance face :init :vertices (list (float-vector 205.0 -44.5 299.5) (float-vector 205.0 -44.5 250.5) (float-vector 190.0 -44.5 250.5) (float-vector 190.0 -44.5 299.5)))
         (instance face :init :vertices (list (float-vector 205.0 -44.5 250.5) (float-vector 205.0 -69.5 250.5) (float-vector 190.0 -69.5 250.5) (float-vector 190.0 -44.5 250.5)))
         (instance face :init :vertices (list (float-vector 190.0 -69.5 250.5) (float-vector 190.0 -69.5 299.5) (float-vector 190.0 -44.5 299.5) (float-vector 190.0 -44.5 250.5)))
         (instance face :init :vertices (list (float-vector 205.0 -69.5 250.5) (float-vector 205.0 -69.5 299.5) (float-vector 190.0 -69.5 299.5) (float-vector 190.0 -69.5 250.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 200.0 -69.5 280.67) (float-vector 197.5 -69.5 280.0) (float-vector 195.0 -69.5 280.67) (float-vector 193.17 -69.5 282.5) (float-vector 192.5 -69.5 285.0) (float-vector 193.17 -69.5 287.5) (float-vector 195.0 -69.5 289.33) (float-vector 197.5 -69.5 290.0) (float-vector 200.0 -69.5 289.33) (float-vector 201.83 -69.5 287.5) (float-vector 202.5 -69.5 285.0) (float-vector 201.83 -69.5 282.5)))
))
         (instance face :init :vertices (list (float-vector 205.0 -69.5 299.5) (float-vector 205.0 -69.5 250.5) (float-vector 205.0 -44.5 250.5) (float-vector 205.0 -44.5 299.5)))
         (instance face :init :vertices (list (float-vector 197.5 -182.5 284.0) (float-vector 197.0 -182.5 284.134) (float-vector 197.0 -83.5 284.134) (float-vector 197.5 -83.5 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 -182.5 284.0) (float-vector 198.0 -182.5 284.134) (float-vector 198.366 -182.5 284.5) (float-vector 198.5 -182.5 285.0) (float-vector 198.366 -182.5 285.5) (float-vector 198.0 -182.5 285.866) (float-vector 197.5 -182.5 286.0) (float-vector 197.0 -182.5 285.866) (float-vector 196.634 -182.5 285.5) (float-vector 196.5 -182.5 285.0) (float-vector 196.634 -182.5 284.5) (float-vector 197.0 -182.5 284.134)))
         (instance face :init :vertices (list (float-vector 196.634 -182.5 284.5) (float-vector 196.634 -83.5 284.5) (float-vector 197.0 -83.5 284.134) (float-vector 197.0 -182.5 284.134)))
         (instance face :init :vertices (list (float-vector 196.5 -182.5 285.0) (float-vector 196.5 -83.5 285.0) (float-vector 196.634 -83.5 284.5) (float-vector 196.634 -182.5 284.5)))
         (instance face :init :vertices (list (float-vector 196.634 -182.5 285.5) (float-vector 196.634 -83.5 285.5) (float-vector 196.5 -83.5 285.0) (float-vector 196.5 -182.5 285.0)))
         (instance face :init :vertices (list (float-vector 197.0 -182.5 285.866) (float-vector 197.0 -83.5 285.866) (float-vector 196.634 -83.5 285.5) (float-vector 196.634 -182.5 285.5)))
         (instance face :init :vertices (list (float-vector 197.5 -182.5 286.0) (float-vector 197.5 -83.5 286.0) (float-vector 197.0 -83.5 285.866) (float-vector 197.0 -182.5 285.866)))
         (instance face :init :vertices (list (float-vector 198.0 -182.5 285.866) (float-vector 198.0 -83.5 285.866) (float-vector 197.5 -83.5 286.0) (float-vector 197.5 -182.5 286.0)))
         (instance face :init :vertices (list (float-vector 198.366 -182.5 285.5) (float-vector 198.366 -83.5 285.5) (float-vector 198.0 -83.5 285.866) (float-vector 198.0 -182.5 285.866)))
         (instance face :init :vertices (list (float-vector 198.5 -182.5 285.0) (float-vector 198.5 -83.5 285.0) (float-vector 198.366 -83.5 285.5) (float-vector 198.366 -182.5 285.5)))
         (instance face :init :vertices (list (float-vector 198.366 -182.5 284.5) (float-vector 198.366 -83.5 284.5) (float-vector 198.5 -83.5 285.0) (float-vector 198.5 -182.5 285.0)))
         (instance face :init :vertices (list (float-vector 198.0 -182.5 284.134) (float-vector 198.0 -83.5 284.134) (float-vector 198.366 -83.5 284.5) (float-vector 198.366 -182.5 284.5)))
         (instance face :init :vertices (list (float-vector 197.5 -83.5 284.0) (float-vector 198.0 -83.5 284.134) (float-vector 198.0 -182.5 284.134) (float-vector 197.5 -182.5 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 -69.5 280.0) (float-vector 197.5 -83.5 280.0) (float-vector 195.0 -83.5 280.67) (float-vector 195.0 -69.5 280.67)))
         (instance face :init :vertices (list (float-vector 197.5 -83.5 280.0) (float-vector 200.0 -83.5 280.67) (float-vector 201.83 -83.5 282.5) (float-vector 202.5 -83.5 285.0) (float-vector 201.83 -83.5 287.5) (float-vector 200.0 -83.5 289.33) (float-vector 197.5 -83.5 290.0) (float-vector 195.0 -83.5 289.33) (float-vector 193.17 -83.5 287.5) (float-vector 192.5 -83.5 285.0) (float-vector 193.17 -83.5 282.5) (float-vector 195.0 -83.5 280.67))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 198.0 -83.5 284.134) (float-vector 197.5 -83.5 284.0) (float-vector 197.0 -83.5 284.134) (float-vector 196.634 -83.5 284.5) (float-vector 196.5 -83.5 285.0) (float-vector 196.634 -83.5 285.5) (float-vector 197.0 -83.5 285.866) (float-vector 197.5 -83.5 286.0) (float-vector 198.0 -83.5 285.866) (float-vector 198.366 -83.5 285.5) (float-vector 198.5 -83.5 285.0) (float-vector 198.366 -83.5 284.5)))
))
         (instance face :init :vertices (list (float-vector 193.17 -83.5 282.5) (float-vector 193.17 -69.5 282.5) (float-vector 195.0 -69.5 280.67) (float-vector 195.0 -83.5 280.67)))
         (instance face :init :vertices (list (float-vector 192.5 -83.5 285.0) (float-vector 192.5 -69.5 285.0) (float-vector 193.17 -69.5 282.5) (float-vector 193.17 -83.5 282.5)))
         (instance face :init :vertices (list (float-vector 193.17 -83.5 287.5) (float-vector 193.17 -69.5 287.5) (float-vector 192.5 -69.5 285.0) (float-vector 192.5 -83.5 285.0)))
         (instance face :init :vertices (list (float-vector 195.0 -83.5 289.33) (float-vector 195.0 -69.5 289.33) (float-vector 193.17 -69.5 287.5) (float-vector 193.17 -83.5 287.5)))
         (instance face :init :vertices (list (float-vector 197.5 -83.5 290.0) (float-vector 197.5 -69.5 290.0) (float-vector 195.0 -69.5 289.33) (float-vector 195.0 -83.5 289.33)))
         (instance face :init :vertices (list (float-vector 200.0 -83.5 289.33) (float-vector 200.0 -69.5 289.33) (float-vector 197.5 -69.5 290.0) (float-vector 197.5 -83.5 290.0)))
         (instance face :init :vertices (list (float-vector 201.83 -83.5 287.5) (float-vector 201.83 -69.5 287.5) (float-vector 200.0 -69.5 289.33) (float-vector 200.0 -83.5 289.33)))
         (instance face :init :vertices (list (float-vector 202.5 -83.5 285.0) (float-vector 202.5 -69.5 285.0) (float-vector 201.83 -69.5 287.5) (float-vector 201.83 -83.5 287.5)))
         (instance face :init :vertices (list (float-vector 201.83 -83.5 282.5) (float-vector 201.83 -69.5 282.5) (float-vector 202.5 -69.5 285.0) (float-vector 202.5 -83.5 285.0)))
         (instance face :init :vertices (list (float-vector 200.0 -83.5 280.67) (float-vector 200.0 -69.5 280.67) (float-vector 201.83 -69.5 282.5) (float-vector 201.83 -83.5 282.5)))
         (instance face :init :vertices (list (float-vector 200.0 -69.5 280.67) (float-vector 200.0 -83.5 280.67) (float-vector 197.5 -83.5 280.0) (float-vector 197.5 -69.5 280.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.995204e-15 -27.0 424.0) (float-vector -13.5 -23.3827 424.0) (float-vector -13.5 -23.3827 396.0) (float-vector 5.995204e-15 -27.0 396.0)))
         (instance face :init :vertices (list (float-vector 5.995204e-15 -27.0 424.0) (float-vector 13.5 -23.3827 424.0) (float-vector 23.3827 -13.5 424.0) (float-vector 27.0 -9.992007e-15 424.0) (float-vector 23.3827 13.5 424.0) (float-vector 13.5 23.3827 424.0) (float-vector 2.242651e-14 27.0 424.0) (float-vector -13.5 23.3827 424.0) (float-vector -23.3827 13.5 424.0) (float-vector -27.0 3.486100e-14 424.0) (float-vector -23.3827 -13.5 424.0) (float-vector -13.5 -23.3827 424.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -2.25 -3.89711 424.0) (float-vector -3.89711 -2.25 424.0) (float-vector -4.5 6.550316e-15 424.0) (float-vector -3.89711 2.25 424.0) (float-vector -2.25 3.89711 424.0) (float-vector 3.885781e-15 4.5 424.0) (float-vector 2.25 3.89711 424.0) (float-vector 3.89711 2.25 424.0) (float-vector 4.5 -1.665335e-15 424.0) (float-vector 3.89711 -2.25 424.0) (float-vector 2.25 -3.89711 424.0) (float-vector 9.992007e-16 -4.5 424.0)))
))
         (instance face :init :vertices (list (float-vector -23.3827 -13.5 424.0) (float-vector -23.3827 -13.5 396.0) (float-vector -13.5 -23.3827 396.0) (float-vector -13.5 -23.3827 424.0)))
         (instance face :init :vertices (list (float-vector -27.0 3.486100e-14 424.0) (float-vector -27.0 3.486100e-14 396.0) (float-vector -23.3827 -13.5 396.0) (float-vector -23.3827 -13.5 424.0)))
         (instance face :init :vertices (list (float-vector -23.3827 13.5 424.0) (float-vector -23.3827 13.5 396.0) (float-vector -27.0 3.486100e-14 396.0) (float-vector -27.0 3.486100e-14 424.0)))
         (instance face :init :vertices (list (float-vector -13.5 23.3827 424.0) (float-vector -13.5 23.3827 396.0) (float-vector -23.3827 13.5 396.0) (float-vector -23.3827 13.5 424.0)))
         (instance face :init :vertices (list (float-vector 2.242651e-14 27.0 424.0) (float-vector 2.242651e-14 27.0 396.0) (float-vector -13.5 23.3827 396.0) (float-vector -13.5 23.3827 424.0)))
         (instance face :init :vertices (list (float-vector 13.5 23.3827 424.0) (float-vector 13.5 23.3827 396.0) (float-vector 2.242651e-14 27.0 396.0) (float-vector 2.242651e-14 27.0 424.0)))
         (instance face :init :vertices (list (float-vector 23.3827 13.5 424.0) (float-vector 23.3827 13.5 396.0) (float-vector 13.5 23.3827 396.0) (float-vector 13.5 23.3827 424.0)))
         (instance face :init :vertices (list (float-vector 27.0 -9.992007e-15 424.0) (float-vector 27.0 -9.992007e-15 396.0) (float-vector 23.3827 13.5 396.0) (float-vector 23.3827 13.5 424.0)))
         (instance face :init :vertices (list (float-vector 23.3827 -13.5 424.0) (float-vector 23.3827 -13.5 396.0) (float-vector 27.0 -9.992007e-15 396.0) (float-vector 27.0 -9.992007e-15 424.0)))
         (instance face :init :vertices (list (float-vector 13.5 -23.3827 424.0) (float-vector 13.5 -23.3827 396.0) (float-vector 23.3827 -13.5 396.0) (float-vector 23.3827 -13.5 424.0)))
         (instance face :init :vertices (list (float-vector 5.995204e-15 -27.0 396.0) (float-vector 13.5 -23.3827 396.0) (float-vector 13.5 -23.3827 424.0) (float-vector 5.995204e-15 -27.0 424.0)))
         (instance face :init :vertices (list (float-vector 1.443290e-14 -65.0 384.0) (float-vector 1.443290e-14 -65.0 352.0) (float-vector 73.5526 -45.2917 352.0) (float-vector 73.5526 -45.2917 341.0) (float-vector 85.0321 -42.2157 341.0) (float-vector 51.2639 -51.2639 377.722) (float-vector 39.4216 -54.437 384.0) (float-vector 34.366 -55.7917 384.0) (float-vector 34.366 -55.7917 381.0) (float-vector 13.0622 -61.5 381.0) (float-vector 13.0622 -61.5 384.0)))
         (instance face :init :vertices (list (float-vector 1.443290e-14 -65.0 384.0) (float-vector -13.0622 -61.5 384.0) (float-vector -13.0622 -61.5 381.0) (float-vector -34.366 -55.7917 381.0) (float-vector -34.366 -55.7917 384.0) (float-vector -39.4216 -54.437 384.0) (float-vector -51.2639 -51.2639 377.722) (float-vector -85.0321 -42.2157 341.0) (float-vector -73.5526 -45.2917 341.0) (float-vector -73.5526 -45.2917 352.0) (float-vector 1.443290e-14 -65.0 352.0)))
         (instance face :init :vertices (list (float-vector -39.4216 -54.437 384.0) (float-vector -48.4227 -48.4227 384.0) (float-vector -51.2639 -51.2639 377.722)))
         (instance face :init :vertices (list (float-vector -48.4227 -48.4227 384.0) (float-vector -63.2673 -26.2062 384.0) (float-vector -88.6924 -36.7376 341.0) (float-vector -85.0321 -42.2157 341.0) (float-vector -51.2639 -51.2639 377.722)))
         (instance face :init :vertices (list (float-vector -63.2673 -26.2062 384.0) (float-vector -68.48 6.055985e-13 384.0) (float-vector -96.0 8.489699e-13 341.0) (float-vector -88.6924 -36.7376 341.0)))
         (instance face :init :vertices (list (float-vector -68.48 6.055985e-13 384.0) (float-vector -63.2673 26.2062 384.0) (float-vector -88.6924 36.7376 341.0) (float-vector -96.0 8.489699e-13 341.0)))
         (instance face :init :vertices (list (float-vector -63.2673 26.2062 384.0) (float-vector -48.4227 48.4227 384.0) (float-vector -51.2639 51.2639 377.722) (float-vector -85.0321 42.2157 341.0) (float-vector -88.6924 36.7376 341.0)))
         (instance face :init :vertices (list (float-vector -48.4227 48.4227 384.0) (float-vector -39.4216 54.437 384.0) (float-vector -51.2639 51.2639 377.722)))
         (instance face :init :vertices (list (float-vector 48.4227 48.4227 384.0) (float-vector 51.2639 51.2639 377.722) (float-vector 39.4216 54.437 384.0)))
         (instance face :init :vertices (list (float-vector 48.4227 48.4227 384.0) (float-vector 63.2673 26.2062 384.0) (float-vector 88.6924 36.7376 341.0) (float-vector 85.0321 42.2157 341.0) (float-vector 51.2639 51.2639 377.722)))
         (instance face :init :vertices (list (float-vector 63.2673 26.2062 384.0) (float-vector 68.48 -4.981003e-14 384.0) (float-vector 96.0 -6.982715e-14 341.0) (float-vector 88.6924 36.7376 341.0)))
         (instance face :init :vertices (list (float-vector 68.48 -4.981003e-14 384.0) (float-vector 63.2673 -26.2062 384.0) (float-vector 88.6924 -36.7376 341.0) (float-vector 96.0 -6.982715e-14 341.0)))
         (instance face :init :vertices (list (float-vector 88.6924 -36.7376 341.0) (float-vector 85.0321 -42.2157 341.0) (float-vector 73.5526 -45.2917 341.0) (float-vector 75.3442 -43.5 341.0) (float-vector 87.0 -2.331468e-14 341.0) (float-vector 75.3442 43.5 341.0) (float-vector 73.5526 45.2917 341.0) (float-vector 85.0321 42.2157 341.0) (float-vector 88.6924 36.7376 341.0) (float-vector 96.0 -6.982715e-14 341.0)))
         (instance face :init :vertices (list (float-vector -85.0321 42.2157 341.0) (float-vector -73.5526 45.2917 341.0) (float-vector -75.3442 43.5 341.0) (float-vector -87.0 1.014744e-13 341.0) (float-vector -75.3442 -43.5 341.0) (float-vector -73.5526 -45.2917 341.0) (float-vector -85.0321 -42.2157 341.0) (float-vector -88.6924 -36.7376 341.0) (float-vector -96.0 8.489699e-13 341.0) (float-vector -88.6924 36.7376 341.0)))
         (instance face :init :vertices (list (float-vector 63.2673 -26.2062 384.0) (float-vector 48.4227 -48.4227 384.0) (float-vector 51.2639 -51.2639 377.722) (float-vector 85.0321 -42.2157 341.0) (float-vector 88.6924 -36.7376 341.0)))
         (instance face :init :vertices (list (float-vector 48.4227 -48.4227 384.0) (float-vector 39.4216 -54.437 384.0) (float-vector 51.2639 -51.2639 377.722)))
         (instance face :init :vertices (list (float-vector 13.0622 -61.5 384.0) (float-vector -13.0622 -61.5 384.0) (float-vector 1.443290e-14 -65.0 384.0)))
         (instance face :init :vertices (list (float-vector -34.366 -55.7917 384.0) (float-vector -57.1577 -33.0 384.0) (float-vector -61.5 -16.7942 384.0) (float-vector -61.5 16.7942 384.0) (float-vector -57.1577 33.0 384.0) (float-vector -34.366 55.7917 384.0) (float-vector -39.4216 54.437 384.0) (float-vector -48.4227 48.4227 384.0) (float-vector -63.2673 26.2062 384.0) (float-vector -68.48 6.055985e-13 384.0) (float-vector -63.2673 -26.2062 384.0) (float-vector -48.4227 -48.4227 384.0) (float-vector -39.4216 -54.437 384.0)))
         (instance face :init :vertices (list (float-vector 39.4216 54.437 384.0) (float-vector 34.366 55.7917 384.0) (float-vector 57.1577 33.0 384.0) (float-vector 61.5 16.7942 384.0) (float-vector 61.5 -16.7942 384.0) (float-vector 57.1577 -33.0 384.0) (float-vector 34.366 -55.7917 384.0) (float-vector 39.4216 -54.437 384.0) (float-vector 48.4227 -48.4227 384.0) (float-vector 63.2673 -26.2062 384.0) (float-vector 68.48 -4.981003e-14 384.0) (float-vector 63.2673 26.2062 384.0) (float-vector 48.4227 48.4227 384.0)))
         (instance face :init :vertices (list (float-vector -34.366 55.7917 384.0) (float-vector -34.366 55.7917 381.0) (float-vector -13.0622 61.5 381.0) (float-vector -13.0622 61.5 384.0) (float-vector 1.987299e-13 65.0 384.0) (float-vector 1.987299e-13 65.0 352.0) (float-vector -73.5526 45.2917 352.0) (float-vector -73.5526 45.2917 341.0) (float-vector -85.0321 42.2157 341.0) (float-vector -51.2639 51.2639 377.722) (float-vector -39.4216 54.437 384.0)))
         (instance face :init :vertices (list (float-vector -13.0622 61.5 384.0) (float-vector 13.0622 61.5 384.0) (float-vector 1.987299e-13 65.0 384.0)))
         (instance face :init :vertices (list (float-vector 13.0622 61.5 384.0) (float-vector 13.0622 61.5 381.0) (float-vector 34.366 55.7917 381.0) (float-vector 34.366 55.7917 384.0) (float-vector 39.4216 54.437 384.0) (float-vector 51.2639 51.2639 377.722) (float-vector 85.0321 42.2157 341.0) (float-vector 73.5526 45.2917 341.0) (float-vector 73.5526 45.2917 352.0) (float-vector 1.987299e-13 65.0 352.0) (float-vector 1.987299e-13 65.0 384.0)))
         (instance face :init :vertices (list (float-vector 1.931788e-14 -87.0 340.0) (float-vector -43.5 -75.3442 340.0) (float-vector -75.3442 -43.5 340.0) (float-vector -87.0 1.014744e-13 340.0) (float-vector -75.3442 43.5 340.0) (float-vector -43.5 75.3442 340.0) (float-vector 5.884182e-14 87.0 340.0) (float-vector 43.5 75.3442 340.0) (float-vector 75.3442 43.5 340.0) (float-vector 87.0 -2.331468e-14 340.0) (float-vector 75.3442 -43.5 340.0) (float-vector 43.5 -75.3442 340.0)))
         (instance face :init :vertices (list (float-vector 1.931788e-14 -87.0 340.0) (float-vector 1.931788e-14 -87.0 352.0) (float-vector -43.5 -75.3442 352.0) (float-vector -43.5 -75.3442 340.0)))
         (instance face :init :vertices (list (float-vector -73.5526 -45.2917 352.0) (float-vector -43.5 -75.3442 352.0) (float-vector 1.931788e-14 -87.0 352.0) (float-vector 43.5 -75.3442 352.0) (float-vector 73.5526 -45.2917 352.0) (float-vector 1.443290e-14 -65.0 352.0)))
         (instance face :init :vertices (list (float-vector 73.5526 45.2917 352.0) (float-vector 43.5 75.3442 352.0) (float-vector 5.884182e-14 87.0 352.0) (float-vector -43.5 75.3442 352.0) (float-vector -73.5526 45.2917 352.0) (float-vector 1.987299e-13 65.0 352.0)))
         (instance face :init :vertices (list (float-vector -75.3442 -43.5 341.0) (float-vector -75.3442 -43.5 340.0) (float-vector -43.5 -75.3442 340.0) (float-vector -43.5 -75.3442 352.0) (float-vector -73.5526 -45.2917 352.0) (float-vector -73.5526 -45.2917 341.0)))
         (instance face :init :vertices (list (float-vector -87.0 1.014744e-13 341.0) (float-vector -87.0 1.014744e-13 340.0) (float-vector -75.3442 -43.5 340.0) (float-vector -75.3442 -43.5 341.0)))
         (instance face :init :vertices (list (float-vector -75.3442 43.5 341.0) (float-vector -75.3442 43.5 340.0) (float-vector -87.0 1.014744e-13 340.0) (float-vector -87.0 1.014744e-13 341.0)))
         (instance face :init :vertices (list (float-vector -43.5 75.3442 352.0) (float-vector -43.5 75.3442 340.0) (float-vector -75.3442 43.5 340.0) (float-vector -75.3442 43.5 341.0) (float-vector -73.5526 45.2917 341.0) (float-vector -73.5526 45.2917 352.0)))
         (instance face :init :vertices (list (float-vector 5.884182e-14 87.0 352.0) (float-vector 5.884182e-14 87.0 340.0) (float-vector -43.5 75.3442 340.0) (float-vector -43.5 75.3442 352.0)))
         (instance face :init :vertices (list (float-vector 43.5 75.3442 352.0) (float-vector 43.5 75.3442 340.0) (float-vector 5.884182e-14 87.0 340.0) (float-vector 5.884182e-14 87.0 352.0)))
         (instance face :init :vertices (list (float-vector 75.3442 43.5 341.0) (float-vector 75.3442 43.5 340.0) (float-vector 43.5 75.3442 340.0) (float-vector 43.5 75.3442 352.0) (float-vector 73.5526 45.2917 352.0) (float-vector 73.5526 45.2917 341.0)))
         (instance face :init :vertices (list (float-vector 87.0 -2.331468e-14 341.0) (float-vector 87.0 -2.331468e-14 340.0) (float-vector 75.3442 43.5 340.0) (float-vector 75.3442 43.5 341.0)))
         (instance face :init :vertices (list (float-vector 75.3442 -43.5 341.0) (float-vector 75.3442 -43.5 340.0) (float-vector 87.0 -2.331468e-14 340.0) (float-vector 87.0 -2.331468e-14 341.0)))
         (instance face :init :vertices (list (float-vector 43.5 -75.3442 352.0) (float-vector 43.5 -75.3442 340.0) (float-vector 75.3442 -43.5 340.0) (float-vector 75.3442 -43.5 341.0) (float-vector 73.5526 -45.2917 341.0) (float-vector 73.5526 -45.2917 352.0)))
         (instance face :init :vertices (list (float-vector 43.5 -75.3442 340.0) (float-vector 43.5 -75.3442 352.0) (float-vector 1.931788e-14 -87.0 352.0) (float-vector 1.931788e-14 -87.0 340.0)))
         (instance face :init :vertices (list (float-vector 61.5 16.7942 384.0) (float-vector 61.5 16.7942 396.0) (float-vector 61.5 -16.7942 396.0) (float-vector 61.5 -16.7942 384.0)))
         (instance face :init :vertices (list (float-vector 61.5 16.7942 396.0) (float-vector 57.1577 33.0 396.0) (float-vector 33.0 57.1577 396.0) (float-vector 16.7942 61.5 396.0) (float-vector -16.7942 61.5 396.0) (float-vector -33.0 57.1577 396.0) (float-vector -57.1577 33.0 396.0) (float-vector -61.5 16.7942 396.0) (float-vector -61.5 -16.7942 396.0) (float-vector -57.1577 -33.0 396.0) (float-vector -33.0 -57.1577 396.0) (float-vector -16.7942 -61.5 396.0) (float-vector 16.7942 -61.5 396.0) (float-vector 33.0 -57.1577 396.0) (float-vector 57.1577 -33.0 396.0) (float-vector 61.5 -16.7942 396.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 13.5 -23.3827 396.0) (float-vector 5.995204e-15 -27.0 396.0) (float-vector -13.5 -23.3827 396.0) (float-vector -23.3827 -13.5 396.0) (float-vector -27.0 3.486100e-14 396.0) (float-vector -23.3827 13.5 396.0) (float-vector -13.5 23.3827 396.0) (float-vector 2.242651e-14 27.0 396.0) (float-vector 13.5 23.3827 396.0) (float-vector 23.3827 13.5 396.0) (float-vector 27.0 -9.992007e-15 396.0) (float-vector 23.3827 -13.5 396.0)))
))
         (instance face :init :vertices (list (float-vector 13.0622 -61.5 381.0) (float-vector 16.7942 -61.5 381.0) (float-vector 16.7942 -61.5 396.0) (float-vector -16.7942 -61.5 396.0) (float-vector -16.7942 -61.5 381.0) (float-vector -13.0622 -61.5 381.0) (float-vector -13.0622 -61.5 384.0) (float-vector 13.0622 -61.5 384.0)))
         (instance face :init :vertices (list (float-vector -61.5 -16.7942 384.0) (float-vector -61.5 -16.7942 396.0) (float-vector -61.5 16.7942 396.0) (float-vector -61.5 16.7942 384.0)))
         (instance face :init :vertices (list (float-vector -13.0622 61.5 381.0) (float-vector -16.7942 61.5 381.0) (float-vector -16.7942 61.5 396.0) (float-vector 16.7942 61.5 396.0) (float-vector 16.7942 61.5 381.0) (float-vector 13.0622 61.5 381.0) (float-vector 13.0622 61.5 384.0) (float-vector -13.0622 61.5 384.0)))
         (instance face :init :vertices (list (float-vector 34.366 -55.7917 381.0) (float-vector 33.0 -57.1577 381.0) (float-vector 16.7942 -61.5 381.0) (float-vector 13.0622 -61.5 381.0)))
         (instance face :init :vertices (list (float-vector 16.7942 61.5 381.0) (float-vector 33.0 57.1577 381.0) (float-vector 34.366 55.7917 381.0) (float-vector 13.0622 61.5 381.0)))
         (instance face :init :vertices (list (float-vector -34.366 55.7917 381.0) (float-vector -33.0 57.1577 381.0) (float-vector -16.7942 61.5 381.0) (float-vector -13.0622 61.5 381.0)))
         (instance face :init :vertices (list (float-vector -16.7942 -61.5 381.0) (float-vector -33.0 -57.1577 381.0) (float-vector -34.366 -55.7917 381.0) (float-vector -13.0622 -61.5 381.0)))
         (instance face :init :vertices (list (float-vector -33.0 -57.1577 396.0) (float-vector -33.0 -57.1577 381.0) (float-vector -16.7942 -61.5 381.0) (float-vector -16.7942 -61.5 396.0)))
         (instance face :init :vertices (list (float-vector -57.1577 -33.0 396.0) (float-vector -57.1577 -33.0 384.0) (float-vector -34.366 -55.7917 384.0) (float-vector -34.366 -55.7917 381.0) (float-vector -33.0 -57.1577 381.0) (float-vector -33.0 -57.1577 396.0)))
         (instance face :init :vertices (list (float-vector -57.1577 -33.0 384.0) (float-vector -57.1577 -33.0 396.0) (float-vector -61.5 -16.7942 396.0) (float-vector -61.5 -16.7942 384.0)))
         (instance face :init :vertices (list (float-vector -57.1577 33.0 396.0) (float-vector -57.1577 33.0 384.0) (float-vector -61.5 16.7942 384.0) (float-vector -61.5 16.7942 396.0)))
         (instance face :init :vertices (list (float-vector -33.0 57.1577 396.0) (float-vector -33.0 57.1577 381.0) (float-vector -34.366 55.7917 381.0) (float-vector -34.366 55.7917 384.0) (float-vector -57.1577 33.0 384.0) (float-vector -57.1577 33.0 396.0)))
         (instance face :init :vertices (list (float-vector -33.0 57.1577 381.0) (float-vector -33.0 57.1577 396.0) (float-vector -16.7942 61.5 396.0) (float-vector -16.7942 61.5 381.0)))
         (instance face :init :vertices (list (float-vector 33.0 57.1577 396.0) (float-vector 33.0 57.1577 381.0) (float-vector 16.7942 61.5 381.0) (float-vector 16.7942 61.5 396.0)))
         (instance face :init :vertices (list (float-vector 57.1577 33.0 396.0) (float-vector 57.1577 33.0 384.0) (float-vector 34.366 55.7917 384.0) (float-vector 34.366 55.7917 381.0) (float-vector 33.0 57.1577 381.0) (float-vector 33.0 57.1577 396.0)))
         (instance face :init :vertices (list (float-vector 57.1577 33.0 384.0) (float-vector 57.1577 33.0 396.0) (float-vector 61.5 16.7942 396.0) (float-vector 61.5 16.7942 384.0)))
         (instance face :init :vertices (list (float-vector 57.1577 -33.0 396.0) (float-vector 57.1577 -33.0 384.0) (float-vector 61.5 -16.7942 384.0) (float-vector 61.5 -16.7942 396.0)))
         (instance face :init :vertices (list (float-vector 33.0 -57.1577 396.0) (float-vector 33.0 -57.1577 381.0) (float-vector 34.366 -55.7917 381.0) (float-vector 34.366 -55.7917 384.0) (float-vector 57.1577 -33.0 384.0) (float-vector 57.1577 -33.0 396.0)))
         (instance face :init :vertices (list (float-vector 33.0 -57.1577 381.0) (float-vector 33.0 -57.1577 396.0) (float-vector 16.7942 -61.5 396.0) (float-vector 16.7942 -61.5 381.0)))
         (instance face :init :vertices (list (float-vector 9.992007e-16 -4.5 464.0) (float-vector 9.992007e-16 -4.5 424.0) (float-vector 2.25 -3.89711 424.0) (float-vector 2.25 -3.89711 464.0)))
         (instance face :init :vertices (list (float-vector 3.89711 -2.25 424.0) (float-vector 3.89711 -2.25 464.0) (float-vector 2.25 -3.89711 464.0) (float-vector 2.25 -3.89711 424.0)))
         (instance face :init :vertices (list (float-vector 4.5 -1.665335e-15 424.0) (float-vector 4.5 -1.665335e-15 464.0) (float-vector 3.89711 -2.25 464.0) (float-vector 3.89711 -2.25 424.0)))
         (instance face :init :vertices (list (float-vector 3.89711 2.25 424.0) (float-vector 3.89711 2.25 464.0) (float-vector 4.5 -1.665335e-15 464.0) (float-vector 4.5 -1.665335e-15 424.0)))
         (instance face :init :vertices (list (float-vector 2.25 3.89711 424.0) (float-vector 2.25 3.89711 464.0) (float-vector 3.89711 2.25 464.0) (float-vector 3.89711 2.25 424.0)))
         (instance face :init :vertices (list (float-vector 3.885781e-15 4.5 424.0) (float-vector 3.885781e-15 4.5 464.0) (float-vector 2.25 3.89711 464.0) (float-vector 2.25 3.89711 424.0)))
         (instance face :init :vertices (list (float-vector -2.25 3.89711 424.0) (float-vector -2.25 3.89711 464.0) (float-vector 3.885781e-15 4.5 464.0) (float-vector 3.885781e-15 4.5 424.0)))
         (instance face :init :vertices (list (float-vector -3.89711 2.25 424.0) (float-vector -3.89711 2.25 464.0) (float-vector -2.25 3.89711 464.0) (float-vector -2.25 3.89711 424.0)))
         (instance face :init :vertices (list (float-vector -4.5 6.550316e-15 424.0) (float-vector -4.5 6.550316e-15 464.0) (float-vector -3.89711 2.25 464.0) (float-vector -3.89711 2.25 424.0)))
         (instance face :init :vertices (list (float-vector -3.89711 -2.25 424.0) (float-vector -3.89711 -2.25 464.0) (float-vector -4.5 6.550316e-15 464.0) (float-vector -4.5 6.550316e-15 424.0)))
         (instance face :init :vertices (list (float-vector -2.25 -3.89711 424.0) (float-vector -2.25 -3.89711 464.0) (float-vector -3.89711 -2.25 464.0) (float-vector -3.89711 -2.25 424.0)))
         (instance face :init :vertices (list (float-vector -2.25 -3.89711 464.0) (float-vector 9.992007e-16 -4.5 464.0) (float-vector 2.25 -3.89711 464.0) (float-vector 3.89711 -2.25 464.0) (float-vector 4.5 -1.665335e-15 464.0) (float-vector 3.89711 2.25 464.0) (float-vector 2.25 3.89711 464.0) (float-vector 3.885781e-15 4.5 464.0) (float-vector -2.25 3.89711 464.0) (float-vector -3.89711 2.25 464.0) (float-vector -4.5 6.550316e-15 464.0) (float-vector -3.89711 -2.25 464.0)))
         (instance face :init :vertices (list (float-vector 9.992007e-16 -4.5 464.0) (float-vector -2.25 -3.89711 464.0) (float-vector -2.25 -3.89711 424.0) (float-vector 9.992007e-16 -4.5 424.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -112.0 -102.0 290.0) (float-vector -112.0 -72.0 290.0) (float-vector -168.0 -72.0 290.0) (float-vector -168.0 -102.0 290.0)))
         (instance face :init :vertices (list (float-vector -112.0 -72.0 190.0) (float-vector -112.0 -102.0 190.0) (float-vector -168.0 -102.0 190.0) (float-vector -168.0 -72.0 190.0)))
         (instance face :init :vertices (list (float-vector -112.0 -102.0 290.0) (float-vector -112.0 -102.0 190.0) (float-vector -112.0 -72.0 190.0) (float-vector -112.0 -72.0 290.0)))
         (instance face :init :vertices (list (float-vector -168.0 -102.0 290.0) (float-vector -168.0 -102.0 190.0) (float-vector -112.0 -102.0 190.0) (float-vector -112.0 -102.0 290.0)))
         (instance face :init :vertices (list (float-vector -168.0 -72.0 290.0) (float-vector -168.0 -72.0 190.0) (float-vector -168.0 -102.0 190.0) (float-vector -168.0 -102.0 290.0)))
         (instance face :init :vertices (list (float-vector -112.0 -72.0 290.0) (float-vector -112.0 -72.0 190.0) (float-vector -168.0 -72.0 190.0) (float-vector -168.0 -72.0 290.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color (list))
     (send (elt bc 5) :set-color :gray40)
     (send (elt bc 6) :set-color :gray90)
     (send (elt bc 7) :set-color :gray40)
     (send (elt bc 8) :set-color :gray40)
     (send (elt bc 9) :set-color :gray40)
     (send (elt bc 10) :set-color :white)
     (send (elt bc 11) :set-color :white)
     (send (elt bc 12) :set-color :gray40)
     (send (elt bc 13) :set-color :gray40)
     (send (elt bc 14) :set-color :gray40)
     (send (elt bc 15) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 16160 :centroid (float-vector 14.3139 0.627817 91.4833) :inertia-tensor #2f((3.018883e+08 3.303746e+06 -4.076342e+07) (3.303746e+06 4.498569e+08 -1.334999e+06) (-4.076342e+07 -1.334999e+06 2.387470e+08))))

     ;; definition of :rb-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 4.263256e-14 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 5.684342e-14 120.0) (float-vector -69.282 -40.0 120.0) (float-vector -40.0 -69.282 120.0) (float-vector -1.278977e-13 -80.0 120.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 69.282 -40.0 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 -69.282 120.0) (float-vector 40.0 -69.282 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -1.278977e-13 -80.0 120.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 -69.282 120.0) (float-vector -40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -1.278977e-13 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 -40.0 120.0) (float-vector -69.282 -40.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 5.684342e-14 120.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -80.0 5.684342e-14 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 80.0 120.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 4.263256e-14 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rb-crotch-y :weight 2000 :centroid (float-vector 1.131816e-14 2.637535e-14 60.0) :inertia-tensor #2f((5.600000e+06 0.0 0.0) (0.0 5.600000e+06 0.0) (0.0 0.0 6.400000e+06))))

     ;; definition of :rb-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector 37.0 162.5 35.0) (float-vector 37.0 162.5 -35.0) (float-vector -37.0 162.5 -35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector -31.9904 162.5 34.0) (float-vector -31.9904 162.5 -34.0) (float-vector 31.9904 162.5 -34.0)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -8.526513e-14 50.0 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0) (float-vector 37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 35.0) (float-vector -37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 25.0 -43.0) (float-vector 43.3013 25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 2.842171e-14 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3013 -25.0 -43.0) (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -43.3013 25.0 -43.0) (float-vector -25.0 43.3013 -43.0) (float-vector -8.526513e-14 50.0 -43.0) (float-vector 25.0 43.3013 -43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 35.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 25.0 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 -43.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -8.526513e-14 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 -43.0) (float-vector -25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -8.526513e-14 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 25.0 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 -25.0 -43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -50.0 -5.684342e-14 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -43.3013 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -50.0 -43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 2.842171e-14 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 0.0 -43.0) (float-vector 50.0 0.0 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -31.9904 162.5 -34.0)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -17.0 184.445 -34.0) (float-vector -29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector -17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 189.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector 17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 29.4449 172.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 -34.0) (float-vector 31.9904 162.5 -34.0) (float-vector -31.9904 162.5 -34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 34.0) (float-vector 31.9904 162.5 34.0) (float-vector 31.9904 162.5 -34.0) (float-vector 29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -31.9904 162.5 34.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rb-crotch-r :weight 1000 :centroid (float-vector -2.131628e-14 57.9866 -2.654390e-15) :inertia-tensor #2f((9.135302e+06 8.240388e-10 8.240388e-10) (8.240388e-10 5.820859e+06 -3.362443e+06) (8.240388e-10 -3.362443e+06 4.227109e+06))))

     ;; definition of :rb-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector 20.0 215.0 20.0) (float-vector 20.0 215.0 -20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector -20.0 212.0 20.0) (float-vector 20.0 212.0 20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 20.0) (float-vector 20.0 210.0 20.0) (float-vector -20.0 210.0 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 215.0 -20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0) (float-vector -20.0 212.0 -20.0) (float-vector -20.0 215.0 -20.0) (float-vector 20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 210.0 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 16.0 27.7128 -20.0) (float-vector -5.684342e-14 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0) (float-vector -20.0 212.0 20.0) (float-vector -20.0 215.0 20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 20.0) (float-vector -20.0 210.0 -20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 2.842171e-14) (float-vector 25.9808 212.0 -15.0) (float-vector 15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9808 212.0 -15.0) (float-vector -30.0 212.0 5.684342e-14) (float-vector -25.9808 212.0 15.0) (float-vector -15.0 212.0 25.9808) (float-vector 5.684342e-14 212.0 30.0) (float-vector 15.0 212.0 25.9808) (float-vector 25.9808 212.0 15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 20.0) (float-vector -20.0 212.0 -20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 212.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 2.842171e-14) (float-vector 30.0 210.0 2.842171e-14) (float-vector 25.9808 210.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 2.842171e-14) (float-vector 25.9808 210.0 15.0) (float-vector 15.0 210.0 25.9808) (float-vector 5.684342e-14 210.0 30.0) (float-vector -15.0 210.0 25.9808) (float-vector -25.9808 210.0 15.0) (float-vector -30.0 210.0 5.684342e-14) (float-vector -25.9808 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector 0.0 210.0 -30.0) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9808 210.0 -15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0) (float-vector -20.0 210.0 20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 210.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 -30.0) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 0.0 210.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 -15.0) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 5.684342e-14) (float-vector -30.0 212.0 5.684342e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 15.0) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 5.684342e-14) (float-vector -30.0 210.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9808) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 210.0 15.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 210.0 30.0) (float-vector 5.684342e-14 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9808) (float-vector 15.0 212.0 25.9808) (float-vector 5.684342e-14 212.0 30.0) (float-vector 5.684342e-14 210.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 210.0 15.0) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 210.0 15.0) (float-vector 30.0 210.0 2.842171e-14) (float-vector 30.0 212.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector 32.0 0.0 -29.5) (float-vector 32.0 0.0 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector 0.0 -32.0 29.5) (float-vector 0.0 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 0.0 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 0.0 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 0.0 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 -20.0) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -5.684342e-14 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 -20.0) (float-vector 16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -5.684342e-14 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 16.0 27.7128 -29.5) (float-vector 16.0 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7128 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 0.0 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector 16.0 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 29.5) (float-vector 32.0 0.0 29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 0.0 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector 0.0 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 30.0 212.0 2.842171e-14) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 5.684342e-14 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 5.684342e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 2.842171e-14) (float-vector 25.9808 250.0 -15.0) (float-vector 15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9808 250.0 -15.0) (float-vector -30.0 250.0 5.684342e-14) (float-vector -25.9808 250.0 15.0) (float-vector -15.0 250.0 25.9808) (float-vector 5.684342e-14 250.0 30.0) (float-vector 15.0 250.0 25.9808) (float-vector 25.9808 250.0 15.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 250.0 -15.0) (float-vector 30.0 250.0 2.842171e-14) (float-vector 30.0 212.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9808) (float-vector 25.9808 250.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0) (float-vector 0.0 250.0 -30.0) (float-vector 15.0 250.0 -25.9808) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector 0.0 212.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 250.0 -15.0) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 5.684342e-14) (float-vector -30.0 250.0 5.684342e-14) (float-vector -25.9808 250.0 -15.0) (float-vector -25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 250.0 15.0) (float-vector -30.0 250.0 5.684342e-14) (float-vector -30.0 212.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9808) (float-vector -15.0 250.0 25.9808) (float-vector -25.9808 250.0 15.0) (float-vector -25.9808 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 212.0 30.0) (float-vector 5.684342e-14 250.0 30.0) (float-vector -15.0 250.0 25.9808) (float-vector -15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9808) (float-vector 15.0 250.0 25.9808) (float-vector 5.684342e-14 250.0 30.0) (float-vector 5.684342e-14 212.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 250.0 15.0) (float-vector 15.0 250.0 25.9808) (float-vector 15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 2.842171e-14) (float-vector 30.0 250.0 2.842171e-14) (float-vector 25.9808 250.0 15.0) (float-vector 25.9808 212.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rb-knee-r :weight 600 :centroid (float-vector 1.136868e-13 102.198 -2.388153e-14) :inertia-tensor #2f((1.192042e+07 -4.344969e-09 -4.344969e-09) (-4.344969e-09 5.049680e+06 -3.905877e+06) (-4.344969e-09 -3.905877e+06 7.049072e+06))))

     ;; definition of :rf-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 4.263256e-14 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 5.684342e-14 120.0) (float-vector -69.282 -40.0 120.0) (float-vector -40.0 -69.282 120.0) (float-vector -1.278977e-13 -80.0 120.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 69.282 -40.0 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 -69.282 120.0) (float-vector 40.0 -69.282 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -1.278977e-13 -80.0 120.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 -69.282 120.0) (float-vector -40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -1.278977e-13 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 -40.0 120.0) (float-vector -69.282 -40.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 5.684342e-14 120.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -80.0 5.684342e-14 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 80.0 120.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 4.263256e-14 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rf-crotch-y :weight 2000 :centroid (float-vector 1.131816e-14 2.637535e-14 60.0) :inertia-tensor #2f((5.600000e+06 0.0 0.0) (0.0 5.600000e+06 0.0) (0.0 0.0 6.400000e+06))))

     ;; definition of :rf-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector 37.0 162.5 35.0) (float-vector 37.0 162.5 -35.0) (float-vector -37.0 162.5 -35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector -31.9904 162.5 34.0) (float-vector -31.9904 162.5 -34.0) (float-vector 31.9904 162.5 -34.0)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -8.526513e-14 50.0 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0) (float-vector 37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 35.0) (float-vector -37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 25.0 -43.0) (float-vector 43.3013 25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 2.842171e-14 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3013 -25.0 -43.0) (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -43.3013 25.0 -43.0) (float-vector -25.0 43.3013 -43.0) (float-vector -8.526513e-14 50.0 -43.0) (float-vector 25.0 43.3013 -43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 35.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 25.0 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 -43.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -8.526513e-14 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 -43.0) (float-vector -25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -8.526513e-14 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 25.0 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 -25.0 -43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -50.0 -5.684342e-14 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -43.3013 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -50.0 -43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 2.842171e-14 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 0.0 -43.0) (float-vector 50.0 0.0 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -31.9904 162.5 -34.0)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -17.0 184.445 -34.0) (float-vector -29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector -17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 189.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector 17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 29.4449 172.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 -34.0) (float-vector 31.9904 162.5 -34.0) (float-vector -31.9904 162.5 -34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 34.0) (float-vector 31.9904 162.5 34.0) (float-vector 31.9904 162.5 -34.0) (float-vector 29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -31.9904 162.5 34.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rf-crotch-r :weight 1000 :centroid (float-vector -2.131628e-14 57.9866 -2.654390e-15) :inertia-tensor #2f((9.135302e+06 8.240388e-10 8.240388e-10) (8.240388e-10 5.820859e+06 -3.362443e+06) (8.240388e-10 -3.362443e+06 4.227109e+06))))

     ;; definition of :rf-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector 20.0 215.0 20.0) (float-vector 20.0 215.0 -20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector -20.0 212.0 20.0) (float-vector 20.0 212.0 20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 20.0) (float-vector 20.0 210.0 20.0) (float-vector -20.0 210.0 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 215.0 -20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0) (float-vector -20.0 212.0 -20.0) (float-vector -20.0 215.0 -20.0) (float-vector 20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 210.0 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 16.0 27.7128 -20.0) (float-vector -5.684342e-14 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0) (float-vector -20.0 212.0 20.0) (float-vector -20.0 215.0 20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 20.0) (float-vector -20.0 210.0 -20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 2.842171e-14) (float-vector 25.9808 212.0 -15.0) (float-vector 15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9808 212.0 -15.0) (float-vector -30.0 212.0 5.684342e-14) (float-vector -25.9808 212.0 15.0) (float-vector -15.0 212.0 25.9808) (float-vector 5.684342e-14 212.0 30.0) (float-vector 15.0 212.0 25.9808) (float-vector 25.9808 212.0 15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 20.0) (float-vector -20.0 212.0 -20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 212.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 2.842171e-14) (float-vector 30.0 210.0 2.842171e-14) (float-vector 25.9808 210.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 2.842171e-14) (float-vector 25.9808 210.0 15.0) (float-vector 15.0 210.0 25.9808) (float-vector 5.684342e-14 210.0 30.0) (float-vector -15.0 210.0 25.9808) (float-vector -25.9808 210.0 15.0) (float-vector -30.0 210.0 5.684342e-14) (float-vector -25.9808 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector 0.0 210.0 -30.0) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9808 210.0 -15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0) (float-vector -20.0 210.0 20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 210.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 -30.0) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 0.0 210.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 -15.0) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 5.684342e-14) (float-vector -30.0 212.0 5.684342e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 15.0) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 5.684342e-14) (float-vector -30.0 210.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9808) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 210.0 15.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 210.0 30.0) (float-vector 5.684342e-14 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9808) (float-vector 15.0 212.0 25.9808) (float-vector 5.684342e-14 212.0 30.0) (float-vector 5.684342e-14 210.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 210.0 15.0) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 210.0 15.0) (float-vector 30.0 210.0 2.842171e-14) (float-vector 30.0 212.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector 32.0 0.0 -29.5) (float-vector 32.0 0.0 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector 0.0 -32.0 29.5) (float-vector 0.0 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 0.0 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 0.0 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 0.0 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 -20.0) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -5.684342e-14 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 -20.0) (float-vector 16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -5.684342e-14 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 16.0 27.7128 -29.5) (float-vector 16.0 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7128 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 0.0 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector 16.0 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 29.5) (float-vector 32.0 0.0 29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 0.0 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector 0.0 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 30.0 212.0 2.842171e-14) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 5.684342e-14 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 5.684342e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 2.842171e-14) (float-vector 25.9808 250.0 -15.0) (float-vector 15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9808 250.0 -15.0) (float-vector -30.0 250.0 5.684342e-14) (float-vector -25.9808 250.0 15.0) (float-vector -15.0 250.0 25.9808) (float-vector 5.684342e-14 250.0 30.0) (float-vector 15.0 250.0 25.9808) (float-vector 25.9808 250.0 15.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 250.0 -15.0) (float-vector 30.0 250.0 2.842171e-14) (float-vector 30.0 212.0 2.842171e-14)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9808) (float-vector 25.9808 250.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0) (float-vector 0.0 250.0 -30.0) (float-vector 15.0 250.0 -25.9808) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector 0.0 212.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 250.0 -15.0) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 5.684342e-14) (float-vector -30.0 250.0 5.684342e-14) (float-vector -25.9808 250.0 -15.0) (float-vector -25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 250.0 15.0) (float-vector -30.0 250.0 5.684342e-14) (float-vector -30.0 212.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9808) (float-vector -15.0 250.0 25.9808) (float-vector -25.9808 250.0 15.0) (float-vector -25.9808 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 212.0 30.0) (float-vector 5.684342e-14 250.0 30.0) (float-vector -15.0 250.0 25.9808) (float-vector -15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9808) (float-vector 15.0 250.0 25.9808) (float-vector 5.684342e-14 250.0 30.0) (float-vector 5.684342e-14 212.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 250.0 15.0) (float-vector 15.0 250.0 25.9808) (float-vector 15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 2.842171e-14) (float-vector 30.0 250.0 2.842171e-14) (float-vector 25.9808 250.0 15.0) (float-vector 25.9808 212.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rf-knee-r :weight 600 :centroid (float-vector 1.136868e-13 102.198 -2.388153e-14) :inertia-tensor #2f((1.192042e+07 -4.344969e-09 -4.344969e-09) (-4.344969e-09 5.049680e+06 -3.905877e+06) (-4.344969e-09 -3.905877e+06 7.049072e+06))))

     ;; definition of :lb-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 4.263256e-14 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 5.684342e-14 120.0) (float-vector -69.282 -40.0 120.0) (float-vector -40.0 -69.282 120.0) (float-vector -1.278977e-13 -80.0 120.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 69.282 -40.0 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 -69.282 120.0) (float-vector 40.0 -69.282 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -1.278977e-13 -80.0 120.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 -69.282 120.0) (float-vector -40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -1.278977e-13 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 -40.0 120.0) (float-vector -69.282 -40.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 5.684342e-14 120.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -80.0 5.684342e-14 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 80.0 120.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 4.263256e-14 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lb-crotch-y :weight 2000 :centroid (float-vector 1.131816e-14 2.637535e-14 60.0) :inertia-tensor #2f((5.600000e+06 0.0 0.0) (0.0 5.600000e+06 0.0) (0.0 0.0 6.400000e+06))))

     ;; definition of :lb-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector 37.0 162.5 35.0) (float-vector 37.0 162.5 -35.0) (float-vector -37.0 162.5 -35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector -31.9904 162.5 34.0) (float-vector -31.9904 162.5 -34.0) (float-vector 31.9904 162.5 -34.0)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -8.526513e-14 50.0 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0) (float-vector 37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 35.0) (float-vector -37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 25.0 -43.0) (float-vector 43.3013 25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 2.842171e-14 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3013 -25.0 -43.0) (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -43.3013 25.0 -43.0) (float-vector -25.0 43.3013 -43.0) (float-vector -8.526513e-14 50.0 -43.0) (float-vector 25.0 43.3013 -43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 35.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 25.0 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 -43.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -8.526513e-14 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 -43.0) (float-vector -25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -8.526513e-14 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 25.0 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 -25.0 -43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -50.0 -5.684342e-14 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -43.3013 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -50.0 -43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 2.842171e-14 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 0.0 -43.0) (float-vector 50.0 0.0 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -31.9904 162.5 -34.0)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -17.0 184.445 -34.0) (float-vector -29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector -17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 189.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector 17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 29.4449 172.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 -34.0) (float-vector 31.9904 162.5 -34.0) (float-vector -31.9904 162.5 -34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 34.0) (float-vector 31.9904 162.5 34.0) (float-vector 31.9904 162.5 -34.0) (float-vector 29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -31.9904 162.5 34.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lb-crotch-r :weight 1000 :centroid (float-vector -2.131628e-14 57.9866 -2.654390e-15) :inertia-tensor #2f((9.135302e+06 8.240388e-10 8.240388e-10) (8.240388e-10 5.820859e+06 -3.362443e+06) (8.240388e-10 -3.362443e+06 4.227109e+06))))

     ;; definition of :lb-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector 20.0 215.0 20.0) (float-vector 20.0 215.0 -20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector -20.0 212.0 20.0) (float-vector 20.0 212.0 20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 20.0) (float-vector 20.0 210.0 20.0) (float-vector -20.0 210.0 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 215.0 -20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0) (float-vector -20.0 212.0 -20.0) (float-vector -20.0 215.0 -20.0) (float-vector 20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 210.0 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 16.0 27.7128 -20.0) (float-vector -5.684342e-14 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0) (float-vector -20.0 212.0 20.0) (float-vector -20.0 215.0 20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 20.0) (float-vector -20.0 210.0 -20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -5.684342e-14) (float-vector 25.9808 212.0 -15.0) (float-vector 15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9808 212.0 -15.0) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -25.9808 212.0 15.0) (float-vector -15.0 212.0 25.9808) (float-vector 0.0 212.0 30.0) (float-vector 15.0 212.0 25.9808) (float-vector 25.9808 212.0 15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 20.0) (float-vector -20.0 212.0 -20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 212.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -5.684342e-14) (float-vector 30.0 210.0 -5.684342e-14) (float-vector 25.9808 210.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 -5.684342e-14) (float-vector 25.9808 210.0 15.0) (float-vector 15.0 210.0 25.9808) (float-vector 0.0 210.0 30.0) (float-vector -15.0 210.0 25.9808) (float-vector -25.9808 210.0 15.0) (float-vector -30.0 210.0 -2.842171e-14) (float-vector -25.9808 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector 0.0 210.0 -30.0) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9808 210.0 -15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0) (float-vector -20.0 210.0 20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 210.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 -30.0) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 0.0 210.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 -15.0) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 -2.842171e-14) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 15.0) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -30.0 210.0 -2.842171e-14)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9808) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 210.0 15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 30.0) (float-vector 0.0 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9808) (float-vector 15.0 212.0 25.9808) (float-vector 0.0 212.0 30.0) (float-vector 0.0 210.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 210.0 15.0) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 210.0 15.0) (float-vector 30.0 210.0 -5.684342e-14) (float-vector 30.0 212.0 -5.684342e-14)))
         (instance face :init :vertices (list (float-vector 32.0 0.0 -29.5) (float-vector 32.0 2.842171e-14 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector -5.684342e-14 -32.0 29.5) (float-vector 0.0 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 -2.842171e-14 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 -2.842171e-14 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 -20.0) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -5.684342e-14 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 -20.0) (float-vector 16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -5.684342e-14 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 16.0 27.7128 -29.5) (float-vector 16.0 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7128 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 -2.842171e-14 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector 16.0 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 29.5) (float-vector 32.0 2.842171e-14 29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 2.842171e-14 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -5.684342e-14 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 30.0 212.0 -5.684342e-14) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 0.0 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 -8.526513e-14) (float-vector 25.9808 250.0 -15.0) (float-vector 15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9808 250.0 -15.0) (float-vector -30.0 250.0 -2.842171e-14) (float-vector -25.9808 250.0 15.0) (float-vector -15.0 250.0 25.9808) (float-vector 0.0 250.0 30.0) (float-vector 15.0 250.0 25.9808) (float-vector 25.9808 250.0 15.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 250.0 -15.0) (float-vector 30.0 250.0 -8.526513e-14) (float-vector 30.0 212.0 -5.684342e-14)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9808) (float-vector 25.9808 250.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0) (float-vector 0.0 250.0 -30.0) (float-vector 15.0 250.0 -25.9808) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector 0.0 212.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 250.0 -15.0) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 -2.842171e-14) (float-vector -30.0 250.0 -2.842171e-14) (float-vector -25.9808 250.0 -15.0) (float-vector -25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 250.0 15.0) (float-vector -30.0 250.0 -2.842171e-14) (float-vector -30.0 212.0 -2.842171e-14)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9808) (float-vector -15.0 250.0 25.9808) (float-vector -25.9808 250.0 15.0) (float-vector -25.9808 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 30.0) (float-vector 0.0 250.0 30.0) (float-vector -15.0 250.0 25.9808) (float-vector -15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9808) (float-vector 15.0 250.0 25.9808) (float-vector 0.0 250.0 30.0) (float-vector 0.0 212.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 250.0 15.0) (float-vector 15.0 250.0 25.9808) (float-vector 15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -5.684342e-14) (float-vector 30.0 250.0 -8.526513e-14) (float-vector 25.9808 250.0 15.0) (float-vector 25.9808 212.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lb-knee-r :weight 600 :centroid (float-vector 1.136868e-13 102.198 -2.388153e-14) :inertia-tensor #2f((1.192042e+07 -4.344969e-09 -4.344969e-09) (-4.344969e-09 5.049680e+06 -3.905877e+06) (-4.344969e-09 -3.905877e+06 7.049072e+06))))

     ;; definition of :lf-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 4.263256e-14 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 5.684342e-14 120.0) (float-vector -69.282 -40.0 120.0) (float-vector -40.0 -69.282 120.0) (float-vector -1.278977e-13 -80.0 120.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0 120.0) (float-vector 69.282 -40.0 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 -69.282 120.0) (float-vector 40.0 -69.282 0.0) (float-vector 69.282 -40.0 0.0) (float-vector 69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -1.278977e-13 -80.0 120.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector 40.0 -69.282 0.0) (float-vector 40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 -69.282 120.0) (float-vector -40.0 -69.282 0.0) (float-vector -1.278977e-13 -80.0 0.0) (float-vector -1.278977e-13 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 -40.0 120.0) (float-vector -69.282 -40.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 5.684342e-14 120.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 5.684342e-14 0.0) (float-vector -80.0 5.684342e-14 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 80.0 120.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 4.263256e-14 80.0 0.0) (float-vector 4.263256e-14 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lf-crotch-y :weight 2000 :centroid (float-vector 1.131816e-14 2.637535e-14 60.0) :inertia-tensor #2f((5.600000e+06 0.0 0.0) (0.0 5.600000e+06 0.0) (0.0 0.0 6.400000e+06))))

     ;; definition of :lf-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector 37.0 162.5 35.0) (float-vector 37.0 162.5 -35.0) (float-vector -37.0 162.5 -35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector -31.9904 162.5 34.0) (float-vector -31.9904 162.5 -34.0) (float-vector 31.9904 162.5 -34.0)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -8.526513e-14 50.0 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0) (float-vector 37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 35.0) (float-vector -37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 43.0) (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 25.0 -43.0) (float-vector 43.3013 25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 0.0 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 2.842171e-14 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3013 -25.0 -43.0) (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -43.3013 25.0 -43.0) (float-vector -25.0 43.3013 -43.0) (float-vector -8.526513e-14 50.0 -43.0) (float-vector 25.0 43.3013 -43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3013 25.0 43.0) (float-vector 43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 35.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 25.0 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -8.526513e-14 50.0 -43.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -8.526513e-14 50.0 43.0) (float-vector -8.526513e-14 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 -43.0) (float-vector -25.0 43.3013 -35.0) (float-vector -8.526513e-14 50.0 -35.0) (float-vector -8.526513e-14 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 25.0 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3013 -35.0) (float-vector -25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -5.684342e-14 -43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 -25.0 -43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -50.0 -2.842171e-14 43.0) (float-vector -50.0 -5.684342e-14 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -43.3013 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -50.0 -43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 2.842171e-14 -50.0 43.0) (float-vector 2.842171e-14 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3013 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 0.0 -43.0) (float-vector 50.0 0.0 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -31.9904 162.5 -34.0)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -17.0 184.445 -34.0) (float-vector -29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector -17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 189.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector 17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 29.4449 172.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 -34.0) (float-vector 31.9904 162.5 -34.0) (float-vector -31.9904 162.5 -34.0) (float-vector -29.4449 172.0 -34.0) (float-vector -17.0 184.445 -34.0) (float-vector -5.684342e-14 189.0 -34.0) (float-vector 17.0 184.445 -34.0)))
         (instance face :init :vertices (list (float-vector 29.4449 172.0 34.0) (float-vector 31.9904 162.5 34.0) (float-vector 31.9904 162.5 -34.0) (float-vector 29.4449 172.0 -34.0)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 34.0) (float-vector 29.4449 172.0 34.0) (float-vector 17.0 184.445 34.0) (float-vector -5.684342e-14 189.0 34.0) (float-vector -17.0 184.445 34.0) (float-vector -29.4449 172.0 34.0) (float-vector -31.9904 162.5 34.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lf-crotch-r :weight 1000 :centroid (float-vector -2.131628e-14 57.9866 -2.654390e-15) :inertia-tensor #2f((9.135302e+06 8.240388e-10 8.240388e-10) (8.240388e-10 5.820859e+06 -3.362443e+06) (8.240388e-10 -3.362443e+06 4.227109e+06))))

     ;; definition of :lf-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector 20.0 215.0 20.0) (float-vector 20.0 215.0 -20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector -20.0 212.0 20.0) (float-vector 20.0 212.0 20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 20.0) (float-vector 20.0 210.0 20.0) (float-vector -20.0 210.0 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 215.0 -20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0) (float-vector -20.0 212.0 -20.0) (float-vector -20.0 215.0 -20.0) (float-vector 20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 210.0 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 16.0 27.7128 -20.0) (float-vector -5.684342e-14 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0) (float-vector -20.0 212.0 20.0) (float-vector -20.0 215.0 20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 20.0) (float-vector -20.0 210.0 -20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -5.684342e-14) (float-vector 25.9808 212.0 -15.0) (float-vector 15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9808 212.0 -15.0) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -25.9808 212.0 15.0) (float-vector -15.0 212.0 25.9808) (float-vector 0.0 212.0 30.0) (float-vector 15.0 212.0 25.9808) (float-vector 25.9808 212.0 15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 20.0) (float-vector -20.0 212.0 -20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 212.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -5.684342e-14) (float-vector 30.0 210.0 -5.684342e-14) (float-vector 25.9808 210.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 -5.684342e-14) (float-vector 25.9808 210.0 15.0) (float-vector 15.0 210.0 25.9808) (float-vector 0.0 210.0 30.0) (float-vector -15.0 210.0 25.9808) (float-vector -25.9808 210.0 15.0) (float-vector -30.0 210.0 -2.842171e-14) (float-vector -25.9808 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector 0.0 210.0 -30.0) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9808 210.0 -15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0) (float-vector -20.0 210.0 20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 210.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 -30.0) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 0.0 210.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 -15.0) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 -2.842171e-14) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 15.0) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -30.0 210.0 -2.842171e-14)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9808) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 210.0 15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 30.0) (float-vector 0.0 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9808) (float-vector 15.0 212.0 25.9808) (float-vector 0.0 212.0 30.0) (float-vector 0.0 210.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 210.0 15.0) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 15.0 210.0 25.9808)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 210.0 15.0) (float-vector 30.0 210.0 -5.684342e-14) (float-vector 30.0 212.0 -5.684342e-14)))
         (instance face :init :vertices (list (float-vector 32.0 -2.842171e-14 -29.5) (float-vector 32.0 2.842171e-14 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector -5.684342e-14 -32.0 29.5) (float-vector 0.0 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 -5.684342e-14 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 -5.684342e-14 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7128 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 -20.0) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -5.684342e-14 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 -20.0) (float-vector 16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector -5.684342e-14 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -5.684342e-14 32.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector -5.684342e-14 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 16.0 27.7128 -29.5) (float-vector 16.0 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7128 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 -2.842171e-14 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 -5.684342e-14 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -5.684342e-14 32.0 -29.5) (float-vector 16.0 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 29.5) (float-vector 32.0 2.842171e-14 29.5) (float-vector 32.0 -2.842171e-14 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 2.842171e-14 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector -5.684342e-14 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -5.684342e-14 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 30.0 212.0 -5.684342e-14) (float-vector 25.9808 212.0 15.0) (float-vector 15.0 212.0 25.9808) (float-vector 0.0 212.0 30.0) (float-vector -15.0 212.0 25.9808) (float-vector -25.9808 212.0 15.0) (float-vector -30.0 212.0 -2.842171e-14) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 -8.526513e-14) (float-vector 25.9808 250.0 -15.0) (float-vector 15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9808 250.0 -15.0) (float-vector -30.0 250.0 -2.842171e-14) (float-vector -25.9808 250.0 15.0) (float-vector -15.0 250.0 25.9808) (float-vector 0.0 250.0 30.0) (float-vector 15.0 250.0 25.9808) (float-vector 25.9808 250.0 15.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0) (float-vector 25.9808 250.0 -15.0) (float-vector 30.0 250.0 -8.526513e-14) (float-vector 30.0 212.0 -5.684342e-14)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9808) (float-vector 25.9808 250.0 -15.0) (float-vector 25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0) (float-vector 0.0 250.0 -30.0) (float-vector 15.0 250.0 -25.9808) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0) (float-vector 0.0 212.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 250.0 -15.0) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 -2.842171e-14) (float-vector -30.0 250.0 -2.842171e-14) (float-vector -25.9808 250.0 -15.0) (float-vector -25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 15.0) (float-vector -25.9808 250.0 15.0) (float-vector -30.0 250.0 -2.842171e-14) (float-vector -30.0 212.0 -2.842171e-14)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9808) (float-vector -15.0 250.0 25.9808) (float-vector -25.9808 250.0 15.0) (float-vector -25.9808 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 30.0) (float-vector 0.0 250.0 30.0) (float-vector -15.0 250.0 25.9808) (float-vector -15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9808) (float-vector 15.0 250.0 25.9808) (float-vector 0.0 250.0 30.0) (float-vector 0.0 212.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 15.0) (float-vector 25.9808 250.0 15.0) (float-vector 15.0 250.0 25.9808) (float-vector 15.0 212.0 25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -5.684342e-14) (float-vector 30.0 250.0 -8.526513e-14) (float-vector 25.9808 250.0 15.0) (float-vector 25.9808 212.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lf-knee-r :weight 600 :centroid (float-vector 1.136868e-13 102.198 -2.388153e-14) :inertia-tensor #2f((1.192042e+07 -4.344969e-09 -4.344969e-09) (-4.344969e-09 5.049680e+06 -3.905877e+06) (-4.344969e-09 -3.905877e+06 7.049072e+06))))

     ;; definition of :titan-head-neck-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -39.0 -69.0 16.0) (float-vector 39.0 -69.0 16.0) (float-vector 26.0 -69.0 41.0) (float-vector 16.0 -69.0 51.0) (float-vector 6.0 -69.0 59.0) (float-vector -4.0 -69.0 67.0) (float-vector -11.0 -69.0 72.0) (float-vector -19.0 -69.0 67.0) (float-vector -29.0 -69.0 56.0)))
         (instance face :init :vertices (list (float-vector 39.0 69.0 16.0) (float-vector -39.0 69.0 16.0) (float-vector -29.0 69.0 56.0) (float-vector -19.0 69.0 67.0) (float-vector -11.0 69.0 72.0) (float-vector -4.0 69.0 67.0) (float-vector 6.0 69.0 59.0) (float-vector 16.0 69.0 51.0) (float-vector 26.0 69.0 41.0)))
         (instance face :init :vertices (list (float-vector -39.0 -69.0 16.0) (float-vector -39.0 69.0 16.0) (float-vector 39.0 69.0 16.0) (float-vector 39.0 -69.0 16.0)))
         (instance face :init :vertices (list (float-vector -29.0 -69.0 56.0) (float-vector -29.0 69.0 56.0) (float-vector -39.0 69.0 16.0) (float-vector -39.0 -69.0 16.0)))
         (instance face :init :vertices (list (float-vector -19.0 -69.0 67.0) (float-vector -19.0 69.0 67.0) (float-vector -29.0 69.0 56.0) (float-vector -29.0 -69.0 56.0)))
         (instance face :init :vertices (list (float-vector -11.0 -69.0 72.0) (float-vector -11.0 69.0 72.0) (float-vector -19.0 69.0 67.0) (float-vector -19.0 -69.0 67.0)))
         (instance face :init :vertices (list (float-vector -4.0 -69.0 67.0) (float-vector -4.0 69.0 67.0) (float-vector -11.0 69.0 72.0) (float-vector -11.0 -69.0 72.0)))
         (instance face :init :vertices (list (float-vector 6.0 -69.0 59.0) (float-vector 6.0 69.0 59.0) (float-vector -4.0 69.0 67.0) (float-vector -4.0 -69.0 67.0)))
         (instance face :init :vertices (list (float-vector 16.0 -69.0 51.0) (float-vector 16.0 69.0 51.0) (float-vector 6.0 69.0 59.0) (float-vector 6.0 -69.0 59.0)))
         (instance face :init :vertices (list (float-vector 26.0 -69.0 41.0) (float-vector 26.0 69.0 41.0) (float-vector 16.0 69.0 51.0) (float-vector 16.0 -69.0 51.0)))
         (instance face :init :vertices (list (float-vector 39.0 -69.0 16.0) (float-vector 39.0 69.0 16.0) (float-vector 26.0 69.0 41.0) (float-vector 26.0 -69.0 41.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :titan-head-neck-y :weight 1000 :centroid (float-vector -3.86511 2.327826e-15 37.277) :inertia-tensor #2f((1.875727e+06 -8.298022e+05 -1.237198e+06) (-8.298022e+05 4.322683e+06 -6.749700e+05) (-1.237198e+06 -6.749700e+05 3.769043e+06))))

     ;; definition of :titan-head-neck-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -35.0 -20.0 88.0) (float-vector 35.0 -20.0 88.0) (float-vector 15.0 17.0 88.0) (float-vector 5.0 20.0 88.0) (float-vector 0.0 23.0 88.0) (float-vector -10.0 20.0 88.0) (float-vector -15.0 17.0 88.0)))
         (instance face :init :vertices (list (float-vector 35.0 -20.0 -88.0) (float-vector -35.0 -20.0 -88.0) (float-vector -15.0 17.0 -88.0) (float-vector -10.0 20.0 -88.0) (float-vector 0.0 23.0 -88.0) (float-vector 5.0 20.0 -88.0) (float-vector 15.0 17.0 -88.0)))
         (instance face :init :vertices (list (float-vector -35.0 -20.0 88.0) (float-vector -35.0 -20.0 -88.0) (float-vector 35.0 -20.0 -88.0) (float-vector 35.0 -20.0 88.0)))
         (instance face :init :vertices (list (float-vector -15.0 17.0 88.0) (float-vector -15.0 17.0 -88.0) (float-vector -35.0 -20.0 -88.0) (float-vector -35.0 -20.0 88.0)))
         (instance face :init :vertices (list (float-vector -10.0 20.0 88.0) (float-vector -10.0 20.0 -88.0) (float-vector -15.0 17.0 -88.0) (float-vector -15.0 17.0 88.0)))
         (instance face :init :vertices (list (float-vector 0.0 23.0 88.0) (float-vector 0.0 23.0 -88.0) (float-vector -10.0 20.0 -88.0) (float-vector -10.0 20.0 88.0)))
         (instance face :init :vertices (list (float-vector 5.0 20.0 88.0) (float-vector 5.0 20.0 -88.0) (float-vector 0.0 23.0 -88.0) (float-vector 0.0 23.0 88.0)))
         (instance face :init :vertices (list (float-vector 15.0 17.0 88.0) (float-vector 15.0 17.0 -88.0) (float-vector 5.0 20.0 -88.0) (float-vector 5.0 20.0 88.0)))
         (instance face :init :vertices (list (float-vector 35.0 -20.0 88.0) (float-vector 35.0 -20.0 -88.0) (float-vector 15.0 17.0 -88.0) (float-vector 15.0 17.0 88.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -51.0 -54.0 57.0) (float-vector -50.0 -54.0 57.0) (float-vector -50.0 -54.0 59.0) (float-vector -51.0 -54.0 59.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 57.0) (float-vector -50.0 -56.0 57.0) (float-vector -50.0 -54.0 57.0) (float-vector -51.0 -54.0 57.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 59.0) (float-vector -50.0 -56.0 59.0) (float-vector -50.0 -56.0 57.0) (float-vector -51.0 -56.0 57.0)))
         (instance face :init :vertices (list (float-vector -50.0 -56.0 59.0) (float-vector -50.0 -54.0 59.0) (float-vector -50.0 -54.0 57.0) (float-vector -50.0 -56.0 57.0)))
         (instance face :init :vertices (list (float-vector -50.0 -54.0 59.0) (float-vector -50.0 -56.0 59.0) (float-vector -51.0 -56.0 59.0) (float-vector -51.0 -54.0 59.0)))
         (instance face :init :vertices (list (float-vector -50.0 -37.5 80.5) (float-vector -50.0 -37.5 35.5) (float-vector -50.0 -72.5 35.5) (float-vector -50.0 -72.5 80.5)))
         (instance face :init :vertices (list (float-vector -50.0 -37.5 80.5) (float-vector 50.0 -37.5 80.5) (float-vector 50.0 -37.5 35.5) (float-vector -50.0 -37.5 35.5)))
         (instance face :init :vertices (list (float-vector 50.0 -37.5 80.5) (float-vector 50.0 -72.5 80.5) (float-vector 50.0 -72.5 35.5) (float-vector 50.0 -37.5 35.5)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5 35.5) (float-vector -50.0 -72.5 35.5) (float-vector -50.0 -37.5 35.5) (float-vector 50.0 -37.5 35.5)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5 80.5) (float-vector -50.0 -72.5 80.5) (float-vector -50.0 -72.5 35.5) (float-vector 50.0 -72.5 35.5)))
         (instance face :init :vertices (list (float-vector -50.0 -72.5 80.5) (float-vector 50.0 -72.5 80.5) (float-vector 50.0 -37.5 80.5) (float-vector -50.0 -37.5 80.5)))
         (instance face :init :vertices (list (float-vector -80.0 -55.0 75.0) (float-vector -51.0 -55.0 75.0) (float-vector -51.0 -46.5 72.7224) (float-vector -80.0 -46.5 72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -46.5 72.7224) (float-vector -51.0 -40.2776 66.5) (float-vector -80.0 -40.2776 66.5) (float-vector -80.0 -46.5 72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2776 66.5) (float-vector -51.0 -38.0 58.0) (float-vector -80.0 -38.0 58.0) (float-vector -80.0 -40.2776 66.5)))
         (instance face :init :vertices (list (float-vector -51.0 -38.0 58.0) (float-vector -51.0 -40.2776 49.5) (float-vector -80.0 -40.2776 49.5) (float-vector -80.0 -38.0 58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2776 49.5) (float-vector -51.0 -46.5 43.2776) (float-vector -80.0 -46.5 43.2776) (float-vector -80.0 -40.2776 49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -46.5 43.2776) (float-vector -51.0 -55.0 41.0) (float-vector -80.0 -55.0 41.0) (float-vector -80.0 -46.5 43.2776)))
         (instance face :init :vertices (list (float-vector -51.0 -55.0 41.0) (float-vector -51.0 -63.5 43.2776) (float-vector -80.0 -63.5 43.2776) (float-vector -80.0 -55.0 41.0)))
         (instance face :init :vertices (list (float-vector -51.0 -63.5 43.2776) (float-vector -51.0 -69.7224 49.5) (float-vector -80.0 -69.7224 49.5) (float-vector -80.0 -63.5 43.2776)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7224 49.5) (float-vector -51.0 -72.0 58.0) (float-vector -80.0 -72.0 58.0) (float-vector -80.0 -69.7224 49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -72.0 58.0) (float-vector -51.0 -69.7224 66.5) (float-vector -80.0 -69.7224 66.5) (float-vector -80.0 -72.0 58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7224 66.5) (float-vector -51.0 -63.5 72.7224) (float-vector -80.0 -63.5 72.7224) (float-vector -80.0 -69.7224 66.5)))
         (instance face :init :vertices (list (float-vector -80.0 -63.5 72.7224) (float-vector -80.0 -55.0 75.0) (float-vector -80.0 -46.5 72.7224) (float-vector -80.0 -40.2776 66.5) (float-vector -80.0 -38.0 58.0) (float-vector -80.0 -40.2776 49.5) (float-vector -80.0 -46.5 43.2776) (float-vector -80.0 -55.0 41.0) (float-vector -80.0 -63.5 43.2776) (float-vector -80.0 -69.7224 49.5) (float-vector -80.0 -72.0 58.0) (float-vector -80.0 -69.7224 66.5)))
         (instance face :init :vertices (list (float-vector -51.0 -63.5 72.7224) (float-vector -51.0 -55.0 75.0) (float-vector -80.0 -55.0 75.0) (float-vector -80.0 -63.5 72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -54.0 59.0) (float-vector -51.0 -56.0 59.0) (float-vector -51.0 -56.0 57.0) (float-vector -51.0 -54.0 57.0)))
         (instance face :init :vertices (list (float-vector -51.0 -55.0 75.0) (float-vector -51.0 -63.5 72.7224) (float-vector -51.0 -69.7224 66.5) (float-vector -51.0 -72.0 58.0) (float-vector -51.0 -69.7224 49.5) (float-vector -51.0 -63.5 43.2776) (float-vector -51.0 -55.0 41.0) (float-vector -51.0 -46.5 43.2776) (float-vector -51.0 -40.2776 49.5) (float-vector -51.0 -38.0 58.0) (float-vector -51.0 -40.2776 66.5) (float-vector -51.0 -46.5 72.7224)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -51.0 -54.0 -59.0) (float-vector -50.0 -54.0 -59.0) (float-vector -50.0 -54.0 -57.0) (float-vector -51.0 -54.0 -57.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 -59.0) (float-vector -50.0 -56.0 -59.0) (float-vector -50.0 -54.0 -59.0) (float-vector -51.0 -54.0 -59.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 -57.0) (float-vector -50.0 -56.0 -57.0) (float-vector -50.0 -56.0 -59.0) (float-vector -51.0 -56.0 -59.0)))
         (instance face :init :vertices (list (float-vector -50.0 -56.0 -57.0) (float-vector -50.0 -54.0 -57.0) (float-vector -50.0 -54.0 -59.0) (float-vector -50.0 -56.0 -59.0)))
         (instance face :init :vertices (list (float-vector -50.0 -54.0 -57.0) (float-vector -50.0 -56.0 -57.0) (float-vector -51.0 -56.0 -57.0) (float-vector -51.0 -54.0 -57.0)))
         (instance face :init :vertices (list (float-vector -50.0 -37.5 -35.5) (float-vector -50.0 -37.5 -80.5) (float-vector -50.0 -72.5 -80.5) (float-vector -50.0 -72.5 -35.5)))
         (instance face :init :vertices (list (float-vector -50.0 -37.5 -35.5) (float-vector 50.0 -37.5 -35.5) (float-vector 50.0 -37.5 -80.5) (float-vector -50.0 -37.5 -80.5)))
         (instance face :init :vertices (list (float-vector 50.0 -37.5 -35.5) (float-vector 50.0 -72.5 -35.5) (float-vector 50.0 -72.5 -80.5) (float-vector 50.0 -37.5 -80.5)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5 -80.5) (float-vector -50.0 -72.5 -80.5) (float-vector -50.0 -37.5 -80.5) (float-vector 50.0 -37.5 -80.5)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5 -35.5) (float-vector -50.0 -72.5 -35.5) (float-vector -50.0 -72.5 -80.5) (float-vector 50.0 -72.5 -80.5)))
         (instance face :init :vertices (list (float-vector -50.0 -72.5 -35.5) (float-vector 50.0 -72.5 -35.5) (float-vector 50.0 -37.5 -35.5) (float-vector -50.0 -37.5 -35.5)))
         (instance face :init :vertices (list (float-vector -80.0 -55.0 -41.0) (float-vector -51.0 -55.0 -41.0) (float-vector -51.0 -46.5 -43.2776) (float-vector -80.0 -46.5 -43.2776)))
         (instance face :init :vertices (list (float-vector -51.0 -46.5 -43.2776) (float-vector -51.0 -40.2776 -49.5) (float-vector -80.0 -40.2776 -49.5) (float-vector -80.0 -46.5 -43.2776)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2776 -49.5) (float-vector -51.0 -38.0 -58.0) (float-vector -80.0 -38.0 -58.0) (float-vector -80.0 -40.2776 -49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -38.0 -58.0) (float-vector -51.0 -40.2776 -66.5) (float-vector -80.0 -40.2776 -66.5) (float-vector -80.0 -38.0 -58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2776 -66.5) (float-vector -51.0 -46.5 -72.7224) (float-vector -80.0 -46.5 -72.7224) (float-vector -80.0 -40.2776 -66.5)))
         (instance face :init :vertices (list (float-vector -51.0 -46.5 -72.7224) (float-vector -51.0 -55.0 -75.0) (float-vector -80.0 -55.0 -75.0) (float-vector -80.0 -46.5 -72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -55.0 -75.0) (float-vector -51.0 -63.5 -72.7224) (float-vector -80.0 -63.5 -72.7224) (float-vector -80.0 -55.0 -75.0)))
         (instance face :init :vertices (list (float-vector -51.0 -63.5 -72.7224) (float-vector -51.0 -69.7224 -66.5) (float-vector -80.0 -69.7224 -66.5) (float-vector -80.0 -63.5 -72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7224 -66.5) (float-vector -51.0 -72.0 -58.0) (float-vector -80.0 -72.0 -58.0) (float-vector -80.0 -69.7224 -66.5)))
         (instance face :init :vertices (list (float-vector -51.0 -72.0 -58.0) (float-vector -51.0 -69.7224 -49.5) (float-vector -80.0 -69.7224 -49.5) (float-vector -80.0 -72.0 -58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7224 -49.5) (float-vector -51.0 -63.5 -43.2776) (float-vector -80.0 -63.5 -43.2776) (float-vector -80.0 -69.7224 -49.5)))
         (instance face :init :vertices (list (float-vector -80.0 -63.5 -43.2776) (float-vector -80.0 -55.0 -41.0) (float-vector -80.0 -46.5 -43.2776) (float-vector -80.0 -40.2776 -49.5) (float-vector -80.0 -38.0 -58.0) (float-vector -80.0 -40.2776 -66.5) (float-vector -80.0 -46.5 -72.7224) (float-vector -80.0 -55.0 -75.0) (float-vector -80.0 -63.5 -72.7224) (float-vector -80.0 -69.7224 -66.5) (float-vector -80.0 -72.0 -58.0) (float-vector -80.0 -69.7224 -49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -63.5 -43.2776) (float-vector -51.0 -55.0 -41.0) (float-vector -80.0 -55.0 -41.0) (float-vector -80.0 -63.5 -43.2776)))
         (instance face :init :vertices (list (float-vector -51.0 -54.0 -57.0) (float-vector -51.0 -56.0 -57.0) (float-vector -51.0 -56.0 -59.0) (float-vector -51.0 -54.0 -59.0)))
         (instance face :init :vertices (list (float-vector -51.0 -55.0 -41.0) (float-vector -51.0 -63.5 -43.2776) (float-vector -51.0 -69.7224 -49.5) (float-vector -51.0 -72.0 -58.0) (float-vector -51.0 -69.7224 -66.5) (float-vector -51.0 -63.5 -72.7224) (float-vector -51.0 -55.0 -75.0) (float-vector -51.0 -46.5 -72.7224) (float-vector -51.0 -40.2776 -66.5) (float-vector -51.0 -38.0 -58.0) (float-vector -51.0 -40.2776 -49.5) (float-vector -51.0 -46.5 -43.2776)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray40)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :titan-head-neck-p :weight 480 :centroid (float-vector -5.28347 -33.2922 2.330172e-14) :inertia-tensor #2f((3.284628e+06 -4.280869e+05 -7.079684e+05) (-4.280869e+05 3.769302e+06 -8.868810e+05) (-7.079684e+05 -8.868810e+05 1.902376e+06))))

     ;; definition of assoc
     (send blink12 :newcoords (make-coords :pos (float-vector 0.0 155.0 -2.842171e-14) :rot #2f((1.110223e-16 1.0 -7.850462e-17) (-1.0 1.110223e-16 -7.850462e-17) (-7.850462e-17 7.850462e-17 1.0))))
     (send blink11 :assoc blink12)
     (send blink11 :newcoords (make-coords :pos (float-vector -45.0 0.0 60.0) :rot #2f((-1.110223e-16 -1.0 1.110223e-16) (1.110223e-16 1.110223e-16 1.0) (-1.0 1.110223e-16 1.110223e-16))))
     (send blink10 :assoc blink11)
     (send blink9 :newcoords (make-coords :pos (float-vector 0.0 155.0 -2.842171e-14) :rot #2f((1.110223e-16 1.0 -7.850462e-17) (-1.0 1.110223e-16 -7.850462e-17) (-7.850462e-17 7.850462e-17 1.0))))
     (send blink8 :assoc blink9)
     (send blink8 :newcoords (make-coords :pos (float-vector -45.0 0.0 60.0) :rot #2f((-1.110223e-16 -1.0 1.110223e-16) (1.110223e-16 1.110223e-16 1.0) (-1.0 1.110223e-16 1.110223e-16))))
     (send blink7 :assoc blink8)
     (send blink6 :newcoords (make-coords :pos (float-vector 0.0 155.0 -2.842171e-14) :rot #2f((2.220446e-16 1.0 3.925231e-16) (-1.0 2.220446e-16 4.710277e-16) (4.710277e-16 -3.925231e-16 1.0))))
     (send blink5 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector -45.0 0.0 60.0) :rot #2f((1.110223e-16 -1.0 1.110223e-16) (-1.110223e-16 1.110223e-16 1.0) (-1.0 -1.110223e-16 -1.110223e-16))))
     (send blink4 :assoc blink5)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 155.0 -2.842171e-14) :rot #2f((2.220446e-16 1.0 3.925231e-16) (-1.0 2.220446e-16 4.710277e-16) (4.710277e-16 -3.925231e-16 1.0))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector -45.0 0.0 60.0) :rot #2f((1.110223e-16 -1.0 1.110223e-16) (-1.110223e-16 1.110223e-16 1.0) (-1.0 -1.110223e-16 -1.110223e-16))))
     (send blink1 :assoc blink2)
     (send blink14 :newcoords (make-coords :pos (float-vector 0.0 -3.673940e-15 60.0) :rot #2f((1.0 -7.850462e-17 7.850462e-17) (-7.850462e-17 -2.220446e-16 1.0) (-7.850462e-17 -1.0 -2.220446e-16))))
     (send blink13 :assoc blink14)
     (send blink13 :newcoords (make-coords :pos (float-vector 200.0 4.440892e-14 300.0) :rot #2f((-1.0 4.440892e-16 0.0) (-4.440892e-16 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink13)
     (send blink1 :newcoords (make-coords :pos (float-vector 190.0 110.0 -72.0) :rot #2f((2.220446e-16 1.0 0.0) (-1.0 2.220446e-16 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink4 :newcoords (make-coords :pos (float-vector -190.0 110.0 -72.0) :rot #2f((2.220446e-16 1.0 0.0) (-1.0 2.220446e-16 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink7 :newcoords (make-coords :pos (float-vector 190.0 -110.0 -72.0) :rot #2f((-2.220446e-16 -1.0 0.0) (1.0 -2.220446e-16 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink7)
     (send blink10 :newcoords (make-coords :pos (float-vector -190.0 -110.0 -72.0) :rot #2f((-2.220446e-16 -1.0 0.0) (1.0 -2.220446e-16 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink10)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of lf-end-coords
     (setq lf-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 190.0 110.0 -72.0) :rot #2f((2.220446e-16 1.0 8.715764e-33) (-1.0 2.220446e-16 8.715764e-33) (8.715764e-33 -8.715764e-33 1.0))))))
     (send blink0 :assoc lf-end-coords)

     ;; definition of lb-end-coords
     (setq lb-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -190.0 110.0 -72.0) :rot #2f((2.220446e-16 1.0 0.0) (-1.0 2.220446e-16 0.0) (0.0 0.0 1.0))))))
     (send blink0 :assoc lb-end-coords)

     ;; definition of rf-end-coords
     (setq rf-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 190.0 -110.0 -72.0) :rot #2f((-2.220446e-16 -1.0 0.0) (1.0 -2.220446e-16 0.0) (0.0 0.0 1.0))))))
     (send blink0 :assoc rf-end-coords)

     ;; definition of rb-end-coords
     (setq rb-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -190.0 -110.0 -72.0) :rot #2f((-2.220446e-16 -1.0 -8.715764e-33) (1.0 -2.220446e-16 -8.715764e-33) (8.715764e-33 -8.715764e-33 1.0))))))
     (send blink0 :assoc rb-end-coords)

     ;; definition of joint

     ;; definition of :titan-head-neck-y
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink13 :name :titan-head-neck-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :titan-head-neck-p
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink14 :name :titan-head-neck-p :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lf-crotch-y
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :lf-crotch-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lf-crotch-r
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :lf-crotch-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lf-knee-r
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :lf-knee-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lb-crotch-y
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :lb-crotch-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lb-crotch-r
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :lb-crotch-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lb-knee-r
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink6 :name :lb-knee-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rf-crotch-y
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink7 :name :rf-crotch-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rf-crotch-r
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink8 :name :rf-crotch-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rf-knee-r
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink8 :child-link blink9 :name :rf-knee-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rb-crotch-y
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink10 :name :rb-crotch-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rb-crotch-r
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink11 :name :rb-crotch-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rb-knee-r
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink12 :name :rb-knee-r :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     (setq titan-head-root-link blink13)
     (setq titan-head (list blink13 blink14))
     (setq lf-root-link blink1)
     (setq lf (list blink1 blink2 blink3))
     (setq lb-root-link blink4)
     (setq lb (list blink4 blink5 blink6))
     (setq rf-root-link blink7)
     (setq rf (list blink7 blink8 blink9))
     (setq rb-root-link blink10)
     (setq rb (list blink10 blink11 blink12))

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:titan-head-neck-y (&rest args) (forward-message-to joint12 args))
  (:titan-head-neck-p (&rest args) (forward-message-to joint13 args))
  (:lf-crotch-y (&rest args) (forward-message-to joint0 args))
  (:lf-crotch-r (&rest args) (forward-message-to joint1 args))
  (:lf-knee-r (&rest args) (forward-message-to joint2 args))
  (:lb-crotch-y (&rest args) (forward-message-to joint3 args))
  (:lb-crotch-r (&rest args) (forward-message-to joint4 args))
  (:lb-knee-r (&rest args) (forward-message-to joint5 args))
  (:rf-crotch-y (&rest args) (forward-message-to joint6 args))
  (:rf-crotch-r (&rest args) (forward-message-to joint7 args))
  (:rf-knee-r (&rest args) (forward-message-to joint8 args))
  (:rb-crotch-y (&rest args) (forward-message-to joint9 args))
  (:rb-crotch-r (&rest args) (forward-message-to joint10 args))
  (:rb-knee-r (&rest args) (forward-message-to joint11 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun jrob1 (&rest args) (instance* jrob1-robot :init args))
;; (format *error-output* "(instance jrob1-robot :init) for generating model~%")
