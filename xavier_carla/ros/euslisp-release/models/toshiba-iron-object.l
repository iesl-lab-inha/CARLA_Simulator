;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass toshiba-iron-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod toshiba-iron-object
  (:init
   (&rest args &key (name "toshiba-iron") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :toshiba-iron-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.9044 75.9057 -35.0) (float-vector -60.9044 34.0943 -35.0) (float-vector -52.2113 -6.8034 -35.0) (float-vector -35.2051 -45.0 -35.0) (float-vector -10.629 -78.8261 -35.0) (float-vector 1.421085e-14 -88.3965 -35.0) (float-vector 10.629 -78.8261 -35.0) (float-vector 35.2051 -45.0 -35.0) (float-vector 52.2113 -6.8034 -35.0) (float-vector 60.9044 34.0943 -35.0) (float-vector 60.9044 75.9057 -35.0) (float-vector 56.8458 95.0 -35.0) (float-vector -56.8458 95.0 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9044 75.9057 -40.0) (float-vector 56.8458 95.0 -40.0) (float-vector 56.8458 95.0 -35.0) (float-vector 60.9044 75.9057 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9044 34.0943 -40.0) (float-vector 60.9044 75.9057 -40.0) (float-vector 60.9044 75.9057 -35.0) (float-vector 60.9044 34.0943 -35.0)))
         (instance face :init :vertices (list (float-vector 52.2113 -6.8034 -40.0) (float-vector 60.9044 34.0943 -40.0) (float-vector 60.9044 34.0943 -35.0) (float-vector 52.2113 -6.8034 -35.0)))
         (instance face :init :vertices (list (float-vector 35.2051 -45.0 -40.0) (float-vector 52.2113 -6.8034 -40.0) (float-vector 52.2113 -6.8034 -35.0) (float-vector 35.2051 -45.0 -35.0)))
         (instance face :init :vertices (list (float-vector 10.629 -78.8261 -40.0) (float-vector 35.2051 -45.0 -40.0) (float-vector 35.2051 -45.0 -35.0) (float-vector 10.629 -78.8261 -35.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 -88.3965 -40.0) (float-vector 10.629 -78.8261 -40.0) (float-vector 10.629 -78.8261 -35.0) (float-vector 1.421085e-14 -88.3965 -35.0)))
         (instance face :init :vertices (list (float-vector -10.629 -78.8261 -40.0) (float-vector -35.2051 -45.0 -40.0) (float-vector -52.2113 -6.8034 -40.0) (float-vector -60.9044 34.0943 -40.0) (float-vector -60.9044 75.9057 -40.0) (float-vector -56.8458 95.0 -40.0) (float-vector 56.8458 95.0 -40.0) (float-vector 60.9044 75.9057 -40.0) (float-vector 60.9044 34.0943 -40.0) (float-vector 52.2113 -6.8034 -40.0) (float-vector 35.2051 -45.0 -40.0) (float-vector 10.629 -78.8261 -40.0) (float-vector 5.684342e-14 -88.3965 -40.0)))
         (instance face :init :vertices (list (float-vector -10.629 -78.8261 -40.0) (float-vector 5.684342e-14 -88.3965 -40.0) (float-vector 1.421085e-14 -88.3965 -35.0) (float-vector -10.629 -78.8261 -35.0)))
         (instance face :init :vertices (list (float-vector -35.2051 -45.0 -40.0) (float-vector -10.629 -78.8261 -40.0) (float-vector -10.629 -78.8261 -35.0) (float-vector -35.2051 -45.0 -35.0)))
         (instance face :init :vertices (list (float-vector -52.2113 -6.8034 -40.0) (float-vector -35.2051 -45.0 -40.0) (float-vector -35.2051 -45.0 -35.0) (float-vector -52.2113 -6.8034 -35.0)))
         (instance face :init :vertices (list (float-vector -60.9044 34.0943 -40.0) (float-vector -52.2113 -6.8034 -40.0) (float-vector -52.2113 -6.8034 -35.0) (float-vector -60.9044 34.0943 -35.0)))
         (instance face :init :vertices (list (float-vector -60.9044 75.9057 -35.0) (float-vector -56.8458 95.0 -35.0) (float-vector -56.8458 95.0 -40.0) (float-vector -60.9044 75.9057 -40.0)))
         (instance face :init :vertices (list (float-vector -60.9044 75.9057 -40.0) (float-vector -60.9044 34.0943 -40.0) (float-vector -60.9044 34.0943 -35.0) (float-vector -60.9044 75.9057 -35.0)))
         (instance face :init :vertices (list (float-vector -56.8458 95.0 -35.0) (float-vector 56.8458 95.0 -35.0) (float-vector 56.8458 95.0 -40.0) (float-vector -56.8458 95.0 -40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 60.0 70.0) (float-vector -15.0 60.0 70.0) (float-vector -15.0 -1.530808e-15 70.0) (float-vector 15.0 1.900678e-15 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 0.0) (float-vector 15.0 60.0 0.0) (float-vector 15.0 1.900678e-15 0.0) (float-vector -15.0 -1.530808e-15 0.0)))
         (instance face :init :vertices (list (float-vector 15.0 60.0 70.0) (float-vector 15.0 60.0 0.0) (float-vector -15.0 60.0 0.0) (float-vector -15.0 60.0 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 1.900678e-15 70.0) (float-vector 15.0 1.900678e-15 0.0) (float-vector 15.0 60.0 0.0) (float-vector 15.0 60.0 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 -1.530808e-15 70.0) (float-vector -15.0 -1.530808e-15 0.0) (float-vector 15.0 1.900678e-15 0.0) (float-vector 15.0 1.900678e-15 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 70.0) (float-vector -15.0 60.0 0.0) (float-vector -15.0 -1.530808e-15 0.0) (float-vector -15.0 -1.530808e-15 70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 150.0 70.0) (float-vector -15.0 150.0 70.0) (float-vector -15.0 -1.530808e-15 70.0) (float-vector 15.0 -5.204749e-15 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 150.0 55.0) (float-vector 15.0 150.0 55.0) (float-vector 15.0 -5.204749e-15 55.0) (float-vector -15.0 -1.530808e-15 55.0)))
         (instance face :init :vertices (list (float-vector 15.0 150.0 70.0) (float-vector 15.0 150.0 55.0) (float-vector -15.0 150.0 55.0) (float-vector -15.0 150.0 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 -5.204749e-15 70.0) (float-vector 15.0 -5.204749e-15 55.0) (float-vector 15.0 150.0 55.0) (float-vector 15.0 150.0 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 -1.530808e-15 70.0) (float-vector -15.0 -1.530808e-15 55.0) (float-vector 15.0 -5.204749e-15 55.0) (float-vector 15.0 -5.204749e-15 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 150.0 70.0) (float-vector -15.0 150.0 55.0) (float-vector -15.0 -1.530808e-15 55.0) (float-vector -15.0 -1.530808e-15 70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 43.6846 -25.9548 17.9861) (float-vector -3.552714e-14 -44.8889 21.6237) (float-vector 21.1794 -64.3047 -2.40921) (float-vector 35.2051 -45.0 6.72257)))
         (instance face :init :vertices (list (float-vector -3.552714e-14 -44.8889 21.6237) (float-vector -21.1794 -64.3047 -2.40921) (float-vector -10.629 -78.8261 -20.3838) (float-vector 4.973799e-14 -88.3965 -32.23) (float-vector 10.629 -78.8261 -20.3838) (float-vector 21.1794 -64.3047 -2.40921)))
         (instance face :init :vertices (list (float-vector -3.552714e-14 -44.8889 21.6237) (float-vector -43.6846 -25.9548 17.9861) (float-vector -35.2051 -45.0 6.72257) (float-vector -21.1794 -64.3047 -2.40921)))
         (instance face :init :vertices (list (float-vector -3.552714e-14 -44.8889 21.6237) (float-vector -2.131628e-14 2.19779 35.0) (float-vector -39.2705 30.7295 35.0) (float-vector -57.7602 19.3022 27.9376) (float-vector -52.2113 -6.8034 21.6668) (float-vector -43.6846 -25.9548 17.9861)))
         (instance face :init :vertices (list (float-vector -39.2705 79.2705 35.0) (float-vector -57.7602 90.6978 27.9376) (float-vector -60.9044 75.9057 26.7366) (float-vector -60.9044 34.0943 26.7366) (float-vector -57.7602 19.3022 27.9376) (float-vector -39.2705 30.7295 35.0)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 107.802 35.0) (float-vector 2.131628e-14 125.0 30.1145) (float-vector -48.5619 125.0 20.0915) (float-vector -52.2113 116.803 21.6668) (float-vector -57.7602 90.6978 27.9376) (float-vector -39.2705 79.2705 35.0)))
         (instance face :init :vertices (list (float-vector 39.2705 79.2705 35.0) (float-vector 57.7602 90.6978 27.9376) (float-vector 52.2113 116.803 21.6668) (float-vector 48.5619 125.0 20.0915) (float-vector 2.131628e-14 125.0 30.1145) (float-vector 2.131628e-14 107.802 35.0)))
         (instance face :init :vertices (list (float-vector 39.2705 30.7295 35.0) (float-vector 57.7602 19.3022 27.9376) (float-vector 60.9044 34.0943 26.7366) (float-vector 60.9044 75.9057 26.7366) (float-vector 57.7602 90.6978 27.9376) (float-vector 39.2705 79.2705 35.0)))
         (instance face :init :vertices (list (float-vector 57.7602 19.3022 27.9376) (float-vector 39.2705 30.7295 35.0) (float-vector -2.131628e-14 2.19779 35.0) (float-vector -3.552714e-14 -44.8889 21.6237) (float-vector 43.6846 -25.9548 17.9861) (float-vector 52.2113 -6.8034 21.6668)))
         (instance face :init :vertices (list (float-vector -2.131628e-14 2.19779 35.0) (float-vector 39.2705 30.7295 35.0) (float-vector 39.2705 79.2705 35.0) (float-vector 2.131628e-14 107.802 35.0) (float-vector -39.2705 79.2705 35.0) (float-vector -39.2705 30.7295 35.0)))
         (instance face :init :vertices (list (float-vector -48.5619 125.0 -35.0) (float-vector -48.5619 125.0 20.0915) (float-vector 2.131628e-14 125.0 30.1145) (float-vector 48.5619 125.0 20.0915) (float-vector 48.5619 125.0 -35.0)))
         (instance face :init :vertices (list (float-vector -52.2113 116.803 21.6668) (float-vector -52.2113 116.803 -35.0) (float-vector -60.9044 75.9057 -35.0) (float-vector -60.9044 75.9057 26.7366) (float-vector -57.7602 90.6978 27.9376)))
         (instance face :init :vertices (list (float-vector -48.5619 125.0 -35.0) (float-vector -52.2113 116.803 -35.0) (float-vector -52.2113 116.803 21.6668) (float-vector -48.5619 125.0 20.0915)))
         (instance face :init :vertices (list (float-vector -60.9044 34.0943 -35.0) (float-vector -60.9044 34.0943 26.7366) (float-vector -60.9044 75.9057 26.7366) (float-vector -60.9044 75.9057 -35.0)))
         (instance face :init :vertices (list (float-vector -52.2113 -6.8034 -35.0) (float-vector -52.2113 -6.8034 21.6668) (float-vector -57.7602 19.3022 27.9376) (float-vector -60.9044 34.0943 26.7366) (float-vector -60.9044 34.0943 -35.0)))
         (instance face :init :vertices (list (float-vector -35.2051 -45.0 -35.0) (float-vector -35.2051 -45.0 6.72257) (float-vector -43.6846 -25.9548 17.9861) (float-vector -52.2113 -6.8034 21.6668) (float-vector -52.2113 -6.8034 -35.0)))
         (instance face :init :vertices (list (float-vector -10.629 -78.8261 -35.0) (float-vector -10.629 -78.8261 -20.3838) (float-vector -21.1794 -64.3047 -2.40921) (float-vector -35.2051 -45.0 6.72257) (float-vector -35.2051 -45.0 -35.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 -88.3965 -35.0) (float-vector 4.973799e-14 -88.3965 -32.23) (float-vector -10.629 -78.8261 -20.3838) (float-vector -10.629 -78.8261 -35.0)))
         (instance face :init :vertices (list (float-vector 10.629 -78.8261 -35.0) (float-vector 5.684342e-14 -88.3965 -35.0) (float-vector -10.629 -78.8261 -35.0) (float-vector -35.2051 -45.0 -35.0) (float-vector -52.2113 -6.8034 -35.0) (float-vector -60.9044 34.0943 -35.0) (float-vector -60.9044 75.9057 -35.0) (float-vector -52.2113 116.803 -35.0) (float-vector -48.5619 125.0 -35.0) (float-vector 48.5619 125.0 -35.0) (float-vector 52.2113 116.803 -35.0) (float-vector 60.9044 75.9057 -35.0) (float-vector 60.9044 34.0943 -35.0) (float-vector 52.2113 -6.8034 -35.0) (float-vector 35.2051 -45.0 -35.0)))
         (instance face :init :vertices (list (float-vector 10.629 -78.8261 -35.0) (float-vector 10.629 -78.8261 -20.3838) (float-vector 4.973799e-14 -88.3965 -32.23) (float-vector 5.684342e-14 -88.3965 -35.0)))
         (instance face :init :vertices (list (float-vector 35.2051 -45.0 -35.0) (float-vector 35.2051 -45.0 6.72257) (float-vector 21.1794 -64.3047 -2.40921) (float-vector 10.629 -78.8261 -20.3838) (float-vector 10.629 -78.8261 -35.0)))
         (instance face :init :vertices (list (float-vector 52.2113 -6.8034 -35.0) (float-vector 52.2113 -6.8034 21.6668) (float-vector 43.6846 -25.9548 17.9861) (float-vector 35.2051 -45.0 6.72257) (float-vector 35.2051 -45.0 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9044 34.0943 -35.0) (float-vector 60.9044 34.0943 26.7366) (float-vector 57.7602 19.3022 27.9376) (float-vector 52.2113 -6.8034 21.6668) (float-vector 52.2113 -6.8034 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9044 75.9057 -35.0) (float-vector 60.9044 75.9057 26.7366) (float-vector 60.9044 34.0943 26.7366) (float-vector 60.9044 34.0943 -35.0)))
         (instance face :init :vertices (list (float-vector 52.2113 116.803 21.6668) (float-vector 52.2113 116.803 -35.0) (float-vector 48.5619 125.0 -35.0) (float-vector 48.5619 125.0 20.0915)))
         (instance face :init :vertices (list (float-vector 52.2113 116.803 -35.0) (float-vector 52.2113 116.803 21.6668) (float-vector 57.7602 90.6978 27.9376) (float-vector 60.9044 75.9057 26.7366) (float-vector 60.9044 75.9057 -35.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.9904 -7.5 70.0) (float-vector 15.0 0.0 70.0) (float-vector 12.9904 7.5 70.0) (float-vector 7.5 12.9904 70.0) (float-vector 7.105427e-15 15.0 70.0) (float-vector -7.5 12.9904 70.0) (float-vector -12.9904 7.5 70.0) (float-vector -15.0 1.421085e-14 70.0) (float-vector -12.9904 -7.5 70.0) (float-vector -7.5 -12.9904 70.0) (float-vector -2.131628e-14 -15.0 70.0) (float-vector 7.5 -12.9904 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 0.0) (float-vector 12.9904 -7.5 0.0) (float-vector 7.5 -12.9904 0.0) (float-vector -2.131628e-14 -15.0 0.0) (float-vector -7.5 -12.9904 0.0) (float-vector -12.9904 -7.5 0.0) (float-vector -15.0 1.421085e-14 0.0) (float-vector -12.9904 7.5 0.0) (float-vector -7.5 12.9904 0.0) (float-vector 7.105427e-15 15.0 0.0) (float-vector 7.5 12.9904 0.0) (float-vector 12.9904 7.5 0.0)))
         (instance face :init :vertices (list (float-vector 12.9904 -7.5 70.0) (float-vector 12.9904 -7.5 0.0) (float-vector 15.0 0.0 0.0) (float-vector 15.0 0.0 70.0)))
         (instance face :init :vertices (list (float-vector 7.5 -12.9904 70.0) (float-vector 7.5 -12.9904 0.0) (float-vector 12.9904 -7.5 0.0) (float-vector 12.9904 -7.5 70.0)))
         (instance face :init :vertices (list (float-vector -2.131628e-14 -15.0 70.0) (float-vector -2.131628e-14 -15.0 0.0) (float-vector 7.5 -12.9904 0.0) (float-vector 7.5 -12.9904 70.0)))
         (instance face :init :vertices (list (float-vector -7.5 -12.9904 70.0) (float-vector -7.5 -12.9904 0.0) (float-vector -2.131628e-14 -15.0 0.0) (float-vector -2.131628e-14 -15.0 70.0)))
         (instance face :init :vertices (list (float-vector -12.9904 -7.5 70.0) (float-vector -12.9904 -7.5 0.0) (float-vector -7.5 -12.9904 0.0) (float-vector -7.5 -12.9904 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 1.421085e-14 70.0) (float-vector -15.0 1.421085e-14 0.0) (float-vector -12.9904 -7.5 0.0) (float-vector -12.9904 -7.5 70.0)))
         (instance face :init :vertices (list (float-vector -12.9904 7.5 70.0) (float-vector -12.9904 7.5 0.0) (float-vector -15.0 1.421085e-14 0.0) (float-vector -15.0 1.421085e-14 70.0)))
         (instance face :init :vertices (list (float-vector -7.5 12.9904 70.0) (float-vector -7.5 12.9904 0.0) (float-vector -12.9904 7.5 0.0) (float-vector -12.9904 7.5 70.0)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 15.0 70.0) (float-vector 7.105427e-15 15.0 0.0) (float-vector -7.5 12.9904 0.0) (float-vector -7.5 12.9904 70.0)))
         (instance face :init :vertices (list (float-vector 7.5 12.9904 70.0) (float-vector 7.5 12.9904 0.0) (float-vector 7.105427e-15 15.0 0.0) (float-vector 7.105427e-15 15.0 70.0)))
         (instance face :init :vertices (list (float-vector 12.9904 7.5 70.0) (float-vector 12.9904 7.5 0.0) (float-vector 7.5 12.9904 0.0) (float-vector 7.5 12.9904 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 70.0) (float-vector 15.0 0.0 0.0) (float-vector 12.9904 7.5 0.0) (float-vector 12.9904 7.5 70.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color :pink)
     (send (elt bc 4) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :toshiba-iron-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun toshiba-iron (&rest args) (instance* toshiba-iron-object :init args))
;; (format *error-output* "(instance toshiba-iron-object :init) for generating model~%")
