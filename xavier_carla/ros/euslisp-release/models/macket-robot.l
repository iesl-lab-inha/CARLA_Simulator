;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass macket-robot
  :super robot-model
  :slots (sensors sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor10 sensor11 sensor12 sensor13 sensor14 sensor15 sensor16 sensor17 sensor18 sensor19 sensor20 sensor21 sensor22 sensor23 sensor24 sensor25 sensor26 sensor27 sensor28 sensor29 sensor30 sensor31 sensor32 sensor33 sensor34 sensor35 sensor36 sensor37 sensor38 sensor39 sensor40 sensor41 sensor42 sensor43 sensor44 sensor45 sensor46 sensor47 sensor48 sensor49 sensor50 sensor51 sensor52 sensor53 sensor54 sensor55 sensor56 sensor57 sensor58 sensor59 sensor60 sensor61 sensor62 sensor63 sensor64 sensor65 sensor66 sensor67 sensor68 sensor69 sensor70 sensor71 sensor72 sensor73 sensor74 sensor75 sensor76 sensor77 sensor78 sensor79 sensor80 sensor81 sensor82 sensor83 sensor84 sensor85 sensor86 sensor87 sensor88 sensor89 sensor90 sensor91 sensor92 sensor93 sensor94 sensor95 sensor96 sensor97 sensor98 sensor99 sensor100 sensor101 sensor102 sensor103 sensor104 sensor105 sensor106 sensor107 sensor108 sensor109 sensor110 sensor111 sensor112 sensor113 sensor114 sensor115 sensor116 sensor117 sensor118 sensor119 sensor120 sensor121 sensor122 sensor123 sensor124 sensor125 sensor126 sensor127 sensor128 sensor129 sensor130 sensor131 sensor132 sensor133 sensor134 sensor135 sensor136 sensor137 sensor138 sensor139 sensor140 sensor141 sensor142 sensor143 sensor144 sensor145 sensor146
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 joint20 joint21 joint22 joint23 joint24 ))
(defmethod macket-robot
  (:init
   (&rest args &key (name "macket") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20 blink21 blink22 blink23 blink24 blink25
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 38.182 -57.287 -17.0) (float-vector 36.182 -57.287 -17.0) (float-vector 36.182 -59.287 -17.0) (float-vector 38.182 -59.287 -17.0)))
         (instance face :init :vertices (list (float-vector 36.182 -57.287 -19.0) (float-vector 38.182 -57.287 -19.0) (float-vector 38.182 -59.287 -19.0) (float-vector 36.182 -59.287 -19.0)))
         (instance face :init :vertices (list (float-vector 38.182 -57.287 -17.0) (float-vector 38.182 -57.287 -19.0) (float-vector 36.182 -57.287 -19.0) (float-vector 36.182 -57.287 -17.0)))
         (instance face :init :vertices (list (float-vector 38.182 -59.287 -17.0) (float-vector 38.182 -59.287 -19.0) (float-vector 38.182 -57.287 -19.0) (float-vector 38.182 -57.287 -17.0)))
         (instance face :init :vertices (list (float-vector 36.182 -59.287 -17.0) (float-vector 36.182 -59.287 -19.0) (float-vector 38.182 -59.287 -19.0) (float-vector 38.182 -59.287 -17.0)))
         (instance face :init :vertices (list (float-vector 36.182 -57.287 -17.0) (float-vector 36.182 -57.287 -19.0) (float-vector 36.182 -59.287 -19.0) (float-vector 36.182 -59.287 -17.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 38.182 59.287 -17.0) (float-vector 36.182 59.287 -17.0) (float-vector 36.182 57.287 -17.0) (float-vector 38.182 57.287 -17.0)))
         (instance face :init :vertices (list (float-vector 36.182 59.287 -19.0) (float-vector 38.182 59.287 -19.0) (float-vector 38.182 57.287 -19.0) (float-vector 36.182 57.287 -19.0)))
         (instance face :init :vertices (list (float-vector 38.182 59.287 -17.0) (float-vector 38.182 59.287 -19.0) (float-vector 36.182 59.287 -19.0) (float-vector 36.182 59.287 -17.0)))
         (instance face :init :vertices (list (float-vector 38.182 57.287 -17.0) (float-vector 38.182 57.287 -19.0) (float-vector 38.182 59.287 -19.0) (float-vector 38.182 59.287 -17.0)))
         (instance face :init :vertices (list (float-vector 36.182 57.287 -17.0) (float-vector 36.182 57.287 -19.0) (float-vector 38.182 57.287 -19.0) (float-vector 38.182 57.287 -17.0)))
         (instance face :init :vertices (list (float-vector 36.182 59.287 -17.0) (float-vector 36.182 59.287 -19.0) (float-vector 36.182 57.287 -19.0) (float-vector 36.182 57.287 -17.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1.0 1.0 1.0) (float-vector -1.0 1.0 1.0) (float-vector -1.0 -1.0 1.0) (float-vector 1.0 -1.0 1.0)))
         (instance face :init :vertices (list (float-vector -1.0 1.0 -1.0) (float-vector 1.0 1.0 -1.0) (float-vector 1.0 -1.0 -1.0) (float-vector -1.0 -1.0 -1.0)))
         (instance face :init :vertices (list (float-vector 1.0 1.0 1.0) (float-vector 1.0 1.0 -1.0) (float-vector -1.0 1.0 -1.0) (float-vector -1.0 1.0 1.0)))
         (instance face :init :vertices (list (float-vector 1.0 -1.0 1.0) (float-vector 1.0 -1.0 -1.0) (float-vector 1.0 1.0 -1.0) (float-vector 1.0 1.0 1.0)))
         (instance face :init :vertices (list (float-vector -1.0 -1.0 1.0) (float-vector -1.0 -1.0 -1.0) (float-vector 1.0 -1.0 -1.0) (float-vector 1.0 -1.0 1.0)))
         (instance face :init :vertices (list (float-vector -1.0 1.0 1.0) (float-vector -1.0 1.0 -1.0) (float-vector -1.0 -1.0 -1.0) (float-vector -1.0 -1.0 1.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.45 -12.2 -20.5) (float-vector 22.45 12.2 -20.5) (float-vector 16.85 17.8 -20.5) (float-vector -22.15 17.8 -20.5) (float-vector -28.15 12.2 -20.5) (float-vector -28.15 -12.2 -20.5) (float-vector -22.15 -17.8 -20.5) (float-vector 16.85 -17.8 -20.5)))
         (instance face :init :vertices (list (float-vector 22.45 12.2 -56.0) (float-vector 22.45 -12.2 -56.0) (float-vector 16.85 -17.8 -56.0) (float-vector -22.15 -17.8 -56.0) (float-vector -28.15 -12.2 -56.0) (float-vector -28.15 12.2 -56.0) (float-vector -22.15 17.8 -56.0) (float-vector 16.85 17.8 -56.0)))
         (instance face :init :vertices (list (float-vector 22.45 -12.2 -20.5) (float-vector 22.45 -12.2 -56.0) (float-vector 22.45 12.2 -56.0) (float-vector 22.45 12.2 -20.5)))
         (instance face :init :vertices (list (float-vector 16.85 -17.8 -20.5) (float-vector 16.85 -17.8 -56.0) (float-vector 22.45 -12.2 -56.0) (float-vector 22.45 -12.2 -20.5)))
         (instance face :init :vertices (list (float-vector -22.15 -17.8 -20.5) (float-vector -22.15 -17.8 -56.0) (float-vector 16.85 -17.8 -56.0) (float-vector 16.85 -17.8 -20.5)))
         (instance face :init :vertices (list (float-vector -28.15 -12.2 -20.5) (float-vector -28.15 -12.2 -56.0) (float-vector -22.15 -17.8 -56.0) (float-vector -22.15 -17.8 -20.5)))
         (instance face :init :vertices (list (float-vector -28.15 12.2 -20.5) (float-vector -28.15 12.2 -56.0) (float-vector -28.15 -12.2 -56.0) (float-vector -28.15 -12.2 -20.5)))
         (instance face :init :vertices (list (float-vector -22.15 17.8 -20.5) (float-vector -22.15 17.8 -56.0) (float-vector -28.15 12.2 -56.0) (float-vector -28.15 12.2 -20.5)))
         (instance face :init :vertices (list (float-vector 16.85 17.8 -20.5) (float-vector 16.85 17.8 -56.0) (float-vector -22.15 17.8 -56.0) (float-vector -22.15 17.8 -20.5)))
         (instance face :init :vertices (list (float-vector 22.45 12.2 -20.5) (float-vector 22.45 12.2 -56.0) (float-vector 16.85 17.8 -56.0) (float-vector 16.85 17.8 -20.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color :gray30)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 75 :centroid (float-vector -1.71794 1.631359e-15 -37.2) :inertia-tensor #2f((25448.7 -1.695159e-12 -19535.2) (-1.695159e-12 40445.2 -2.208207e-12) (-19535.2 -2.208207e-12 14997.5))))

     ;; definition of :rleg-crotch-bracket
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -75.5 -14.5 43.1) (float-vector -75.5 14.5 43.1) (float-vector -75.5 20.1 37.6) (float-vector -75.5 20.1 -10.0) (float-vector -75.5 14.5 -18.0) (float-vector -75.5 -14.5 -18.0) (float-vector -75.5 -20.1 -10.0) (float-vector -75.5 -20.1 37.6)))
         (instance face :init :vertices (list (float-vector -34.5 14.5 43.1) (float-vector -34.5 -14.5 43.1) (float-vector -34.5 -20.1 37.6) (float-vector -34.5 -20.1 -10.0) (float-vector -34.5 -14.5 -18.0) (float-vector -34.5 14.5 -18.0) (float-vector -34.5 20.1 -10.0) (float-vector -34.5 20.1 37.6)))
         (instance face :init :vertices (list (float-vector -75.5 -14.5 43.1) (float-vector -34.5 -14.5 43.1) (float-vector -34.5 14.5 43.1) (float-vector -75.5 14.5 43.1)))
         (instance face :init :vertices (list (float-vector -75.5 -20.1 37.6) (float-vector -34.5 -20.1 37.6) (float-vector -34.5 -14.5 43.1) (float-vector -75.5 -14.5 43.1)))
         (instance face :init :vertices (list (float-vector -75.5 -20.1 -10.0) (float-vector -34.5 -20.1 -10.0) (float-vector -34.5 -20.1 37.6) (float-vector -75.5 -20.1 37.6)))
         (instance face :init :vertices (list (float-vector -75.5 -14.5 -18.0) (float-vector -34.5 -14.5 -18.0) (float-vector -34.5 -20.1 -10.0) (float-vector -75.5 -20.1 -10.0)))
         (instance face :init :vertices (list (float-vector -75.5 14.5 -18.0) (float-vector -34.5 14.5 -18.0) (float-vector -34.5 -14.5 -18.0) (float-vector -75.5 -14.5 -18.0)))
         (instance face :init :vertices (list (float-vector -75.5 20.1 -10.0) (float-vector -34.5 20.1 -10.0) (float-vector -34.5 14.5 -18.0) (float-vector -75.5 14.5 -18.0)))
         (instance face :init :vertices (list (float-vector -75.5 20.1 37.6) (float-vector -34.5 20.1 37.6) (float-vector -34.5 20.1 -10.0) (float-vector -75.5 20.1 -10.0)))
         (instance face :init :vertices (list (float-vector -75.5 14.5 43.1) (float-vector -34.5 14.5 43.1) (float-vector -34.5 20.1 37.6) (float-vector -75.5 20.1 37.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -35.0 15.0 0.0) (float-vector -35.0 15.0 50.0) (float-vector 35.0 15.0 50.0) (float-vector 35.0 15.0 0.0) (float-vector 33.0 15.0 0.0) (float-vector 33.0 15.0 48.0) (float-vector -33.0 15.0 48.0) (float-vector -33.0 15.0 0.0)))
         (instance face :init :vertices (list (float-vector -35.0 -15.0 50.0) (float-vector 35.0 -15.0 50.0) (float-vector 35.0 15.0 50.0) (float-vector -35.0 15.0 50.0)))
         (instance face :init :vertices (list (float-vector -35.0 -15.0 0.0) (float-vector -33.0 -15.0 0.0) (float-vector -33.0 -15.0 48.0) (float-vector 33.0 -15.0 48.0) (float-vector 33.0 -15.0 0.0) (float-vector 35.0 -15.0 0.0) (float-vector 35.0 -15.0 50.0) (float-vector -35.0 -15.0 50.0)))
         (instance face :init :vertices (list (float-vector 35.0 -10.6066 -10.6066) (float-vector 35.0 -15.0 0.0) (float-vector 33.0 -15.0 0.0) (float-vector 33.0 -10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector -35.0 -10.6066 -10.6066) (float-vector -33.0 -10.6066 -10.6066) (float-vector -33.0 -15.0 0.0) (float-vector -35.0 -15.0 0.0)))
         (instance face :init :vertices (list (float-vector 35.0 -7.105427e-15 -15.0) (float-vector 35.0 -10.6066 -10.6066) (float-vector 33.0 -10.6066 -10.6066) (float-vector 33.0 -7.105427e-15 -15.0)))
         (instance face :init :vertices (list (float-vector -35.0 0.0 -15.0) (float-vector -33.0 0.0 -15.0) (float-vector -33.0 -10.6066 -10.6066) (float-vector -35.0 -10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector 35.0 10.6066 -10.6066) (float-vector 35.0 -7.105427e-15 -15.0) (float-vector 33.0 -7.105427e-15 -15.0) (float-vector 33.0 10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector -35.0 10.6066 -10.6066) (float-vector -33.0 10.6066 -10.6066) (float-vector -33.0 0.0 -15.0) (float-vector -35.0 0.0 -15.0)))
         (instance face :init :vertices (list (float-vector 35.0 15.0 0.0) (float-vector 35.0 15.0 50.0) (float-vector 35.0 -15.0 50.0) (float-vector 35.0 -15.0 0.0) (float-vector 35.0 -10.6066 -10.6066) (float-vector 35.0 -7.105427e-15 -15.0) (float-vector 35.0 10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector -35.0 10.6066 -10.6066) (float-vector -35.0 0.0 -15.0) (float-vector -35.0 -10.6066 -10.6066) (float-vector -35.0 -15.0 0.0) (float-vector -35.0 -15.0 50.0) (float-vector -35.0 15.0 50.0) (float-vector -35.0 15.0 0.0)))
         (instance face :init :vertices (list (float-vector 35.0 10.6066 -10.6066) (float-vector 33.0 10.6066 -10.6066) (float-vector 33.0 15.0 0.0) (float-vector 35.0 15.0 0.0)))
         (instance face :init :vertices (list (float-vector -35.0 15.0 0.0) (float-vector -33.0 15.0 0.0) (float-vector -33.0 10.6066 -10.6066) (float-vector -35.0 10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector 33.0 15.0 48.0) (float-vector 33.0 15.0 0.0) (float-vector 33.0 10.6066 -10.6066) (float-vector 33.0 -7.105427e-15 -15.0) (float-vector 33.0 -10.6066 -10.6066) (float-vector 33.0 -15.0 0.0) (float-vector 33.0 -15.0 48.0)))
         (instance face :init :vertices (list (float-vector -33.0 15.0 48.0) (float-vector 33.0 15.0 48.0) (float-vector 33.0 -15.0 48.0) (float-vector -33.0 -15.0 48.0)))
         (instance face :init :vertices (list (float-vector -33.0 -15.0 48.0) (float-vector -33.0 -15.0 0.0) (float-vector -33.0 -10.6066 -10.6066) (float-vector -33.0 0.0 -15.0) (float-vector -33.0 10.6066 -10.6066) (float-vector -33.0 15.0 0.0) (float-vector -33.0 15.0 48.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :gray90)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-bracket :weight 146.329 :centroid (float-vector -43.6005 -1.954847e-15 16.2766) :inertia-tensor #2f((74201.5 -4.479970e-12 4387.62) (-4.479970e-12 1.657762e+05 -1.051365e-12) (4387.62 -1.051365e-12 96125.0))))

     ;; definition of :rleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.5 20.5 48.1) (float-vector 14.5 20.5 48.1) (float-vector 20.1 20.5 42.6) (float-vector 20.1 20.5 -5.0) (float-vector 14.5 20.5 -13.0) (float-vector -14.5 20.5 -13.0) (float-vector -20.1 20.5 -5.0) (float-vector -20.1 20.5 42.6)))
         (instance face :init :vertices (list (float-vector 14.5 -20.5 48.1) (float-vector -14.5 -20.5 48.1) (float-vector -20.1 -20.5 42.6) (float-vector -20.1 -20.5 -5.0) (float-vector -14.5 -20.5 -13.0) (float-vector 14.5 -20.5 -13.0) (float-vector 20.1 -20.5 -5.0) (float-vector 20.1 -20.5 42.6)))
         (instance face :init :vertices (list (float-vector -14.5 20.5 48.1) (float-vector -14.5 -20.5 48.1) (float-vector 14.5 -20.5 48.1) (float-vector 14.5 20.5 48.1)))
         (instance face :init :vertices (list (float-vector -20.1 20.5 42.6) (float-vector -20.1 -20.5 42.6) (float-vector -14.5 -20.5 48.1) (float-vector -14.5 20.5 48.1)))
         (instance face :init :vertices (list (float-vector -20.1 20.5 -5.0) (float-vector -20.1 -20.5 -5.0) (float-vector -20.1 -20.5 42.6) (float-vector -20.1 20.5 42.6)))
         (instance face :init :vertices (list (float-vector -14.5 20.5 -13.0) (float-vector -14.5 -20.5 -13.0) (float-vector -20.1 -20.5 -5.0) (float-vector -20.1 20.5 -5.0)))
         (instance face :init :vertices (list (float-vector 14.5 20.5 -13.0) (float-vector 14.5 -20.5 -13.0) (float-vector -14.5 -20.5 -13.0) (float-vector -14.5 20.5 -13.0)))
         (instance face :init :vertices (list (float-vector 20.1 20.5 -5.0) (float-vector 20.1 -20.5 -5.0) (float-vector 14.5 -20.5 -13.0) (float-vector 14.5 20.5 -13.0)))
         (instance face :init :vertices (list (float-vector 20.1 20.5 42.6) (float-vector 20.1 -20.5 42.6) (float-vector 20.1 -20.5 -5.0) (float-vector 20.1 20.5 -5.0)))
         (instance face :init :vertices (list (float-vector 14.5 20.5 48.1) (float-vector 14.5 -20.5 48.1) (float-vector 20.1 -20.5 42.6) (float-vector 20.1 20.5 42.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.0 39.5 1.0) (float-vector 16.0 27.5 1.0) (float-vector 13.8564 27.5 -7.0) (float-vector 13.8564 39.5 -7.0)))
         (instance face :init :vertices (list (float-vector 13.8564 27.5 -7.0) (float-vector 8.0 27.5 -12.8564) (float-vector 8.0 39.5 -12.8564) (float-vector 13.8564 39.5 -7.0)))
         (instance face :init :vertices (list (float-vector 8.0 27.5 -12.8564) (float-vector 7.105427e-15 27.5 -15.0) (float-vector 7.105427e-15 39.5 -15.0) (float-vector 8.0 39.5 -12.8564)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 27.5 -15.0) (float-vector -8.0 27.5 -12.8564) (float-vector -8.0 39.5 -12.8564) (float-vector 7.105427e-15 39.5 -15.0)))
         (instance face :init :vertices (list (float-vector -8.0 27.5 -12.8564) (float-vector -13.8564 27.5 -7.0) (float-vector -13.8564 39.5 -7.0) (float-vector -8.0 39.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -13.8564 27.5 -7.0) (float-vector -16.0 27.5 1.0) (float-vector -16.0 39.5 1.0) (float-vector -13.8564 39.5 -7.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.5 1.0) (float-vector -13.8564 27.5 9.0) (float-vector -13.8564 39.5 9.0) (float-vector -16.0 39.5 1.0)))
         (instance face :init :vertices (list (float-vector -13.8564 27.5 9.0) (float-vector -8.0 27.5 14.8564) (float-vector -8.0 39.5 14.8564) (float-vector -13.8564 39.5 9.0)))
         (instance face :init :vertices (list (float-vector -8.0 27.5 14.8564) (float-vector -2.131628e-14 27.5 17.0) (float-vector -2.131628e-14 39.5 17.0) (float-vector -8.0 39.5 14.8564)))
         (instance face :init :vertices (list (float-vector -2.131628e-14 27.5 17.0) (float-vector 8.0 27.5 14.8564) (float-vector 8.0 39.5 14.8564) (float-vector -2.131628e-14 39.5 17.0)))
         (instance face :init :vertices (list (float-vector 8.0 27.5 14.8564) (float-vector 13.8564 27.5 9.0) (float-vector 13.8564 39.5 9.0) (float-vector 8.0 39.5 14.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 39.5 9.0) (float-vector 16.0 39.5 1.0) (float-vector 13.8564 39.5 -7.0) (float-vector 8.0 39.5 -12.8564) (float-vector 7.105427e-15 39.5 -15.0) (float-vector -8.0 39.5 -12.8564) (float-vector -13.8564 39.5 -7.0) (float-vector -16.0 39.5 1.0) (float-vector -13.8564 39.5 9.0) (float-vector -8.0 39.5 14.8564) (float-vector -2.131628e-14 39.5 17.0) (float-vector 8.0 39.5 14.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 27.5 9.0) (float-vector 16.0 27.5 1.0) (float-vector 16.0 39.5 1.0) (float-vector 13.8564 39.5 9.0)))
         (instance face :init :vertices (list (float-vector 20.5 27.5 1.0) (float-vector 20.5 20.5 1.0) (float-vector 17.7535 20.5 -9.25) (float-vector 17.7535 27.5 -9.25)))
         (instance face :init :vertices (list (float-vector 17.7535 20.5 -9.25) (float-vector 10.25 20.5 -16.7535) (float-vector 10.25 27.5 -16.7535) (float-vector 17.7535 27.5 -9.25)))
         (instance face :init :vertices (list (float-vector 10.25 20.5 -16.7535) (float-vector 7.105427e-15 20.5 -19.5) (float-vector 7.105427e-15 27.5 -19.5) (float-vector 10.25 27.5 -16.7535)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 20.5 -19.5) (float-vector -10.25 20.5 -16.7535) (float-vector -10.25 27.5 -16.7535) (float-vector 7.105427e-15 27.5 -19.5)))
         (instance face :init :vertices (list (float-vector -10.25 20.5 -16.7535) (float-vector -17.7535 20.5 -9.25) (float-vector -17.7535 27.5 -9.25) (float-vector -10.25 27.5 -16.7535)))
         (instance face :init :vertices (list (float-vector -17.7535 20.5 -9.25) (float-vector -20.5 20.5 1.0) (float-vector -20.5 27.5 1.0) (float-vector -17.7535 27.5 -9.25)))
         (instance face :init :vertices (list (float-vector -20.5 20.5 1.0) (float-vector -17.7535 20.5 11.25) (float-vector -17.7535 27.5 11.25) (float-vector -20.5 27.5 1.0)))
         (instance face :init :vertices (list (float-vector -17.7535 20.5 11.25) (float-vector -10.25 20.5 18.7535) (float-vector -10.25 27.5 18.7535) (float-vector -17.7535 27.5 11.25)))
         (instance face :init :vertices (list (float-vector -10.25 20.5 18.7535) (float-vector -3.552714e-14 20.5 21.5) (float-vector -3.552714e-14 27.5 21.5) (float-vector -10.25 27.5 18.7535)))
         (instance face :init :vertices (list (float-vector -3.552714e-14 20.5 21.5) (float-vector 10.25 20.5 18.7535) (float-vector 10.25 27.5 18.7535) (float-vector -3.552714e-14 27.5 21.5)))
         (instance face :init :vertices (list (float-vector 10.25 20.5 18.7535) (float-vector 17.7535 20.5 11.25) (float-vector 17.7535 27.5 11.25) (float-vector 10.25 27.5 18.7535)))
         (instance face :init :vertices (list (float-vector 17.7535 27.5 11.25) (float-vector 20.5 27.5 1.0) (float-vector 17.7535 27.5 -9.25) (float-vector 10.25 27.5 -16.7535) (float-vector 7.105427e-15 27.5 -19.5) (float-vector -10.25 27.5 -16.7535) (float-vector -17.7535 27.5 -9.25) (float-vector -20.5 27.5 1.0) (float-vector -17.7535 27.5 11.25) (float-vector -10.25 27.5 18.7535) (float-vector -3.552714e-14 27.5 21.5) (float-vector 10.25 27.5 18.7535))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 16.0 27.5 1.0) (float-vector 13.8564 27.5 9.0) (float-vector 8.0 27.5 14.8564) (float-vector -2.131628e-14 27.5 17.0) (float-vector -8.0 27.5 14.8564) (float-vector -13.8564 27.5 9.0) (float-vector -16.0 27.5 1.0) (float-vector -13.8564 27.5 -7.0) (float-vector -8.0 27.5 -12.8564) (float-vector 7.105427e-15 27.5 -15.0) (float-vector 8.0 27.5 -12.8564) (float-vector 13.8564 27.5 -7.0)))
))
         (instance face :init :vertices (list (float-vector 17.7535 20.5 11.25) (float-vector 20.5 20.5 1.0) (float-vector 20.5 27.5 1.0) (float-vector 17.7535 27.5 11.25)))
         (instance face :init :vertices (list (float-vector 20.5 20.5 1.0) (float-vector 17.7535 20.5 11.25) (float-vector 10.25 20.5 18.7535) (float-vector -3.552714e-14 20.5 21.5) (float-vector -10.25 20.5 18.7535) (float-vector -17.7535 20.5 11.25) (float-vector -20.5 20.5 1.0) (float-vector -17.7535 20.5 -9.25) (float-vector -10.25 20.5 -16.7535) (float-vector 7.105427e-15 20.5 -19.5) (float-vector 10.25 20.5 -16.7535) (float-vector 17.7535 20.5 -9.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -21.0 0.5 -15.0) (float-vector -33.0 0.5 -15.0) (float-vector -33.0 8.5 -12.8564) (float-vector -21.0 8.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -33.0 8.5 -12.8564) (float-vector -33.0 14.3564 -7.0) (float-vector -21.0 14.3564 -7.0) (float-vector -21.0 8.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -33.0 14.3564 -7.0) (float-vector -33.0 16.5 1.0) (float-vector -21.0 16.5 1.0) (float-vector -21.0 14.3564 -7.0)))
         (instance face :init :vertices (list (float-vector -33.0 16.5 1.0) (float-vector -33.0 14.3564 9.0) (float-vector -21.0 14.3564 9.0) (float-vector -21.0 16.5 1.0)))
         (instance face :init :vertices (list (float-vector -33.0 14.3564 9.0) (float-vector -33.0 8.5 14.8564) (float-vector -21.0 8.5 14.8564) (float-vector -21.0 14.3564 9.0)))
         (instance face :init :vertices (list (float-vector -33.0 8.5 14.8564) (float-vector -33.0 0.5 17.0) (float-vector -21.0 0.5 17.0) (float-vector -21.0 8.5 14.8564)))
         (instance face :init :vertices (list (float-vector -33.0 0.5 17.0) (float-vector -33.0 -7.5 14.8564) (float-vector -21.0 -7.5 14.8564) (float-vector -21.0 0.5 17.0)))
         (instance face :init :vertices (list (float-vector -33.0 -7.5 14.8564) (float-vector -33.0 -13.3564 9.0) (float-vector -21.0 -13.3564 9.0) (float-vector -21.0 -7.5 14.8564)))
         (instance face :init :vertices (list (float-vector -33.0 -13.3564 9.0) (float-vector -33.0 -15.5 1.0) (float-vector -21.0 -15.5 1.0) (float-vector -21.0 -13.3564 9.0)))
         (instance face :init :vertices (list (float-vector -33.0 -15.5 1.0) (float-vector -33.0 -13.3564 -7.0) (float-vector -21.0 -13.3564 -7.0) (float-vector -21.0 -15.5 1.0)))
         (instance face :init :vertices (list (float-vector -33.0 -13.3564 -7.0) (float-vector -33.0 -7.5 -12.8564) (float-vector -21.0 -7.5 -12.8564) (float-vector -21.0 -13.3564 -7.0)))
         (instance face :init :vertices (list (float-vector -21.0 -7.5 -12.8564) (float-vector -21.0 0.5 -15.0) (float-vector -21.0 8.5 -12.8564) (float-vector -21.0 14.3564 -7.0) (float-vector -21.0 16.5 1.0) (float-vector -21.0 14.3564 9.0) (float-vector -21.0 8.5 14.8564) (float-vector -21.0 0.5 17.0) (float-vector -21.0 -7.5 14.8564) (float-vector -21.0 -13.3564 9.0) (float-vector -21.0 -15.5 1.0) (float-vector -21.0 -13.3564 -7.0)))
         (instance face :init :vertices (list (float-vector -33.0 -7.5 -12.8564) (float-vector -33.0 0.5 -15.0) (float-vector -21.0 0.5 -15.0) (float-vector -21.0 -7.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -33.0 0.5 -19.5) (float-vector -40.0 0.5 -19.5) (float-vector -40.0 10.75 -16.7535) (float-vector -33.0 10.75 -16.7535)))
         (instance face :init :vertices (list (float-vector -40.0 10.75 -16.7535) (float-vector -40.0 18.2535 -9.25) (float-vector -33.0 18.2535 -9.25) (float-vector -33.0 10.75 -16.7535)))
         (instance face :init :vertices (list (float-vector -40.0 18.2535 -9.25) (float-vector -40.0 21.0 1.0) (float-vector -33.0 21.0 1.0) (float-vector -33.0 18.2535 -9.25)))
         (instance face :init :vertices (list (float-vector -40.0 21.0 1.0) (float-vector -40.0 18.2535 11.25) (float-vector -33.0 18.2535 11.25) (float-vector -33.0 21.0 1.0)))
         (instance face :init :vertices (list (float-vector -40.0 18.2535 11.25) (float-vector -40.0 10.75 18.7535) (float-vector -33.0 10.75 18.7535) (float-vector -33.0 18.2535 11.25)))
         (instance face :init :vertices (list (float-vector -40.0 10.75 18.7535) (float-vector -40.0 0.5 21.5) (float-vector -33.0 0.5 21.5) (float-vector -33.0 10.75 18.7535)))
         (instance face :init :vertices (list (float-vector -40.0 0.5 21.5) (float-vector -40.0 -9.75 18.7535) (float-vector -33.0 -9.75 18.7535) (float-vector -33.0 0.5 21.5)))
         (instance face :init :vertices (list (float-vector -40.0 -9.75 18.7535) (float-vector -40.0 -17.2535 11.25) (float-vector -33.0 -17.2535 11.25) (float-vector -33.0 -9.75 18.7535)))
         (instance face :init :vertices (list (float-vector -40.0 -17.2535 11.25) (float-vector -40.0 -20.0 1.0) (float-vector -33.0 -20.0 1.0) (float-vector -33.0 -17.2535 11.25)))
         (instance face :init :vertices (list (float-vector -40.0 -20.0 1.0) (float-vector -40.0 -17.2535 -9.25) (float-vector -33.0 -17.2535 -9.25) (float-vector -33.0 -20.0 1.0)))
         (instance face :init :vertices (list (float-vector -40.0 -17.2535 -9.25) (float-vector -40.0 -9.75 -16.7535) (float-vector -33.0 -9.75 -16.7535) (float-vector -33.0 -17.2535 -9.25)))
         (instance face :init :vertices (list (float-vector -33.0 -9.75 -16.7535) (float-vector -33.0 0.5 -19.5) (float-vector -33.0 10.75 -16.7535) (float-vector -33.0 18.2535 -9.25) (float-vector -33.0 21.0 1.0) (float-vector -33.0 18.2535 11.25) (float-vector -33.0 10.75 18.7535) (float-vector -33.0 0.5 21.5) (float-vector -33.0 -9.75 18.7535) (float-vector -33.0 -17.2535 11.25) (float-vector -33.0 -20.0 1.0) (float-vector -33.0 -17.2535 -9.25))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -33.0 0.5 -15.0) (float-vector -33.0 -7.5 -12.8564) (float-vector -33.0 -13.3564 -7.0) (float-vector -33.0 -15.5 1.0) (float-vector -33.0 -13.3564 9.0) (float-vector -33.0 -7.5 14.8564) (float-vector -33.0 0.5 17.0) (float-vector -33.0 8.5 14.8564) (float-vector -33.0 14.3564 9.0) (float-vector -33.0 16.5 1.0) (float-vector -33.0 14.3564 -7.0) (float-vector -33.0 8.5 -12.8564)))
))
         (instance face :init :vertices (list (float-vector -40.0 -9.75 -16.7535) (float-vector -40.0 0.5 -19.5) (float-vector -33.0 0.5 -19.5) (float-vector -33.0 -9.75 -16.7535)))
         (instance face :init :vertices (list (float-vector -40.0 0.5 -19.5) (float-vector -40.0 -9.75 -16.7535) (float-vector -40.0 -17.2535 -9.25) (float-vector -40.0 -20.0 1.0) (float-vector -40.0 -17.2535 11.25) (float-vector -40.0 -9.75 18.7535) (float-vector -40.0 0.5 21.5) (float-vector -40.0 10.75 18.7535) (float-vector -40.0 18.2535 11.25) (float-vector -40.0 21.0 1.0) (float-vector -40.0 18.2535 -9.25) (float-vector -40.0 10.75 -16.7535)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch :weight 316 :centroid (float-vector -10.0149 9.28889 7.13155) :inertia-tensor #2f((1.088365e+05 34606.6 8284.94) (34606.6 17535.3 -24643.2) (8284.94 -24643.2 1.145714e+05))))

     ;; definition of :rleg-thigh
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.5 2.842171e-14 -74.9) (float-vector 14.5 2.842171e-14 -74.9) (float-vector 20.1 2.842171e-14 -80.4) (float-vector 20.1 2.131628e-14 -128.0) (float-vector 14.5 2.131628e-14 -136.0) (float-vector -14.5 1.421085e-14 -136.0) (float-vector -20.1 1.421085e-14 -128.0) (float-vector -20.1 2.131628e-14 -80.4)))
         (instance face :init :vertices (list (float-vector 14.5 -41.0 -74.9) (float-vector -14.5 -41.0 -74.9) (float-vector -20.1 -41.0 -80.4) (float-vector -20.1 -41.0 -128.0) (float-vector -14.5 -41.0 -136.0) (float-vector 14.5 -41.0 -136.0) (float-vector 20.1 -41.0 -128.0) (float-vector 20.1 -41.0 -80.4)))
         (instance face :init :vertices (list (float-vector -14.5 2.842171e-14 -74.9) (float-vector -14.5 -41.0 -74.9) (float-vector 14.5 -41.0 -74.9) (float-vector 14.5 2.842171e-14 -74.9)))
         (instance face :init :vertices (list (float-vector -20.1 2.131628e-14 -80.4) (float-vector -20.1 -41.0 -80.4) (float-vector -14.5 -41.0 -74.9) (float-vector -14.5 2.842171e-14 -74.9)))
         (instance face :init :vertices (list (float-vector -20.1 1.421085e-14 -128.0) (float-vector -20.1 -41.0 -128.0) (float-vector -20.1 -41.0 -80.4) (float-vector -20.1 2.131628e-14 -80.4)))
         (instance face :init :vertices (list (float-vector -14.5 1.421085e-14 -136.0) (float-vector -14.5 -41.0 -136.0) (float-vector -20.1 -41.0 -128.0) (float-vector -20.1 1.421085e-14 -128.0)))
         (instance face :init :vertices (list (float-vector 14.5 2.131628e-14 -136.0) (float-vector 14.5 -41.0 -136.0) (float-vector -14.5 -41.0 -136.0) (float-vector -14.5 1.421085e-14 -136.0)))
         (instance face :init :vertices (list (float-vector 20.1 2.131628e-14 -128.0) (float-vector 20.1 -41.0 -128.0) (float-vector 14.5 -41.0 -136.0) (float-vector 14.5 2.131628e-14 -136.0)))
         (instance face :init :vertices (list (float-vector 20.1 2.842171e-14 -80.4) (float-vector 20.1 -41.0 -80.4) (float-vector 20.1 -41.0 -128.0) (float-vector 20.1 2.131628e-14 -128.0)))
         (instance face :init :vertices (list (float-vector 14.5 2.842171e-14 -74.9) (float-vector 14.5 -41.0 -74.9) (float-vector 20.1 -41.0 -80.4) (float-vector 20.1 2.842171e-14 -80.4)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -44.0 5.684342e-14) (float-vector 15.0 -44.0 -40.0) (float-vector 15.0 22.0 -40.0) (float-vector 15.0 22.0 5.684342e-14) (float-vector 15.0 20.0 5.684342e-14) (float-vector 15.0 20.0 -38.0) (float-vector 15.0 -42.0 -38.0) (float-vector 15.0 -42.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -15.0 -44.0 -40.0) (float-vector -15.0 22.0 -40.0) (float-vector 15.0 22.0 -40.0) (float-vector 15.0 -44.0 -40.0)))
         (instance face :init :vertices (list (float-vector -15.0 -44.0 5.684342e-14) (float-vector -15.0 -42.0 5.684342e-14) (float-vector -15.0 -42.0 -38.0) (float-vector -15.0 20.0 -38.0) (float-vector -15.0 20.0 5.684342e-14) (float-vector -15.0 22.0 5.684342e-14) (float-vector -15.0 22.0 -40.0) (float-vector -15.0 -44.0 -40.0)))
         (instance face :init :vertices (list (float-vector -10.6066 22.0 10.6066) (float-vector -15.0 22.0 5.684342e-14) (float-vector -15.0 20.0 5.684342e-14) (float-vector -10.6066 20.0 10.6066)))
         (instance face :init :vertices (list (float-vector -10.6066 -44.0 10.6066) (float-vector -10.6066 -42.0 10.6066) (float-vector -15.0 -42.0 5.684342e-14) (float-vector -15.0 -44.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 22.0 15.0) (float-vector -10.6066 22.0 10.6066) (float-vector -10.6066 20.0 10.6066) (float-vector 2.842171e-14 20.0 15.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -44.0 15.0) (float-vector 5.684342e-14 -42.0 15.0) (float-vector -10.6066 -42.0 10.6066) (float-vector -10.6066 -44.0 10.6066)))
         (instance face :init :vertices (list (float-vector 10.6066 22.0 10.6066) (float-vector 2.842171e-14 22.0 15.0) (float-vector 2.842171e-14 20.0 15.0) (float-vector 10.6066 20.0 10.6066)))
         (instance face :init :vertices (list (float-vector 10.6066 -44.0 10.6066) (float-vector 10.6066 -42.0 10.6066) (float-vector 5.684342e-14 -42.0 15.0) (float-vector 2.842171e-14 -44.0 15.0)))
         (instance face :init :vertices (list (float-vector 15.0 22.0 5.684342e-14) (float-vector 15.0 22.0 -40.0) (float-vector -15.0 22.0 -40.0) (float-vector -15.0 22.0 5.684342e-14) (float-vector -10.6066 22.0 10.6066) (float-vector 2.842171e-14 22.0 15.0) (float-vector 10.6066 22.0 10.6066)))
         (instance face :init :vertices (list (float-vector 10.6066 -44.0 10.6066) (float-vector 2.842171e-14 -44.0 15.0) (float-vector -10.6066 -44.0 10.6066) (float-vector -15.0 -44.0 5.684342e-14) (float-vector -15.0 -44.0 -40.0) (float-vector 15.0 -44.0 -40.0) (float-vector 15.0 -44.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 10.6066 22.0 10.6066) (float-vector 10.6066 20.0 10.6066) (float-vector 15.0 20.0 5.684342e-14) (float-vector 15.0 22.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 15.0 -44.0 5.684342e-14) (float-vector 15.0 -42.0 5.684342e-14) (float-vector 10.6066 -42.0 10.6066) (float-vector 10.6066 -44.0 10.6066)))
         (instance face :init :vertices (list (float-vector 15.0 20.0 -38.0) (float-vector 15.0 20.0 5.684342e-14) (float-vector 10.6066 20.0 10.6066) (float-vector 2.842171e-14 20.0 15.0) (float-vector -10.6066 20.0 10.6066) (float-vector -15.0 20.0 5.684342e-14) (float-vector -15.0 20.0 -38.0)))
         (instance face :init :vertices (list (float-vector 15.0 -42.0 -38.0) (float-vector 15.0 20.0 -38.0) (float-vector -15.0 20.0 -38.0) (float-vector -15.0 -42.0 -38.0)))
         (instance face :init :vertices (list (float-vector -15.0 -42.0 -38.0) (float-vector -15.0 -42.0 5.684342e-14) (float-vector -10.6066 -42.0 10.6066) (float-vector 5.684342e-14 -42.0 15.0) (float-vector 10.6066 -42.0 10.6066) (float-vector 15.0 -42.0 5.684342e-14) (float-vector 15.0 -42.0 -38.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -6.0 -39.5) (float-vector -15.0 -6.0 -39.5) (float-vector -15.0 -36.0 -39.5) (float-vector 15.0 -36.0 -39.5)))
         (instance face :init :vertices (list (float-vector -15.0 -6.0 -74.5) (float-vector 15.0 -6.0 -74.5) (float-vector 15.0 -36.0 -74.5) (float-vector -15.0 -36.0 -74.5)))
         (instance face :init :vertices (list (float-vector 15.0 -6.0 -39.5) (float-vector 15.0 -6.0 -74.5) (float-vector -15.0 -6.0 -74.5) (float-vector -15.0 -6.0 -39.5)))
         (instance face :init :vertices (list (float-vector 15.0 -36.0 -39.5) (float-vector 15.0 -36.0 -74.5) (float-vector 15.0 -6.0 -74.5) (float-vector 15.0 -6.0 -39.5)))
         (instance face :init :vertices (list (float-vector -15.0 -36.0 -39.5) (float-vector -15.0 -36.0 -74.5) (float-vector 15.0 -36.0 -74.5) (float-vector 15.0 -36.0 -39.5)))
         (instance face :init :vertices (list (float-vector -15.0 -6.0 -39.5) (float-vector -15.0 -6.0 -74.5) (float-vector -15.0 -36.0 -74.5) (float-vector -15.0 -36.0 -39.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.305 -20.0 -130.81) (float-vector 21.9148 -32.6525 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 21.9148 -32.6525 -130.81) (float-vector 12.6525 -41.9148 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 12.6525 -41.9148 -130.81) (float-vector -1.136868e-13 -45.305 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 -45.305 -130.81) (float-vector -12.6525 -41.9148 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -12.6525 -41.9148 -130.81) (float-vector -21.9148 -32.6525 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -21.9148 -32.6525 -130.81) (float-vector -25.305 -20.0 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -25.305 -20.0 -130.81) (float-vector -21.9148 -7.3475 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -21.9148 -7.3475 -130.81) (float-vector -12.6525 1.91477 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -12.6525 1.91477 -130.81) (float-vector 5.684342e-14 5.305 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 5.305 -130.81) (float-vector 12.6525 1.91477 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 12.6525 1.91477 -130.81) (float-vector 21.9148 -7.3475 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 21.9148 -7.3475 -130.81) (float-vector 25.305 -20.0 -130.81) (float-vector 2.842171e-14 -20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 37.9575 -41.9148 -112.285) (float-vector 21.9148 -32.6525 -130.81) (float-vector 25.305 -20.0 -130.81) (float-vector 43.8295 -20.0 -112.285)))
         (instance face :init :vertices (list (float-vector 21.9148 -57.9575 -112.285) (float-vector 12.6525 -41.9148 -130.81) (float-vector 21.9148 -32.6525 -130.81) (float-vector 37.9575 -41.9148 -112.285)))
         (instance face :init :vertices (list (float-vector -2.273737e-13 -63.8295 -112.285) (float-vector -1.136868e-13 -45.305 -130.81) (float-vector 12.6525 -41.9148 -130.81) (float-vector 21.9148 -57.9575 -112.285)))
         (instance face :init :vertices (list (float-vector -21.9148 -57.9575 -112.285) (float-vector -12.6525 -41.9148 -130.81) (float-vector -1.136868e-13 -45.305 -130.81) (float-vector -2.273737e-13 -63.8295 -112.285)))
         (instance face :init :vertices (list (float-vector -37.9575 -41.9148 -112.285) (float-vector -21.9148 -32.6525 -130.81) (float-vector -12.6525 -41.9148 -130.81) (float-vector -21.9148 -57.9575 -112.285)))
         (instance face :init :vertices (list (float-vector -43.8295 -20.0 -112.285) (float-vector -25.305 -20.0 -130.81) (float-vector -21.9148 -32.6525 -130.81) (float-vector -37.9575 -41.9148 -112.285)))
         (instance face :init :vertices (list (float-vector -37.9575 1.91477 -112.285) (float-vector -21.9148 -7.3475 -130.81) (float-vector -25.305 -20.0 -130.81) (float-vector -43.8295 -20.0 -112.285)))
         (instance face :init :vertices (list (float-vector -21.9148 17.9575 -112.285) (float-vector -12.6525 1.91477 -130.81) (float-vector -21.9148 -7.3475 -130.81) (float-vector -37.9575 1.91477 -112.285)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 23.8295 -112.285) (float-vector 5.684342e-14 5.305 -130.81) (float-vector -12.6525 1.91477 -130.81) (float-vector -21.9148 17.9575 -112.285)))
         (instance face :init :vertices (list (float-vector 21.9148 17.9575 -112.285) (float-vector 12.6525 1.91477 -130.81) (float-vector 5.684342e-14 5.305 -130.81) (float-vector 5.684342e-14 23.8295 -112.285)))
         (instance face :init :vertices (list (float-vector 37.9575 1.91477 -112.285) (float-vector 21.9148 -7.3475 -130.81) (float-vector 12.6525 1.91477 -130.81) (float-vector 21.9148 17.9575 -112.285)))
         (instance face :init :vertices (list (float-vector 43.8295 -20.0 -112.285) (float-vector 25.305 -20.0 -130.81) (float-vector 21.9148 -7.3475 -130.81) (float-vector 37.9575 1.91477 -112.285)))
         (instance face :init :vertices (list (float-vector 43.8295 -45.305 -86.98) (float-vector 37.9575 -41.9148 -112.285) (float-vector 43.8295 -20.0 -112.285) (float-vector 50.61 -20.0 -86.98)))
         (instance face :init :vertices (list (float-vector 25.305 -63.8295 -86.98) (float-vector 21.9148 -57.9575 -112.285) (float-vector 37.9575 -41.9148 -112.285) (float-vector 43.8295 -45.305 -86.98)))
         (instance face :init :vertices (list (float-vector -2.557954e-13 -70.61 -86.98) (float-vector -2.273737e-13 -63.8295 -112.285) (float-vector 21.9148 -57.9575 -112.285) (float-vector 25.305 -63.8295 -86.98)))
         (instance face :init :vertices (list (float-vector -25.305 -63.8295 -86.98) (float-vector -21.9148 -57.9575 -112.285) (float-vector -2.273737e-13 -63.8295 -112.285) (float-vector -2.557954e-13 -70.61 -86.98)))
         (instance face :init :vertices (list (float-vector -43.8295 -45.305 -86.98) (float-vector -37.9575 -41.9148 -112.285) (float-vector -21.9148 -57.9575 -112.285) (float-vector -25.305 -63.8295 -86.98)))
         (instance face :init :vertices (list (float-vector -50.61 -20.0 -86.98) (float-vector -43.8295 -20.0 -112.285) (float-vector -37.9575 -41.9148 -112.285) (float-vector -43.8295 -45.305 -86.98)))
         (instance face :init :vertices (list (float-vector -43.8295 5.305 -86.98) (float-vector -37.9575 1.91477 -112.285) (float-vector -43.8295 -20.0 -112.285) (float-vector -50.61 -20.0 -86.98)))
         (instance face :init :vertices (list (float-vector -25.305 23.8295 -86.98) (float-vector -21.9148 17.9575 -112.285) (float-vector -37.9575 1.91477 -112.285) (float-vector -43.8295 5.305 -86.98)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 30.61 -86.98) (float-vector 5.684342e-14 23.8295 -112.285) (float-vector -21.9148 17.9575 -112.285) (float-vector -25.305 23.8295 -86.98)))
         (instance face :init :vertices (list (float-vector 25.305 23.8295 -86.98) (float-vector 21.9148 17.9575 -112.285) (float-vector 5.684342e-14 23.8295 -112.285) (float-vector 5.684342e-14 30.61 -86.98)))
         (instance face :init :vertices (list (float-vector 43.8295 5.305 -86.98) (float-vector 37.9575 1.91477 -112.285) (float-vector 21.9148 17.9575 -112.285) (float-vector 25.305 23.8295 -86.98)))
         (instance face :init :vertices (list (float-vector 50.61 -20.0 -86.98) (float-vector 43.8295 -20.0 -112.285) (float-vector 37.9575 1.91477 -112.285) (float-vector 43.8295 5.305 -86.98)))
         (instance face :init :vertices (list (float-vector 43.8295 -45.305 0.34) (float-vector 43.8295 -45.305 -86.98) (float-vector 50.61 -20.0 -86.98) (float-vector 50.61 -20.0 0.34)))
         (instance face :init :vertices (list (float-vector 25.305 -63.8295 0.34) (float-vector 25.305 -63.8295 -86.98) (float-vector 43.8295 -45.305 -86.98) (float-vector 43.8295 -45.305 0.34)))
         (instance face :init :vertices (list (float-vector -2.557954e-13 -70.61 0.34) (float-vector -2.557954e-13 -70.61 -86.98) (float-vector 25.305 -63.8295 -86.98) (float-vector 25.305 -63.8295 0.34)))
         (instance face :init :vertices (list (float-vector -25.305 -63.8295 0.34) (float-vector -25.305 -63.8295 -86.98) (float-vector -2.557954e-13 -70.61 -86.98) (float-vector -2.557954e-13 -70.61 0.34)))
         (instance face :init :vertices (list (float-vector -43.8295 -45.305 0.34) (float-vector -43.8295 -45.305 -86.98) (float-vector -25.305 -63.8295 -86.98) (float-vector -25.305 -63.8295 0.34)))
         (instance face :init :vertices (list (float-vector -50.61 -20.0 0.34) (float-vector -50.61 -20.0 -86.98) (float-vector -43.8295 -45.305 -86.98) (float-vector -43.8295 -45.305 0.34)))
         (instance face :init :vertices (list (float-vector -43.8295 5.305 0.34) (float-vector -43.8295 5.305 -86.98) (float-vector -50.61 -20.0 -86.98) (float-vector -50.61 -20.0 0.34)))
         (instance face :init :vertices (list (float-vector -25.305 23.8295 0.34) (float-vector -25.305 23.8295 -86.98) (float-vector -43.8295 5.305 -86.98) (float-vector -43.8295 5.305 0.34)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 30.61 0.34) (float-vector 5.684342e-14 30.61 -86.98) (float-vector -25.305 23.8295 -86.98) (float-vector -25.305 23.8295 0.34)))
         (instance face :init :vertices (list (float-vector 25.305 23.8295 0.34) (float-vector 25.305 23.8295 -86.98) (float-vector 5.684342e-14 30.61 -86.98) (float-vector 5.684342e-14 30.61 0.34)))
         (instance face :init :vertices (list (float-vector 43.8295 5.305 0.34) (float-vector 43.8295 5.305 -86.98) (float-vector 25.305 23.8295 -86.98) (float-vector 25.305 23.8295 0.34)))
         (instance face :init :vertices (list (float-vector 50.61 -20.0 0.34) (float-vector 50.61 -20.0 -86.98) (float-vector 43.8295 5.305 -86.98) (float-vector 43.8295 5.305 0.34)))
         (instance face :init :vertices (list (float-vector 37.9575 -41.9148 25.645) (float-vector 43.8295 -45.305 0.34) (float-vector 50.61 -20.0 0.34) (float-vector 43.8295 -20.0 25.645)))
         (instance face :init :vertices (list (float-vector 21.9148 -57.9575 25.645) (float-vector 25.305 -63.8295 0.34) (float-vector 43.8295 -45.305 0.34) (float-vector 37.9575 -41.9148 25.645)))
         (instance face :init :vertices (list (float-vector -2.273737e-13 -63.8295 25.645) (float-vector -2.557954e-13 -70.61 0.34) (float-vector 25.305 -63.8295 0.34) (float-vector 21.9148 -57.9575 25.645)))
         (instance face :init :vertices (list (float-vector -21.9148 -57.9575 25.645) (float-vector -25.305 -63.8295 0.34) (float-vector -2.557954e-13 -70.61 0.34) (float-vector -2.273737e-13 -63.8295 25.645)))
         (instance face :init :vertices (list (float-vector -37.9575 -41.9148 25.645) (float-vector -43.8295 -45.305 0.34) (float-vector -25.305 -63.8295 0.34) (float-vector -21.9148 -57.9575 25.645)))
         (instance face :init :vertices (list (float-vector -43.8295 -20.0 25.645) (float-vector -50.61 -20.0 0.34) (float-vector -43.8295 -45.305 0.34) (float-vector -37.9575 -41.9148 25.645)))
         (instance face :init :vertices (list (float-vector -37.9575 1.91477 25.645) (float-vector -43.8295 5.305 0.34) (float-vector -50.61 -20.0 0.34) (float-vector -43.8295 -20.0 25.645)))
         (instance face :init :vertices (list (float-vector -21.9148 17.9575 25.645) (float-vector -25.305 23.8295 0.34) (float-vector -43.8295 5.305 0.34) (float-vector -37.9575 1.91477 25.645)))
         (instance face :init :vertices (list (float-vector 8.526513e-14 23.8295 25.645) (float-vector 5.684342e-14 30.61 0.34) (float-vector -25.305 23.8295 0.34) (float-vector -21.9148 17.9575 25.645)))
         (instance face :init :vertices (list (float-vector 21.9148 17.9575 25.645) (float-vector 25.305 23.8295 0.34) (float-vector 5.684342e-14 30.61 0.34) (float-vector 8.526513e-14 23.8295 25.645)))
         (instance face :init :vertices (list (float-vector 37.9575 1.91477 25.645) (float-vector 43.8295 5.305 0.34) (float-vector 25.305 23.8295 0.34) (float-vector 21.9148 17.9575 25.645)))
         (instance face :init :vertices (list (float-vector 43.8295 -20.0 25.645) (float-vector 50.61 -20.0 0.34) (float-vector 43.8295 5.305 0.34) (float-vector 37.9575 1.91477 25.645)))
         (instance face :init :vertices (list (float-vector 21.9148 -32.6525 44.1695) (float-vector 37.9575 -41.9148 25.645) (float-vector 43.8295 -20.0 25.645) (float-vector 25.305 -20.0 44.1695)))
         (instance face :init :vertices (list (float-vector 12.6525 -41.9148 44.1695) (float-vector 21.9148 -57.9575 25.645) (float-vector 37.9575 -41.9148 25.645) (float-vector 21.9148 -32.6525 44.1695)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 -45.305 44.1695) (float-vector -2.273737e-13 -63.8295 25.645) (float-vector 21.9148 -57.9575 25.645) (float-vector 12.6525 -41.9148 44.1695)))
         (instance face :init :vertices (list (float-vector -12.6525 -41.9148 44.1695) (float-vector -21.9148 -57.9575 25.645) (float-vector -2.273737e-13 -63.8295 25.645) (float-vector -1.136868e-13 -45.305 44.1695)))
         (instance face :init :vertices (list (float-vector -21.9148 -32.6525 44.1695) (float-vector -37.9575 -41.9148 25.645) (float-vector -21.9148 -57.9575 25.645) (float-vector -12.6525 -41.9148 44.1695)))
         (instance face :init :vertices (list (float-vector -25.305 -20.0 44.1695) (float-vector -43.8295 -20.0 25.645) (float-vector -37.9575 -41.9148 25.645) (float-vector -21.9148 -32.6525 44.1695)))
         (instance face :init :vertices (list (float-vector -21.9148 -7.3475 44.1695) (float-vector -37.9575 1.91477 25.645) (float-vector -43.8295 -20.0 25.645) (float-vector -25.305 -20.0 44.1695)))
         (instance face :init :vertices (list (float-vector -12.6525 1.91477 44.1695) (float-vector -21.9148 17.9575 25.645) (float-vector -37.9575 1.91477 25.645) (float-vector -21.9148 -7.3475 44.1695)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 5.305 44.1695) (float-vector 8.526513e-14 23.8295 25.645) (float-vector -21.9148 17.9575 25.645) (float-vector -12.6525 1.91477 44.1695)))
         (instance face :init :vertices (list (float-vector 12.6525 1.91477 44.1695) (float-vector 21.9148 17.9575 25.645) (float-vector 8.526513e-14 23.8295 25.645) (float-vector 2.842171e-14 5.305 44.1695)))
         (instance face :init :vertices (list (float-vector 21.9148 -7.3475 44.1695) (float-vector 37.9575 1.91477 25.645) (float-vector 21.9148 17.9575 25.645) (float-vector 12.6525 1.91477 44.1695)))
         (instance face :init :vertices (list (float-vector 25.305 -20.0 44.1695) (float-vector 43.8295 -20.0 25.645) (float-vector 37.9575 1.91477 25.645) (float-vector 21.9148 -7.3475 44.1695)))
         (instance face :init :vertices (list (float-vector 21.9148 -32.6525 44.1695) (float-vector 25.305 -20.0 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector 25.305 -20.0 44.1695) (float-vector 21.9148 -7.3475 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector 21.9148 -7.3475 44.1695) (float-vector 12.6525 1.91477 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector 12.6525 1.91477 44.1695) (float-vector 2.842171e-14 5.305 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 5.305 44.1695) (float-vector -12.6525 1.91477 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector -12.6525 1.91477 44.1695) (float-vector -21.9148 -7.3475 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector -21.9148 -7.3475 44.1695) (float-vector -25.305 -20.0 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector -25.305 -20.0 44.1695) (float-vector -21.9148 -32.6525 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector -21.9148 -32.6525 44.1695) (float-vector -12.6525 -41.9148 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector -12.6525 -41.9148 44.1695) (float-vector -1.136868e-13 -45.305 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 -45.305 44.1695) (float-vector 12.6525 -41.9148 44.1695) (float-vector 0.0 -20.0 50.95)))
         (instance face :init :vertices (list (float-vector 12.6525 -41.9148 44.1695) (float-vector 21.9148 -32.6525 44.1695) (float-vector 0.0 -20.0 50.95)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :gray90)
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color :papayawhip)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-thigh :weight 152.441 :centroid (float-vector 2.025621e-15 -18.885 -87.9989) :inertia-tensor #2f((3.378152e+05 1.997328e-12 1.255328e-11) (1.997328e-12 2.614091e+05 -1.031670e+05) (1.255328e-11 -1.031670e+05 80373.2))))

     ;; definition of :rleg-shank
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.0961 -25.0 8.87045) (float-vector 29.837 -25.0 -15.3217) (float-vector 29.837 25.0 -15.3217) (float-vector 12.0961 25.0 8.87045) (float-vector 12.0961 23.0 8.87045) (float-vector 28.6543 23.0 -13.7089) (float-vector 28.6543 -23.0 -13.7089) (float-vector 12.0961 -23.0 8.87045)))
         (instance face :init :vertices (list (float-vector 5.64483 -25.0 -33.0626) (float-vector 5.64483 25.0 -33.0626) (float-vector 29.837 25.0 -15.3217) (float-vector 29.837 -25.0 -15.3217)))
         (instance face :init :vertices (list (float-vector -12.0961 -25.0 -8.87045) (float-vector -12.0961 -23.0 -8.87045) (float-vector 4.46211 -23.0 -31.4498) (float-vector 4.46211 23.0 -31.4498) (float-vector -12.0961 23.0 -8.87045) (float-vector -12.0961 25.0 -8.87045) (float-vector 5.64483 25.0 -33.0626) (float-vector 5.64483 -25.0 -33.0626)))
         (instance face :init :vertices (list (float-vector -14.8256 25.0 2.28086) (float-vector -12.0961 25.0 -8.87045) (float-vector -12.0961 23.0 -8.87045) (float-vector -14.8256 23.0 2.28086)))
         (instance face :init :vertices (list (float-vector -14.8256 -25.0 2.28086) (float-vector -14.8256 -23.0 2.28086) (float-vector -12.0961 -23.0 -8.87045) (float-vector -12.0961 -25.0 -8.87045)))
         (instance face :init :vertices (list (float-vector -8.87045 25.0 12.0961) (float-vector -14.8256 25.0 2.28086) (float-vector -14.8256 23.0 2.28086) (float-vector -8.87045 23.0 12.0961)))
         (instance face :init :vertices (list (float-vector -8.87045 -25.0 12.0961) (float-vector -8.87045 -23.0 12.0961) (float-vector -14.8256 -23.0 2.28086) (float-vector -14.8256 -25.0 2.28086)))
         (instance face :init :vertices (list (float-vector 2.28086 25.0 14.8256) (float-vector -8.87045 25.0 12.0961) (float-vector -8.87045 23.0 12.0961) (float-vector 2.28086 23.0 14.8256)))
         (instance face :init :vertices (list (float-vector 2.28086 -25.0 14.8256) (float-vector 2.28086 -23.0 14.8256) (float-vector -8.87045 -23.0 12.0961) (float-vector -8.87045 -25.0 12.0961)))
         (instance face :init :vertices (list (float-vector 12.0961 25.0 8.87045) (float-vector 29.837 25.0 -15.3217) (float-vector 5.64483 25.0 -33.0626) (float-vector -12.0961 25.0 -8.87045) (float-vector -14.8256 25.0 2.28086) (float-vector -8.87045 25.0 12.0961) (float-vector 2.28086 25.0 14.8256)))
         (instance face :init :vertices (list (float-vector 2.28086 -25.0 14.8256) (float-vector -8.87045 -25.0 12.0961) (float-vector -14.8256 -25.0 2.28086) (float-vector -12.0961 -25.0 -8.87045) (float-vector 5.64483 -25.0 -33.0626) (float-vector 29.837 -25.0 -15.3217) (float-vector 12.0961 -25.0 8.87045)))
         (instance face :init :vertices (list (float-vector 2.28086 25.0 14.8256) (float-vector 2.28086 23.0 14.8256) (float-vector 12.0961 23.0 8.87045) (float-vector 12.0961 25.0 8.87045)))
         (instance face :init :vertices (list (float-vector 12.0961 -25.0 8.87045) (float-vector 12.0961 -23.0 8.87045) (float-vector 2.28086 -23.0 14.8256) (float-vector 2.28086 -25.0 14.8256)))
         (instance face :init :vertices (list (float-vector 28.6543 23.0 -13.7089) (float-vector 12.0961 23.0 8.87045) (float-vector 2.28086 23.0 14.8256) (float-vector -8.87045 23.0 12.0961) (float-vector -14.8256 23.0 2.28086) (float-vector -12.0961 23.0 -8.87045) (float-vector 4.46211 23.0 -31.4498)))
         (instance face :init :vertices (list (float-vector 28.6543 -23.0 -13.7089) (float-vector 28.6543 23.0 -13.7089) (float-vector 4.46211 23.0 -31.4498) (float-vector 4.46211 -23.0 -31.4498)))
         (instance face :init :vertices (list (float-vector 4.46211 -23.0 -31.4498) (float-vector -12.0961 -23.0 -8.87045) (float-vector -14.8256 -23.0 2.28086) (float-vector -8.87045 -23.0 12.0961) (float-vector 2.28086 -23.0 14.8256) (float-vector 12.0961 -23.0 8.87045) (float-vector 28.6543 -23.0 -13.7089)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -44.0) (float-vector 3.0 -15.0 -44.0) (float-vector 33.0 -15.0 -44.0) (float-vector 33.0 -15.0 -12.0) (float-vector 3.0 -15.0 -34.0)))
         (instance face :init :vertices (list (float-vector 3.0 15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 15.0 -34.0) (float-vector 33.0 15.0 -12.0) (float-vector 33.0 15.0 -44.0)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 -15.0 -44.0)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -34.0) (float-vector 3.0 15.0 -34.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 -15.0 -44.0)))
         (instance face :init :vertices (list (float-vector 33.0 -15.0 -12.0) (float-vector 33.0 15.0 -12.0) (float-vector 3.0 15.0 -34.0) (float-vector 3.0 -15.0 -34.0)))
         (instance face :init :vertices (list (float-vector 33.0 -15.0 -44.0) (float-vector 33.0 15.0 -44.0) (float-vector 33.0 15.0 -12.0) (float-vector 33.0 -15.0 -12.0)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 33.0 15.0 -44.0) (float-vector 33.0 -15.0 -44.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 28.0 10.0 -44.0) (float-vector 8.0 10.0 -44.0) (float-vector 8.0 -10.0 -44.0) (float-vector 28.0 -10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 8.0 10.0 -94.0) (float-vector 28.0 10.0 -94.0) (float-vector 28.0 -10.0 -94.0) (float-vector 8.0 -10.0 -94.0)))
         (instance face :init :vertices (list (float-vector 28.0 10.0 -44.0) (float-vector 28.0 10.0 -94.0) (float-vector 8.0 10.0 -94.0) (float-vector 8.0 10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 28.0 -10.0 -44.0) (float-vector 28.0 -10.0 -94.0) (float-vector 28.0 10.0 -94.0) (float-vector 28.0 10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 8.0 -10.0 -44.0) (float-vector 8.0 -10.0 -94.0) (float-vector 28.0 -10.0 -94.0) (float-vector 28.0 -10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 8.0 10.0 -44.0) (float-vector 8.0 10.0 -94.0) (float-vector 8.0 -10.0 -94.0) (float-vector 8.0 -10.0 -44.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.0 15.0 -93.5) (float-vector 3.0 15.0 -93.5) (float-vector 3.0 -15.0 -93.5) (float-vector 33.0 -15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 3.0 15.0 -108.5) (float-vector 33.0 15.0 -108.5) (float-vector 33.0 -15.0 -108.5) (float-vector 3.0 -15.0 -108.5)))
         (instance face :init :vertices (list (float-vector 33.0 15.0 -93.5) (float-vector 33.0 15.0 -108.5) (float-vector 3.0 15.0 -108.5) (float-vector 3.0 15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 33.0 -15.0 -93.5) (float-vector 33.0 -15.0 -108.5) (float-vector 33.0 15.0 -108.5) (float-vector 33.0 15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -93.5) (float-vector 3.0 -15.0 -108.5) (float-vector 33.0 -15.0 -108.5) (float-vector 33.0 -15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 3.0 15.0 -93.5) (float-vector 3.0 15.0 -108.5) (float-vector 3.0 -15.0 -108.5) (float-vector 3.0 -15.0 -93.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.0 25.0 -138.0) (float-vector 33.0 25.0 -108.0) (float-vector 33.0 -25.0 -108.0) (float-vector 33.0 -25.0 -138.0) (float-vector 33.0 -23.0 -138.0) (float-vector 33.0 -23.0 -110.0) (float-vector 33.0 23.0 -110.0) (float-vector 33.0 23.0 -138.0)))
         (instance face :init :vertices (list (float-vector 3.0 25.0 -108.0) (float-vector 3.0 -25.0 -108.0) (float-vector 33.0 -25.0 -108.0) (float-vector 33.0 25.0 -108.0)))
         (instance face :init :vertices (list (float-vector 3.0 25.0 -138.0) (float-vector 3.0 23.0 -138.0) (float-vector 3.0 23.0 -110.0) (float-vector 3.0 -23.0 -110.0) (float-vector 3.0 -23.0 -138.0) (float-vector 3.0 -25.0 -138.0) (float-vector 3.0 -25.0 -108.0) (float-vector 3.0 25.0 -108.0)))
         (instance face :init :vertices (list (float-vector 7.3934 -25.0 -148.607) (float-vector 3.0 -25.0 -138.0) (float-vector 3.0 -23.0 -138.0) (float-vector 7.3934 -23.0 -148.607)))
         (instance face :init :vertices (list (float-vector 7.3934 25.0 -148.607) (float-vector 7.3934 23.0 -148.607) (float-vector 3.0 23.0 -138.0) (float-vector 3.0 25.0 -138.0)))
         (instance face :init :vertices (list (float-vector 18.0 -25.0 -153.0) (float-vector 7.3934 -25.0 -148.607) (float-vector 7.3934 -23.0 -148.607) (float-vector 18.0 -23.0 -153.0)))
         (instance face :init :vertices (list (float-vector 18.0 25.0 -153.0) (float-vector 18.0 23.0 -153.0) (float-vector 7.3934 23.0 -148.607) (float-vector 7.3934 25.0 -148.607)))
         (instance face :init :vertices (list (float-vector 28.6066 -25.0 -148.607) (float-vector 18.0 -25.0 -153.0) (float-vector 18.0 -23.0 -153.0) (float-vector 28.6066 -23.0 -148.607)))
         (instance face :init :vertices (list (float-vector 28.6066 25.0 -148.607) (float-vector 28.6066 23.0 -148.607) (float-vector 18.0 23.0 -153.0) (float-vector 18.0 25.0 -153.0)))
         (instance face :init :vertices (list (float-vector 33.0 -25.0 -138.0) (float-vector 33.0 -25.0 -108.0) (float-vector 3.0 -25.0 -108.0) (float-vector 3.0 -25.0 -138.0) (float-vector 7.3934 -25.0 -148.607) (float-vector 18.0 -25.0 -153.0) (float-vector 28.6066 -25.0 -148.607)))
         (instance face :init :vertices (list (float-vector 28.6066 25.0 -148.607) (float-vector 18.0 25.0 -153.0) (float-vector 7.3934 25.0 -148.607) (float-vector 3.0 25.0 -138.0) (float-vector 3.0 25.0 -108.0) (float-vector 33.0 25.0 -108.0) (float-vector 33.0 25.0 -138.0)))
         (instance face :init :vertices (list (float-vector 28.6066 -25.0 -148.607) (float-vector 28.6066 -23.0 -148.607) (float-vector 33.0 -23.0 -138.0) (float-vector 33.0 -25.0 -138.0)))
         (instance face :init :vertices (list (float-vector 33.0 25.0 -138.0) (float-vector 33.0 23.0 -138.0) (float-vector 28.6066 23.0 -148.607) (float-vector 28.6066 25.0 -148.607)))
         (instance face :init :vertices (list (float-vector 33.0 -23.0 -110.0) (float-vector 33.0 -23.0 -138.0) (float-vector 28.6066 -23.0 -148.607) (float-vector 18.0 -23.0 -153.0) (float-vector 7.3934 -23.0 -148.607) (float-vector 3.0 -23.0 -138.0) (float-vector 3.0 -23.0 -110.0)))
         (instance face :init :vertices (list (float-vector 33.0 23.0 -110.0) (float-vector 33.0 -23.0 -110.0) (float-vector 3.0 -23.0 -110.0) (float-vector 3.0 23.0 -110.0)))
         (instance face :init :vertices (list (float-vector 3.0 23.0 -110.0) (float-vector 3.0 23.0 -138.0) (float-vector 7.3934 23.0 -148.607) (float-vector 18.0 23.0 -153.0) (float-vector 28.6066 23.0 -148.607) (float-vector 33.0 23.0 -138.0) (float-vector 33.0 23.0 -110.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 31.9475 53.3021 25.2846) (float-vector 19.7446 33.5575 57.2321) (float-vector 51.6921 21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 21.3546 37.4875) (float-vector 54.3523 35.2016 5.54) (float-vector 31.9475 53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector 19.7446 33.5575 57.2321) (float-vector 33.5916 1.61 59.8923) (float-vector 51.6921 21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector 31.9475 53.3021 25.2846) (float-vector 1.421085e-14 55.9623 39.1316) (float-vector 19.7446 33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector 19.7446 -30.3375 57.2321) (float-vector 4.263256e-14 1.61 69.435) (float-vector -19.7446 -30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 -30.3375 57.2321) (float-vector 0.0 -52.7423 39.1316) (float-vector 19.7446 -30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 1.61 69.435) (float-vector -33.5916 1.61 59.8923) (float-vector -19.7446 -30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector 19.7446 -30.3375 57.2321) (float-vector 33.5916 1.61 59.8923) (float-vector 4.263256e-14 1.61 69.435)))
         (instance face :init :vertices (list (float-vector -31.9475 53.3021 -14.2046) (float-vector -31.9475 53.3021 25.2846) (float-vector 1.421085e-14 65.505 5.54)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 65.505 5.54) (float-vector 1.421085e-14 55.9623 -28.0516) (float-vector -31.9475 53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector -31.9475 53.3021 25.2846) (float-vector 1.421085e-14 55.9623 39.1316) (float-vector 1.421085e-14 65.505 5.54)))
         (instance face :init :vertices (list (float-vector -31.9475 53.3021 -14.2046) (float-vector -54.3523 35.2016 5.54) (float-vector -31.9475 53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector 19.7446 33.5575 57.2321) (float-vector -19.7446 33.5575 57.2321) (float-vector 4.263256e-14 1.61 69.435)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 1.61 69.435) (float-vector 33.5916 1.61 59.8923) (float-vector 19.7446 33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 33.5575 57.2321) (float-vector -33.5916 1.61 59.8923) (float-vector 4.263256e-14 1.61 69.435)))
         (instance face :init :vertices (list (float-vector 19.7446 33.5575 57.2321) (float-vector 1.421085e-14 55.9623 39.1316) (float-vector -19.7446 33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector -31.9475 53.3021 25.2846) (float-vector -51.6921 21.3546 37.4875) (float-vector -19.7446 33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 33.5575 57.2321) (float-vector 1.421085e-14 55.9623 39.1316) (float-vector -31.9475 53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector -51.6921 21.3546 37.4875) (float-vector -33.5916 1.61 59.8923) (float-vector -19.7446 33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector -31.9475 53.3021 25.2846) (float-vector -54.3523 35.2016 5.54) (float-vector -51.6921 21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector -51.6921 21.3546 37.4875) (float-vector -63.895 1.61 5.54) (float-vector -51.6921 -18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector -51.6921 -18.1346 37.4875) (float-vector -33.5916 1.61 59.8923) (float-vector -51.6921 21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector -63.895 1.61 5.54) (float-vector -54.3523 -31.9816 5.54) (float-vector -51.6921 -18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector -51.6921 21.3546 37.4875) (float-vector -54.3523 35.2016 5.54) (float-vector -63.895 1.61 5.54)))
         (instance face :init :vertices (list (float-vector -51.6921 21.3546 -26.4075) (float-vector -51.6921 -18.1346 -26.4075) (float-vector -63.895 1.61 5.54)))
         (instance face :init :vertices (list (float-vector -63.895 1.61 5.54) (float-vector -54.3523 35.2016 5.54) (float-vector -51.6921 21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector -51.6921 -18.1346 -26.4075) (float-vector -54.3523 -31.9816 5.54) (float-vector -63.895 1.61 5.54)))
         (instance face :init :vertices (list (float-vector -51.6921 21.3546 -26.4075) (float-vector -33.5916 1.61 -48.8123) (float-vector -51.6921 -18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector -19.7446 -30.3375 -46.1521) (float-vector -31.9475 -50.0821 -14.2046) (float-vector -51.6921 -18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector -51.6921 -18.1346 -26.4075) (float-vector -33.5916 1.61 -48.8123) (float-vector -19.7446 -30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector -31.9475 -50.0821 -14.2046) (float-vector -54.3523 -31.9816 5.54) (float-vector -51.6921 -18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector -19.7446 -30.3375 -46.1521) (float-vector 7.105427e-15 -52.7423 -28.0516) (float-vector -31.9475 -50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector -51.6921 -18.1346 37.4875) (float-vector -31.9475 -50.0821 25.2846) (float-vector -19.7446 -30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 -30.3375 57.2321) (float-vector -33.5916 1.61 59.8923) (float-vector -51.6921 -18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector -31.9475 -50.0821 25.2846) (float-vector 0.0 -52.7423 39.1316) (float-vector -19.7446 -30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector -51.6921 -18.1346 37.4875) (float-vector -54.3523 -31.9816 5.54) (float-vector -31.9475 -50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector -31.9475 -50.0821 -14.2046) (float-vector 0.0 -62.285 5.54) (float-vector -31.9475 -50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector -31.9475 -50.0821 25.2846) (float-vector -54.3523 -31.9816 5.54) (float-vector -31.9475 -50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector 0.0 -62.285 5.54) (float-vector 0.0 -52.7423 39.1316) (float-vector -31.9475 -50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector -31.9475 -50.0821 -14.2046) (float-vector 7.105427e-15 -52.7423 -28.0516) (float-vector 0.0 -62.285 5.54)))
         (instance face :init :vertices (list (float-vector 19.7446 -30.3375 57.2321) (float-vector 31.9475 -50.0821 25.2846) (float-vector 51.6921 -18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 -18.1346 37.4875) (float-vector 33.5916 1.61 59.8923) (float-vector 19.7446 -30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector 31.9475 -50.0821 25.2846) (float-vector 54.3523 -31.9816 5.54) (float-vector 51.6921 -18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector 19.7446 -30.3375 57.2321) (float-vector 0.0 -52.7423 39.1316) (float-vector 31.9475 -50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector 0.0 -62.285 5.54) (float-vector 31.9475 -50.0821 -14.2046) (float-vector 31.9475 -50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector 31.9475 -50.0821 25.2846) (float-vector 0.0 -52.7423 39.1316) (float-vector 0.0 -62.285 5.54)))
         (instance face :init :vertices (list (float-vector 31.9475 -50.0821 -14.2046) (float-vector 54.3523 -31.9816 5.54) (float-vector 31.9475 -50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector 0.0 -62.285 5.54) (float-vector 7.105427e-15 -52.7423 -28.0516) (float-vector 31.9475 -50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector 19.7446 -30.3375 -46.1521) (float-vector 51.6921 -18.1346 -26.4075) (float-vector 31.9475 -50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector 31.9475 -50.0821 -14.2046) (float-vector 7.105427e-15 -52.7423 -28.0516) (float-vector 19.7446 -30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector 51.6921 -18.1346 -26.4075) (float-vector 54.3523 -31.9816 5.54) (float-vector 31.9475 -50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector 19.7446 -30.3375 -46.1521) (float-vector 33.5916 1.61 -48.8123) (float-vector 51.6921 -18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector 51.6921 -18.1346 37.4875) (float-vector 63.895 1.61 5.54) (float-vector 51.6921 21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 21.3546 37.4875) (float-vector 33.5916 1.61 59.8923) (float-vector 51.6921 -18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector 63.895 1.61 5.54) (float-vector 54.3523 35.2016 5.54) (float-vector 51.6921 21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 -18.1346 37.4875) (float-vector 54.3523 -31.9816 5.54) (float-vector 63.895 1.61 5.54)))
         (instance face :init :vertices (list (float-vector 51.6921 -18.1346 -26.4075) (float-vector 51.6921 21.3546 -26.4075) (float-vector 63.895 1.61 5.54)))
         (instance face :init :vertices (list (float-vector 63.895 1.61 5.54) (float-vector 54.3523 -31.9816 5.54) (float-vector 51.6921 -18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector 51.6921 21.3546 -26.4075) (float-vector 54.3523 35.2016 5.54) (float-vector 63.895 1.61 5.54)))
         (instance face :init :vertices (list (float-vector 51.6921 -18.1346 -26.4075) (float-vector 33.5916 1.61 -48.8123) (float-vector 51.6921 21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector 31.9475 53.3021 25.2846) (float-vector 31.9475 53.3021 -14.2046) (float-vector 1.421085e-14 65.505 5.54)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 65.505 5.54) (float-vector 1.421085e-14 55.9623 39.1316) (float-vector 31.9475 53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector 31.9475 53.3021 -14.2046) (float-vector 1.421085e-14 55.9623 -28.0516) (float-vector 1.421085e-14 65.505 5.54)))
         (instance face :init :vertices (list (float-vector 31.9475 53.3021 25.2846) (float-vector 54.3523 35.2016 5.54) (float-vector 31.9475 53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector 51.6921 21.3546 -26.4075) (float-vector 19.7446 33.5575 -46.1521) (float-vector 31.9475 53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector 31.9475 53.3021 -14.2046) (float-vector 54.3523 35.2016 5.54) (float-vector 51.6921 21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector 19.7446 33.5575 -46.1521) (float-vector 1.421085e-14 55.9623 -28.0516) (float-vector 31.9475 53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector 51.6921 21.3546 -26.4075) (float-vector 33.5916 1.61 -48.8123) (float-vector 19.7446 33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector -31.9475 53.3021 -14.2046) (float-vector -19.7446 33.5575 -46.1521) (float-vector -51.6921 21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector -51.6921 21.3546 -26.4075) (float-vector -54.3523 35.2016 5.54) (float-vector -31.9475 53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector -19.7446 33.5575 -46.1521) (float-vector -33.5916 1.61 -48.8123) (float-vector -51.6921 21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector -31.9475 53.3021 -14.2046) (float-vector 1.421085e-14 55.9623 -28.0516) (float-vector -19.7446 33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector -19.7446 -30.3375 -46.1521) (float-vector -7.105427e-15 1.61 -58.355) (float-vector 19.7446 -30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector 19.7446 -30.3375 -46.1521) (float-vector 7.105427e-15 -52.7423 -28.0516) (float-vector -19.7446 -30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector -7.105427e-15 1.61 -58.355) (float-vector 33.5916 1.61 -48.8123) (float-vector 19.7446 -30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector -19.7446 -30.3375 -46.1521) (float-vector -33.5916 1.61 -48.8123) (float-vector -7.105427e-15 1.61 -58.355)))
         (instance face :init :vertices (list (float-vector 19.7446 33.5575 -46.1521) (float-vector -7.105427e-15 1.61 -58.355) (float-vector -19.7446 33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector -19.7446 33.5575 -46.1521) (float-vector 1.421085e-14 55.9623 -28.0516) (float-vector 19.7446 33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector -7.105427e-15 1.61 -58.355) (float-vector -33.5916 1.61 -48.8123) (float-vector -19.7446 33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector 19.7446 33.5575 -46.1521) (float-vector 33.5916 1.61 -48.8123) (float-vector -7.105427e-15 1.61 -58.355)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 38.5775 1.421085e-14 -178.26) (float-vector 34.5774 -14.9288 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 34.5774 -14.9288 -178.26) (float-vector 23.6487 -25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 23.6487 -25.8574 -178.26) (float-vector 8.72 -29.8575 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 8.72 -29.8575 -178.26) (float-vector -6.20875 -25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -6.20875 -25.8574 -178.26) (float-vector -17.1374 -14.9287 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -17.1374 -14.9287 -178.26) (float-vector -21.1375 9.947598e-14 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -21.1375 9.947598e-14 -178.26) (float-vector -17.1374 14.9288 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -17.1374 14.9288 -178.26) (float-vector -6.20875 25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -6.20875 25.8574 -178.26) (float-vector 8.72 29.8575 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 8.72 29.8575 -178.26) (float-vector 23.6488 25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 23.6488 25.8574 -178.26) (float-vector 34.5774 14.9287 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 34.5774 14.9287 -178.26) (float-vector 38.5775 1.421085e-14 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 53.5062 -25.8574 -156.403) (float-vector 34.5774 -14.9288 -178.26) (float-vector 38.5775 1.421085e-14 -178.26) (float-vector 60.4347 0.0 -156.403)))
         (instance face :init :vertices (list (float-vector 34.5774 -44.7863 -156.403) (float-vector 23.6487 -25.8574 -178.26) (float-vector 34.5774 -14.9288 -178.26) (float-vector 53.5062 -25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector 8.72 -51.7147 -156.403) (float-vector 8.72 -29.8575 -178.26) (float-vector 23.6487 -25.8574 -178.26) (float-vector 34.5774 -44.7863 -156.403)))
         (instance face :init :vertices (list (float-vector -17.1374 -44.7862 -156.403) (float-vector -6.20875 -25.8574 -178.26) (float-vector 8.72 -29.8575 -178.26) (float-vector 8.72 -51.7147 -156.403)))
         (instance face :init :vertices (list (float-vector -36.0663 -25.8574 -156.403) (float-vector -17.1374 -14.9287 -178.26) (float-vector -6.20875 -25.8574 -178.26) (float-vector -17.1374 -44.7862 -156.403)))
         (instance face :init :vertices (list (float-vector -42.9947 1.847411e-13 -156.403) (float-vector -21.1375 9.947598e-14 -178.26) (float-vector -17.1374 -14.9287 -178.26) (float-vector -36.0663 -25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector -36.0662 25.8574 -156.403) (float-vector -17.1374 14.9288 -178.26) (float-vector -21.1375 9.947598e-14 -178.26) (float-vector -42.9947 1.847411e-13 -156.403)))
         (instance face :init :vertices (list (float-vector -17.1374 44.7863 -156.403) (float-vector -6.20875 25.8574 -178.26) (float-vector -17.1374 14.9288 -178.26) (float-vector -36.0662 25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector 8.72 51.7147 -156.403) (float-vector 8.72 29.8575 -178.26) (float-vector -6.20875 25.8574 -178.26) (float-vector -17.1374 44.7863 -156.403)))
         (instance face :init :vertices (list (float-vector 34.5774 44.7862 -156.403) (float-vector 23.6488 25.8574 -178.26) (float-vector 8.72 29.8575 -178.26) (float-vector 8.72 51.7147 -156.403)))
         (instance face :init :vertices (list (float-vector 53.5062 25.8574 -156.403) (float-vector 34.5774 14.9287 -178.26) (float-vector 23.6488 25.8574 -178.26) (float-vector 34.5774 44.7862 -156.403)))
         (instance face :init :vertices (list (float-vector 60.4347 0.0 -156.403) (float-vector 38.5775 1.421085e-14 -178.26) (float-vector 34.5774 14.9287 -178.26) (float-vector 53.5062 25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector 60.4347 -29.8575 -126.545) (float-vector 53.5062 -25.8574 -156.403) (float-vector 60.4347 0.0 -156.403) (float-vector 68.435 0.0 -126.545)))
         (instance face :init :vertices (list (float-vector 38.5775 -51.7147 -126.545) (float-vector 34.5774 -44.7863 -156.403) (float-vector 53.5062 -25.8574 -156.403) (float-vector 60.4347 -29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector 8.72 -59.715 -126.545) (float-vector 8.72 -51.7147 -156.403) (float-vector 34.5774 -44.7863 -156.403) (float-vector 38.5775 -51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector -21.1375 -51.7147 -126.545) (float-vector -17.1374 -44.7862 -156.403) (float-vector 8.72 -51.7147 -156.403) (float-vector 8.72 -59.715 -126.545)))
         (instance face :init :vertices (list (float-vector -42.9947 -29.8575 -126.545) (float-vector -36.0663 -25.8574 -156.403) (float-vector -17.1374 -44.7862 -156.403) (float-vector -21.1375 -51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector -50.995 2.273737e-13 -126.545) (float-vector -42.9947 1.847411e-13 -156.403) (float-vector -36.0663 -25.8574 -156.403) (float-vector -42.9947 -29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector -42.9947 29.8575 -126.545) (float-vector -36.0662 25.8574 -156.403) (float-vector -42.9947 1.847411e-13 -156.403) (float-vector -50.995 2.273737e-13 -126.545)))
         (instance face :init :vertices (list (float-vector -21.1375 51.7147 -126.545) (float-vector -17.1374 44.7863 -156.403) (float-vector -36.0662 25.8574 -156.403) (float-vector -42.9947 29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector 8.72 59.715 -126.545) (float-vector 8.72 51.7147 -156.403) (float-vector -17.1374 44.7863 -156.403) (float-vector -21.1375 51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector 38.5775 51.7147 -126.545) (float-vector 34.5774 44.7862 -156.403) (float-vector 8.72 51.7147 -156.403) (float-vector 8.72 59.715 -126.545)))
         (instance face :init :vertices (list (float-vector 60.4347 29.8575 -126.545) (float-vector 53.5062 25.8574 -156.403) (float-vector 34.5774 44.7862 -156.403) (float-vector 38.5775 51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector 68.435 0.0 -126.545) (float-vector 60.4347 0.0 -156.403) (float-vector 53.5062 25.8574 -156.403) (float-vector 60.4347 29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector 60.4347 -29.8575 -53.455) (float-vector 60.4347 -29.8575 -126.545) (float-vector 68.435 0.0 -126.545) (float-vector 68.435 1.421085e-14 -53.455)))
         (instance face :init :vertices (list (float-vector 38.5775 -51.7147 -53.455) (float-vector 38.5775 -51.7147 -126.545) (float-vector 60.4347 -29.8575 -126.545) (float-vector 60.4347 -29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector 8.72 -59.715 -53.455) (float-vector 8.72 -59.715 -126.545) (float-vector 38.5775 -51.7147 -126.545) (float-vector 38.5775 -51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector -21.1375 -51.7147 -53.455) (float-vector -21.1375 -51.7147 -126.545) (float-vector 8.72 -59.715 -126.545) (float-vector 8.72 -59.715 -53.455)))
         (instance face :init :vertices (list (float-vector -42.9947 -29.8575 -53.455) (float-vector -42.9947 -29.8575 -126.545) (float-vector -21.1375 -51.7147 -126.545) (float-vector -21.1375 -51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector -50.995 2.273737e-13 -53.455) (float-vector -50.995 2.273737e-13 -126.545) (float-vector -42.9947 -29.8575 -126.545) (float-vector -42.9947 -29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector -42.9947 29.8575 -53.455) (float-vector -42.9947 29.8575 -126.545) (float-vector -50.995 2.273737e-13 -126.545) (float-vector -50.995 2.273737e-13 -53.455)))
         (instance face :init :vertices (list (float-vector -21.1375 51.7147 -53.455) (float-vector -21.1375 51.7147 -126.545) (float-vector -42.9947 29.8575 -126.545) (float-vector -42.9947 29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector 8.72 59.715 -53.455) (float-vector 8.72 59.715 -126.545) (float-vector -21.1375 51.7147 -126.545) (float-vector -21.1375 51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector 38.5775 51.7147 -53.455) (float-vector 38.5775 51.7147 -126.545) (float-vector 8.72 59.715 -126.545) (float-vector 8.72 59.715 -53.455)))
         (instance face :init :vertices (list (float-vector 60.4347 29.8575 -53.455) (float-vector 60.4347 29.8575 -126.545) (float-vector 38.5775 51.7147 -126.545) (float-vector 38.5775 51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector 68.435 1.421085e-14 -53.455) (float-vector 68.435 0.0 -126.545) (float-vector 60.4347 29.8575 -126.545) (float-vector 60.4347 29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector 53.5062 -25.8574 -23.5975) (float-vector 60.4347 -29.8575 -53.455) (float-vector 68.435 1.421085e-14 -53.455) (float-vector 60.4347 0.0 -23.5975)))
         (instance face :init :vertices (list (float-vector 34.5774 -44.7863 -23.5975) (float-vector 38.5775 -51.7147 -53.455) (float-vector 60.4347 -29.8575 -53.455) (float-vector 53.5062 -25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector 8.72 -51.7147 -23.5975) (float-vector 8.72 -59.715 -53.455) (float-vector 38.5775 -51.7147 -53.455) (float-vector 34.5774 -44.7863 -23.5975)))
         (instance face :init :vertices (list (float-vector -17.1374 -44.7862 -23.5975) (float-vector -21.1375 -51.7147 -53.455) (float-vector 8.72 -59.715 -53.455) (float-vector 8.72 -51.7147 -23.5975)))
         (instance face :init :vertices (list (float-vector -36.0663 -25.8574 -23.5975) (float-vector -42.9947 -29.8575 -53.455) (float-vector -21.1375 -51.7147 -53.455) (float-vector -17.1374 -44.7862 -23.5975)))
         (instance face :init :vertices (list (float-vector -42.9947 1.989520e-13 -23.5975) (float-vector -50.995 2.273737e-13 -53.455) (float-vector -42.9947 -29.8575 -53.455) (float-vector -36.0663 -25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector -36.0662 25.8574 -23.5975) (float-vector -42.9947 29.8575 -53.455) (float-vector -50.995 2.273737e-13 -53.455) (float-vector -42.9947 1.989520e-13 -23.5975)))
         (instance face :init :vertices (list (float-vector -17.1374 44.7863 -23.5975) (float-vector -21.1375 51.7147 -53.455) (float-vector -42.9947 29.8575 -53.455) (float-vector -36.0662 25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector 8.72 51.7147 -23.5975) (float-vector 8.72 59.715 -53.455) (float-vector -21.1375 51.7147 -53.455) (float-vector -17.1374 44.7863 -23.5975)))
         (instance face :init :vertices (list (float-vector 34.5774 44.7862 -23.5975) (float-vector 38.5775 51.7147 -53.455) (float-vector 8.72 59.715 -53.455) (float-vector 8.72 51.7147 -23.5975)))
         (instance face :init :vertices (list (float-vector 53.5062 25.8574 -23.5975) (float-vector 60.4347 29.8575 -53.455) (float-vector 38.5775 51.7147 -53.455) (float-vector 34.5774 44.7862 -23.5975)))
         (instance face :init :vertices (list (float-vector 60.4347 0.0 -23.5975) (float-vector 68.435 1.421085e-14 -53.455) (float-vector 60.4347 29.8575 -53.455) (float-vector 53.5062 25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector 34.5774 -14.9288 -1.74029) (float-vector 53.5062 -25.8574 -23.5975) (float-vector 60.4347 0.0 -23.5975) (float-vector 38.5775 0.0 -1.74029)))
         (instance face :init :vertices (list (float-vector 23.6487 -25.8574 -1.74029) (float-vector 34.5774 -44.7863 -23.5975) (float-vector 53.5062 -25.8574 -23.5975) (float-vector 34.5774 -14.9288 -1.74029)))
         (instance face :init :vertices (list (float-vector 8.72 -29.8575 -1.74029) (float-vector 8.72 -51.7147 -23.5975) (float-vector 34.5774 -44.7863 -23.5975) (float-vector 23.6487 -25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector -6.20875 -25.8574 -1.74029) (float-vector -17.1374 -44.7862 -23.5975) (float-vector 8.72 -51.7147 -23.5975) (float-vector 8.72 -29.8575 -1.74029)))
         (instance face :init :vertices (list (float-vector -17.1374 -14.9287 -1.74029) (float-vector -36.0663 -25.8574 -23.5975) (float-vector -17.1374 -44.7862 -23.5975) (float-vector -6.20875 -25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector -21.1375 1.136868e-13 -1.74029) (float-vector -42.9947 1.989520e-13 -23.5975) (float-vector -36.0663 -25.8574 -23.5975) (float-vector -17.1374 -14.9287 -1.74029)))
         (instance face :init :vertices (list (float-vector -17.1374 14.9288 -1.74029) (float-vector -36.0662 25.8574 -23.5975) (float-vector -42.9947 1.989520e-13 -23.5975) (float-vector -21.1375 1.136868e-13 -1.74029)))
         (instance face :init :vertices (list (float-vector -6.20875 25.8574 -1.74029) (float-vector -17.1374 44.7863 -23.5975) (float-vector -36.0662 25.8574 -23.5975) (float-vector -17.1374 14.9288 -1.74029)))
         (instance face :init :vertices (list (float-vector 8.72 29.8575 -1.74029) (float-vector 8.72 51.7147 -23.5975) (float-vector -17.1374 44.7863 -23.5975) (float-vector -6.20875 25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector 23.6488 25.8574 -1.74029) (float-vector 34.5774 44.7862 -23.5975) (float-vector 8.72 51.7147 -23.5975) (float-vector 8.72 29.8575 -1.74029)))
         (instance face :init :vertices (list (float-vector 34.5774 14.9288 -1.74029) (float-vector 53.5062 25.8574 -23.5975) (float-vector 34.5774 44.7862 -23.5975) (float-vector 23.6488 25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector 38.5775 0.0 -1.74029) (float-vector 60.4347 0.0 -23.5975) (float-vector 53.5062 25.8574 -23.5975) (float-vector 34.5774 14.9288 -1.74029)))
         (instance face :init :vertices (list (float-vector 34.5774 -14.9288 -1.74029) (float-vector 38.5775 0.0 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 38.5775 0.0 -1.74029) (float-vector 34.5774 14.9288 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 34.5774 14.9288 -1.74029) (float-vector 23.6488 25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 23.6488 25.8574 -1.74029) (float-vector 8.72 29.8575 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 8.72 29.8575 -1.74029) (float-vector -6.20875 25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -6.20875 25.8574 -1.74029) (float-vector -17.1374 14.9288 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -17.1374 14.9288 -1.74029) (float-vector -21.1375 1.136868e-13 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -21.1375 1.136868e-13 -1.74029) (float-vector -17.1374 -14.9287 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -17.1374 -14.9287 -1.74029) (float-vector -6.20875 -25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -6.20875 -25.8574 -1.74029) (float-vector 8.72 -29.8575 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 8.72 -29.8575 -1.74029) (float-vector 23.6487 -25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 23.6487 -25.8574 -1.74029) (float-vector 34.5774 -14.9288 -1.74029) (float-vector 8.72 0.0 6.26)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray30)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color :white)
     (send (elt bc 5) :set-color :papayawhip)
     (send (elt bc 6) :set-color :papayawhip)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-shank :weight 60 :centroid (float-vector 15.6998 5.138898e-15 -58.4474) :inertia-tensor #2f((1.213007e+05 -1.023431e-12 19801.3) (-1.023431e-12 1.189323e+05 -7.753066e-12) (19801.3 -7.753066e-12 15425.8))))

     ;; definition of :rleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.5 -41.0 -48.1) (float-vector 14.5 -41.0 -48.1) (float-vector 20.1 -41.0 -42.6) (float-vector 20.1 -41.0 5.0) (float-vector 14.5 -41.0 13.0) (float-vector -14.5 -41.0 13.0) (float-vector -20.1 -41.0 5.0) (float-vector -20.1 -41.0 -42.6)))
         (instance face :init :vertices (list (float-vector 14.5 -7.105427e-15 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector -20.1 -7.105427e-15 -42.6) (float-vector -20.1 0.0 5.0) (float-vector -14.5 0.0 13.0) (float-vector 14.5 -7.105427e-15 13.0) (float-vector 20.1 0.0 5.0) (float-vector 20.1 -7.105427e-15 -42.6)))
         (instance face :init :vertices (list (float-vector -14.5 -41.0 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector 14.5 -7.105427e-15 -48.1) (float-vector 14.5 -41.0 -48.1)))
         (instance face :init :vertices (list (float-vector -20.1 -41.0 -42.6) (float-vector -20.1 -7.105427e-15 -42.6) (float-vector -14.5 0.0 -48.1) (float-vector -14.5 -41.0 -48.1)))
         (instance face :init :vertices (list (float-vector -20.1 -41.0 5.0) (float-vector -20.1 0.0 5.0) (float-vector -20.1 -7.105427e-15 -42.6) (float-vector -20.1 -41.0 -42.6)))
         (instance face :init :vertices (list (float-vector -14.5 -41.0 13.0) (float-vector -14.5 0.0 13.0) (float-vector -20.1 0.0 5.0) (float-vector -20.1 -41.0 5.0)))
         (instance face :init :vertices (list (float-vector 14.5 -41.0 13.0) (float-vector 14.5 -7.105427e-15 13.0) (float-vector -14.5 0.0 13.0) (float-vector -14.5 -41.0 13.0)))
         (instance face :init :vertices (list (float-vector 20.1 -41.0 5.0) (float-vector 20.1 0.0 5.0) (float-vector 14.5 -7.105427e-15 13.0) (float-vector 14.5 -41.0 13.0)))
         (instance face :init :vertices (list (float-vector 20.1 -41.0 -42.6) (float-vector 20.1 -7.105427e-15 -42.6) (float-vector 20.1 0.0 5.0) (float-vector 20.1 -41.0 5.0)))
         (instance face :init :vertices (list (float-vector 14.5 -41.0 -48.1) (float-vector 14.5 -7.105427e-15 -48.1) (float-vector 20.1 -7.105427e-15 -42.6) (float-vector 20.1 -41.0 -42.6)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle :weight 116 :centroid (float-vector 1.490892e-16 -20.5 -17.7032) :inertia-tensor #2f((85104.8 3.545341e-13 3.061652e-13) (3.545341e-13 36355.8 -42098.2) (3.061652e-13 -42098.2 48750.0))))

     ;; definition of :rleg-foot
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.0 -14.5 -48.1) (float-vector 41.0 14.5 -48.1) (float-vector 41.0 20.1 -42.6) (float-vector 41.0 20.1 5.0) (float-vector 41.0 14.5 13.0) (float-vector 41.0 -14.5 13.0) (float-vector 41.0 -20.1 5.0) (float-vector 41.0 -20.1 -42.6)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 14.5 -48.1) (float-vector 1.421085e-14 -14.5 -48.1) (float-vector 2.131628e-14 -20.1 -42.6) (float-vector 0.0 -20.1 5.0) (float-vector 0.0 -14.5 13.0) (float-vector 7.105427e-15 14.5 13.0) (float-vector 7.105427e-15 20.1 5.0) (float-vector 1.421085e-14 20.1 -42.6)))
         (instance face :init :vertices (list (float-vector 41.0 -14.5 -48.1) (float-vector 1.421085e-14 -14.5 -48.1) (float-vector 2.131628e-14 14.5 -48.1) (float-vector 41.0 14.5 -48.1)))
         (instance face :init :vertices (list (float-vector 41.0 -20.1 -42.6) (float-vector 2.131628e-14 -20.1 -42.6) (float-vector 1.421085e-14 -14.5 -48.1) (float-vector 41.0 -14.5 -48.1)))
         (instance face :init :vertices (list (float-vector 41.0 -20.1 5.0) (float-vector 0.0 -20.1 5.0) (float-vector 2.131628e-14 -20.1 -42.6) (float-vector 41.0 -20.1 -42.6)))
         (instance face :init :vertices (list (float-vector 41.0 -14.5 13.0) (float-vector 0.0 -14.5 13.0) (float-vector 0.0 -20.1 5.0) (float-vector 41.0 -20.1 5.0)))
         (instance face :init :vertices (list (float-vector 41.0 14.5 13.0) (float-vector 7.105427e-15 14.5 13.0) (float-vector 0.0 -14.5 13.0) (float-vector 41.0 -14.5 13.0)))
         (instance face :init :vertices (list (float-vector 41.0 20.1 5.0) (float-vector 7.105427e-15 20.1 5.0) (float-vector 7.105427e-15 14.5 13.0) (float-vector 41.0 14.5 13.0)))
         (instance face :init :vertices (list (float-vector 41.0 20.1 -42.6) (float-vector 1.421085e-14 20.1 -42.6) (float-vector 7.105427e-15 20.1 5.0) (float-vector 41.0 20.1 5.0)))
         (instance face :init :vertices (list (float-vector 41.0 14.5 -48.1) (float-vector 2.131628e-14 14.5 -48.1) (float-vector 1.421085e-14 20.1 -42.6) (float-vector 41.0 20.1 -42.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 130.813 37.6611 -63.0) (float-vector 109.0 42.0 -63.0) (float-vector 29.0 42.0 -63.0) (float-vector 7.18704 37.6611 -63.0) (float-vector -11.3051 25.3051 -63.0) (float-vector -23.6611 6.81296 -63.0) (float-vector -28.0 -15.0 -63.0) (float-vector -23.6611 -36.813 -63.0) (float-vector -11.3051 -55.3051 -63.0) (float-vector 7.18704 -67.6611 -63.0) (float-vector 29.0 -72.0 -63.0) (float-vector 109.0 -72.0 -63.0) (float-vector 130.813 -67.6611 -63.0) (float-vector 149.305 -55.3051 -63.0) (float-vector 161.661 -36.813 -63.0) (float-vector 166.0 -15.0 -63.0) (float-vector 161.661 6.81296 -63.0) (float-vector 149.305 25.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 109.0 42.0 -69.0) (float-vector 130.813 37.6611 -69.0) (float-vector 149.305 25.3051 -69.0) (float-vector 161.661 6.81296 -69.0) (float-vector 166.0 -15.0 -69.0) (float-vector 161.661 -36.813 -69.0) (float-vector 149.305 -55.3051 -69.0) (float-vector 130.813 -67.6611 -69.0) (float-vector 109.0 -72.0 -69.0) (float-vector 29.0 -72.0 -69.0) (float-vector 7.18704 -67.6611 -69.0) (float-vector -11.3051 -55.3051 -69.0) (float-vector -23.6611 -36.813 -69.0) (float-vector -28.0 -15.0 -69.0) (float-vector -23.6611 6.81296 -69.0) (float-vector -11.3051 25.3051 -69.0) (float-vector 7.18704 37.6611 -69.0) (float-vector 29.0 42.0 -69.0)))
         (instance face :init :vertices (list (float-vector 130.813 37.6611 -63.0) (float-vector 130.813 37.6611 -69.0) (float-vector 109.0 42.0 -69.0) (float-vector 109.0 42.0 -63.0)))
         (instance face :init :vertices (list (float-vector 149.305 25.3051 -63.0) (float-vector 149.305 25.3051 -69.0) (float-vector 130.813 37.6611 -69.0) (float-vector 130.813 37.6611 -63.0)))
         (instance face :init :vertices (list (float-vector 161.661 6.81296 -63.0) (float-vector 161.661 6.81296 -69.0) (float-vector 149.305 25.3051 -69.0) (float-vector 149.305 25.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 166.0 -15.0 -63.0) (float-vector 166.0 -15.0 -69.0) (float-vector 161.661 6.81296 -69.0) (float-vector 161.661 6.81296 -63.0)))
         (instance face :init :vertices (list (float-vector 161.661 -36.813 -63.0) (float-vector 161.661 -36.813 -69.0) (float-vector 166.0 -15.0 -69.0) (float-vector 166.0 -15.0 -63.0)))
         (instance face :init :vertices (list (float-vector 149.305 -55.3051 -63.0) (float-vector 149.305 -55.3051 -69.0) (float-vector 161.661 -36.813 -69.0) (float-vector 161.661 -36.813 -63.0)))
         (instance face :init :vertices (list (float-vector 130.813 -67.6611 -63.0) (float-vector 130.813 -67.6611 -69.0) (float-vector 149.305 -55.3051 -69.0) (float-vector 149.305 -55.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 109.0 -72.0 -63.0) (float-vector 109.0 -72.0 -69.0) (float-vector 130.813 -67.6611 -69.0) (float-vector 130.813 -67.6611 -63.0)))
         (instance face :init :vertices (list (float-vector 29.0 -72.0 -63.0) (float-vector 29.0 -72.0 -69.0) (float-vector 109.0 -72.0 -69.0) (float-vector 109.0 -72.0 -63.0)))
         (instance face :init :vertices (list (float-vector 7.18704 -67.6611 -63.0) (float-vector 7.18704 -67.6611 -69.0) (float-vector 29.0 -72.0 -69.0) (float-vector 29.0 -72.0 -63.0)))
         (instance face :init :vertices (list (float-vector -11.3051 -55.3051 -63.0) (float-vector -11.3051 -55.3051 -69.0) (float-vector 7.18704 -67.6611 -69.0) (float-vector 7.18704 -67.6611 -63.0)))
         (instance face :init :vertices (list (float-vector -23.6611 -36.813 -63.0) (float-vector -23.6611 -36.813 -69.0) (float-vector -11.3051 -55.3051 -69.0) (float-vector -11.3051 -55.3051 -63.0)))
         (instance face :init :vertices (list (float-vector -28.0 -15.0 -63.0) (float-vector -28.0 -15.0 -69.0) (float-vector -23.6611 -36.813 -69.0) (float-vector -23.6611 -36.813 -63.0)))
         (instance face :init :vertices (list (float-vector -23.6611 6.81296 -63.0) (float-vector -23.6611 6.81296 -69.0) (float-vector -28.0 -15.0 -69.0) (float-vector -28.0 -15.0 -63.0)))
         (instance face :init :vertices (list (float-vector -11.3051 25.3051 -63.0) (float-vector -11.3051 25.3051 -69.0) (float-vector -23.6611 6.81296 -69.0) (float-vector -23.6611 6.81296 -63.0)))
         (instance face :init :vertices (list (float-vector 7.18704 37.6611 -63.0) (float-vector 7.18704 37.6611 -69.0) (float-vector -11.3051 25.3051 -69.0) (float-vector -11.3051 25.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 29.0 42.0 -63.0) (float-vector 29.0 42.0 -69.0) (float-vector 7.18704 37.6611 -69.0) (float-vector 7.18704 37.6611 -63.0)))
         (instance face :init :vertices (list (float-vector 109.0 42.0 -63.0) (float-vector 109.0 42.0 -69.0) (float-vector 29.0 42.0 -69.0) (float-vector 29.0 42.0 -63.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.5 -10.0 -5.0) (float-vector 41.5 -10.0 -63.0) (float-vector 96.5 -10.0 -63.0) (float-vector 96.5 -10.0 -5.0) (float-vector 94.5 -10.0 -5.0) (float-vector 94.5 -10.0 -61.0) (float-vector 43.5 -10.0 -61.0) (float-vector 43.5 -10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 41.5 10.0 -63.0) (float-vector 96.5 10.0 -63.0) (float-vector 96.5 -10.0 -63.0) (float-vector 41.5 -10.0 -63.0)))
         (instance face :init :vertices (list (float-vector 41.5 10.0 -5.0) (float-vector 43.5 10.0 -5.0) (float-vector 43.5 10.0 -61.0) (float-vector 94.5 10.0 -61.0) (float-vector 94.5 10.0 -5.0) (float-vector 96.5 10.0 -5.0) (float-vector 96.5 10.0 -63.0) (float-vector 41.5 10.0 -63.0)))
         (instance face :init :vertices (list (float-vector 96.5 7.07107 2.07107) (float-vector 96.5 10.0 -5.0) (float-vector 94.5 10.0 -5.0) (float-vector 94.5 7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 41.5 7.07107 2.07107) (float-vector 43.5 7.07107 2.07107) (float-vector 43.5 10.0 -5.0) (float-vector 41.5 10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 96.5 2.842171e-14 5.0) (float-vector 96.5 7.07107 2.07107) (float-vector 94.5 7.07107 2.07107) (float-vector 94.5 0.0 5.0)))
         (instance face :init :vertices (list (float-vector 41.5 1.421085e-14 5.0) (float-vector 43.5 1.421085e-14 5.0) (float-vector 43.5 7.07107 2.07107) (float-vector 41.5 7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 96.5 -7.07107 2.07107) (float-vector 96.5 2.842171e-14 5.0) (float-vector 94.5 0.0 5.0) (float-vector 94.5 -7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 41.5 -7.07107 2.07107) (float-vector 43.5 -7.07107 2.07107) (float-vector 43.5 1.421085e-14 5.0) (float-vector 41.5 1.421085e-14 5.0)))
         (instance face :init :vertices (list (float-vector 96.5 -10.0 -5.0) (float-vector 96.5 -10.0 -63.0) (float-vector 96.5 10.0 -63.0) (float-vector 96.5 10.0 -5.0) (float-vector 96.5 7.07107 2.07107) (float-vector 96.5 2.842171e-14 5.0) (float-vector 96.5 -7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 41.5 -7.07107 2.07107) (float-vector 41.5 1.421085e-14 5.0) (float-vector 41.5 7.07107 2.07107) (float-vector 41.5 10.0 -5.0) (float-vector 41.5 10.0 -63.0) (float-vector 41.5 -10.0 -63.0) (float-vector 41.5 -10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 96.5 -7.07107 2.07107) (float-vector 94.5 -7.07107 2.07107) (float-vector 94.5 -10.0 -5.0) (float-vector 96.5 -10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 41.5 -10.0 -5.0) (float-vector 43.5 -10.0 -5.0) (float-vector 43.5 -7.07107 2.07107) (float-vector 41.5 -7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 94.5 -10.0 -61.0) (float-vector 94.5 -10.0 -5.0) (float-vector 94.5 -7.07107 2.07107) (float-vector 94.5 0.0 5.0) (float-vector 94.5 7.07107 2.07107) (float-vector 94.5 10.0 -5.0) (float-vector 94.5 10.0 -61.0)))
         (instance face :init :vertices (list (float-vector 43.5 -10.0 -61.0) (float-vector 94.5 -10.0 -61.0) (float-vector 94.5 10.0 -61.0) (float-vector 43.5 10.0 -61.0)))
         (instance face :init :vertices (list (float-vector 43.5 10.0 -61.0) (float-vector 43.5 10.0 -5.0) (float-vector 43.5 7.07107 2.07107) (float-vector 43.5 1.421085e-14 5.0) (float-vector 43.5 -7.07107 2.07107) (float-vector 43.5 -10.0 -5.0) (float-vector 43.5 -10.0 -61.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 95.0 26.0 -53.0) (float-vector 43.0 26.0 -53.0) (float-vector 43.0 -26.0 -53.0) (float-vector 95.0 -26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 43.0 26.0 -63.0) (float-vector 95.0 26.0 -63.0) (float-vector 95.0 -26.0 -63.0) (float-vector 43.0 -26.0 -63.0)))
         (instance face :init :vertices (list (float-vector 95.0 26.0 -53.0) (float-vector 95.0 26.0 -63.0) (float-vector 43.0 26.0 -63.0) (float-vector 43.0 26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 95.0 -26.0 -53.0) (float-vector 95.0 -26.0 -63.0) (float-vector 95.0 26.0 -63.0) (float-vector 95.0 26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 43.0 -26.0 -53.0) (float-vector 43.0 -26.0 -63.0) (float-vector 95.0 -26.0 -63.0) (float-vector 95.0 -26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 43.0 26.0 -53.0) (float-vector 43.0 26.0 -63.0) (float-vector 43.0 -26.0 -63.0) (float-vector 43.0 -26.0 -53.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 170.0 48.0 3.0) (float-vector -30.0 48.0 3.0) (float-vector -30.0 -78.0 3.0) (float-vector 170.0 -78.0 3.0)))
         (instance face :init :vertices (list (float-vector -30.0 48.0 -63.0) (float-vector 170.0 48.0 -63.0) (float-vector 170.0 -78.0 -63.0) (float-vector -30.0 -78.0 -63.0)))
         (instance face :init :vertices (list (float-vector 170.0 48.0 3.0) (float-vector 170.0 48.0 -63.0) (float-vector -30.0 48.0 -63.0) (float-vector -30.0 48.0 3.0)))
         (instance face :init :vertices (list (float-vector 170.0 -78.0 3.0) (float-vector 170.0 -78.0 -63.0) (float-vector 170.0 48.0 -63.0) (float-vector 170.0 48.0 3.0)))
         (instance face :init :vertices (list (float-vector -30.0 -78.0 3.0) (float-vector -30.0 -78.0 -63.0) (float-vector 170.0 -78.0 -63.0) (float-vector 170.0 -78.0 3.0)))
         (instance face :init :vertices (list (float-vector -30.0 48.0 3.0) (float-vector -30.0 48.0 -63.0) (float-vector -30.0 -78.0 -63.0) (float-vector -30.0 -78.0 3.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray90)
     (send (elt bc 3) :set-color :grey20)
     (send (elt bc 4) :set-color :papayawhip)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-foot :weight 365.563 :centroid (float-vector 53.6101 -8.20651 -48.5894) :inertia-tensor #2f((2.950949e+05 48563.6 2.993709e+05) (48563.6 6.344040e+05 -47745.5) (2.993709e+05 -47745.5 3.588738e+05))))

     ;; definition of :lleg-crotch-bracket
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -75.5 -14.5 43.1) (float-vector -75.5 14.5 43.1) (float-vector -75.5 20.1 37.6) (float-vector -75.5 20.1 -10.0) (float-vector -75.5 14.5 -18.0) (float-vector -75.5 -14.5 -18.0) (float-vector -75.5 -20.1 -10.0) (float-vector -75.5 -20.1 37.6)))
         (instance face :init :vertices (list (float-vector -34.5 14.5 43.1) (float-vector -34.5 -14.5 43.1) (float-vector -34.5 -20.1 37.6) (float-vector -34.5 -20.1 -10.0) (float-vector -34.5 -14.5 -18.0) (float-vector -34.5 14.5 -18.0) (float-vector -34.5 20.1 -10.0) (float-vector -34.5 20.1 37.6)))
         (instance face :init :vertices (list (float-vector -75.5 -14.5 43.1) (float-vector -34.5 -14.5 43.1) (float-vector -34.5 14.5 43.1) (float-vector -75.5 14.5 43.1)))
         (instance face :init :vertices (list (float-vector -75.5 -20.1 37.6) (float-vector -34.5 -20.1 37.6) (float-vector -34.5 -14.5 43.1) (float-vector -75.5 -14.5 43.1)))
         (instance face :init :vertices (list (float-vector -75.5 -20.1 -10.0) (float-vector -34.5 -20.1 -10.0) (float-vector -34.5 -20.1 37.6) (float-vector -75.5 -20.1 37.6)))
         (instance face :init :vertices (list (float-vector -75.5 -14.5 -18.0) (float-vector -34.5 -14.5 -18.0) (float-vector -34.5 -20.1 -10.0) (float-vector -75.5 -20.1 -10.0)))
         (instance face :init :vertices (list (float-vector -75.5 14.5 -18.0) (float-vector -34.5 14.5 -18.0) (float-vector -34.5 -14.5 -18.0) (float-vector -75.5 -14.5 -18.0)))
         (instance face :init :vertices (list (float-vector -75.5 20.1 -10.0) (float-vector -34.5 20.1 -10.0) (float-vector -34.5 14.5 -18.0) (float-vector -75.5 14.5 -18.0)))
         (instance face :init :vertices (list (float-vector -75.5 20.1 37.6) (float-vector -34.5 20.1 37.6) (float-vector -34.5 20.1 -10.0) (float-vector -75.5 20.1 -10.0)))
         (instance face :init :vertices (list (float-vector -75.5 14.5 43.1) (float-vector -34.5 14.5 43.1) (float-vector -34.5 20.1 37.6) (float-vector -75.5 20.1 37.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -35.0 15.0 0.0) (float-vector -35.0 15.0 50.0) (float-vector 35.0 15.0 50.0) (float-vector 35.0 15.0 0.0) (float-vector 33.0 15.0 0.0) (float-vector 33.0 15.0 48.0) (float-vector -33.0 15.0 48.0) (float-vector -33.0 15.0 0.0)))
         (instance face :init :vertices (list (float-vector -35.0 -15.0 50.0) (float-vector 35.0 -15.0 50.0) (float-vector 35.0 15.0 50.0) (float-vector -35.0 15.0 50.0)))
         (instance face :init :vertices (list (float-vector -35.0 -15.0 0.0) (float-vector -33.0 -15.0 0.0) (float-vector -33.0 -15.0 48.0) (float-vector 33.0 -15.0 48.0) (float-vector 33.0 -15.0 0.0) (float-vector 35.0 -15.0 0.0) (float-vector 35.0 -15.0 50.0) (float-vector -35.0 -15.0 50.0)))
         (instance face :init :vertices (list (float-vector 35.0 -10.6066 -10.6066) (float-vector 35.0 -15.0 0.0) (float-vector 33.0 -15.0 0.0) (float-vector 33.0 -10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector -35.0 -10.6066 -10.6066) (float-vector -33.0 -10.6066 -10.6066) (float-vector -33.0 -15.0 0.0) (float-vector -35.0 -15.0 0.0)))
         (instance face :init :vertices (list (float-vector 35.0 -7.105427e-15 -15.0) (float-vector 35.0 -10.6066 -10.6066) (float-vector 33.0 -10.6066 -10.6066) (float-vector 33.0 -7.105427e-15 -15.0)))
         (instance face :init :vertices (list (float-vector -35.0 0.0 -15.0) (float-vector -33.0 0.0 -15.0) (float-vector -33.0 -10.6066 -10.6066) (float-vector -35.0 -10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector 35.0 10.6066 -10.6066) (float-vector 35.0 -7.105427e-15 -15.0) (float-vector 33.0 -7.105427e-15 -15.0) (float-vector 33.0 10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector -35.0 10.6066 -10.6066) (float-vector -33.0 10.6066 -10.6066) (float-vector -33.0 0.0 -15.0) (float-vector -35.0 0.0 -15.0)))
         (instance face :init :vertices (list (float-vector 35.0 15.0 0.0) (float-vector 35.0 15.0 50.0) (float-vector 35.0 -15.0 50.0) (float-vector 35.0 -15.0 0.0) (float-vector 35.0 -10.6066 -10.6066) (float-vector 35.0 -7.105427e-15 -15.0) (float-vector 35.0 10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector -35.0 10.6066 -10.6066) (float-vector -35.0 0.0 -15.0) (float-vector -35.0 -10.6066 -10.6066) (float-vector -35.0 -15.0 0.0) (float-vector -35.0 -15.0 50.0) (float-vector -35.0 15.0 50.0) (float-vector -35.0 15.0 0.0)))
         (instance face :init :vertices (list (float-vector 35.0 10.6066 -10.6066) (float-vector 33.0 10.6066 -10.6066) (float-vector 33.0 15.0 0.0) (float-vector 35.0 15.0 0.0)))
         (instance face :init :vertices (list (float-vector -35.0 15.0 0.0) (float-vector -33.0 15.0 0.0) (float-vector -33.0 10.6066 -10.6066) (float-vector -35.0 10.6066 -10.6066)))
         (instance face :init :vertices (list (float-vector 33.0 15.0 48.0) (float-vector 33.0 15.0 0.0) (float-vector 33.0 10.6066 -10.6066) (float-vector 33.0 -7.105427e-15 -15.0) (float-vector 33.0 -10.6066 -10.6066) (float-vector 33.0 -15.0 0.0) (float-vector 33.0 -15.0 48.0)))
         (instance face :init :vertices (list (float-vector -33.0 15.0 48.0) (float-vector 33.0 15.0 48.0) (float-vector 33.0 -15.0 48.0) (float-vector -33.0 -15.0 48.0)))
         (instance face :init :vertices (list (float-vector -33.0 -15.0 48.0) (float-vector -33.0 -15.0 0.0) (float-vector -33.0 -10.6066 -10.6066) (float-vector -33.0 0.0 -15.0) (float-vector -33.0 10.6066 -10.6066) (float-vector -33.0 15.0 0.0) (float-vector -33.0 15.0 48.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :gray90)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-bracket :weight 146.329 :centroid (float-vector -43.6005 -1.954847e-15 16.2766) :inertia-tensor #2f((74201.5 -4.479970e-12 4387.62) (-4.479970e-12 1.657762e+05 -1.051365e-12) (4387.62 -1.051365e-12 96125.0))))

     ;; definition of :lleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.5 -20.5 48.1) (float-vector -14.5 -20.5 48.1) (float-vector -20.1 -20.5 42.6) (float-vector -20.1 -20.5 -5.0) (float-vector -14.5 -20.5 -13.0) (float-vector 14.5 -20.5 -13.0) (float-vector 20.1 -20.5 -5.0) (float-vector 20.1 -20.5 42.6)))
         (instance face :init :vertices (list (float-vector -14.5 20.5 48.1) (float-vector 14.5 20.5 48.1) (float-vector 20.1 20.5 42.6) (float-vector 20.1 20.5 -5.0) (float-vector 14.5 20.5 -13.0) (float-vector -14.5 20.5 -13.0) (float-vector -20.1 20.5 -5.0) (float-vector -20.1 20.5 42.6)))
         (instance face :init :vertices (list (float-vector 14.5 -20.5 48.1) (float-vector 14.5 20.5 48.1) (float-vector -14.5 20.5 48.1) (float-vector -14.5 -20.5 48.1)))
         (instance face :init :vertices (list (float-vector 20.1 -20.5 42.6) (float-vector 20.1 20.5 42.6) (float-vector 14.5 20.5 48.1) (float-vector 14.5 -20.5 48.1)))
         (instance face :init :vertices (list (float-vector 20.1 -20.5 -5.0) (float-vector 20.1 20.5 -5.0) (float-vector 20.1 20.5 42.6) (float-vector 20.1 -20.5 42.6)))
         (instance face :init :vertices (list (float-vector 14.5 -20.5 -13.0) (float-vector 14.5 20.5 -13.0) (float-vector 20.1 20.5 -5.0) (float-vector 20.1 -20.5 -5.0)))
         (instance face :init :vertices (list (float-vector -14.5 -20.5 -13.0) (float-vector -14.5 20.5 -13.0) (float-vector 14.5 20.5 -13.0) (float-vector 14.5 -20.5 -13.0)))
         (instance face :init :vertices (list (float-vector -20.1 -20.5 -5.0) (float-vector -20.1 20.5 -5.0) (float-vector -14.5 20.5 -13.0) (float-vector -14.5 -20.5 -13.0)))
         (instance face :init :vertices (list (float-vector -20.1 -20.5 42.6) (float-vector -20.1 20.5 42.6) (float-vector -20.1 20.5 -5.0) (float-vector -20.1 -20.5 -5.0)))
         (instance face :init :vertices (list (float-vector -14.5 -20.5 48.1) (float-vector -14.5 20.5 48.1) (float-vector -20.1 20.5 42.6) (float-vector -20.1 -20.5 42.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.0 -39.5 1.0) (float-vector 16.0 -27.5 1.0) (float-vector 13.8564 -27.5 9.0) (float-vector 13.8564 -39.5 9.0)))
         (instance face :init :vertices (list (float-vector 13.8564 -27.5 9.0) (float-vector 8.0 -27.5 14.8564) (float-vector 8.0 -39.5 14.8564) (float-vector 13.8564 -39.5 9.0)))
         (instance face :init :vertices (list (float-vector 8.0 -27.5 14.8564) (float-vector 1.421085e-14 -27.5 17.0) (float-vector 1.421085e-14 -39.5 17.0) (float-vector 8.0 -39.5 14.8564)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 -27.5 17.0) (float-vector -8.0 -27.5 14.8564) (float-vector -8.0 -39.5 14.8564) (float-vector 1.421085e-14 -39.5 17.0)))
         (instance face :init :vertices (list (float-vector -8.0 -27.5 14.8564) (float-vector -13.8564 -27.5 9.0) (float-vector -13.8564 -39.5 9.0) (float-vector -8.0 -39.5 14.8564)))
         (instance face :init :vertices (list (float-vector -13.8564 -27.5 9.0) (float-vector -16.0 -27.5 1.0) (float-vector -16.0 -39.5 1.0) (float-vector -13.8564 -39.5 9.0)))
         (instance face :init :vertices (list (float-vector -16.0 -27.5 1.0) (float-vector -13.8564 -27.5 -7.0) (float-vector -13.8564 -39.5 -7.0) (float-vector -16.0 -39.5 1.0)))
         (instance face :init :vertices (list (float-vector -13.8564 -27.5 -7.0) (float-vector -8.0 -27.5 -12.8564) (float-vector -8.0 -39.5 -12.8564) (float-vector -13.8564 -39.5 -7.0)))
         (instance face :init :vertices (list (float-vector -8.0 -27.5 -12.8564) (float-vector -2.842171e-14 -27.5 -15.0) (float-vector -2.842171e-14 -39.5 -15.0) (float-vector -8.0 -39.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 -27.5 -15.0) (float-vector 8.0 -27.5 -12.8564) (float-vector 8.0 -39.5 -12.8564) (float-vector -2.842171e-14 -39.5 -15.0)))
         (instance face :init :vertices (list (float-vector 8.0 -27.5 -12.8564) (float-vector 13.8564 -27.5 -7.0) (float-vector 13.8564 -39.5 -7.0) (float-vector 8.0 -39.5 -12.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 -39.5 -7.0) (float-vector 16.0 -39.5 1.0) (float-vector 13.8564 -39.5 9.0) (float-vector 8.0 -39.5 14.8564) (float-vector 1.421085e-14 -39.5 17.0) (float-vector -8.0 -39.5 14.8564) (float-vector -13.8564 -39.5 9.0) (float-vector -16.0 -39.5 1.0) (float-vector -13.8564 -39.5 -7.0) (float-vector -8.0 -39.5 -12.8564) (float-vector -2.842171e-14 -39.5 -15.0) (float-vector 8.0 -39.5 -12.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 -27.5 -7.0) (float-vector 16.0 -27.5 1.0) (float-vector 16.0 -39.5 1.0) (float-vector 13.8564 -39.5 -7.0)))
         (instance face :init :vertices (list (float-vector 20.5 -27.5 1.0) (float-vector 20.5 -20.5 1.0) (float-vector 17.7535 -20.5 11.25) (float-vector 17.7535 -27.5 11.25)))
         (instance face :init :vertices (list (float-vector 17.7535 -20.5 11.25) (float-vector 10.25 -20.5 18.7535) (float-vector 10.25 -27.5 18.7535) (float-vector 17.7535 -27.5 11.25)))
         (instance face :init :vertices (list (float-vector 10.25 -20.5 18.7535) (float-vector 1.421085e-14 -20.5 21.5) (float-vector 1.421085e-14 -27.5 21.5) (float-vector 10.25 -27.5 18.7535)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 -20.5 21.5) (float-vector -10.25 -20.5 18.7535) (float-vector -10.25 -27.5 18.7535) (float-vector 1.421085e-14 -27.5 21.5)))
         (instance face :init :vertices (list (float-vector -10.25 -20.5 18.7535) (float-vector -17.7535 -20.5 11.25) (float-vector -17.7535 -27.5 11.25) (float-vector -10.25 -27.5 18.7535)))
         (instance face :init :vertices (list (float-vector -17.7535 -20.5 11.25) (float-vector -20.5 -20.5 1.0) (float-vector -20.5 -27.5 1.0) (float-vector -17.7535 -27.5 11.25)))
         (instance face :init :vertices (list (float-vector -20.5 -20.5 1.0) (float-vector -17.7535 -20.5 -9.25) (float-vector -17.7535 -27.5 -9.25) (float-vector -20.5 -27.5 1.0)))
         (instance face :init :vertices (list (float-vector -17.7535 -20.5 -9.25) (float-vector -10.25 -20.5 -16.7535) (float-vector -10.25 -27.5 -16.7535) (float-vector -17.7535 -27.5 -9.25)))
         (instance face :init :vertices (list (float-vector -10.25 -20.5 -16.7535) (float-vector -4.263256e-14 -20.5 -19.5) (float-vector -4.263256e-14 -27.5 -19.5) (float-vector -10.25 -27.5 -16.7535)))
         (instance face :init :vertices (list (float-vector -4.263256e-14 -20.5 -19.5) (float-vector 10.25 -20.5 -16.7535) (float-vector 10.25 -27.5 -16.7535) (float-vector -4.263256e-14 -27.5 -19.5)))
         (instance face :init :vertices (list (float-vector 10.25 -20.5 -16.7535) (float-vector 17.7535 -20.5 -9.25) (float-vector 17.7535 -27.5 -9.25) (float-vector 10.25 -27.5 -16.7535)))
         (instance face :init :vertices (list (float-vector 17.7535 -27.5 -9.25) (float-vector 20.5 -27.5 1.0) (float-vector 17.7535 -27.5 11.25) (float-vector 10.25 -27.5 18.7535) (float-vector 1.421085e-14 -27.5 21.5) (float-vector -10.25 -27.5 18.7535) (float-vector -17.7535 -27.5 11.25) (float-vector -20.5 -27.5 1.0) (float-vector -17.7535 -27.5 -9.25) (float-vector -10.25 -27.5 -16.7535) (float-vector -4.263256e-14 -27.5 -19.5) (float-vector 10.25 -27.5 -16.7535))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 16.0 -27.5 1.0) (float-vector 13.8564 -27.5 -7.0) (float-vector 8.0 -27.5 -12.8564) (float-vector -2.842171e-14 -27.5 -15.0) (float-vector -8.0 -27.5 -12.8564) (float-vector -13.8564 -27.5 -7.0) (float-vector -16.0 -27.5 1.0) (float-vector -13.8564 -27.5 9.0) (float-vector -8.0 -27.5 14.8564) (float-vector 1.421085e-14 -27.5 17.0) (float-vector 8.0 -27.5 14.8564) (float-vector 13.8564 -27.5 9.0)))
))
         (instance face :init :vertices (list (float-vector 17.7535 -20.5 -9.25) (float-vector 20.5 -20.5 1.0) (float-vector 20.5 -27.5 1.0) (float-vector 17.7535 -27.5 -9.25)))
         (instance face :init :vertices (list (float-vector 20.5 -20.5 1.0) (float-vector 17.7535 -20.5 -9.25) (float-vector 10.25 -20.5 -16.7535) (float-vector -4.263256e-14 -20.5 -19.5) (float-vector -10.25 -20.5 -16.7535) (float-vector -17.7535 -20.5 -9.25) (float-vector -20.5 -20.5 1.0) (float-vector -17.7535 -20.5 11.25) (float-vector -10.25 -20.5 18.7535) (float-vector 1.421085e-14 -20.5 21.5) (float-vector 10.25 -20.5 18.7535) (float-vector 17.7535 -20.5 11.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -21.0 -0.5 -15.0) (float-vector -33.0 -0.5 -15.0) (float-vector -33.0 7.5 -12.8564) (float-vector -21.0 7.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -33.0 7.5 -12.8564) (float-vector -33.0 13.3564 -7.0) (float-vector -21.0 13.3564 -7.0) (float-vector -21.0 7.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -33.0 13.3564 -7.0) (float-vector -33.0 15.5 1.0) (float-vector -21.0 15.5 1.0) (float-vector -21.0 13.3564 -7.0)))
         (instance face :init :vertices (list (float-vector -33.0 15.5 1.0) (float-vector -33.0 13.3564 9.0) (float-vector -21.0 13.3564 9.0) (float-vector -21.0 15.5 1.0)))
         (instance face :init :vertices (list (float-vector -33.0 13.3564 9.0) (float-vector -33.0 7.5 14.8564) (float-vector -21.0 7.5 14.8564) (float-vector -21.0 13.3564 9.0)))
         (instance face :init :vertices (list (float-vector -33.0 7.5 14.8564) (float-vector -33.0 -0.5 17.0) (float-vector -21.0 -0.5 17.0) (float-vector -21.0 7.5 14.8564)))
         (instance face :init :vertices (list (float-vector -33.0 -0.5 17.0) (float-vector -33.0 -8.5 14.8564) (float-vector -21.0 -8.5 14.8564) (float-vector -21.0 -0.5 17.0)))
         (instance face :init :vertices (list (float-vector -33.0 -8.5 14.8564) (float-vector -33.0 -14.3564 9.0) (float-vector -21.0 -14.3564 9.0) (float-vector -21.0 -8.5 14.8564)))
         (instance face :init :vertices (list (float-vector -33.0 -14.3564 9.0) (float-vector -33.0 -16.5 1.0) (float-vector -21.0 -16.5 1.0) (float-vector -21.0 -14.3564 9.0)))
         (instance face :init :vertices (list (float-vector -33.0 -16.5 1.0) (float-vector -33.0 -14.3564 -7.0) (float-vector -21.0 -14.3564 -7.0) (float-vector -21.0 -16.5 1.0)))
         (instance face :init :vertices (list (float-vector -33.0 -14.3564 -7.0) (float-vector -33.0 -8.5 -12.8564) (float-vector -21.0 -8.5 -12.8564) (float-vector -21.0 -14.3564 -7.0)))
         (instance face :init :vertices (list (float-vector -21.0 -8.5 -12.8564) (float-vector -21.0 -0.5 -15.0) (float-vector -21.0 7.5 -12.8564) (float-vector -21.0 13.3564 -7.0) (float-vector -21.0 15.5 1.0) (float-vector -21.0 13.3564 9.0) (float-vector -21.0 7.5 14.8564) (float-vector -21.0 -0.5 17.0) (float-vector -21.0 -8.5 14.8564) (float-vector -21.0 -14.3564 9.0) (float-vector -21.0 -16.5 1.0) (float-vector -21.0 -14.3564 -7.0)))
         (instance face :init :vertices (list (float-vector -33.0 -8.5 -12.8564) (float-vector -33.0 -0.5 -15.0) (float-vector -21.0 -0.5 -15.0) (float-vector -21.0 -8.5 -12.8564)))
         (instance face :init :vertices (list (float-vector -33.0 -0.5 -19.5) (float-vector -40.0 -0.5 -19.5) (float-vector -40.0 9.75 -16.7535) (float-vector -33.0 9.75 -16.7535)))
         (instance face :init :vertices (list (float-vector -40.0 9.75 -16.7535) (float-vector -40.0 17.2535 -9.25) (float-vector -33.0 17.2535 -9.25) (float-vector -33.0 9.75 -16.7535)))
         (instance face :init :vertices (list (float-vector -40.0 17.2535 -9.25) (float-vector -40.0 20.0 1.0) (float-vector -33.0 20.0 1.0) (float-vector -33.0 17.2535 -9.25)))
         (instance face :init :vertices (list (float-vector -40.0 20.0 1.0) (float-vector -40.0 17.2535 11.25) (float-vector -33.0 17.2535 11.25) (float-vector -33.0 20.0 1.0)))
         (instance face :init :vertices (list (float-vector -40.0 17.2535 11.25) (float-vector -40.0 9.75 18.7535) (float-vector -33.0 9.75 18.7535) (float-vector -33.0 17.2535 11.25)))
         (instance face :init :vertices (list (float-vector -40.0 9.75 18.7535) (float-vector -40.0 -0.5 21.5) (float-vector -33.0 -0.5 21.5) (float-vector -33.0 9.75 18.7535)))
         (instance face :init :vertices (list (float-vector -40.0 -0.5 21.5) (float-vector -40.0 -10.75 18.7535) (float-vector -33.0 -10.75 18.7535) (float-vector -33.0 -0.5 21.5)))
         (instance face :init :vertices (list (float-vector -40.0 -10.75 18.7535) (float-vector -40.0 -18.2535 11.25) (float-vector -33.0 -18.2535 11.25) (float-vector -33.0 -10.75 18.7535)))
         (instance face :init :vertices (list (float-vector -40.0 -18.2535 11.25) (float-vector -40.0 -21.0 1.0) (float-vector -33.0 -21.0 1.0) (float-vector -33.0 -18.2535 11.25)))
         (instance face :init :vertices (list (float-vector -40.0 -21.0 1.0) (float-vector -40.0 -18.2535 -9.25) (float-vector -33.0 -18.2535 -9.25) (float-vector -33.0 -21.0 1.0)))
         (instance face :init :vertices (list (float-vector -40.0 -18.2535 -9.25) (float-vector -40.0 -10.75 -16.7535) (float-vector -33.0 -10.75 -16.7535) (float-vector -33.0 -18.2535 -9.25)))
         (instance face :init :vertices (list (float-vector -33.0 -10.75 -16.7535) (float-vector -33.0 -0.5 -19.5) (float-vector -33.0 9.75 -16.7535) (float-vector -33.0 17.2535 -9.25) (float-vector -33.0 20.0 1.0) (float-vector -33.0 17.2535 11.25) (float-vector -33.0 9.75 18.7535) (float-vector -33.0 -0.5 21.5) (float-vector -33.0 -10.75 18.7535) (float-vector -33.0 -18.2535 11.25) (float-vector -33.0 -21.0 1.0) (float-vector -33.0 -18.2535 -9.25))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -33.0 -0.5 -15.0) (float-vector -33.0 -8.5 -12.8564) (float-vector -33.0 -14.3564 -7.0) (float-vector -33.0 -16.5 1.0) (float-vector -33.0 -14.3564 9.0) (float-vector -33.0 -8.5 14.8564) (float-vector -33.0 -0.5 17.0) (float-vector -33.0 7.5 14.8564) (float-vector -33.0 13.3564 9.0) (float-vector -33.0 15.5 1.0) (float-vector -33.0 13.3564 -7.0) (float-vector -33.0 7.5 -12.8564)))
))
         (instance face :init :vertices (list (float-vector -40.0 -10.75 -16.7535) (float-vector -40.0 -0.5 -19.5) (float-vector -33.0 -0.5 -19.5) (float-vector -33.0 -10.75 -16.7535)))
         (instance face :init :vertices (list (float-vector -40.0 -0.5 -19.5) (float-vector -40.0 -10.75 -16.7535) (float-vector -40.0 -18.2535 -9.25) (float-vector -40.0 -21.0 1.0) (float-vector -40.0 -18.2535 11.25) (float-vector -40.0 -10.75 18.7535) (float-vector -40.0 -0.5 21.5) (float-vector -40.0 9.75 18.7535) (float-vector -40.0 17.2535 11.25) (float-vector -40.0 20.0 1.0) (float-vector -40.0 17.2535 -9.25) (float-vector -40.0 9.75 -16.7535)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch :weight 316 :centroid (float-vector -10.0149 -9.28889 7.13155) :inertia-tensor #2f((1.088365e+05 -34606.6 8284.94) (-34606.6 17535.3 24643.2) (8284.94 24643.2 1.145714e+05))))

     ;; definition of :lleg-thigh
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.5 -2.842171e-14 -74.9) (float-vector -14.5 -2.842171e-14 -74.9) (float-vector -20.1 -2.131628e-14 -80.4) (float-vector -20.1 -1.421085e-14 -128.0) (float-vector -14.5 -1.421085e-14 -136.0) (float-vector 14.5 -2.131628e-14 -136.0) (float-vector 20.1 -2.131628e-14 -128.0) (float-vector 20.1 -2.842171e-14 -80.4)))
         (instance face :init :vertices (list (float-vector -14.5 41.0 -74.9) (float-vector 14.5 41.0 -74.9) (float-vector 20.1 41.0 -80.4) (float-vector 20.1 41.0 -128.0) (float-vector 14.5 41.0 -136.0) (float-vector -14.5 41.0 -136.0) (float-vector -20.1 41.0 -128.0) (float-vector -20.1 41.0 -80.4)))
         (instance face :init :vertices (list (float-vector 14.5 -2.842171e-14 -74.9) (float-vector 14.5 41.0 -74.9) (float-vector -14.5 41.0 -74.9) (float-vector -14.5 -2.842171e-14 -74.9)))
         (instance face :init :vertices (list (float-vector 20.1 -2.842171e-14 -80.4) (float-vector 20.1 41.0 -80.4) (float-vector 14.5 41.0 -74.9) (float-vector 14.5 -2.842171e-14 -74.9)))
         (instance face :init :vertices (list (float-vector 20.1 -2.131628e-14 -128.0) (float-vector 20.1 41.0 -128.0) (float-vector 20.1 41.0 -80.4) (float-vector 20.1 -2.842171e-14 -80.4)))
         (instance face :init :vertices (list (float-vector 14.5 -2.131628e-14 -136.0) (float-vector 14.5 41.0 -136.0) (float-vector 20.1 41.0 -128.0) (float-vector 20.1 -2.131628e-14 -128.0)))
         (instance face :init :vertices (list (float-vector -14.5 -1.421085e-14 -136.0) (float-vector -14.5 41.0 -136.0) (float-vector 14.5 41.0 -136.0) (float-vector 14.5 -2.131628e-14 -136.0)))
         (instance face :init :vertices (list (float-vector -20.1 -1.421085e-14 -128.0) (float-vector -20.1 41.0 -128.0) (float-vector -14.5 41.0 -136.0) (float-vector -14.5 -1.421085e-14 -136.0)))
         (instance face :init :vertices (list (float-vector -20.1 -2.131628e-14 -80.4) (float-vector -20.1 41.0 -80.4) (float-vector -20.1 41.0 -128.0) (float-vector -20.1 -1.421085e-14 -128.0)))
         (instance face :init :vertices (list (float-vector -14.5 -2.842171e-14 -74.9) (float-vector -14.5 41.0 -74.9) (float-vector -20.1 41.0 -80.4) (float-vector -20.1 -2.131628e-14 -80.4)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -22.0 5.684342e-14) (float-vector 15.0 -22.0 -40.0) (float-vector 15.0 44.0 -40.0) (float-vector 15.0 44.0 5.684342e-14) (float-vector 15.0 42.0 5.684342e-14) (float-vector 15.0 42.0 -38.0) (float-vector 15.0 -20.0 -38.0) (float-vector 15.0 -20.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -15.0 -22.0 -40.0) (float-vector -15.0 44.0 -40.0) (float-vector 15.0 44.0 -40.0) (float-vector 15.0 -22.0 -40.0)))
         (instance face :init :vertices (list (float-vector -15.0 -22.0 5.684342e-14) (float-vector -15.0 -20.0 5.684342e-14) (float-vector -15.0 -20.0 -38.0) (float-vector -15.0 42.0 -38.0) (float-vector -15.0 42.0 5.684342e-14) (float-vector -15.0 44.0 5.684342e-14) (float-vector -15.0 44.0 -40.0) (float-vector -15.0 -22.0 -40.0)))
         (instance face :init :vertices (list (float-vector -10.6066 44.0 10.6066) (float-vector -15.0 44.0 5.684342e-14) (float-vector -15.0 42.0 5.684342e-14) (float-vector -10.6066 42.0 10.6066)))
         (instance face :init :vertices (list (float-vector -10.6066 -22.0 10.6066) (float-vector -10.6066 -20.0 10.6066) (float-vector -15.0 -20.0 5.684342e-14) (float-vector -15.0 -22.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 0.0 44.0 15.0) (float-vector -10.6066 44.0 10.6066) (float-vector -10.6066 42.0 10.6066) (float-vector 2.842171e-14 42.0 15.0)))
         (instance face :init :vertices (list (float-vector 2.842171e-14 -22.0 15.0) (float-vector 2.842171e-14 -20.0 15.0) (float-vector -10.6066 -20.0 10.6066) (float-vector -10.6066 -22.0 10.6066)))
         (instance face :init :vertices (list (float-vector 10.6066 44.0 10.6066) (float-vector 0.0 44.0 15.0) (float-vector 2.842171e-14 42.0 15.0) (float-vector 10.6066 42.0 10.6066)))
         (instance face :init :vertices (list (float-vector 10.6066 -22.0 10.6066) (float-vector 10.6066 -20.0 10.6066) (float-vector 2.842171e-14 -20.0 15.0) (float-vector 2.842171e-14 -22.0 15.0)))
         (instance face :init :vertices (list (float-vector 15.0 44.0 5.684342e-14) (float-vector 15.0 44.0 -40.0) (float-vector -15.0 44.0 -40.0) (float-vector -15.0 44.0 5.684342e-14) (float-vector -10.6066 44.0 10.6066) (float-vector 0.0 44.0 15.0) (float-vector 10.6066 44.0 10.6066)))
         (instance face :init :vertices (list (float-vector 10.6066 -22.0 10.6066) (float-vector 2.842171e-14 -22.0 15.0) (float-vector -10.6066 -22.0 10.6066) (float-vector -15.0 -22.0 5.684342e-14) (float-vector -15.0 -22.0 -40.0) (float-vector 15.0 -22.0 -40.0) (float-vector 15.0 -22.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 10.6066 44.0 10.6066) (float-vector 10.6066 42.0 10.6066) (float-vector 15.0 42.0 5.684342e-14) (float-vector 15.0 44.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 15.0 -22.0 5.684342e-14) (float-vector 15.0 -20.0 5.684342e-14) (float-vector 10.6066 -20.0 10.6066) (float-vector 10.6066 -22.0 10.6066)))
         (instance face :init :vertices (list (float-vector 15.0 42.0 -38.0) (float-vector 15.0 42.0 5.684342e-14) (float-vector 10.6066 42.0 10.6066) (float-vector 2.842171e-14 42.0 15.0) (float-vector -10.6066 42.0 10.6066) (float-vector -15.0 42.0 5.684342e-14) (float-vector -15.0 42.0 -38.0)))
         (instance face :init :vertices (list (float-vector 15.0 -20.0 -38.0) (float-vector 15.0 42.0 -38.0) (float-vector -15.0 42.0 -38.0) (float-vector -15.0 -20.0 -38.0)))
         (instance face :init :vertices (list (float-vector -15.0 -20.0 -38.0) (float-vector -15.0 -20.0 5.684342e-14) (float-vector -10.6066 -20.0 10.6066) (float-vector 2.842171e-14 -20.0 15.0) (float-vector 10.6066 -20.0 10.6066) (float-vector 15.0 -20.0 5.684342e-14) (float-vector 15.0 -20.0 -38.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 36.0 -39.5) (float-vector -15.0 36.0 -39.5) (float-vector -15.0 6.0 -39.5) (float-vector 15.0 6.0 -39.5)))
         (instance face :init :vertices (list (float-vector -15.0 36.0 -74.5) (float-vector 15.0 36.0 -74.5) (float-vector 15.0 6.0 -74.5) (float-vector -15.0 6.0 -74.5)))
         (instance face :init :vertices (list (float-vector 15.0 36.0 -39.5) (float-vector 15.0 36.0 -74.5) (float-vector -15.0 36.0 -74.5) (float-vector -15.0 36.0 -39.5)))
         (instance face :init :vertices (list (float-vector 15.0 6.0 -39.5) (float-vector 15.0 6.0 -74.5) (float-vector 15.0 36.0 -74.5) (float-vector 15.0 36.0 -39.5)))
         (instance face :init :vertices (list (float-vector -15.0 6.0 -39.5) (float-vector -15.0 6.0 -74.5) (float-vector 15.0 6.0 -74.5) (float-vector 15.0 6.0 -39.5)))
         (instance face :init :vertices (list (float-vector -15.0 36.0 -39.5) (float-vector -15.0 36.0 -74.5) (float-vector -15.0 6.0 -74.5) (float-vector -15.0 6.0 -39.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.305 20.0 -130.81) (float-vector 21.9148 7.3475 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 21.9148 7.3475 -130.81) (float-vector 12.6525 -1.91477 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 12.6525 -1.91477 -130.81) (float-vector -1.136868e-13 -5.305 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 -5.305 -130.81) (float-vector -12.6525 -1.91477 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -12.6525 -1.91477 -130.81) (float-vector -21.9148 7.3475 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -21.9148 7.3475 -130.81) (float-vector -25.305 20.0 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -25.305 20.0 -130.81) (float-vector -21.9148 32.6525 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -21.9148 32.6525 -130.81) (float-vector -12.6525 41.9148 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector -12.6525 41.9148 -130.81) (float-vector 5.684342e-14 45.305 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 45.305 -130.81) (float-vector 12.6525 41.9148 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 12.6525 41.9148 -130.81) (float-vector 21.9148 32.6525 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 21.9148 32.6525 -130.81) (float-vector 25.305 20.0 -130.81) (float-vector 2.842171e-14 20.0 -137.59)))
         (instance face :init :vertices (list (float-vector 37.9575 -1.91477 -112.285) (float-vector 21.9148 7.3475 -130.81) (float-vector 25.305 20.0 -130.81) (float-vector 43.8295 20.0 -112.285)))
         (instance face :init :vertices (list (float-vector 21.9148 -17.9575 -112.285) (float-vector 12.6525 -1.91477 -130.81) (float-vector 21.9148 7.3475 -130.81) (float-vector 37.9575 -1.91477 -112.285)))
         (instance face :init :vertices (list (float-vector -2.273737e-13 -23.8295 -112.285) (float-vector -1.136868e-13 -5.305 -130.81) (float-vector 12.6525 -1.91477 -130.81) (float-vector 21.9148 -17.9575 -112.285)))
         (instance face :init :vertices (list (float-vector -21.9148 -17.9575 -112.285) (float-vector -12.6525 -1.91477 -130.81) (float-vector -1.136868e-13 -5.305 -130.81) (float-vector -2.273737e-13 -23.8295 -112.285)))
         (instance face :init :vertices (list (float-vector -37.9575 -1.91477 -112.285) (float-vector -21.9148 7.3475 -130.81) (float-vector -12.6525 -1.91477 -130.81) (float-vector -21.9148 -17.9575 -112.285)))
         (instance face :init :vertices (list (float-vector -43.8295 20.0 -112.285) (float-vector -25.305 20.0 -130.81) (float-vector -21.9148 7.3475 -130.81) (float-vector -37.9575 -1.91477 -112.285)))
         (instance face :init :vertices (list (float-vector -37.9575 41.9148 -112.285) (float-vector -21.9148 32.6525 -130.81) (float-vector -25.305 20.0 -130.81) (float-vector -43.8295 20.0 -112.285)))
         (instance face :init :vertices (list (float-vector -21.9148 57.9575 -112.285) (float-vector -12.6525 41.9148 -130.81) (float-vector -21.9148 32.6525 -130.81) (float-vector -37.9575 41.9148 -112.285)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 63.8295 -112.285) (float-vector 5.684342e-14 45.305 -130.81) (float-vector -12.6525 41.9148 -130.81) (float-vector -21.9148 57.9575 -112.285)))
         (instance face :init :vertices (list (float-vector 21.9148 57.9575 -112.285) (float-vector 12.6525 41.9148 -130.81) (float-vector 5.684342e-14 45.305 -130.81) (float-vector 5.684342e-14 63.8295 -112.285)))
         (instance face :init :vertices (list (float-vector 37.9575 41.9148 -112.285) (float-vector 21.9148 32.6525 -130.81) (float-vector 12.6525 41.9148 -130.81) (float-vector 21.9148 57.9575 -112.285)))
         (instance face :init :vertices (list (float-vector 43.8295 20.0 -112.285) (float-vector 25.305 20.0 -130.81) (float-vector 21.9148 32.6525 -130.81) (float-vector 37.9575 41.9148 -112.285)))
         (instance face :init :vertices (list (float-vector 43.8295 -5.305 -86.98) (float-vector 37.9575 -1.91477 -112.285) (float-vector 43.8295 20.0 -112.285) (float-vector 50.61 20.0 -86.98)))
         (instance face :init :vertices (list (float-vector 25.305 -23.8295 -86.98) (float-vector 21.9148 -17.9575 -112.285) (float-vector 37.9575 -1.91477 -112.285) (float-vector 43.8295 -5.305 -86.98)))
         (instance face :init :vertices (list (float-vector -2.842171e-13 -30.61 -86.98) (float-vector -2.273737e-13 -23.8295 -112.285) (float-vector 21.9148 -17.9575 -112.285) (float-vector 25.305 -23.8295 -86.98)))
         (instance face :init :vertices (list (float-vector -25.305 -23.8295 -86.98) (float-vector -21.9148 -17.9575 -112.285) (float-vector -2.273737e-13 -23.8295 -112.285) (float-vector -2.842171e-13 -30.61 -86.98)))
         (instance face :init :vertices (list (float-vector -43.8295 -5.305 -86.98) (float-vector -37.9575 -1.91477 -112.285) (float-vector -21.9148 -17.9575 -112.285) (float-vector -25.305 -23.8295 -86.98)))
         (instance face :init :vertices (list (float-vector -50.61 20.0 -86.98) (float-vector -43.8295 20.0 -112.285) (float-vector -37.9575 -1.91477 -112.285) (float-vector -43.8295 -5.305 -86.98)))
         (instance face :init :vertices (list (float-vector -43.8295 45.305 -86.98) (float-vector -37.9575 41.9148 -112.285) (float-vector -43.8295 20.0 -112.285) (float-vector -50.61 20.0 -86.98)))
         (instance face :init :vertices (list (float-vector -25.305 63.8295 -86.98) (float-vector -21.9148 57.9575 -112.285) (float-vector -37.9575 41.9148 -112.285) (float-vector -43.8295 45.305 -86.98)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 70.61 -86.98) (float-vector 5.684342e-14 63.8295 -112.285) (float-vector -21.9148 57.9575 -112.285) (float-vector -25.305 63.8295 -86.98)))
         (instance face :init :vertices (list (float-vector 25.305 63.8295 -86.98) (float-vector 21.9148 57.9575 -112.285) (float-vector 5.684342e-14 63.8295 -112.285) (float-vector 5.684342e-14 70.61 -86.98)))
         (instance face :init :vertices (list (float-vector 43.8295 45.305 -86.98) (float-vector 37.9575 41.9148 -112.285) (float-vector 21.9148 57.9575 -112.285) (float-vector 25.305 63.8295 -86.98)))
         (instance face :init :vertices (list (float-vector 50.61 20.0 -86.98) (float-vector 43.8295 20.0 -112.285) (float-vector 37.9575 41.9148 -112.285) (float-vector 43.8295 45.305 -86.98)))
         (instance face :init :vertices (list (float-vector 43.8295 -5.305 0.34) (float-vector 43.8295 -5.305 -86.98) (float-vector 50.61 20.0 -86.98) (float-vector 50.61 20.0 0.34)))
         (instance face :init :vertices (list (float-vector 25.305 -23.8295 0.34) (float-vector 25.305 -23.8295 -86.98) (float-vector 43.8295 -5.305 -86.98) (float-vector 43.8295 -5.305 0.34)))
         (instance face :init :vertices (list (float-vector -2.557954e-13 -30.61 0.34) (float-vector -2.842171e-13 -30.61 -86.98) (float-vector 25.305 -23.8295 -86.98) (float-vector 25.305 -23.8295 0.34)))
         (instance face :init :vertices (list (float-vector -25.305 -23.8295 0.34) (float-vector -25.305 -23.8295 -86.98) (float-vector -2.842171e-13 -30.61 -86.98) (float-vector -2.557954e-13 -30.61 0.34)))
         (instance face :init :vertices (list (float-vector -43.8295 -5.305 0.34) (float-vector -43.8295 -5.305 -86.98) (float-vector -25.305 -23.8295 -86.98) (float-vector -25.305 -23.8295 0.34)))
         (instance face :init :vertices (list (float-vector -50.61 20.0 0.34) (float-vector -50.61 20.0 -86.98) (float-vector -43.8295 -5.305 -86.98) (float-vector -43.8295 -5.305 0.34)))
         (instance face :init :vertices (list (float-vector -43.8295 45.305 0.34) (float-vector -43.8295 45.305 -86.98) (float-vector -50.61 20.0 -86.98) (float-vector -50.61 20.0 0.34)))
         (instance face :init :vertices (list (float-vector -25.305 63.8295 0.34) (float-vector -25.305 63.8295 -86.98) (float-vector -43.8295 45.305 -86.98) (float-vector -43.8295 45.305 0.34)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 70.61 0.34) (float-vector 5.684342e-14 70.61 -86.98) (float-vector -25.305 63.8295 -86.98) (float-vector -25.305 63.8295 0.34)))
         (instance face :init :vertices (list (float-vector 25.305 63.8295 0.34) (float-vector 25.305 63.8295 -86.98) (float-vector 5.684342e-14 70.61 -86.98) (float-vector 5.684342e-14 70.61 0.34)))
         (instance face :init :vertices (list (float-vector 43.8295 45.305 0.34) (float-vector 43.8295 45.305 -86.98) (float-vector 25.305 63.8295 -86.98) (float-vector 25.305 63.8295 0.34)))
         (instance face :init :vertices (list (float-vector 50.61 20.0 0.34) (float-vector 50.61 20.0 -86.98) (float-vector 43.8295 45.305 -86.98) (float-vector 43.8295 45.305 0.34)))
         (instance face :init :vertices (list (float-vector 37.9575 -1.91477 25.645) (float-vector 43.8295 -5.305 0.34) (float-vector 50.61 20.0 0.34) (float-vector 43.8295 20.0 25.645)))
         (instance face :init :vertices (list (float-vector 21.9148 -17.9575 25.645) (float-vector 25.305 -23.8295 0.34) (float-vector 43.8295 -5.305 0.34) (float-vector 37.9575 -1.91477 25.645)))
         (instance face :init :vertices (list (float-vector -2.273737e-13 -23.8295 25.645) (float-vector -2.557954e-13 -30.61 0.34) (float-vector 25.305 -23.8295 0.34) (float-vector 21.9148 -17.9575 25.645)))
         (instance face :init :vertices (list (float-vector -21.9148 -17.9575 25.645) (float-vector -25.305 -23.8295 0.34) (float-vector -2.557954e-13 -30.61 0.34) (float-vector -2.273737e-13 -23.8295 25.645)))
         (instance face :init :vertices (list (float-vector -37.9575 -1.91477 25.645) (float-vector -43.8295 -5.305 0.34) (float-vector -25.305 -23.8295 0.34) (float-vector -21.9148 -17.9575 25.645)))
         (instance face :init :vertices (list (float-vector -43.8295 20.0 25.645) (float-vector -50.61 20.0 0.34) (float-vector -43.8295 -5.305 0.34) (float-vector -37.9575 -1.91477 25.645)))
         (instance face :init :vertices (list (float-vector -37.9575 41.9148 25.645) (float-vector -43.8295 45.305 0.34) (float-vector -50.61 20.0 0.34) (float-vector -43.8295 20.0 25.645)))
         (instance face :init :vertices (list (float-vector -21.9148 57.9575 25.645) (float-vector -25.305 63.8295 0.34) (float-vector -43.8295 45.305 0.34) (float-vector -37.9575 41.9148 25.645)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 63.8295 25.645) (float-vector 5.684342e-14 70.61 0.34) (float-vector -25.305 63.8295 0.34) (float-vector -21.9148 57.9575 25.645)))
         (instance face :init :vertices (list (float-vector 21.9148 57.9575 25.645) (float-vector 25.305 63.8295 0.34) (float-vector 5.684342e-14 70.61 0.34) (float-vector 5.684342e-14 63.8295 25.645)))
         (instance face :init :vertices (list (float-vector 37.9575 41.9148 25.645) (float-vector 43.8295 45.305 0.34) (float-vector 25.305 63.8295 0.34) (float-vector 21.9148 57.9575 25.645)))
         (instance face :init :vertices (list (float-vector 43.8295 20.0 25.645) (float-vector 50.61 20.0 0.34) (float-vector 43.8295 45.305 0.34) (float-vector 37.9575 41.9148 25.645)))
         (instance face :init :vertices (list (float-vector 21.9148 7.3475 44.1695) (float-vector 37.9575 -1.91477 25.645) (float-vector 43.8295 20.0 25.645) (float-vector 25.305 20.0 44.1695)))
         (instance face :init :vertices (list (float-vector 12.6525 -1.91477 44.1695) (float-vector 21.9148 -17.9575 25.645) (float-vector 37.9575 -1.91477 25.645) (float-vector 21.9148 7.3475 44.1695)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 -5.305 44.1695) (float-vector -2.273737e-13 -23.8295 25.645) (float-vector 21.9148 -17.9575 25.645) (float-vector 12.6525 -1.91477 44.1695)))
         (instance face :init :vertices (list (float-vector -12.6525 -1.91477 44.1695) (float-vector -21.9148 -17.9575 25.645) (float-vector -2.273737e-13 -23.8295 25.645) (float-vector -1.136868e-13 -5.305 44.1695)))
         (instance face :init :vertices (list (float-vector -21.9148 7.3475 44.1695) (float-vector -37.9575 -1.91477 25.645) (float-vector -21.9148 -17.9575 25.645) (float-vector -12.6525 -1.91477 44.1695)))
         (instance face :init :vertices (list (float-vector -25.305 20.0 44.1695) (float-vector -43.8295 20.0 25.645) (float-vector -37.9575 -1.91477 25.645) (float-vector -21.9148 7.3475 44.1695)))
         (instance face :init :vertices (list (float-vector -21.9148 32.6525 44.1695) (float-vector -37.9575 41.9148 25.645) (float-vector -43.8295 20.0 25.645) (float-vector -25.305 20.0 44.1695)))
         (instance face :init :vertices (list (float-vector -12.6525 41.9148 44.1695) (float-vector -21.9148 57.9575 25.645) (float-vector -37.9575 41.9148 25.645) (float-vector -21.9148 32.6525 44.1695)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 45.305 44.1695) (float-vector 5.684342e-14 63.8295 25.645) (float-vector -21.9148 57.9575 25.645) (float-vector -12.6525 41.9148 44.1695)))
         (instance face :init :vertices (list (float-vector 12.6525 41.9148 44.1695) (float-vector 21.9148 57.9575 25.645) (float-vector 5.684342e-14 63.8295 25.645) (float-vector 5.684342e-14 45.305 44.1695)))
         (instance face :init :vertices (list (float-vector 21.9148 32.6525 44.1695) (float-vector 37.9575 41.9148 25.645) (float-vector 21.9148 57.9575 25.645) (float-vector 12.6525 41.9148 44.1695)))
         (instance face :init :vertices (list (float-vector 25.305 20.0 44.1695) (float-vector 43.8295 20.0 25.645) (float-vector 37.9575 41.9148 25.645) (float-vector 21.9148 32.6525 44.1695)))
         (instance face :init :vertices (list (float-vector 21.9148 7.3475 44.1695) (float-vector 25.305 20.0 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector 25.305 20.0 44.1695) (float-vector 21.9148 32.6525 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector 21.9148 32.6525 44.1695) (float-vector 12.6525 41.9148 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector 12.6525 41.9148 44.1695) (float-vector 5.684342e-14 45.305 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 45.305 44.1695) (float-vector -12.6525 41.9148 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector -12.6525 41.9148 44.1695) (float-vector -21.9148 32.6525 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector -21.9148 32.6525 44.1695) (float-vector -25.305 20.0 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector -25.305 20.0 44.1695) (float-vector -21.9148 7.3475 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector -21.9148 7.3475 44.1695) (float-vector -12.6525 -1.91477 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector -12.6525 -1.91477 44.1695) (float-vector -1.136868e-13 -5.305 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector -1.136868e-13 -5.305 44.1695) (float-vector 12.6525 -1.91477 44.1695) (float-vector 0.0 20.0 50.95)))
         (instance face :init :vertices (list (float-vector 12.6525 -1.91477 44.1695) (float-vector 21.9148 7.3475 44.1695) (float-vector 0.0 20.0 50.95)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :gray90)
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color :papayawhip)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-thigh :weight 152.441 :centroid (float-vector 1.253442e-15 18.885 -87.9989) :inertia-tensor #2f((3.378152e+05 -4.842583e-12 1.171215e-11) (-4.842583e-12 2.614091e+05 1.031670e+05) (1.171215e-11 1.031670e+05 80373.2))))

     ;; definition of :lleg-shank
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.0961 -25.0 8.87045) (float-vector 29.837 -25.0 -15.3217) (float-vector 29.837 25.0 -15.3217) (float-vector 12.0961 25.0 8.87045) (float-vector 12.0961 23.0 8.87045) (float-vector 28.6543 23.0 -13.7089) (float-vector 28.6543 -23.0 -13.7089) (float-vector 12.0961 -23.0 8.87045)))
         (instance face :init :vertices (list (float-vector 5.64483 -25.0 -33.0626) (float-vector 5.64483 25.0 -33.0626) (float-vector 29.837 25.0 -15.3217) (float-vector 29.837 -25.0 -15.3217)))
         (instance face :init :vertices (list (float-vector -12.0961 -25.0 -8.87045) (float-vector -12.0961 -23.0 -8.87045) (float-vector 4.46211 -23.0 -31.4498) (float-vector 4.46211 23.0 -31.4498) (float-vector -12.0961 23.0 -8.87045) (float-vector -12.0961 25.0 -8.87045) (float-vector 5.64483 25.0 -33.0626) (float-vector 5.64483 -25.0 -33.0626)))
         (instance face :init :vertices (list (float-vector -14.8256 25.0 2.28086) (float-vector -12.0961 25.0 -8.87045) (float-vector -12.0961 23.0 -8.87045) (float-vector -14.8256 23.0 2.28086)))
         (instance face :init :vertices (list (float-vector -14.8256 -25.0 2.28086) (float-vector -14.8256 -23.0 2.28086) (float-vector -12.0961 -23.0 -8.87045) (float-vector -12.0961 -25.0 -8.87045)))
         (instance face :init :vertices (list (float-vector -8.87045 25.0 12.0961) (float-vector -14.8256 25.0 2.28086) (float-vector -14.8256 23.0 2.28086) (float-vector -8.87045 23.0 12.0961)))
         (instance face :init :vertices (list (float-vector -8.87045 -25.0 12.0961) (float-vector -8.87045 -23.0 12.0961) (float-vector -14.8256 -23.0 2.28086) (float-vector -14.8256 -25.0 2.28086)))
         (instance face :init :vertices (list (float-vector 2.28086 25.0 14.8256) (float-vector -8.87045 25.0 12.0961) (float-vector -8.87045 23.0 12.0961) (float-vector 2.28086 23.0 14.8256)))
         (instance face :init :vertices (list (float-vector 2.28086 -25.0 14.8256) (float-vector 2.28086 -23.0 14.8256) (float-vector -8.87045 -23.0 12.0961) (float-vector -8.87045 -25.0 12.0961)))
         (instance face :init :vertices (list (float-vector 12.0961 25.0 8.87045) (float-vector 29.837 25.0 -15.3217) (float-vector 5.64483 25.0 -33.0626) (float-vector -12.0961 25.0 -8.87045) (float-vector -14.8256 25.0 2.28086) (float-vector -8.87045 25.0 12.0961) (float-vector 2.28086 25.0 14.8256)))
         (instance face :init :vertices (list (float-vector 2.28086 -25.0 14.8256) (float-vector -8.87045 -25.0 12.0961) (float-vector -14.8256 -25.0 2.28086) (float-vector -12.0961 -25.0 -8.87045) (float-vector 5.64483 -25.0 -33.0626) (float-vector 29.837 -25.0 -15.3217) (float-vector 12.0961 -25.0 8.87045)))
         (instance face :init :vertices (list (float-vector 2.28086 25.0 14.8256) (float-vector 2.28086 23.0 14.8256) (float-vector 12.0961 23.0 8.87045) (float-vector 12.0961 25.0 8.87045)))
         (instance face :init :vertices (list (float-vector 12.0961 -25.0 8.87045) (float-vector 12.0961 -23.0 8.87045) (float-vector 2.28086 -23.0 14.8256) (float-vector 2.28086 -25.0 14.8256)))
         (instance face :init :vertices (list (float-vector 28.6543 23.0 -13.7089) (float-vector 12.0961 23.0 8.87045) (float-vector 2.28086 23.0 14.8256) (float-vector -8.87045 23.0 12.0961) (float-vector -14.8256 23.0 2.28086) (float-vector -12.0961 23.0 -8.87045) (float-vector 4.46211 23.0 -31.4498)))
         (instance face :init :vertices (list (float-vector 28.6543 -23.0 -13.7089) (float-vector 28.6543 23.0 -13.7089) (float-vector 4.46211 23.0 -31.4498) (float-vector 4.46211 -23.0 -31.4498)))
         (instance face :init :vertices (list (float-vector 4.46211 -23.0 -31.4498) (float-vector -12.0961 -23.0 -8.87045) (float-vector -14.8256 -23.0 2.28086) (float-vector -8.87045 -23.0 12.0961) (float-vector 2.28086 -23.0 14.8256) (float-vector 12.0961 -23.0 8.87045) (float-vector 28.6543 -23.0 -13.7089)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -44.0) (float-vector 3.0 -15.0 -44.0) (float-vector 33.0 -15.0 -44.0) (float-vector 33.0 -15.0 -12.0) (float-vector 3.0 -15.0 -34.0)))
         (instance face :init :vertices (list (float-vector 3.0 15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 15.0 -34.0) (float-vector 33.0 15.0 -12.0) (float-vector 33.0 15.0 -44.0)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 -15.0 -44.0)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -34.0) (float-vector 3.0 15.0 -34.0) (float-vector 3.0 15.0 -44.0) (float-vector 3.0 -15.0 -44.0)))
         (instance face :init :vertices (list (float-vector 33.0 -15.0 -12.0) (float-vector 33.0 15.0 -12.0) (float-vector 3.0 15.0 -34.0) (float-vector 3.0 -15.0 -34.0)))
         (instance face :init :vertices (list (float-vector 33.0 -15.0 -44.0) (float-vector 33.0 15.0 -44.0) (float-vector 33.0 15.0 -12.0) (float-vector 33.0 -15.0 -12.0)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -44.0) (float-vector 3.0 15.0 -44.0) (float-vector 33.0 15.0 -44.0) (float-vector 33.0 -15.0 -44.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 28.0 10.0 -44.0) (float-vector 8.0 10.0 -44.0) (float-vector 8.0 -10.0 -44.0) (float-vector 28.0 -10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 8.0 10.0 -94.0) (float-vector 28.0 10.0 -94.0) (float-vector 28.0 -10.0 -94.0) (float-vector 8.0 -10.0 -94.0)))
         (instance face :init :vertices (list (float-vector 28.0 10.0 -44.0) (float-vector 28.0 10.0 -94.0) (float-vector 8.0 10.0 -94.0) (float-vector 8.0 10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 28.0 -10.0 -44.0) (float-vector 28.0 -10.0 -94.0) (float-vector 28.0 10.0 -94.0) (float-vector 28.0 10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 8.0 -10.0 -44.0) (float-vector 8.0 -10.0 -94.0) (float-vector 28.0 -10.0 -94.0) (float-vector 28.0 -10.0 -44.0)))
         (instance face :init :vertices (list (float-vector 8.0 10.0 -44.0) (float-vector 8.0 10.0 -94.0) (float-vector 8.0 -10.0 -94.0) (float-vector 8.0 -10.0 -44.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.0 15.0 -93.5) (float-vector 3.0 15.0 -93.5) (float-vector 3.0 -15.0 -93.5) (float-vector 33.0 -15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 3.0 15.0 -108.5) (float-vector 33.0 15.0 -108.5) (float-vector 33.0 -15.0 -108.5) (float-vector 3.0 -15.0 -108.5)))
         (instance face :init :vertices (list (float-vector 33.0 15.0 -93.5) (float-vector 33.0 15.0 -108.5) (float-vector 3.0 15.0 -108.5) (float-vector 3.0 15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 33.0 -15.0 -93.5) (float-vector 33.0 -15.0 -108.5) (float-vector 33.0 15.0 -108.5) (float-vector 33.0 15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 3.0 -15.0 -93.5) (float-vector 3.0 -15.0 -108.5) (float-vector 33.0 -15.0 -108.5) (float-vector 33.0 -15.0 -93.5)))
         (instance face :init :vertices (list (float-vector 3.0 15.0 -93.5) (float-vector 3.0 15.0 -108.5) (float-vector 3.0 -15.0 -108.5) (float-vector 3.0 -15.0 -93.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.0 25.0 -138.0) (float-vector 33.0 25.0 -108.0) (float-vector 33.0 -25.0 -108.0) (float-vector 33.0 -25.0 -138.0) (float-vector 33.0 -23.0 -138.0) (float-vector 33.0 -23.0 -110.0) (float-vector 33.0 23.0 -110.0) (float-vector 33.0 23.0 -138.0)))
         (instance face :init :vertices (list (float-vector 3.0 25.0 -108.0) (float-vector 3.0 -25.0 -108.0) (float-vector 33.0 -25.0 -108.0) (float-vector 33.0 25.0 -108.0)))
         (instance face :init :vertices (list (float-vector 3.0 25.0 -138.0) (float-vector 3.0 23.0 -138.0) (float-vector 3.0 23.0 -110.0) (float-vector 3.0 -23.0 -110.0) (float-vector 3.0 -23.0 -138.0) (float-vector 3.0 -25.0 -138.0) (float-vector 3.0 -25.0 -108.0) (float-vector 3.0 25.0 -108.0)))
         (instance face :init :vertices (list (float-vector 7.3934 -25.0 -148.607) (float-vector 3.0 -25.0 -138.0) (float-vector 3.0 -23.0 -138.0) (float-vector 7.3934 -23.0 -148.607)))
         (instance face :init :vertices (list (float-vector 7.3934 25.0 -148.607) (float-vector 7.3934 23.0 -148.607) (float-vector 3.0 23.0 -138.0) (float-vector 3.0 25.0 -138.0)))
         (instance face :init :vertices (list (float-vector 18.0 -25.0 -153.0) (float-vector 7.3934 -25.0 -148.607) (float-vector 7.3934 -23.0 -148.607) (float-vector 18.0 -23.0 -153.0)))
         (instance face :init :vertices (list (float-vector 18.0 25.0 -153.0) (float-vector 18.0 23.0 -153.0) (float-vector 7.3934 23.0 -148.607) (float-vector 7.3934 25.0 -148.607)))
         (instance face :init :vertices (list (float-vector 28.6066 -25.0 -148.607) (float-vector 18.0 -25.0 -153.0) (float-vector 18.0 -23.0 -153.0) (float-vector 28.6066 -23.0 -148.607)))
         (instance face :init :vertices (list (float-vector 28.6066 25.0 -148.607) (float-vector 28.6066 23.0 -148.607) (float-vector 18.0 23.0 -153.0) (float-vector 18.0 25.0 -153.0)))
         (instance face :init :vertices (list (float-vector 33.0 -25.0 -138.0) (float-vector 33.0 -25.0 -108.0) (float-vector 3.0 -25.0 -108.0) (float-vector 3.0 -25.0 -138.0) (float-vector 7.3934 -25.0 -148.607) (float-vector 18.0 -25.0 -153.0) (float-vector 28.6066 -25.0 -148.607)))
         (instance face :init :vertices (list (float-vector 28.6066 25.0 -148.607) (float-vector 18.0 25.0 -153.0) (float-vector 7.3934 25.0 -148.607) (float-vector 3.0 25.0 -138.0) (float-vector 3.0 25.0 -108.0) (float-vector 33.0 25.0 -108.0) (float-vector 33.0 25.0 -138.0)))
         (instance face :init :vertices (list (float-vector 28.6066 -25.0 -148.607) (float-vector 28.6066 -23.0 -148.607) (float-vector 33.0 -23.0 -138.0) (float-vector 33.0 -25.0 -138.0)))
         (instance face :init :vertices (list (float-vector 33.0 25.0 -138.0) (float-vector 33.0 23.0 -138.0) (float-vector 28.6066 23.0 -148.607) (float-vector 28.6066 25.0 -148.607)))
         (instance face :init :vertices (list (float-vector 33.0 -23.0 -110.0) (float-vector 33.0 -23.0 -138.0) (float-vector 28.6066 -23.0 -148.607) (float-vector 18.0 -23.0 -153.0) (float-vector 7.3934 -23.0 -148.607) (float-vector 3.0 -23.0 -138.0) (float-vector 3.0 -23.0 -110.0)))
         (instance face :init :vertices (list (float-vector 33.0 23.0 -110.0) (float-vector 33.0 -23.0 -110.0) (float-vector 3.0 -23.0 -110.0) (float-vector 3.0 23.0 -110.0)))
         (instance face :init :vertices (list (float-vector 3.0 23.0 -110.0) (float-vector 3.0 23.0 -138.0) (float-vector 7.3934 23.0 -148.607) (float-vector 18.0 23.0 -153.0) (float-vector 28.6066 23.0 -148.607) (float-vector 33.0 23.0 -138.0) (float-vector 33.0 23.0 -110.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 31.9475 50.0821 25.2846) (float-vector 19.7446 30.3375 57.2321) (float-vector 51.6921 18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 18.1346 37.4875) (float-vector 54.3523 31.9816 5.54) (float-vector 31.9475 50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector 19.7446 30.3375 57.2321) (float-vector 33.5916 -1.61 59.8923) (float-vector 51.6921 18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector 31.9475 50.0821 25.2846) (float-vector 0.0 52.7423 39.1316) (float-vector 19.7446 30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector 19.7446 -33.5575 57.2321) (float-vector 4.263256e-14 -1.61 69.435) (float-vector -19.7446 -33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 -33.5575 57.2321) (float-vector 1.421085e-14 -55.9623 39.1316) (float-vector 19.7446 -33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 -1.61 69.435) (float-vector -33.5916 -1.61 59.8923) (float-vector -19.7446 -33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector 19.7446 -33.5575 57.2321) (float-vector 33.5916 -1.61 59.8923) (float-vector 4.263256e-14 -1.61 69.435)))
         (instance face :init :vertices (list (float-vector -31.9475 50.0821 -14.2046) (float-vector -31.9475 50.0821 25.2846) (float-vector 0.0 62.285 5.54)))
         (instance face :init :vertices (list (float-vector 0.0 62.285 5.54) (float-vector 7.105427e-15 52.7423 -28.0516) (float-vector -31.9475 50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector -31.9475 50.0821 25.2846) (float-vector 0.0 52.7423 39.1316) (float-vector 0.0 62.285 5.54)))
         (instance face :init :vertices (list (float-vector -31.9475 50.0821 -14.2046) (float-vector -54.3523 31.9816 5.54) (float-vector -31.9475 50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector 19.7446 30.3375 57.2321) (float-vector -19.7446 30.3375 57.2321) (float-vector 4.263256e-14 -1.61 69.435)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 -1.61 69.435) (float-vector 33.5916 -1.61 59.8923) (float-vector 19.7446 30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 30.3375 57.2321) (float-vector -33.5916 -1.61 59.8923) (float-vector 4.263256e-14 -1.61 69.435)))
         (instance face :init :vertices (list (float-vector 19.7446 30.3375 57.2321) (float-vector 0.0 52.7423 39.1316) (float-vector -19.7446 30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector -31.9475 50.0821 25.2846) (float-vector -51.6921 18.1346 37.4875) (float-vector -19.7446 30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 30.3375 57.2321) (float-vector 0.0 52.7423 39.1316) (float-vector -31.9475 50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector -51.6921 18.1346 37.4875) (float-vector -33.5916 -1.61 59.8923) (float-vector -19.7446 30.3375 57.2321)))
         (instance face :init :vertices (list (float-vector -31.9475 50.0821 25.2846) (float-vector -54.3523 31.9816 5.54) (float-vector -51.6921 18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector -51.6921 18.1346 37.4875) (float-vector -63.895 -1.61 5.54) (float-vector -51.6921 -21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector -51.6921 -21.3546 37.4875) (float-vector -33.5916 -1.61 59.8923) (float-vector -51.6921 18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector -63.895 -1.61 5.54) (float-vector -54.3523 -35.2016 5.54) (float-vector -51.6921 -21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector -51.6921 18.1346 37.4875) (float-vector -54.3523 31.9816 5.54) (float-vector -63.895 -1.61 5.54)))
         (instance face :init :vertices (list (float-vector -51.6921 18.1346 -26.4075) (float-vector -51.6921 -21.3546 -26.4075) (float-vector -63.895 -1.61 5.54)))
         (instance face :init :vertices (list (float-vector -63.895 -1.61 5.54) (float-vector -54.3523 31.9816 5.54) (float-vector -51.6921 18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector -51.6921 -21.3546 -26.4075) (float-vector -54.3523 -35.2016 5.54) (float-vector -63.895 -1.61 5.54)))
         (instance face :init :vertices (list (float-vector -51.6921 18.1346 -26.4075) (float-vector -33.5916 -1.61 -48.8123) (float-vector -51.6921 -21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector -19.7446 -33.5575 -46.1521) (float-vector -31.9475 -53.3021 -14.2046) (float-vector -51.6921 -21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector -51.6921 -21.3546 -26.4075) (float-vector -33.5916 -1.61 -48.8123) (float-vector -19.7446 -33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector -31.9475 -53.3021 -14.2046) (float-vector -54.3523 -35.2016 5.54) (float-vector -51.6921 -21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector -19.7446 -33.5575 -46.1521) (float-vector 1.421085e-14 -55.9623 -28.0516) (float-vector -31.9475 -53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector -51.6921 -21.3546 37.4875) (float-vector -31.9475 -53.3021 25.2846) (float-vector -19.7446 -33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector -19.7446 -33.5575 57.2321) (float-vector -33.5916 -1.61 59.8923) (float-vector -51.6921 -21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector -31.9475 -53.3021 25.2846) (float-vector 1.421085e-14 -55.9623 39.1316) (float-vector -19.7446 -33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector -51.6921 -21.3546 37.4875) (float-vector -54.3523 -35.2016 5.54) (float-vector -31.9475 -53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector -31.9475 -53.3021 -14.2046) (float-vector 1.421085e-14 -65.505 5.54) (float-vector -31.9475 -53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector -31.9475 -53.3021 25.2846) (float-vector -54.3523 -35.2016 5.54) (float-vector -31.9475 -53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 -65.505 5.54) (float-vector 1.421085e-14 -55.9623 39.1316) (float-vector -31.9475 -53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector -31.9475 -53.3021 -14.2046) (float-vector 1.421085e-14 -55.9623 -28.0516) (float-vector 1.421085e-14 -65.505 5.54)))
         (instance face :init :vertices (list (float-vector 19.7446 -33.5575 57.2321) (float-vector 31.9475 -53.3021 25.2846) (float-vector 51.6921 -21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 -21.3546 37.4875) (float-vector 33.5916 -1.61 59.8923) (float-vector 19.7446 -33.5575 57.2321)))
         (instance face :init :vertices (list (float-vector 31.9475 -53.3021 25.2846) (float-vector 54.3523 -35.2016 5.54) (float-vector 51.6921 -21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector 19.7446 -33.5575 57.2321) (float-vector 1.421085e-14 -55.9623 39.1316) (float-vector 31.9475 -53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 -65.505 5.54) (float-vector 31.9475 -53.3021 -14.2046) (float-vector 31.9475 -53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector 31.9475 -53.3021 25.2846) (float-vector 1.421085e-14 -55.9623 39.1316) (float-vector 1.421085e-14 -65.505 5.54)))
         (instance face :init :vertices (list (float-vector 31.9475 -53.3021 -14.2046) (float-vector 54.3523 -35.2016 5.54) (float-vector 31.9475 -53.3021 25.2846)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 -65.505 5.54) (float-vector 1.421085e-14 -55.9623 -28.0516) (float-vector 31.9475 -53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector 19.7446 -33.5575 -46.1521) (float-vector 51.6921 -21.3546 -26.4075) (float-vector 31.9475 -53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector 31.9475 -53.3021 -14.2046) (float-vector 1.421085e-14 -55.9623 -28.0516) (float-vector 19.7446 -33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector 51.6921 -21.3546 -26.4075) (float-vector 54.3523 -35.2016 5.54) (float-vector 31.9475 -53.3021 -14.2046)))
         (instance face :init :vertices (list (float-vector 19.7446 -33.5575 -46.1521) (float-vector 33.5916 -1.61 -48.8123) (float-vector 51.6921 -21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector 51.6921 -21.3546 37.4875) (float-vector 63.895 -1.61 5.54) (float-vector 51.6921 18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 18.1346 37.4875) (float-vector 33.5916 -1.61 59.8923) (float-vector 51.6921 -21.3546 37.4875)))
         (instance face :init :vertices (list (float-vector 63.895 -1.61 5.54) (float-vector 54.3523 31.9816 5.54) (float-vector 51.6921 18.1346 37.4875)))
         (instance face :init :vertices (list (float-vector 51.6921 -21.3546 37.4875) (float-vector 54.3523 -35.2016 5.54) (float-vector 63.895 -1.61 5.54)))
         (instance face :init :vertices (list (float-vector 51.6921 -21.3546 -26.4075) (float-vector 51.6921 18.1346 -26.4075) (float-vector 63.895 -1.61 5.54)))
         (instance face :init :vertices (list (float-vector 63.895 -1.61 5.54) (float-vector 54.3523 -35.2016 5.54) (float-vector 51.6921 -21.3546 -26.4075)))
         (instance face :init :vertices (list (float-vector 51.6921 18.1346 -26.4075) (float-vector 54.3523 31.9816 5.54) (float-vector 63.895 -1.61 5.54)))
         (instance face :init :vertices (list (float-vector 51.6921 -21.3546 -26.4075) (float-vector 33.5916 -1.61 -48.8123) (float-vector 51.6921 18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector 31.9475 50.0821 25.2846) (float-vector 31.9475 50.0821 -14.2046) (float-vector 0.0 62.285 5.54)))
         (instance face :init :vertices (list (float-vector 0.0 62.285 5.54) (float-vector 0.0 52.7423 39.1316) (float-vector 31.9475 50.0821 25.2846)))
         (instance face :init :vertices (list (float-vector 31.9475 50.0821 -14.2046) (float-vector 7.105427e-15 52.7423 -28.0516) (float-vector 0.0 62.285 5.54)))
         (instance face :init :vertices (list (float-vector 31.9475 50.0821 25.2846) (float-vector 54.3523 31.9816 5.54) (float-vector 31.9475 50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector 51.6921 18.1346 -26.4075) (float-vector 19.7446 30.3375 -46.1521) (float-vector 31.9475 50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector 31.9475 50.0821 -14.2046) (float-vector 54.3523 31.9816 5.54) (float-vector 51.6921 18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector 19.7446 30.3375 -46.1521) (float-vector 7.105427e-15 52.7423 -28.0516) (float-vector 31.9475 50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector 51.6921 18.1346 -26.4075) (float-vector 33.5916 -1.61 -48.8123) (float-vector 19.7446 30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector -31.9475 50.0821 -14.2046) (float-vector -19.7446 30.3375 -46.1521) (float-vector -51.6921 18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector -51.6921 18.1346 -26.4075) (float-vector -54.3523 31.9816 5.54) (float-vector -31.9475 50.0821 -14.2046)))
         (instance face :init :vertices (list (float-vector -19.7446 30.3375 -46.1521) (float-vector -33.5916 -1.61 -48.8123) (float-vector -51.6921 18.1346 -26.4075)))
         (instance face :init :vertices (list (float-vector -31.9475 50.0821 -14.2046) (float-vector 7.105427e-15 52.7423 -28.0516) (float-vector -19.7446 30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector -19.7446 -33.5575 -46.1521) (float-vector -7.105427e-15 -1.61 -58.355) (float-vector 19.7446 -33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector 19.7446 -33.5575 -46.1521) (float-vector 1.421085e-14 -55.9623 -28.0516) (float-vector -19.7446 -33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector -7.105427e-15 -1.61 -58.355) (float-vector 33.5916 -1.61 -48.8123) (float-vector 19.7446 -33.5575 -46.1521)))
         (instance face :init :vertices (list (float-vector -19.7446 -33.5575 -46.1521) (float-vector -33.5916 -1.61 -48.8123) (float-vector -7.105427e-15 -1.61 -58.355)))
         (instance face :init :vertices (list (float-vector 19.7446 30.3375 -46.1521) (float-vector -7.105427e-15 -1.61 -58.355) (float-vector -19.7446 30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector -19.7446 30.3375 -46.1521) (float-vector 7.105427e-15 52.7423 -28.0516) (float-vector 19.7446 30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector -7.105427e-15 -1.61 -58.355) (float-vector -33.5916 -1.61 -48.8123) (float-vector -19.7446 30.3375 -46.1521)))
         (instance face :init :vertices (list (float-vector 19.7446 30.3375 -46.1521) (float-vector 33.5916 -1.61 -48.8123) (float-vector -7.105427e-15 -1.61 -58.355)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 38.5775 -1.421085e-14 -178.26) (float-vector 34.5774 -14.9288 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 34.5774 -14.9288 -178.26) (float-vector 23.6487 -25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 23.6487 -25.8574 -178.26) (float-vector 8.72 -29.8575 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 8.72 -29.8575 -178.26) (float-vector -6.20875 -25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -6.20875 -25.8574 -178.26) (float-vector -17.1374 -14.9287 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -17.1374 -14.9287 -178.26) (float-vector -21.1375 1.136868e-13 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -21.1375 1.136868e-13 -178.26) (float-vector -17.1374 14.9288 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -17.1374 14.9288 -178.26) (float-vector -6.20875 25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector -6.20875 25.8574 -178.26) (float-vector 8.72 29.8575 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 8.72 29.8575 -178.26) (float-vector 23.6488 25.8574 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 23.6488 25.8574 -178.26) (float-vector 34.5774 14.9287 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 34.5774 14.9287 -178.26) (float-vector 38.5775 -1.421085e-14 -178.26) (float-vector 8.72 0.0 -186.26)))
         (instance face :init :vertices (list (float-vector 53.5062 -25.8574 -156.403) (float-vector 34.5774 -14.9288 -178.26) (float-vector 38.5775 -1.421085e-14 -178.26) (float-vector 60.4347 0.0 -156.403)))
         (instance face :init :vertices (list (float-vector 34.5774 -44.7863 -156.403) (float-vector 23.6487 -25.8574 -178.26) (float-vector 34.5774 -14.9288 -178.26) (float-vector 53.5062 -25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector 8.72 -51.7147 -156.403) (float-vector 8.72 -29.8575 -178.26) (float-vector 23.6487 -25.8574 -178.26) (float-vector 34.5774 -44.7863 -156.403)))
         (instance face :init :vertices (list (float-vector -17.1374 -44.7862 -156.403) (float-vector -6.20875 -25.8574 -178.26) (float-vector 8.72 -29.8575 -178.26) (float-vector 8.72 -51.7147 -156.403)))
         (instance face :init :vertices (list (float-vector -36.0663 -25.8574 -156.403) (float-vector -17.1374 -14.9287 -178.26) (float-vector -6.20875 -25.8574 -178.26) (float-vector -17.1374 -44.7862 -156.403)))
         (instance face :init :vertices (list (float-vector -42.9947 1.989520e-13 -156.403) (float-vector -21.1375 1.136868e-13 -178.26) (float-vector -17.1374 -14.9287 -178.26) (float-vector -36.0663 -25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector -36.0662 25.8574 -156.403) (float-vector -17.1374 14.9288 -178.26) (float-vector -21.1375 1.136868e-13 -178.26) (float-vector -42.9947 1.989520e-13 -156.403)))
         (instance face :init :vertices (list (float-vector -17.1374 44.7863 -156.403) (float-vector -6.20875 25.8574 -178.26) (float-vector -17.1374 14.9288 -178.26) (float-vector -36.0662 25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector 8.72 51.7147 -156.403) (float-vector 8.72 29.8575 -178.26) (float-vector -6.20875 25.8574 -178.26) (float-vector -17.1374 44.7863 -156.403)))
         (instance face :init :vertices (list (float-vector 34.5774 44.7862 -156.403) (float-vector 23.6488 25.8574 -178.26) (float-vector 8.72 29.8575 -178.26) (float-vector 8.72 51.7147 -156.403)))
         (instance face :init :vertices (list (float-vector 53.5062 25.8574 -156.403) (float-vector 34.5774 14.9287 -178.26) (float-vector 23.6488 25.8574 -178.26) (float-vector 34.5774 44.7862 -156.403)))
         (instance face :init :vertices (list (float-vector 60.4347 0.0 -156.403) (float-vector 38.5775 -1.421085e-14 -178.26) (float-vector 34.5774 14.9287 -178.26) (float-vector 53.5062 25.8574 -156.403)))
         (instance face :init :vertices (list (float-vector 60.4347 -29.8575 -126.545) (float-vector 53.5062 -25.8574 -156.403) (float-vector 60.4347 0.0 -156.403) (float-vector 68.435 0.0 -126.545)))
         (instance face :init :vertices (list (float-vector 38.5775 -51.7147 -126.545) (float-vector 34.5774 -44.7863 -156.403) (float-vector 53.5062 -25.8574 -156.403) (float-vector 60.4347 -29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector 8.72 -59.715 -126.545) (float-vector 8.72 -51.7147 -156.403) (float-vector 34.5774 -44.7863 -156.403) (float-vector 38.5775 -51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector -21.1375 -51.7147 -126.545) (float-vector -17.1374 -44.7862 -156.403) (float-vector 8.72 -51.7147 -156.403) (float-vector 8.72 -59.715 -126.545)))
         (instance face :init :vertices (list (float-vector -42.9947 -29.8575 -126.545) (float-vector -36.0663 -25.8574 -156.403) (float-vector -17.1374 -44.7862 -156.403) (float-vector -21.1375 -51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector -50.995 2.131628e-13 -126.545) (float-vector -42.9947 1.989520e-13 -156.403) (float-vector -36.0663 -25.8574 -156.403) (float-vector -42.9947 -29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector -42.9947 29.8575 -126.545) (float-vector -36.0662 25.8574 -156.403) (float-vector -42.9947 1.989520e-13 -156.403) (float-vector -50.995 2.131628e-13 -126.545)))
         (instance face :init :vertices (list (float-vector -21.1375 51.7147 -126.545) (float-vector -17.1374 44.7863 -156.403) (float-vector -36.0662 25.8574 -156.403) (float-vector -42.9947 29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector 8.72 59.715 -126.545) (float-vector 8.72 51.7147 -156.403) (float-vector -17.1374 44.7863 -156.403) (float-vector -21.1375 51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector 38.5775 51.7147 -126.545) (float-vector 34.5774 44.7862 -156.403) (float-vector 8.72 51.7147 -156.403) (float-vector 8.72 59.715 -126.545)))
         (instance face :init :vertices (list (float-vector 60.4347 29.8575 -126.545) (float-vector 53.5062 25.8574 -156.403) (float-vector 34.5774 44.7862 -156.403) (float-vector 38.5775 51.7147 -126.545)))
         (instance face :init :vertices (list (float-vector 68.435 0.0 -126.545) (float-vector 60.4347 0.0 -156.403) (float-vector 53.5062 25.8574 -156.403) (float-vector 60.4347 29.8575 -126.545)))
         (instance face :init :vertices (list (float-vector 60.4347 -29.8575 -53.455) (float-vector 60.4347 -29.8575 -126.545) (float-vector 68.435 0.0 -126.545) (float-vector 68.435 -1.421085e-14 -53.455)))
         (instance face :init :vertices (list (float-vector 38.5775 -51.7147 -53.455) (float-vector 38.5775 -51.7147 -126.545) (float-vector 60.4347 -29.8575 -126.545) (float-vector 60.4347 -29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector 8.72 -59.715 -53.455) (float-vector 8.72 -59.715 -126.545) (float-vector 38.5775 -51.7147 -126.545) (float-vector 38.5775 -51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector -21.1375 -51.7147 -53.455) (float-vector -21.1375 -51.7147 -126.545) (float-vector 8.72 -59.715 -126.545) (float-vector 8.72 -59.715 -53.455)))
         (instance face :init :vertices (list (float-vector -42.9947 -29.8575 -53.455) (float-vector -42.9947 -29.8575 -126.545) (float-vector -21.1375 -51.7147 -126.545) (float-vector -21.1375 -51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector -50.995 2.131628e-13 -53.455) (float-vector -50.995 2.131628e-13 -126.545) (float-vector -42.9947 -29.8575 -126.545) (float-vector -42.9947 -29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector -42.9947 29.8575 -53.455) (float-vector -42.9947 29.8575 -126.545) (float-vector -50.995 2.131628e-13 -126.545) (float-vector -50.995 2.131628e-13 -53.455)))
         (instance face :init :vertices (list (float-vector -21.1375 51.7147 -53.455) (float-vector -21.1375 51.7147 -126.545) (float-vector -42.9947 29.8575 -126.545) (float-vector -42.9947 29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector 8.72 59.715 -53.455) (float-vector 8.72 59.715 -126.545) (float-vector -21.1375 51.7147 -126.545) (float-vector -21.1375 51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector 38.5775 51.7147 -53.455) (float-vector 38.5775 51.7147 -126.545) (float-vector 8.72 59.715 -126.545) (float-vector 8.72 59.715 -53.455)))
         (instance face :init :vertices (list (float-vector 60.4347 29.8575 -53.455) (float-vector 60.4347 29.8575 -126.545) (float-vector 38.5775 51.7147 -126.545) (float-vector 38.5775 51.7147 -53.455)))
         (instance face :init :vertices (list (float-vector 68.435 -1.421085e-14 -53.455) (float-vector 68.435 0.0 -126.545) (float-vector 60.4347 29.8575 -126.545) (float-vector 60.4347 29.8575 -53.455)))
         (instance face :init :vertices (list (float-vector 53.5062 -25.8574 -23.5975) (float-vector 60.4347 -29.8575 -53.455) (float-vector 68.435 -1.421085e-14 -53.455) (float-vector 60.4347 0.0 -23.5975)))
         (instance face :init :vertices (list (float-vector 34.5774 -44.7863 -23.5975) (float-vector 38.5775 -51.7147 -53.455) (float-vector 60.4347 -29.8575 -53.455) (float-vector 53.5062 -25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector 8.72 -51.7147 -23.5975) (float-vector 8.72 -59.715 -53.455) (float-vector 38.5775 -51.7147 -53.455) (float-vector 34.5774 -44.7863 -23.5975)))
         (instance face :init :vertices (list (float-vector -17.1374 -44.7862 -23.5975) (float-vector -21.1375 -51.7147 -53.455) (float-vector 8.72 -59.715 -53.455) (float-vector 8.72 -51.7147 -23.5975)))
         (instance face :init :vertices (list (float-vector -36.0663 -25.8574 -23.5975) (float-vector -42.9947 -29.8575 -53.455) (float-vector -21.1375 -51.7147 -53.455) (float-vector -17.1374 -44.7862 -23.5975)))
         (instance face :init :vertices (list (float-vector -42.9947 1.847411e-13 -23.5975) (float-vector -50.995 2.131628e-13 -53.455) (float-vector -42.9947 -29.8575 -53.455) (float-vector -36.0663 -25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector -36.0662 25.8574 -23.5975) (float-vector -42.9947 29.8575 -53.455) (float-vector -50.995 2.131628e-13 -53.455) (float-vector -42.9947 1.847411e-13 -23.5975)))
         (instance face :init :vertices (list (float-vector -17.1374 44.7863 -23.5975) (float-vector -21.1375 51.7147 -53.455) (float-vector -42.9947 29.8575 -53.455) (float-vector -36.0662 25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector 8.72 51.7147 -23.5975) (float-vector 8.72 59.715 -53.455) (float-vector -21.1375 51.7147 -53.455) (float-vector -17.1374 44.7863 -23.5975)))
         (instance face :init :vertices (list (float-vector 34.5774 44.7862 -23.5975) (float-vector 38.5775 51.7147 -53.455) (float-vector 8.72 59.715 -53.455) (float-vector 8.72 51.7147 -23.5975)))
         (instance face :init :vertices (list (float-vector 53.5062 25.8574 -23.5975) (float-vector 60.4347 29.8575 -53.455) (float-vector 38.5775 51.7147 -53.455) (float-vector 34.5774 44.7862 -23.5975)))
         (instance face :init :vertices (list (float-vector 60.4347 0.0 -23.5975) (float-vector 68.435 -1.421085e-14 -53.455) (float-vector 60.4347 29.8575 -53.455) (float-vector 53.5062 25.8574 -23.5975)))
         (instance face :init :vertices (list (float-vector 34.5774 -14.9288 -1.74029) (float-vector 53.5062 -25.8574 -23.5975) (float-vector 60.4347 0.0 -23.5975) (float-vector 38.5775 0.0 -1.74029)))
         (instance face :init :vertices (list (float-vector 23.6487 -25.8574 -1.74029) (float-vector 34.5774 -44.7863 -23.5975) (float-vector 53.5062 -25.8574 -23.5975) (float-vector 34.5774 -14.9288 -1.74029)))
         (instance face :init :vertices (list (float-vector 8.72 -29.8575 -1.74029) (float-vector 8.72 -51.7147 -23.5975) (float-vector 34.5774 -44.7863 -23.5975) (float-vector 23.6487 -25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector -6.20875 -25.8574 -1.74029) (float-vector -17.1374 -44.7862 -23.5975) (float-vector 8.72 -51.7147 -23.5975) (float-vector 8.72 -29.8575 -1.74029)))
         (instance face :init :vertices (list (float-vector -17.1374 -14.9287 -1.74029) (float-vector -36.0663 -25.8574 -23.5975) (float-vector -17.1374 -44.7862 -23.5975) (float-vector -6.20875 -25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector -21.1375 9.947598e-14 -1.74029) (float-vector -42.9947 1.847411e-13 -23.5975) (float-vector -36.0663 -25.8574 -23.5975) (float-vector -17.1374 -14.9287 -1.74029)))
         (instance face :init :vertices (list (float-vector -17.1374 14.9288 -1.74029) (float-vector -36.0662 25.8574 -23.5975) (float-vector -42.9947 1.847411e-13 -23.5975) (float-vector -21.1375 9.947598e-14 -1.74029)))
         (instance face :init :vertices (list (float-vector -6.20875 25.8574 -1.74029) (float-vector -17.1374 44.7863 -23.5975) (float-vector -36.0662 25.8574 -23.5975) (float-vector -17.1374 14.9288 -1.74029)))
         (instance face :init :vertices (list (float-vector 8.72 29.8575 -1.74029) (float-vector 8.72 51.7147 -23.5975) (float-vector -17.1374 44.7863 -23.5975) (float-vector -6.20875 25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector 23.6488 25.8574 -1.74029) (float-vector 34.5774 44.7862 -23.5975) (float-vector 8.72 51.7147 -23.5975) (float-vector 8.72 29.8575 -1.74029)))
         (instance face :init :vertices (list (float-vector 34.5774 14.9287 -1.74029) (float-vector 53.5062 25.8574 -23.5975) (float-vector 34.5774 44.7862 -23.5975) (float-vector 23.6488 25.8574 -1.74029)))
         (instance face :init :vertices (list (float-vector 38.5775 0.0 -1.74029) (float-vector 60.4347 0.0 -23.5975) (float-vector 53.5062 25.8574 -23.5975) (float-vector 34.5774 14.9287 -1.74029)))
         (instance face :init :vertices (list (float-vector 34.5774 -14.9288 -1.74029) (float-vector 38.5775 0.0 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 38.5775 0.0 -1.74029) (float-vector 34.5774 14.9287 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 34.5774 14.9287 -1.74029) (float-vector 23.6488 25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 23.6488 25.8574 -1.74029) (float-vector 8.72 29.8575 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 8.72 29.8575 -1.74029) (float-vector -6.20875 25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -6.20875 25.8574 -1.74029) (float-vector -17.1374 14.9288 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -17.1374 14.9288 -1.74029) (float-vector -21.1375 9.947598e-14 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -21.1375 9.947598e-14 -1.74029) (float-vector -17.1374 -14.9287 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -17.1374 -14.9287 -1.74029) (float-vector -6.20875 -25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector -6.20875 -25.8574 -1.74029) (float-vector 8.72 -29.8575 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 8.72 -29.8575 -1.74029) (float-vector 23.6487 -25.8574 -1.74029) (float-vector 8.72 0.0 6.26)))
         (instance face :init :vertices (list (float-vector 23.6487 -25.8574 -1.74029) (float-vector 34.5774 -14.9288 -1.74029) (float-vector 8.72 0.0 6.26)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray30)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color :white)
     (send (elt bc 5) :set-color :papayawhip)
     (send (elt bc 6) :set-color :papayawhip)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-shank :weight 60 :centroid (float-vector 15.6998 5.138898e-15 -58.4474) :inertia-tensor #2f((1.213007e+05 -1.023431e-12 19801.3) (-1.023431e-12 1.189323e+05 -7.753066e-12) (19801.3 -7.753066e-12 15425.8))))

     ;; definition of :lleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.5 41.0 -48.1) (float-vector -14.5 41.0 -48.1) (float-vector -20.1 41.0 -42.6) (float-vector -20.1 41.0 5.0) (float-vector -14.5 41.0 13.0) (float-vector 14.5 41.0 13.0) (float-vector 20.1 41.0 5.0) (float-vector 20.1 41.0 -42.6)))
         (instance face :init :vertices (list (float-vector -14.5 0.0 -48.1) (float-vector 14.5 7.105427e-15 -48.1) (float-vector 20.1 7.105427e-15 -42.6) (float-vector 20.1 0.0 5.0) (float-vector 14.5 7.105427e-15 13.0) (float-vector -14.5 0.0 13.0) (float-vector -20.1 0.0 5.0) (float-vector -20.1 7.105427e-15 -42.6)))
         (instance face :init :vertices (list (float-vector 14.5 41.0 -48.1) (float-vector 14.5 7.105427e-15 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector -14.5 41.0 -48.1)))
         (instance face :init :vertices (list (float-vector 20.1 41.0 -42.6) (float-vector 20.1 7.105427e-15 -42.6) (float-vector 14.5 7.105427e-15 -48.1) (float-vector 14.5 41.0 -48.1)))
         (instance face :init :vertices (list (float-vector 20.1 41.0 5.0) (float-vector 20.1 0.0 5.0) (float-vector 20.1 7.105427e-15 -42.6) (float-vector 20.1 41.0 -42.6)))
         (instance face :init :vertices (list (float-vector 14.5 41.0 13.0) (float-vector 14.5 7.105427e-15 13.0) (float-vector 20.1 0.0 5.0) (float-vector 20.1 41.0 5.0)))
         (instance face :init :vertices (list (float-vector -14.5 41.0 13.0) (float-vector -14.5 0.0 13.0) (float-vector 14.5 7.105427e-15 13.0) (float-vector 14.5 41.0 13.0)))
         (instance face :init :vertices (list (float-vector -20.1 41.0 5.0) (float-vector -20.1 0.0 5.0) (float-vector -14.5 0.0 13.0) (float-vector -14.5 41.0 13.0)))
         (instance face :init :vertices (list (float-vector -20.1 41.0 -42.6) (float-vector -20.1 7.105427e-15 -42.6) (float-vector -20.1 0.0 5.0) (float-vector -20.1 41.0 5.0)))
         (instance face :init :vertices (list (float-vector -14.5 41.0 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector -20.1 7.105427e-15 -42.6) (float-vector -20.1 41.0 -42.6)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle :weight 116 :centroid (float-vector -1.490892e-16 20.5 -17.7032) :inertia-tensor #2f((85104.8 3.545341e-13 -3.061652e-13) (3.545341e-13 36355.8 42098.2) (-3.061652e-13 42098.2 48750.0))))

     ;; definition of :lleg-foot
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.0 -14.5 -48.1) (float-vector 41.0 14.5 -48.1) (float-vector 41.0 20.1 -42.6) (float-vector 41.0 20.1 5.0) (float-vector 41.0 14.5 13.0) (float-vector 41.0 -14.5 13.0) (float-vector 41.0 -20.1 5.0) (float-vector 41.0 -20.1 -42.6)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 14.5 -48.1) (float-vector 2.131628e-14 -14.5 -48.1) (float-vector 1.421085e-14 -20.1 -42.6) (float-vector 7.105427e-15 -20.1 5.0) (float-vector 7.105427e-15 -14.5 13.0) (float-vector 0.0 14.5 13.0) (float-vector 0.0 20.1 5.0) (float-vector 2.131628e-14 20.1 -42.6)))
         (instance face :init :vertices (list (float-vector 41.0 -14.5 -48.1) (float-vector 2.131628e-14 -14.5 -48.1) (float-vector 1.421085e-14 14.5 -48.1) (float-vector 41.0 14.5 -48.1)))
         (instance face :init :vertices (list (float-vector 41.0 -20.1 -42.6) (float-vector 1.421085e-14 -20.1 -42.6) (float-vector 2.131628e-14 -14.5 -48.1) (float-vector 41.0 -14.5 -48.1)))
         (instance face :init :vertices (list (float-vector 41.0 -20.1 5.0) (float-vector 7.105427e-15 -20.1 5.0) (float-vector 1.421085e-14 -20.1 -42.6) (float-vector 41.0 -20.1 -42.6)))
         (instance face :init :vertices (list (float-vector 41.0 -14.5 13.0) (float-vector 7.105427e-15 -14.5 13.0) (float-vector 7.105427e-15 -20.1 5.0) (float-vector 41.0 -20.1 5.0)))
         (instance face :init :vertices (list (float-vector 41.0 14.5 13.0) (float-vector 0.0 14.5 13.0) (float-vector 7.105427e-15 -14.5 13.0) (float-vector 41.0 -14.5 13.0)))
         (instance face :init :vertices (list (float-vector 41.0 20.1 5.0) (float-vector 0.0 20.1 5.0) (float-vector 0.0 14.5 13.0) (float-vector 41.0 14.5 13.0)))
         (instance face :init :vertices (list (float-vector 41.0 20.1 -42.6) (float-vector 2.131628e-14 20.1 -42.6) (float-vector 0.0 20.1 5.0) (float-vector 41.0 20.1 5.0)))
         (instance face :init :vertices (list (float-vector 41.0 14.5 -48.1) (float-vector 1.421085e-14 14.5 -48.1) (float-vector 2.131628e-14 20.1 -42.6) (float-vector 41.0 20.1 -42.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 130.813 67.6611 -63.0) (float-vector 109.0 72.0 -63.0) (float-vector 29.0 72.0 -63.0) (float-vector 7.18704 67.6611 -63.0) (float-vector -11.3051 55.3051 -63.0) (float-vector -23.6611 36.813 -63.0) (float-vector -28.0 15.0 -63.0) (float-vector -23.6611 -6.81296 -63.0) (float-vector -11.3051 -25.3051 -63.0) (float-vector 7.18704 -37.6611 -63.0) (float-vector 29.0 -42.0 -63.0) (float-vector 109.0 -42.0 -63.0) (float-vector 130.813 -37.6611 -63.0) (float-vector 149.305 -25.3051 -63.0) (float-vector 161.661 -6.81296 -63.0) (float-vector 166.0 15.0 -63.0) (float-vector 161.661 36.813 -63.0) (float-vector 149.305 55.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 109.0 72.0 -69.0) (float-vector 130.813 67.6611 -69.0) (float-vector 149.305 55.3051 -69.0) (float-vector 161.661 36.813 -69.0) (float-vector 166.0 15.0 -69.0) (float-vector 161.661 -6.81296 -69.0) (float-vector 149.305 -25.3051 -69.0) (float-vector 130.813 -37.6611 -69.0) (float-vector 109.0 -42.0 -69.0) (float-vector 29.0 -42.0 -69.0) (float-vector 7.18704 -37.6611 -69.0) (float-vector -11.3051 -25.3051 -69.0) (float-vector -23.6611 -6.81296 -69.0) (float-vector -28.0 15.0 -69.0) (float-vector -23.6611 36.813 -69.0) (float-vector -11.3051 55.3051 -69.0) (float-vector 7.18704 67.6611 -69.0) (float-vector 29.0 72.0 -69.0)))
         (instance face :init :vertices (list (float-vector 130.813 67.6611 -63.0) (float-vector 130.813 67.6611 -69.0) (float-vector 109.0 72.0 -69.0) (float-vector 109.0 72.0 -63.0)))
         (instance face :init :vertices (list (float-vector 149.305 55.3051 -63.0) (float-vector 149.305 55.3051 -69.0) (float-vector 130.813 67.6611 -69.0) (float-vector 130.813 67.6611 -63.0)))
         (instance face :init :vertices (list (float-vector 161.661 36.813 -63.0) (float-vector 161.661 36.813 -69.0) (float-vector 149.305 55.3051 -69.0) (float-vector 149.305 55.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 166.0 15.0 -63.0) (float-vector 166.0 15.0 -69.0) (float-vector 161.661 36.813 -69.0) (float-vector 161.661 36.813 -63.0)))
         (instance face :init :vertices (list (float-vector 161.661 -6.81296 -63.0) (float-vector 161.661 -6.81296 -69.0) (float-vector 166.0 15.0 -69.0) (float-vector 166.0 15.0 -63.0)))
         (instance face :init :vertices (list (float-vector 149.305 -25.3051 -63.0) (float-vector 149.305 -25.3051 -69.0) (float-vector 161.661 -6.81296 -69.0) (float-vector 161.661 -6.81296 -63.0)))
         (instance face :init :vertices (list (float-vector 130.813 -37.6611 -63.0) (float-vector 130.813 -37.6611 -69.0) (float-vector 149.305 -25.3051 -69.0) (float-vector 149.305 -25.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 109.0 -42.0 -63.0) (float-vector 109.0 -42.0 -69.0) (float-vector 130.813 -37.6611 -69.0) (float-vector 130.813 -37.6611 -63.0)))
         (instance face :init :vertices (list (float-vector 29.0 -42.0 -63.0) (float-vector 29.0 -42.0 -69.0) (float-vector 109.0 -42.0 -69.0) (float-vector 109.0 -42.0 -63.0)))
         (instance face :init :vertices (list (float-vector 7.18704 -37.6611 -63.0) (float-vector 7.18704 -37.6611 -69.0) (float-vector 29.0 -42.0 -69.0) (float-vector 29.0 -42.0 -63.0)))
         (instance face :init :vertices (list (float-vector -11.3051 -25.3051 -63.0) (float-vector -11.3051 -25.3051 -69.0) (float-vector 7.18704 -37.6611 -69.0) (float-vector 7.18704 -37.6611 -63.0)))
         (instance face :init :vertices (list (float-vector -23.6611 -6.81296 -63.0) (float-vector -23.6611 -6.81296 -69.0) (float-vector -11.3051 -25.3051 -69.0) (float-vector -11.3051 -25.3051 -63.0)))
         (instance face :init :vertices (list (float-vector -28.0 15.0 -63.0) (float-vector -28.0 15.0 -69.0) (float-vector -23.6611 -6.81296 -69.0) (float-vector -23.6611 -6.81296 -63.0)))
         (instance face :init :vertices (list (float-vector -23.6611 36.813 -63.0) (float-vector -23.6611 36.813 -69.0) (float-vector -28.0 15.0 -69.0) (float-vector -28.0 15.0 -63.0)))
         (instance face :init :vertices (list (float-vector -11.3051 55.3051 -63.0) (float-vector -11.3051 55.3051 -69.0) (float-vector -23.6611 36.813 -69.0) (float-vector -23.6611 36.813 -63.0)))
         (instance face :init :vertices (list (float-vector 7.18704 67.6611 -63.0) (float-vector 7.18704 67.6611 -69.0) (float-vector -11.3051 55.3051 -69.0) (float-vector -11.3051 55.3051 -63.0)))
         (instance face :init :vertices (list (float-vector 29.0 72.0 -63.0) (float-vector 29.0 72.0 -69.0) (float-vector 7.18704 67.6611 -69.0) (float-vector 7.18704 67.6611 -63.0)))
         (instance face :init :vertices (list (float-vector 109.0 72.0 -63.0) (float-vector 109.0 72.0 -69.0) (float-vector 29.0 72.0 -69.0) (float-vector 29.0 72.0 -63.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.5 -10.0 -5.0) (float-vector 41.5 -10.0 -63.0) (float-vector 96.5 -10.0 -63.0) (float-vector 96.5 -10.0 -5.0) (float-vector 94.5 -10.0 -5.0) (float-vector 94.5 -10.0 -61.0) (float-vector 43.5 -10.0 -61.0) (float-vector 43.5 -10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 41.5 10.0 -63.0) (float-vector 96.5 10.0 -63.0) (float-vector 96.5 -10.0 -63.0) (float-vector 41.5 -10.0 -63.0)))
         (instance face :init :vertices (list (float-vector 41.5 10.0 -5.0) (float-vector 43.5 10.0 -5.0) (float-vector 43.5 10.0 -61.0) (float-vector 94.5 10.0 -61.0) (float-vector 94.5 10.0 -5.0) (float-vector 96.5 10.0 -5.0) (float-vector 96.5 10.0 -63.0) (float-vector 41.5 10.0 -63.0)))
         (instance face :init :vertices (list (float-vector 96.5 7.07107 2.07107) (float-vector 96.5 10.0 -5.0) (float-vector 94.5 10.0 -5.0) (float-vector 94.5 7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 41.5 7.07107 2.07107) (float-vector 43.5 7.07107 2.07107) (float-vector 43.5 10.0 -5.0) (float-vector 41.5 10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 96.5 -1.421085e-14 5.0) (float-vector 96.5 7.07107 2.07107) (float-vector 94.5 7.07107 2.07107) (float-vector 94.5 0.0 5.0)))
         (instance face :init :vertices (list (float-vector 41.5 -1.421085e-14 5.0) (float-vector 43.5 -2.842171e-14 5.0) (float-vector 43.5 7.07107 2.07107) (float-vector 41.5 7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 96.5 -7.07107 2.07107) (float-vector 96.5 -1.421085e-14 5.0) (float-vector 94.5 0.0 5.0) (float-vector 94.5 -7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 41.5 -7.07107 2.07107) (float-vector 43.5 -7.07107 2.07107) (float-vector 43.5 -2.842171e-14 5.0) (float-vector 41.5 -1.421085e-14 5.0)))
         (instance face :init :vertices (list (float-vector 96.5 -10.0 -5.0) (float-vector 96.5 -10.0 -63.0) (float-vector 96.5 10.0 -63.0) (float-vector 96.5 10.0 -5.0) (float-vector 96.5 7.07107 2.07107) (float-vector 96.5 -1.421085e-14 5.0) (float-vector 96.5 -7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 41.5 -7.07107 2.07107) (float-vector 41.5 -1.421085e-14 5.0) (float-vector 41.5 7.07107 2.07107) (float-vector 41.5 10.0 -5.0) (float-vector 41.5 10.0 -63.0) (float-vector 41.5 -10.0 -63.0) (float-vector 41.5 -10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 96.5 -7.07107 2.07107) (float-vector 94.5 -7.07107 2.07107) (float-vector 94.5 -10.0 -5.0) (float-vector 96.5 -10.0 -5.0)))
         (instance face :init :vertices (list (float-vector 41.5 -10.0 -5.0) (float-vector 43.5 -10.0 -5.0) (float-vector 43.5 -7.07107 2.07107) (float-vector 41.5 -7.07107 2.07107)))
         (instance face :init :vertices (list (float-vector 94.5 -10.0 -61.0) (float-vector 94.5 -10.0 -5.0) (float-vector 94.5 -7.07107 2.07107) (float-vector 94.5 0.0 5.0) (float-vector 94.5 7.07107 2.07107) (float-vector 94.5 10.0 -5.0) (float-vector 94.5 10.0 -61.0)))
         (instance face :init :vertices (list (float-vector 43.5 -10.0 -61.0) (float-vector 94.5 -10.0 -61.0) (float-vector 94.5 10.0 -61.0) (float-vector 43.5 10.0 -61.0)))
         (instance face :init :vertices (list (float-vector 43.5 10.0 -61.0) (float-vector 43.5 10.0 -5.0) (float-vector 43.5 7.07107 2.07107) (float-vector 43.5 -2.842171e-14 5.0) (float-vector 43.5 -7.07107 2.07107) (float-vector 43.5 -10.0 -5.0) (float-vector 43.5 -10.0 -61.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 95.0 26.0 -53.0) (float-vector 43.0 26.0 -53.0) (float-vector 43.0 -26.0 -53.0) (float-vector 95.0 -26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 43.0 26.0 -63.0) (float-vector 95.0 26.0 -63.0) (float-vector 95.0 -26.0 -63.0) (float-vector 43.0 -26.0 -63.0)))
         (instance face :init :vertices (list (float-vector 95.0 26.0 -53.0) (float-vector 95.0 26.0 -63.0) (float-vector 43.0 26.0 -63.0) (float-vector 43.0 26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 95.0 -26.0 -53.0) (float-vector 95.0 -26.0 -63.0) (float-vector 95.0 26.0 -63.0) (float-vector 95.0 26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 43.0 -26.0 -53.0) (float-vector 43.0 -26.0 -63.0) (float-vector 95.0 -26.0 -63.0) (float-vector 95.0 -26.0 -53.0)))
         (instance face :init :vertices (list (float-vector 43.0 26.0 -53.0) (float-vector 43.0 26.0 -63.0) (float-vector 43.0 -26.0 -63.0) (float-vector 43.0 -26.0 -53.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 170.0 78.0 3.0) (float-vector -30.0 78.0 3.0) (float-vector -30.0 -48.0 3.0) (float-vector 170.0 -48.0 3.0)))
         (instance face :init :vertices (list (float-vector -30.0 78.0 -63.0) (float-vector 170.0 78.0 -63.0) (float-vector 170.0 -48.0 -63.0) (float-vector -30.0 -48.0 -63.0)))
         (instance face :init :vertices (list (float-vector 170.0 78.0 3.0) (float-vector 170.0 78.0 -63.0) (float-vector -30.0 78.0 -63.0) (float-vector -30.0 78.0 3.0)))
         (instance face :init :vertices (list (float-vector 170.0 -48.0 3.0) (float-vector 170.0 -48.0 -63.0) (float-vector 170.0 78.0 -63.0) (float-vector 170.0 78.0 3.0)))
         (instance face :init :vertices (list (float-vector -30.0 -48.0 3.0) (float-vector -30.0 -48.0 -63.0) (float-vector 170.0 -48.0 -63.0) (float-vector 170.0 -48.0 3.0)))
         (instance face :init :vertices (list (float-vector -30.0 78.0 3.0) (float-vector -30.0 78.0 -63.0) (float-vector -30.0 -48.0 -63.0) (float-vector -30.0 -48.0 3.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray90)
     (send (elt bc 3) :set-color :grey20)
     (send (elt bc 4) :set-color :papayawhip)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-foot :weight 365.563 :centroid (float-vector 53.6101 8.20651 -48.5894) :inertia-tensor #2f((2.950949e+05 -48563.6 2.993709e+05) (-48563.6 6.344040e+05 47745.5) (2.993709e+05 47745.5 3.588738e+05))))

     ;; definition of :torso-lowertorso
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 56.0 13.5 0.0) (float-vector 56.0 13.5 -50.0) (float-vector -14.0 13.5 -50.0) (float-vector -14.0 13.5 0.0) (float-vector -12.0 13.5 0.0) (float-vector -12.0 13.5 -48.0) (float-vector 54.0 13.5 -48.0) (float-vector 54.0 13.5 0.0)))
         (instance face :init :vertices (list (float-vector 56.0 -13.5 -50.0) (float-vector -14.0 -13.5 -50.0) (float-vector -14.0 13.5 -50.0) (float-vector 56.0 13.5 -50.0)))
         (instance face :init :vertices (list (float-vector 56.0 -13.5 0.0) (float-vector 54.0 -13.5 0.0) (float-vector 54.0 -13.5 -48.0) (float-vector -12.0 -13.5 -48.0) (float-vector -12.0 -13.5 0.0) (float-vector -14.0 -13.5 0.0) (float-vector -14.0 -13.5 -50.0) (float-vector 56.0 -13.5 -50.0)))
         (instance face :init :vertices (list (float-vector -14.0 -9.54594 9.54594) (float-vector -14.0 -13.5 0.0) (float-vector -12.0 -13.5 0.0) (float-vector -12.0 -9.54594 9.54594)))
         (instance face :init :vertices (list (float-vector 56.0 -9.54594 9.54594) (float-vector 54.0 -9.54594 9.54594) (float-vector 54.0 -13.5 0.0) (float-vector 56.0 -13.5 0.0)))
         (instance face :init :vertices (list (float-vector -14.0 0.0 13.5) (float-vector -14.0 -9.54594 9.54594) (float-vector -12.0 -9.54594 9.54594) (float-vector -12.0 0.0 13.5)))
         (instance face :init :vertices (list (float-vector 56.0 0.0 13.5) (float-vector 54.0 0.0 13.5) (float-vector 54.0 -9.54594 9.54594) (float-vector 56.0 -9.54594 9.54594)))
         (instance face :init :vertices (list (float-vector -14.0 9.54594 9.54594) (float-vector -14.0 0.0 13.5) (float-vector -12.0 0.0 13.5) (float-vector -12.0 9.54594 9.54594)))
         (instance face :init :vertices (list (float-vector 56.0 9.54594 9.54594) (float-vector 54.0 9.54594 9.54594) (float-vector 54.0 0.0 13.5) (float-vector 56.0 0.0 13.5)))
         (instance face :init :vertices (list (float-vector -14.0 13.5 0.0) (float-vector -14.0 13.5 -50.0) (float-vector -14.0 -13.5 -50.0) (float-vector -14.0 -13.5 0.0) (float-vector -14.0 -9.54594 9.54594) (float-vector -14.0 0.0 13.5) (float-vector -14.0 9.54594 9.54594)))
         (instance face :init :vertices (list (float-vector 56.0 9.54594 9.54594) (float-vector 56.0 0.0 13.5) (float-vector 56.0 -9.54594 9.54594) (float-vector 56.0 -13.5 0.0) (float-vector 56.0 -13.5 -50.0) (float-vector 56.0 13.5 -50.0) (float-vector 56.0 13.5 0.0)))
         (instance face :init :vertices (list (float-vector -14.0 9.54594 9.54594) (float-vector -12.0 9.54594 9.54594) (float-vector -12.0 13.5 0.0) (float-vector -14.0 13.5 0.0)))
         (instance face :init :vertices (list (float-vector 56.0 13.5 0.0) (float-vector 54.0 13.5 0.0) (float-vector 54.0 9.54594 9.54594) (float-vector 56.0 9.54594 9.54594)))
         (instance face :init :vertices (list (float-vector -12.0 13.5 -48.0) (float-vector -12.0 13.5 0.0) (float-vector -12.0 9.54594 9.54594) (float-vector -12.0 0.0 13.5) (float-vector -12.0 -9.54594 9.54594) (float-vector -12.0 -13.5 0.0) (float-vector -12.0 -13.5 -48.0)))
         (instance face :init :vertices (list (float-vector 54.0 13.5 -48.0) (float-vector -12.0 13.5 -48.0) (float-vector -12.0 -13.5 -48.0) (float-vector 54.0 -13.5 -48.0)))
         (instance face :init :vertices (list (float-vector 54.0 -13.5 -48.0) (float-vector 54.0 -13.5 0.0) (float-vector 54.0 -9.54594 9.54594) (float-vector 54.0 0.0 13.5) (float-vector 54.0 9.54594 9.54594) (float-vector 54.0 13.5 0.0) (float-vector 54.0 13.5 -48.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 54.0 -3.330180e-15 -16.0) (float-vector 42.0 -2.859152e-15 -16.0) (float-vector 42.0 8.0 -13.8564) (float-vector 54.0 8.0 -13.8564)))
         (instance face :init :vertices (list (float-vector 42.0 8.0 -13.8564) (float-vector 42.0 13.8564 -8.0) (float-vector 54.0 13.8564 -8.0) (float-vector 54.0 8.0 -13.8564)))
         (instance face :init :vertices (list (float-vector 42.0 13.8564 -8.0) (float-vector 42.0 16.0 0.0) (float-vector 54.0 16.0 0.0) (float-vector 54.0 13.8564 -8.0)))
         (instance face :init :vertices (list (float-vector 42.0 16.0 0.0) (float-vector 42.0 13.8564 8.0) (float-vector 54.0 13.8564 8.0) (float-vector 54.0 16.0 0.0)))
         (instance face :init :vertices (list (float-vector 42.0 13.8564 8.0) (float-vector 42.0 8.0 13.8564) (float-vector 54.0 8.0 13.8564) (float-vector 54.0 13.8564 8.0)))
         (instance face :init :vertices (list (float-vector 42.0 8.0 13.8564) (float-vector 42.0 2.029661e-14 16.0) (float-vector 54.0 1.982558e-14 16.0) (float-vector 54.0 8.0 13.8564)))
         (instance face :init :vertices (list (float-vector 42.0 2.029661e-14 16.0) (float-vector 42.0 -8.0 13.8564) (float-vector 54.0 -8.0 13.8564) (float-vector 54.0 1.982558e-14 16.0)))
         (instance face :init :vertices (list (float-vector 42.0 -8.0 13.8564) (float-vector 42.0 -13.8564 8.0) (float-vector 54.0 -13.8564 8.0) (float-vector 54.0 -8.0 13.8564)))
         (instance face :init :vertices (list (float-vector 42.0 -13.8564 8.0) (float-vector 42.0 -16.0 5.684342e-14) (float-vector 54.0 -16.0 5.684342e-14) (float-vector 54.0 -13.8564 8.0)))
         (instance face :init :vertices (list (float-vector 42.0 -16.0 5.684342e-14) (float-vector 42.0 -13.8564 -8.0) (float-vector 54.0 -13.8564 -8.0) (float-vector 54.0 -16.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 42.0 -13.8564 -8.0) (float-vector 42.0 -8.0 -13.8564) (float-vector 54.0 -8.0 -13.8564) (float-vector 54.0 -13.8564 -8.0)))
         (instance face :init :vertices (list (float-vector 54.0 -8.0 -13.8564) (float-vector 54.0 -3.330180e-15 -16.0) (float-vector 54.0 8.0 -13.8564) (float-vector 54.0 13.8564 -8.0) (float-vector 54.0 16.0 0.0) (float-vector 54.0 13.8564 8.0) (float-vector 54.0 8.0 13.8564) (float-vector 54.0 1.982558e-14 16.0) (float-vector 54.0 -8.0 13.8564) (float-vector 54.0 -13.8564 8.0) (float-vector 54.0 -16.0 5.684342e-14) (float-vector 54.0 -13.8564 -8.0)))
         (instance face :init :vertices (list (float-vector 42.0 -8.0 -13.8564) (float-vector 42.0 -2.859152e-15 -16.0) (float-vector 54.0 -3.330180e-15 -16.0) (float-vector 54.0 -8.0 -13.8564)))
         (instance face :init :vertices (list (float-vector 42.0 -3.742329e-15 -20.5) (float-vector 32.0 -3.349806e-15 -20.5) (float-vector 32.0 10.25 -17.7535) (float-vector 42.0 10.25 -17.7535)))
         (instance face :init :vertices (list (float-vector 32.0 10.25 -17.7535) (float-vector 32.0 17.7535 -10.25) (float-vector 42.0 17.7535 -10.25) (float-vector 42.0 10.25 -17.7535)))
         (instance face :init :vertices (list (float-vector 32.0 17.7535 -10.25) (float-vector 32.0 20.5 0.0) (float-vector 42.0 20.5 0.0) (float-vector 42.0 17.7535 -10.25)))
         (instance face :init :vertices (list (float-vector 32.0 20.5 0.0) (float-vector 32.0 17.7535 10.25) (float-vector 42.0 17.7535 10.25) (float-vector 42.0 20.5 0.0)))
         (instance face :init :vertices (list (float-vector 32.0 17.7535 10.25) (float-vector 32.0 10.25 17.7535) (float-vector 42.0 10.25 17.7535) (float-vector 42.0 17.7535 10.25)))
         (instance face :init :vertices (list (float-vector 32.0 10.25 17.7535) (float-vector 32.0 2.956591e-14 20.5) (float-vector 42.0 2.917339e-14 20.5) (float-vector 42.0 10.25 17.7535)))
         (instance face :init :vertices (list (float-vector 32.0 2.956591e-14 20.5) (float-vector 32.0 -10.25 17.7535) (float-vector 42.0 -10.25 17.7535) (float-vector 42.0 2.917339e-14 20.5)))
         (instance face :init :vertices (list (float-vector 32.0 -10.25 17.7535) (float-vector 32.0 -17.7535 10.25) (float-vector 42.0 -17.7535 10.25) (float-vector 42.0 -10.25 17.7535)))
         (instance face :init :vertices (list (float-vector 32.0 -17.7535 10.25) (float-vector 32.0 -20.5 5.684342e-14) (float-vector 42.0 -20.5 5.684342e-14) (float-vector 42.0 -17.7535 10.25)))
         (instance face :init :vertices (list (float-vector 32.0 -20.5 5.684342e-14) (float-vector 32.0 -17.7535 -10.25) (float-vector 42.0 -17.7535 -10.25) (float-vector 42.0 -20.5 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 32.0 -17.7535 -10.25) (float-vector 32.0 -10.25 -17.7535) (float-vector 42.0 -10.25 -17.7535) (float-vector 42.0 -17.7535 -10.25)))
         (instance face :init :vertices (list (float-vector 42.0 -10.25 -17.7535) (float-vector 42.0 -3.742329e-15 -20.5) (float-vector 42.0 10.25 -17.7535) (float-vector 42.0 17.7535 -10.25) (float-vector 42.0 20.5 0.0) (float-vector 42.0 17.7535 10.25) (float-vector 42.0 10.25 17.7535) (float-vector 42.0 2.917339e-14 20.5) (float-vector 42.0 -10.25 17.7535) (float-vector 42.0 -17.7535 10.25) (float-vector 42.0 -20.5 5.684342e-14) (float-vector 42.0 -17.7535 -10.25))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 42.0 -2.859152e-15 -16.0) (float-vector 42.0 -8.0 -13.8564) (float-vector 42.0 -13.8564 -8.0) (float-vector 42.0 -16.0 5.684342e-14) (float-vector 42.0 -13.8564 8.0) (float-vector 42.0 -8.0 13.8564) (float-vector 42.0 2.029661e-14 16.0) (float-vector 42.0 8.0 13.8564) (float-vector 42.0 13.8564 8.0) (float-vector 42.0 16.0 0.0) (float-vector 42.0 13.8564 -8.0) (float-vector 42.0 8.0 -13.8564)))
))
         (instance face :init :vertices (list (float-vector 32.0 -10.25 -17.7535) (float-vector 32.0 -3.349806e-15 -20.5) (float-vector 42.0 -3.742329e-15 -20.5) (float-vector 42.0 -10.25 -17.7535)))
         (instance face :init :vertices (list (float-vector 32.0 -3.349806e-15 -20.5) (float-vector 32.0 -10.25 -17.7535) (float-vector 32.0 -17.7535 -10.25) (float-vector 32.0 -20.5 5.684342e-14) (float-vector 32.0 -17.7535 10.25) (float-vector 32.0 -10.25 17.7535) (float-vector 32.0 2.956591e-14 20.5) (float-vector 32.0 10.25 17.7535) (float-vector 32.0 17.7535 10.25) (float-vector 32.0 20.5 0.0) (float-vector 32.0 17.7535 -10.25) (float-vector 32.0 10.25 -17.7535)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 64.5 101.416 -80.0) (float-vector 59.208 101.416 -99.75) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 59.208 101.416 -99.75) (float-vector 44.75 101.416 -114.208) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 44.75 101.416 -114.208) (float-vector 25.0 101.416 -119.5) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 25.0 101.416 -119.5) (float-vector 5.25 101.416 -114.208) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 5.25 101.416 -114.208) (float-vector -9.208 101.416 -99.75) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector -9.208 101.416 -99.75) (float-vector -14.5 101.416 -80.0) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector -14.5 101.416 -80.0) (float-vector -9.208 101.416 -60.25) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector -9.208 101.416 -60.25) (float-vector 5.25 101.416 -45.792) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 5.25 101.416 -45.792) (float-vector 25.0 101.416 -40.5) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 25.0 101.416 -40.5) (float-vector 44.75 101.416 -45.792) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 44.75 101.416 -45.792) (float-vector 59.208 101.416 -60.25) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 59.208 101.416 -60.25) (float-vector 64.5 101.416 -80.0) (float-vector 25.0 112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 84.25 72.5 -114.208) (float-vector 59.208 101.416 -99.75) (float-vector 64.5 101.416 -80.0) (float-vector 93.416 72.5 -80.0)))
         (instance face :init :vertices (list (float-vector 59.208 72.5 -139.25) (float-vector 44.75 101.416 -114.208) (float-vector 59.208 101.416 -99.75) (float-vector 84.25 72.5 -114.208)))
         (instance face :init :vertices (list (float-vector 25.0 72.5 -148.416) (float-vector 25.0 101.416 -119.5) (float-vector 44.75 101.416 -114.208) (float-vector 59.208 72.5 -139.25)))
         (instance face :init :vertices (list (float-vector -9.208 72.5 -139.25) (float-vector 5.25 101.416 -114.208) (float-vector 25.0 101.416 -119.5) (float-vector 25.0 72.5 -148.416)))
         (instance face :init :vertices (list (float-vector -34.25 72.5 -114.208) (float-vector -9.208 101.416 -99.75) (float-vector 5.25 101.416 -114.208) (float-vector -9.208 72.5 -139.25)))
         (instance face :init :vertices (list (float-vector -43.416 72.5 -80.0) (float-vector -14.5 101.416 -80.0) (float-vector -9.208 101.416 -99.75) (float-vector -34.25 72.5 -114.208)))
         (instance face :init :vertices (list (float-vector -34.25 72.5 -45.792) (float-vector -9.208 101.416 -60.25) (float-vector -14.5 101.416 -80.0) (float-vector -43.416 72.5 -80.0)))
         (instance face :init :vertices (list (float-vector -9.208 72.5 -20.75) (float-vector 5.25 101.416 -45.792) (float-vector -9.208 101.416 -60.25) (float-vector -34.25 72.5 -45.792)))
         (instance face :init :vertices (list (float-vector 25.0 72.5 -11.584) (float-vector 25.0 101.416 -40.5) (float-vector 5.25 101.416 -45.792) (float-vector -9.208 72.5 -20.75)))
         (instance face :init :vertices (list (float-vector 59.208 72.5 -20.75) (float-vector 44.75 101.416 -45.792) (float-vector 25.0 101.416 -40.5) (float-vector 25.0 72.5 -11.584)))
         (instance face :init :vertices (list (float-vector 84.25 72.5 -45.792) (float-vector 59.208 101.416 -60.25) (float-vector 44.75 101.416 -45.792) (float-vector 59.208 72.5 -20.75)))
         (instance face :init :vertices (list (float-vector 93.416 72.5 -80.0) (float-vector 64.5 101.416 -80.0) (float-vector 59.208 101.416 -60.25) (float-vector 84.25 72.5 -45.792)))
         (instance face :init :vertices (list (float-vector 93.416 33.0 -119.5) (float-vector 84.25 72.5 -114.208) (float-vector 93.416 72.5 -80.0) (float-vector 104.0 33.0 -80.0)))
         (instance face :init :vertices (list (float-vector 64.5 33.0 -148.416) (float-vector 59.208 72.5 -139.25) (float-vector 84.25 72.5 -114.208) (float-vector 93.416 33.0 -119.5)))
         (instance face :init :vertices (list (float-vector 25.0 33.0 -159.0) (float-vector 25.0 72.5 -148.416) (float-vector 59.208 72.5 -139.25) (float-vector 64.5 33.0 -148.416)))
         (instance face :init :vertices (list (float-vector -14.5 33.0 -148.416) (float-vector -9.208 72.5 -139.25) (float-vector 25.0 72.5 -148.416) (float-vector 25.0 33.0 -159.0)))
         (instance face :init :vertices (list (float-vector -43.416 33.0 -119.5) (float-vector -34.25 72.5 -114.208) (float-vector -9.208 72.5 -139.25) (float-vector -14.5 33.0 -148.416)))
         (instance face :init :vertices (list (float-vector -54.0 33.0 -80.0) (float-vector -43.416 72.5 -80.0) (float-vector -34.25 72.5 -114.208) (float-vector -43.416 33.0 -119.5)))
         (instance face :init :vertices (list (float-vector -43.416 33.0 -40.5) (float-vector -34.25 72.5 -45.792) (float-vector -43.416 72.5 -80.0) (float-vector -54.0 33.0 -80.0)))
         (instance face :init :vertices (list (float-vector -14.5 33.0 -11.584) (float-vector -9.208 72.5 -20.75) (float-vector -34.25 72.5 -45.792) (float-vector -43.416 33.0 -40.5)))
         (instance face :init :vertices (list (float-vector 25.0 33.0 -1.0) (float-vector 25.0 72.5 -11.584) (float-vector -9.208 72.5 -20.75) (float-vector -14.5 33.0 -11.584)))
         (instance face :init :vertices (list (float-vector 64.5 33.0 -11.584) (float-vector 59.208 72.5 -20.75) (float-vector 25.0 72.5 -11.584) (float-vector 25.0 33.0 -1.0)))
         (instance face :init :vertices (list (float-vector 93.416 33.0 -40.5) (float-vector 84.25 72.5 -45.792) (float-vector 59.208 72.5 -20.75) (float-vector 64.5 33.0 -11.584)))
         (instance face :init :vertices (list (float-vector 104.0 33.0 -80.0) (float-vector 93.416 72.5 -80.0) (float-vector 84.25 72.5 -45.792) (float-vector 93.416 33.0 -40.5)))
         (instance face :init :vertices (list (float-vector 93.416 -33.0 -119.5) (float-vector 93.416 33.0 -119.5) (float-vector 104.0 33.0 -80.0) (float-vector 104.0 -33.0 -80.0)))
         (instance face :init :vertices (list (float-vector 64.5 -33.0 -148.416) (float-vector 64.5 33.0 -148.416) (float-vector 93.416 33.0 -119.5) (float-vector 93.416 -33.0 -119.5)))
         (instance face :init :vertices (list (float-vector 25.0 -33.0 -159.0) (float-vector 25.0 33.0 -159.0) (float-vector 64.5 33.0 -148.416) (float-vector 64.5 -33.0 -148.416)))
         (instance face :init :vertices (list (float-vector -14.5 -33.0 -148.416) (float-vector -14.5 33.0 -148.416) (float-vector 25.0 33.0 -159.0) (float-vector 25.0 -33.0 -159.0)))
         (instance face :init :vertices (list (float-vector -43.416 -33.0 -119.5) (float-vector -43.416 33.0 -119.5) (float-vector -14.5 33.0 -148.416) (float-vector -14.5 -33.0 -148.416)))
         (instance face :init :vertices (list (float-vector -54.0 -33.0 -80.0) (float-vector -54.0 33.0 -80.0) (float-vector -43.416 33.0 -119.5) (float-vector -43.416 -33.0 -119.5)))
         (instance face :init :vertices (list (float-vector -43.416 -33.0 -40.5) (float-vector -43.416 33.0 -40.5) (float-vector -54.0 33.0 -80.0) (float-vector -54.0 -33.0 -80.0)))
         (instance face :init :vertices (list (float-vector -14.5 -33.0 -11.584) (float-vector -14.5 33.0 -11.584) (float-vector -43.416 33.0 -40.5) (float-vector -43.416 -33.0 -40.5)))
         (instance face :init :vertices (list (float-vector 25.0 -33.0 -1.0) (float-vector 25.0 33.0 -1.0) (float-vector -14.5 33.0 -11.584) (float-vector -14.5 -33.0 -11.584)))
         (instance face :init :vertices (list (float-vector 64.5 -33.0 -11.584) (float-vector 64.5 33.0 -11.584) (float-vector 25.0 33.0 -1.0) (float-vector 25.0 -33.0 -1.0)))
         (instance face :init :vertices (list (float-vector 93.416 -33.0 -40.5) (float-vector 93.416 33.0 -40.5) (float-vector 64.5 33.0 -11.584) (float-vector 64.5 -33.0 -11.584)))
         (instance face :init :vertices (list (float-vector 104.0 -33.0 -80.0) (float-vector 104.0 33.0 -80.0) (float-vector 93.416 33.0 -40.5) (float-vector 93.416 -33.0 -40.5)))
         (instance face :init :vertices (list (float-vector 84.25 -72.5 -114.208) (float-vector 93.416 -33.0 -119.5) (float-vector 104.0 -33.0 -80.0) (float-vector 93.416 -72.5 -80.0)))
         (instance face :init :vertices (list (float-vector 59.208 -72.5 -139.25) (float-vector 64.5 -33.0 -148.416) (float-vector 93.416 -33.0 -119.5) (float-vector 84.25 -72.5 -114.208)))
         (instance face :init :vertices (list (float-vector 25.0 -72.5 -148.416) (float-vector 25.0 -33.0 -159.0) (float-vector 64.5 -33.0 -148.416) (float-vector 59.208 -72.5 -139.25)))
         (instance face :init :vertices (list (float-vector -9.208 -72.5 -139.25) (float-vector -14.5 -33.0 -148.416) (float-vector 25.0 -33.0 -159.0) (float-vector 25.0 -72.5 -148.416)))
         (instance face :init :vertices (list (float-vector -34.25 -72.5 -114.208) (float-vector -43.416 -33.0 -119.5) (float-vector -14.5 -33.0 -148.416) (float-vector -9.208 -72.5 -139.25)))
         (instance face :init :vertices (list (float-vector -43.416 -72.5 -80.0) (float-vector -54.0 -33.0 -80.0) (float-vector -43.416 -33.0 -119.5) (float-vector -34.25 -72.5 -114.208)))
         (instance face :init :vertices (list (float-vector -34.25 -72.5 -45.792) (float-vector -43.416 -33.0 -40.5) (float-vector -54.0 -33.0 -80.0) (float-vector -43.416 -72.5 -80.0)))
         (instance face :init :vertices (list (float-vector -9.208 -72.5 -20.75) (float-vector -14.5 -33.0 -11.584) (float-vector -43.416 -33.0 -40.5) (float-vector -34.25 -72.5 -45.792)))
         (instance face :init :vertices (list (float-vector 25.0 -72.5 -11.584) (float-vector 25.0 -33.0 -1.0) (float-vector -14.5 -33.0 -11.584) (float-vector -9.208 -72.5 -20.75)))
         (instance face :init :vertices (list (float-vector 59.208 -72.5 -20.75) (float-vector 64.5 -33.0 -11.584) (float-vector 25.0 -33.0 -1.0) (float-vector 25.0 -72.5 -11.584)))
         (instance face :init :vertices (list (float-vector 84.25 -72.5 -45.792) (float-vector 93.416 -33.0 -40.5) (float-vector 64.5 -33.0 -11.584) (float-vector 59.208 -72.5 -20.75)))
         (instance face :init :vertices (list (float-vector 93.416 -72.5 -80.0) (float-vector 104.0 -33.0 -80.0) (float-vector 93.416 -33.0 -40.5) (float-vector 84.25 -72.5 -45.792)))
         (instance face :init :vertices (list (float-vector 59.208 -101.416 -99.75) (float-vector 84.25 -72.5 -114.208) (float-vector 93.416 -72.5 -80.0) (float-vector 64.5 -101.416 -80.0)))
         (instance face :init :vertices (list (float-vector 44.75 -101.416 -114.208) (float-vector 59.208 -72.5 -139.25) (float-vector 84.25 -72.5 -114.208) (float-vector 59.208 -101.416 -99.75)))
         (instance face :init :vertices (list (float-vector 25.0 -101.416 -119.5) (float-vector 25.0 -72.5 -148.416) (float-vector 59.208 -72.5 -139.25) (float-vector 44.75 -101.416 -114.208)))
         (instance face :init :vertices (list (float-vector 5.25 -101.416 -114.208) (float-vector -9.208 -72.5 -139.25) (float-vector 25.0 -72.5 -148.416) (float-vector 25.0 -101.416 -119.5)))
         (instance face :init :vertices (list (float-vector -9.208 -101.416 -99.75) (float-vector -34.25 -72.5 -114.208) (float-vector -9.208 -72.5 -139.25) (float-vector 5.25 -101.416 -114.208)))
         (instance face :init :vertices (list (float-vector -14.5 -101.416 -80.0) (float-vector -43.416 -72.5 -80.0) (float-vector -34.25 -72.5 -114.208) (float-vector -9.208 -101.416 -99.75)))
         (instance face :init :vertices (list (float-vector -9.208 -101.416 -60.25) (float-vector -34.25 -72.5 -45.792) (float-vector -43.416 -72.5 -80.0) (float-vector -14.5 -101.416 -80.0)))
         (instance face :init :vertices (list (float-vector 5.25 -101.416 -45.792) (float-vector -9.208 -72.5 -20.75) (float-vector -34.25 -72.5 -45.792) (float-vector -9.208 -101.416 -60.25)))
         (instance face :init :vertices (list (float-vector 25.0 -101.416 -40.5) (float-vector 25.0 -72.5 -11.584) (float-vector -9.208 -72.5 -20.75) (float-vector 5.25 -101.416 -45.792)))
         (instance face :init :vertices (list (float-vector 44.75 -101.416 -45.792) (float-vector 59.208 -72.5 -20.75) (float-vector 25.0 -72.5 -11.584) (float-vector 25.0 -101.416 -40.5)))
         (instance face :init :vertices (list (float-vector 59.208 -101.416 -60.25) (float-vector 84.25 -72.5 -45.792) (float-vector 59.208 -72.5 -20.75) (float-vector 44.75 -101.416 -45.792)))
         (instance face :init :vertices (list (float-vector 64.5 -101.416 -80.0) (float-vector 93.416 -72.5 -80.0) (float-vector 84.25 -72.5 -45.792) (float-vector 59.208 -101.416 -60.25)))
         (instance face :init :vertices (list (float-vector 59.208 -101.416 -99.75) (float-vector 64.5 -101.416 -80.0) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 64.5 -101.416 -80.0) (float-vector 59.208 -101.416 -60.25) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 59.208 -101.416 -60.25) (float-vector 44.75 -101.416 -45.792) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 44.75 -101.416 -45.792) (float-vector 25.0 -101.416 -40.5) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 25.0 -101.416 -40.5) (float-vector 5.25 -101.416 -45.792) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 5.25 -101.416 -45.792) (float-vector -9.208 -101.416 -60.25) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector -9.208 -101.416 -60.25) (float-vector -14.5 -101.416 -80.0) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector -14.5 -101.416 -80.0) (float-vector -9.208 -101.416 -99.75) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector -9.208 -101.416 -99.75) (float-vector 5.25 -101.416 -114.208) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 5.25 -101.416 -114.208) (float-vector 25.0 -101.416 -119.5) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 25.0 -101.416 -119.5) (float-vector 44.75 -101.416 -114.208) (float-vector 25.0 -112.0 -80.0)))
         (instance face :init :vertices (list (float-vector 44.75 -101.416 -114.208) (float-vector 59.208 -101.416 -99.75) (float-vector 25.0 -112.0 -80.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 70.0 10.0 -80.0) (float-vector 70.0 10.0 -60.0) (float-vector 70.0 -10.0 -60.0) (float-vector 70.0 -10.0 -80.0)))
         (instance face :init :vertices (list (float-vector 50.0 10.0 -60.0) (float-vector 50.0 10.0 -80.0) (float-vector 50.0 -10.0 -80.0) (float-vector 50.0 -10.0 -60.0)))
         (instance face :init :vertices (list (float-vector 70.0 10.0 -80.0) (float-vector 50.0 10.0 -80.0) (float-vector 50.0 10.0 -60.0) (float-vector 70.0 10.0 -60.0)))
         (instance face :init :vertices (list (float-vector 70.0 -10.0 -80.0) (float-vector 50.0 -10.0 -80.0) (float-vector 50.0 10.0 -80.0) (float-vector 70.0 10.0 -80.0)))
         (instance face :init :vertices (list (float-vector 70.0 -10.0 -60.0) (float-vector 50.0 -10.0 -60.0) (float-vector 50.0 -10.0 -80.0) (float-vector 70.0 -10.0 -80.0)))
         (instance face :init :vertices (list (float-vector 70.0 10.0 -60.0) (float-vector 50.0 10.0 -60.0) (float-vector 50.0 -10.0 -60.0) (float-vector 70.0 -10.0 -60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 62.2123 63.968 -80.0) (float-vector 62.2123 63.968 -60.0) (float-vector 73.968 47.7877 -60.0) (float-vector 73.968 47.7877 -80.0)))
         (instance face :init :vertices (list (float-vector 46.032 52.2123 -60.0) (float-vector 46.032 52.2123 -80.0) (float-vector 57.7877 36.032 -80.0) (float-vector 57.7877 36.032 -60.0)))
         (instance face :init :vertices (list (float-vector 62.2123 63.968 -80.0) (float-vector 46.032 52.2123 -80.0) (float-vector 46.032 52.2123 -60.0) (float-vector 62.2123 63.968 -60.0)))
         (instance face :init :vertices (list (float-vector 73.968 47.7877 -80.0) (float-vector 57.7877 36.032 -80.0) (float-vector 46.032 52.2123 -80.0) (float-vector 62.2123 63.968 -80.0)))
         (instance face :init :vertices (list (float-vector 73.968 47.7877 -60.0) (float-vector 57.7877 36.032 -60.0) (float-vector 57.7877 36.032 -80.0) (float-vector 73.968 47.7877 -80.0)))
         (instance face :init :vertices (list (float-vector 62.2123 63.968 -60.0) (float-vector 46.032 52.2123 -60.0) (float-vector 57.7877 36.032 -60.0) (float-vector 73.968 47.7877 -60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 73.968 -47.7877 -80.0) (float-vector 73.968 -47.7877 -60.0) (float-vector 62.2123 -63.968 -60.0) (float-vector 62.2123 -63.968 -80.0)))
         (instance face :init :vertices (list (float-vector 57.7877 -36.032 -60.0) (float-vector 57.7877 -36.032 -80.0) (float-vector 46.032 -52.2123 -80.0) (float-vector 46.032 -52.2123 -60.0)))
         (instance face :init :vertices (list (float-vector 73.968 -47.7877 -80.0) (float-vector 57.7877 -36.032 -80.0) (float-vector 57.7877 -36.032 -60.0) (float-vector 73.968 -47.7877 -60.0)))
         (instance face :init :vertices (list (float-vector 62.2123 -63.968 -80.0) (float-vector 46.032 -52.2123 -80.0) (float-vector 57.7877 -36.032 -80.0) (float-vector 73.968 -47.7877 -80.0)))
         (instance face :init :vertices (list (float-vector 62.2123 -63.968 -60.0) (float-vector 46.032 -52.2123 -60.0) (float-vector 46.032 -52.2123 -80.0) (float-vector 62.2123 -63.968 -80.0)))
         (instance face :init :vertices (list (float-vector 73.968 -47.7877 -60.0) (float-vector 57.7877 -36.032 -60.0) (float-vector 46.032 -52.2123 -60.0) (float-vector 62.2123 -63.968 -60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -50.0 50.0 -40.0) (float-vector -50.0 50.0 -60.0) (float-vector -50.0 30.0 -60.0) (float-vector -50.0 30.0 -40.0)))
         (instance face :init :vertices (list (float-vector -30.0 50.0 -60.0) (float-vector -30.0 50.0 -40.0) (float-vector -30.0 30.0 -40.0) (float-vector -30.0 30.0 -60.0)))
         (instance face :init :vertices (list (float-vector -50.0 50.0 -40.0) (float-vector -30.0 50.0 -40.0) (float-vector -30.0 50.0 -60.0) (float-vector -50.0 50.0 -60.0)))
         (instance face :init :vertices (list (float-vector -50.0 30.0 -40.0) (float-vector -30.0 30.0 -40.0) (float-vector -30.0 50.0 -40.0) (float-vector -50.0 50.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 30.0 -60.0) (float-vector -30.0 30.0 -60.0) (float-vector -30.0 30.0 -40.0) (float-vector -50.0 30.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 50.0 -60.0) (float-vector -30.0 50.0 -60.0) (float-vector -30.0 30.0 -60.0) (float-vector -50.0 30.0 -60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -40.0) (float-vector -50.0 -30.0 -60.0) (float-vector -50.0 -50.0 -60.0) (float-vector -50.0 -50.0 -40.0)))
         (instance face :init :vertices (list (float-vector -30.0 -30.0 -60.0) (float-vector -30.0 -30.0 -40.0) (float-vector -30.0 -50.0 -40.0) (float-vector -30.0 -50.0 -60.0)))
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -40.0) (float-vector -30.0 -30.0 -40.0) (float-vector -30.0 -30.0 -60.0) (float-vector -50.0 -30.0 -60.0)))
         (instance face :init :vertices (list (float-vector -50.0 -50.0 -40.0) (float-vector -30.0 -50.0 -40.0) (float-vector -30.0 -30.0 -40.0) (float-vector -50.0 -30.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 -50.0 -60.0) (float-vector -30.0 -50.0 -60.0) (float-vector -30.0 -50.0 -40.0) (float-vector -50.0 -50.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -60.0) (float-vector -30.0 -30.0 -60.0) (float-vector -30.0 -50.0 -60.0) (float-vector -50.0 -50.0 -60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -50.0 10.0 -70.0) (float-vector -50.0 10.0 -90.0) (float-vector -50.0 -10.0 -90.0) (float-vector -50.0 -10.0 -70.0)))
         (instance face :init :vertices (list (float-vector -30.0 10.0 -90.0) (float-vector -30.0 10.0 -70.0) (float-vector -30.0 -10.0 -70.0) (float-vector -30.0 -10.0 -90.0)))
         (instance face :init :vertices (list (float-vector -50.0 10.0 -70.0) (float-vector -30.0 10.0 -70.0) (float-vector -30.0 10.0 -90.0) (float-vector -50.0 10.0 -90.0)))
         (instance face :init :vertices (list (float-vector -50.0 -10.0 -70.0) (float-vector -30.0 -10.0 -70.0) (float-vector -30.0 10.0 -70.0) (float-vector -50.0 10.0 -70.0)))
         (instance face :init :vertices (list (float-vector -50.0 -10.0 -90.0) (float-vector -30.0 -10.0 -90.0) (float-vector -30.0 -10.0 -70.0) (float-vector -50.0 -10.0 -70.0)))
         (instance face :init :vertices (list (float-vector -50.0 10.0 -90.0) (float-vector -30.0 10.0 -90.0) (float-vector -30.0 -10.0 -90.0) (float-vector -50.0 -10.0 -90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -50.0 50.0 -90.0) (float-vector -50.0 50.0 -110.0) (float-vector -50.0 30.0 -110.0) (float-vector -50.0 30.0 -90.0)))
         (instance face :init :vertices (list (float-vector -30.0 50.0 -110.0) (float-vector -30.0 50.0 -90.0) (float-vector -30.0 30.0 -90.0) (float-vector -30.0 30.0 -110.0)))
         (instance face :init :vertices (list (float-vector -50.0 50.0 -90.0) (float-vector -30.0 50.0 -90.0) (float-vector -30.0 50.0 -110.0) (float-vector -50.0 50.0 -110.0)))
         (instance face :init :vertices (list (float-vector -50.0 30.0 -90.0) (float-vector -30.0 30.0 -90.0) (float-vector -30.0 50.0 -90.0) (float-vector -50.0 50.0 -90.0)))
         (instance face :init :vertices (list (float-vector -50.0 30.0 -110.0) (float-vector -30.0 30.0 -110.0) (float-vector -30.0 30.0 -90.0) (float-vector -50.0 30.0 -90.0)))
         (instance face :init :vertices (list (float-vector -50.0 50.0 -110.0) (float-vector -30.0 50.0 -110.0) (float-vector -30.0 30.0 -110.0) (float-vector -50.0 30.0 -110.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -90.0) (float-vector -50.0 -30.0 -110.0) (float-vector -50.0 -50.0 -110.0) (float-vector -50.0 -50.0 -90.0)))
         (instance face :init :vertices (list (float-vector -30.0 -30.0 -110.0) (float-vector -30.0 -30.0 -90.0) (float-vector -30.0 -50.0 -90.0) (float-vector -30.0 -50.0 -110.0)))
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -90.0) (float-vector -30.0 -30.0 -90.0) (float-vector -30.0 -30.0 -110.0) (float-vector -50.0 -30.0 -110.0)))
         (instance face :init :vertices (list (float-vector -50.0 -50.0 -90.0) (float-vector -30.0 -50.0 -90.0) (float-vector -30.0 -30.0 -90.0) (float-vector -50.0 -30.0 -90.0)))
         (instance face :init :vertices (list (float-vector -50.0 -50.0 -110.0) (float-vector -30.0 -50.0 -110.0) (float-vector -30.0 -50.0 -90.0) (float-vector -50.0 -50.0 -90.0)))
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -110.0) (float-vector -30.0 -30.0 -110.0) (float-vector -30.0 -50.0 -110.0) (float-vector -50.0 -50.0 -110.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 70.0 -80.0) (float-vector -10.0 70.0 -80.0) (float-vector -10.0 70.0 -60.0) (float-vector 10.0 70.0 -60.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -80.0) (float-vector 10.0 50.0 -80.0) (float-vector 10.0 50.0 -60.0) (float-vector -10.0 50.0 -60.0)))
         (instance face :init :vertices (list (float-vector 10.0 70.0 -80.0) (float-vector 10.0 50.0 -80.0) (float-vector -10.0 50.0 -80.0) (float-vector -10.0 70.0 -80.0)))
         (instance face :init :vertices (list (float-vector 10.0 70.0 -60.0) (float-vector 10.0 50.0 -60.0) (float-vector 10.0 50.0 -80.0) (float-vector 10.0 70.0 -80.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 -60.0) (float-vector -10.0 50.0 -60.0) (float-vector 10.0 50.0 -60.0) (float-vector 10.0 70.0 -60.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 -80.0) (float-vector -10.0 50.0 -80.0) (float-vector -10.0 50.0 -60.0) (float-vector -10.0 70.0 -60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -70.0 -60.0) (float-vector -10.0 -70.0 -60.0) (float-vector -10.0 -70.0 -80.0) (float-vector 10.0 -70.0 -80.0)))
         (instance face :init :vertices (list (float-vector -10.0 -50.0 -60.0) (float-vector 10.0 -50.0 -60.0) (float-vector 10.0 -50.0 -80.0) (float-vector -10.0 -50.0 -80.0)))
         (instance face :init :vertices (list (float-vector 10.0 -70.0 -60.0) (float-vector 10.0 -50.0 -60.0) (float-vector -10.0 -50.0 -60.0) (float-vector -10.0 -70.0 -60.0)))
         (instance face :init :vertices (list (float-vector 10.0 -70.0 -80.0) (float-vector 10.0 -50.0 -80.0) (float-vector 10.0 -50.0 -60.0) (float-vector 10.0 -70.0 -60.0)))
         (instance face :init :vertices (list (float-vector -10.0 -70.0 -80.0) (float-vector -10.0 -50.0 -80.0) (float-vector 10.0 -50.0 -80.0) (float-vector 10.0 -70.0 -80.0)))
         (instance face :init :vertices (list (float-vector -10.0 -70.0 -60.0) (float-vector -10.0 -50.0 -60.0) (float-vector -10.0 -50.0 -80.0) (float-vector -10.0 -70.0 -80.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :papayawhip)
     (send (elt bc 3) :set-color :linen)
     (send (elt bc 4) :set-color :linen)
     (send (elt bc 5) :set-color :linen)
     (send (elt bc 6) :set-color :linen)
     (send (elt bc 7) :set-color :linen)
     (send (elt bc 8) :set-color :linen)
     (send (elt bc 9) :set-color :linen)
     (send (elt bc 10) :set-color :linen)
     (send (elt bc 11) :set-color :linen)
     (send (elt bc 12) :set-color :linen)
     (setq blink21 (instance bodyset-link :init (make-cascoords) :bodies bc :name :torso-lowertorso :weight 226.986 :centroid (float-vector 39.1908 2.863650e-15 -3.6165) :inertia-tensor #2f((353.957 -1.405774e-12 1775.35) (-1.405774e-12 9283.85 2.794818e-13) (1775.35 2.794818e-13 8930.89))))

     ;; definition of :torso-middletorso
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.5 31.0 -43.1) (float-vector -14.5 31.0 -43.1) (float-vector -20.1 31.0 -37.6) (float-vector -20.1 31.0 10.0) (float-vector -14.5 31.0 18.0) (float-vector 14.5 31.0 18.0) (float-vector 20.1 31.0 10.0) (float-vector 20.1 31.0 -37.6)))
         (instance face :init :vertices (list (float-vector -14.5 -10.0 -43.1) (float-vector 14.5 -10.0 -43.1) (float-vector 20.1 -10.0 -37.6) (float-vector 20.1 -10.0 10.0) (float-vector 14.5 -10.0 18.0) (float-vector -14.5 -10.0 18.0) (float-vector -20.1 -10.0 10.0) (float-vector -20.1 -10.0 -37.6)))
         (instance face :init :vertices (list (float-vector 14.5 31.0 -43.1) (float-vector 14.5 -10.0 -43.1) (float-vector -14.5 -10.0 -43.1) (float-vector -14.5 31.0 -43.1)))
         (instance face :init :vertices (list (float-vector 20.1 31.0 -37.6) (float-vector 20.1 -10.0 -37.6) (float-vector 14.5 -10.0 -43.1) (float-vector 14.5 31.0 -43.1)))
         (instance face :init :vertices (list (float-vector 20.1 31.0 10.0) (float-vector 20.1 -10.0 10.0) (float-vector 20.1 -10.0 -37.6) (float-vector 20.1 31.0 -37.6)))
         (instance face :init :vertices (list (float-vector 14.5 31.0 18.0) (float-vector 14.5 -10.0 18.0) (float-vector 20.1 -10.0 10.0) (float-vector 20.1 31.0 10.0)))
         (instance face :init :vertices (list (float-vector -14.5 31.0 18.0) (float-vector -14.5 -10.0 18.0) (float-vector 14.5 -10.0 18.0) (float-vector 14.5 31.0 18.0)))
         (instance face :init :vertices (list (float-vector -20.1 31.0 10.0) (float-vector -20.1 -10.0 10.0) (float-vector -14.5 -10.0 18.0) (float-vector -14.5 31.0 18.0)))
         (instance face :init :vertices (list (float-vector -20.1 31.0 -37.6) (float-vector -20.1 -10.0 -37.6) (float-vector -20.1 -10.0 10.0) (float-vector -20.1 31.0 10.0)))
         (instance face :init :vertices (list (float-vector -14.5 31.0 -43.1) (float-vector -14.5 -10.0 -43.1) (float-vector -20.1 -10.0 -37.6) (float-vector -20.1 31.0 -37.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.5 -43.2 -33.6) (float-vector 15.5 -18.8 -33.6) (float-vector 15.5 -13.2 -28.0) (float-vector 15.5 -13.2 11.0) (float-vector 15.5 -18.8 17.0) (float-vector 15.5 -43.2 17.0) (float-vector 15.5 -48.8 11.0) (float-vector 15.5 -48.8 -28.0)))
         (instance face :init :vertices (list (float-vector -20.0 -18.8 -33.6) (float-vector -20.0 -43.2 -33.6) (float-vector -20.0 -48.8 -28.0) (float-vector -20.0 -48.8 11.0) (float-vector -20.0 -43.2 17.0) (float-vector -20.0 -18.8 17.0) (float-vector -20.0 -13.2 11.0) (float-vector -20.0 -13.2 -28.0)))
         (instance face :init :vertices (list (float-vector 15.5 -43.2 -33.6) (float-vector -20.0 -43.2 -33.6) (float-vector -20.0 -18.8 -33.6) (float-vector 15.5 -18.8 -33.6)))
         (instance face :init :vertices (list (float-vector 15.5 -48.8 -28.0) (float-vector -20.0 -48.8 -28.0) (float-vector -20.0 -43.2 -33.6) (float-vector 15.5 -43.2 -33.6)))
         (instance face :init :vertices (list (float-vector 15.5 -48.8 11.0) (float-vector -20.0 -48.8 11.0) (float-vector -20.0 -48.8 -28.0) (float-vector 15.5 -48.8 -28.0)))
         (instance face :init :vertices (list (float-vector 15.5 -43.2 17.0) (float-vector -20.0 -43.2 17.0) (float-vector -20.0 -48.8 11.0) (float-vector 15.5 -48.8 11.0)))
         (instance face :init :vertices (list (float-vector 15.5 -18.8 17.0) (float-vector -20.0 -18.8 17.0) (float-vector -20.0 -43.2 17.0) (float-vector 15.5 -43.2 17.0)))
         (instance face :init :vertices (list (float-vector 15.5 -13.2 11.0) (float-vector -20.0 -13.2 11.0) (float-vector -20.0 -18.8 17.0) (float-vector 15.5 -18.8 17.0)))
         (instance face :init :vertices (list (float-vector 15.5 -13.2 -28.0) (float-vector -20.0 -13.2 -28.0) (float-vector -20.0 -13.2 11.0) (float-vector 15.5 -13.2 11.0)))
         (instance face :init :vertices (list (float-vector 15.5 -18.8 -33.6) (float-vector -20.0 -18.8 -33.6) (float-vector -20.0 -13.2 -28.0) (float-vector 15.5 -13.2 -28.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.0 50.0 5.0) (float-vector 16.0 38.0 5.0) (float-vector 13.8564 38.0 -3.0) (float-vector 13.8564 50.0 -3.0)))
         (instance face :init :vertices (list (float-vector 13.8564 38.0 -3.0) (float-vector 8.0 38.0 -8.85641) (float-vector 8.0 50.0 -8.85641) (float-vector 13.8564 50.0 -3.0)))
         (instance face :init :vertices (list (float-vector 8.0 38.0 -8.85641) (float-vector 7.993606e-15 38.0 -11.0) (float-vector 7.993606e-15 50.0 -11.0) (float-vector 8.0 50.0 -8.85641)))
         (instance face :init :vertices (list (float-vector 7.993606e-15 38.0 -11.0) (float-vector -8.0 38.0 -8.85641) (float-vector -8.0 50.0 -8.85641) (float-vector 7.993606e-15 50.0 -11.0)))
         (instance face :init :vertices (list (float-vector -8.0 38.0 -8.85641) (float-vector -13.8564 38.0 -3.0) (float-vector -13.8564 50.0 -3.0) (float-vector -8.0 50.0 -8.85641)))
         (instance face :init :vertices (list (float-vector -13.8564 38.0 -3.0) (float-vector -16.0 38.0 5.0) (float-vector -16.0 50.0 5.0) (float-vector -13.8564 50.0 -3.0)))
         (instance face :init :vertices (list (float-vector -16.0 38.0 5.0) (float-vector -13.8564 38.0 13.0) (float-vector -13.8564 50.0 13.0) (float-vector -16.0 50.0 5.0)))
         (instance face :init :vertices (list (float-vector -13.8564 38.0 13.0) (float-vector -8.0 38.0 18.8564) (float-vector -8.0 50.0 18.8564) (float-vector -13.8564 50.0 13.0)))
         (instance face :init :vertices (list (float-vector -8.0 38.0 18.8564) (float-vector -3.375078e-14 38.0 21.0) (float-vector -3.375078e-14 50.0 21.0) (float-vector -8.0 50.0 18.8564)))
         (instance face :init :vertices (list (float-vector -3.375078e-14 38.0 21.0) (float-vector 8.0 38.0 18.8564) (float-vector 8.0 50.0 18.8564) (float-vector -3.375078e-14 50.0 21.0)))
         (instance face :init :vertices (list (float-vector 8.0 38.0 18.8564) (float-vector 13.8564 38.0 13.0) (float-vector 13.8564 50.0 13.0) (float-vector 8.0 50.0 18.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 50.0 13.0) (float-vector 16.0 50.0 5.0) (float-vector 13.8564 50.0 -3.0) (float-vector 8.0 50.0 -8.85641) (float-vector 7.993606e-15 50.0 -11.0) (float-vector -8.0 50.0 -8.85641) (float-vector -13.8564 50.0 -3.0) (float-vector -16.0 50.0 5.0) (float-vector -13.8564 50.0 13.0) (float-vector -8.0 50.0 18.8564) (float-vector -3.375078e-14 50.0 21.0) (float-vector 8.0 50.0 18.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 38.0 13.0) (float-vector 16.0 38.0 5.0) (float-vector 16.0 50.0 5.0) (float-vector 13.8564 50.0 13.0)))
         (instance face :init :vertices (list (float-vector 20.5 38.0 5.0) (float-vector 20.5 31.0 5.0) (float-vector 17.7535 31.0 -5.25) (float-vector 17.7535 38.0 -5.25)))
         (instance face :init :vertices (list (float-vector 17.7535 31.0 -5.25) (float-vector 10.25 31.0 -12.7535) (float-vector 10.25 38.0 -12.7535) (float-vector 17.7535 38.0 -5.25)))
         (instance face :init :vertices (list (float-vector 10.25 31.0 -12.7535) (float-vector 1.421085e-14 31.0 -15.5) (float-vector 1.332268e-14 38.0 -15.5) (float-vector 10.25 38.0 -12.7535)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 31.0 -15.5) (float-vector -10.25 31.0 -12.7535) (float-vector -10.25 38.0 -12.7535) (float-vector 1.332268e-14 38.0 -15.5)))
         (instance face :init :vertices (list (float-vector -10.25 31.0 -12.7535) (float-vector -17.7535 31.0 -5.25) (float-vector -17.7535 38.0 -5.25) (float-vector -10.25 38.0 -12.7535)))
         (instance face :init :vertices (list (float-vector -17.7535 31.0 -5.25) (float-vector -20.5 31.0 5.0) (float-vector -20.5 38.0 5.0) (float-vector -17.7535 38.0 -5.25)))
         (instance face :init :vertices (list (float-vector -20.5 31.0 5.0) (float-vector -17.7535 31.0 15.25) (float-vector -17.7535 38.0 15.25) (float-vector -20.5 38.0 5.0)))
         (instance face :init :vertices (list (float-vector -17.7535 31.0 15.25) (float-vector -10.25 31.0 22.7535) (float-vector -10.25 38.0 22.7535) (float-vector -17.7535 38.0 15.25)))
         (instance face :init :vertices (list (float-vector -10.25 31.0 22.7535) (float-vector -4.440892e-14 31.0 25.5) (float-vector -4.440892e-14 38.0 25.5) (float-vector -10.25 38.0 22.7535)))
         (instance face :init :vertices (list (float-vector -4.440892e-14 31.0 25.5) (float-vector 10.25 31.0 22.7535) (float-vector 10.25 38.0 22.7535) (float-vector -4.440892e-14 38.0 25.5)))
         (instance face :init :vertices (list (float-vector 10.25 31.0 22.7535) (float-vector 17.7535 31.0 15.25) (float-vector 17.7535 38.0 15.25) (float-vector 10.25 38.0 22.7535)))
         (instance face :init :vertices (list (float-vector 17.7535 38.0 15.25) (float-vector 20.5 38.0 5.0) (float-vector 17.7535 38.0 -5.25) (float-vector 10.25 38.0 -12.7535) (float-vector 1.332268e-14 38.0 -15.5) (float-vector -10.25 38.0 -12.7535) (float-vector -17.7535 38.0 -5.25) (float-vector -20.5 38.0 5.0) (float-vector -17.7535 38.0 15.25) (float-vector -10.25 38.0 22.7535) (float-vector -4.440892e-14 38.0 25.5) (float-vector 10.25 38.0 22.7535))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 16.0 38.0 5.0) (float-vector 13.8564 38.0 13.0) (float-vector 8.0 38.0 18.8564) (float-vector -3.375078e-14 38.0 21.0) (float-vector -8.0 38.0 18.8564) (float-vector -13.8564 38.0 13.0) (float-vector -16.0 38.0 5.0) (float-vector -13.8564 38.0 -3.0) (float-vector -8.0 38.0 -8.85641) (float-vector 7.993606e-15 38.0 -11.0) (float-vector 8.0 38.0 -8.85641) (float-vector 13.8564 38.0 -3.0)))
))
         (instance face :init :vertices (list (float-vector 17.7535 31.0 15.25) (float-vector 20.5 31.0 5.0) (float-vector 20.5 38.0 5.0) (float-vector 17.7535 38.0 15.25)))
         (instance face :init :vertices (list (float-vector 20.5 31.0 5.0) (float-vector 17.7535 31.0 15.25) (float-vector 10.25 31.0 22.7535) (float-vector -4.440892e-14 31.0 25.5) (float-vector -10.25 31.0 22.7535) (float-vector -17.7535 31.0 15.25) (float-vector -20.5 31.0 5.0) (float-vector -17.7535 31.0 -5.25) (float-vector -10.25 31.0 -12.7535) (float-vector 1.421085e-14 31.0 -15.5) (float-vector 10.25 31.0 -12.7535) (float-vector 17.7535 31.0 -5.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 63.25 78.9009 -15.0) (float-vector 58.1255 78.9009 -34.125) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 58.1255 78.9009 -34.125) (float-vector 44.125 78.9009 -48.1255) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 44.125 78.9009 -48.1255) (float-vector 25.0 78.9009 -53.25) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 25.0 78.9009 -53.25) (float-vector 5.875 78.9009 -48.1255) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 5.875 78.9009 -48.1255) (float-vector -8.12547 78.9009 -34.125) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector -8.12547 78.9009 -34.125) (float-vector -13.25 78.9009 -15.0) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector -13.25 78.9009 -15.0) (float-vector -8.12547 78.9009 4.125) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector -8.12547 78.9009 4.125) (float-vector 5.875 78.9009 18.1255) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 5.875 78.9009 18.1255) (float-vector 25.0 78.9009 23.25) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 25.0 78.9009 23.25) (float-vector 44.125 78.9009 18.1255) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 44.125 78.9009 18.1255) (float-vector 58.1255 78.9009 4.125) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 58.1255 78.9009 4.125) (float-vector 63.25 78.9009 -15.0) (float-vector 25.0 89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 82.375 50.9 -48.1255) (float-vector 58.1255 78.9009 -34.125) (float-vector 63.25 78.9009 -15.0) (float-vector 91.2509 50.9 -15.0)))
         (instance face :init :vertices (list (float-vector 58.1255 50.9 -72.375) (float-vector 44.125 78.9009 -48.1255) (float-vector 58.1255 78.9009 -34.125) (float-vector 82.375 50.9 -48.1255)))
         (instance face :init :vertices (list (float-vector 25.0 50.9 -81.2509) (float-vector 25.0 78.9009 -53.25) (float-vector 44.125 78.9009 -48.1255) (float-vector 58.1255 50.9 -72.375)))
         (instance face :init :vertices (list (float-vector -8.12547 50.9 -72.375) (float-vector 5.875 78.9009 -48.1255) (float-vector 25.0 78.9009 -53.25) (float-vector 25.0 50.9 -81.2509)))
         (instance face :init :vertices (list (float-vector -32.375 50.9 -48.1255) (float-vector -8.12547 78.9009 -34.125) (float-vector 5.875 78.9009 -48.1255) (float-vector -8.12547 50.9 -72.375)))
         (instance face :init :vertices (list (float-vector -41.2509 50.9 -15.0) (float-vector -13.25 78.9009 -15.0) (float-vector -8.12547 78.9009 -34.125) (float-vector -32.375 50.9 -48.1255)))
         (instance face :init :vertices (list (float-vector -32.375 50.9 18.1255) (float-vector -8.12547 78.9009 4.125) (float-vector -13.25 78.9009 -15.0) (float-vector -41.2509 50.9 -15.0)))
         (instance face :init :vertices (list (float-vector -8.12547 50.9 42.375) (float-vector 5.875 78.9009 18.1255) (float-vector -8.12547 78.9009 4.125) (float-vector -32.375 50.9 18.1255)))
         (instance face :init :vertices (list (float-vector 25.0 50.9 51.2509) (float-vector 25.0 78.9009 23.25) (float-vector 5.875 78.9009 18.1255) (float-vector -8.12547 50.9 42.375)))
         (instance face :init :vertices (list (float-vector 58.1255 50.9 42.375) (float-vector 44.125 78.9009 18.1255) (float-vector 25.0 78.9009 23.25) (float-vector 25.0 50.9 51.2509)))
         (instance face :init :vertices (list (float-vector 82.375 50.9 18.1255) (float-vector 58.1255 78.9009 4.125) (float-vector 44.125 78.9009 18.1255) (float-vector 58.1255 50.9 42.375)))
         (instance face :init :vertices (list (float-vector 91.2509 50.9 -15.0) (float-vector 63.25 78.9009 -15.0) (float-vector 58.1255 78.9009 4.125) (float-vector 82.375 50.9 18.1255)))
         (instance face :init :vertices (list (float-vector 91.2509 12.65 -53.25) (float-vector 82.375 50.9 -48.1255) (float-vector 91.2509 50.9 -15.0) (float-vector 101.5 12.65 -15.0)))
         (instance face :init :vertices (list (float-vector 63.25 12.65 -81.2509) (float-vector 58.1255 50.9 -72.375) (float-vector 82.375 50.9 -48.1255) (float-vector 91.2509 12.65 -53.25)))
         (instance face :init :vertices (list (float-vector 25.0 12.65 -91.5) (float-vector 25.0 50.9 -81.2509) (float-vector 58.1255 50.9 -72.375) (float-vector 63.25 12.65 -81.2509)))
         (instance face :init :vertices (list (float-vector -13.25 12.65 -81.2509) (float-vector -8.12547 50.9 -72.375) (float-vector 25.0 50.9 -81.2509) (float-vector 25.0 12.65 -91.5)))
         (instance face :init :vertices (list (float-vector -41.2509 12.65 -53.25) (float-vector -32.375 50.9 -48.1255) (float-vector -8.12547 50.9 -72.375) (float-vector -13.25 12.65 -81.2509)))
         (instance face :init :vertices (list (float-vector -51.5 12.65 -15.0) (float-vector -41.2509 50.9 -15.0) (float-vector -32.375 50.9 -48.1255) (float-vector -41.2509 12.65 -53.25)))
         (instance face :init :vertices (list (float-vector -41.2509 12.65 23.25) (float-vector -32.375 50.9 18.1255) (float-vector -41.2509 50.9 -15.0) (float-vector -51.5 12.65 -15.0)))
         (instance face :init :vertices (list (float-vector -13.25 12.65 51.2509) (float-vector -8.12547 50.9 42.375) (float-vector -32.375 50.9 18.1255) (float-vector -41.2509 12.65 23.25)))
         (instance face :init :vertices (list (float-vector 25.0 12.65 61.5) (float-vector 25.0 50.9 51.2509) (float-vector -8.12547 50.9 42.375) (float-vector -13.25 12.65 51.2509)))
         (instance face :init :vertices (list (float-vector 63.25 12.65 51.2509) (float-vector 58.1255 50.9 42.375) (float-vector 25.0 50.9 51.2509) (float-vector 25.0 12.65 61.5)))
         (instance face :init :vertices (list (float-vector 91.2509 12.65 23.25) (float-vector 82.375 50.9 18.1255) (float-vector 58.1255 50.9 42.375) (float-vector 63.25 12.65 51.2509)))
         (instance face :init :vertices (list (float-vector 101.5 12.65 -15.0) (float-vector 91.2509 50.9 -15.0) (float-vector 82.375 50.9 18.1255) (float-vector 91.2509 12.65 23.25)))
         (instance face :init :vertices (list (float-vector 91.2509 -12.65 -53.25) (float-vector 91.2509 12.65 -53.25) (float-vector 101.5 12.65 -15.0) (float-vector 101.5 -12.65 -15.0)))
         (instance face :init :vertices (list (float-vector 63.25 -12.65 -81.2509) (float-vector 63.25 12.65 -81.2509) (float-vector 91.2509 12.65 -53.25) (float-vector 91.2509 -12.65 -53.25)))
         (instance face :init :vertices (list (float-vector 25.0 -12.65 -91.5) (float-vector 25.0 12.65 -91.5) (float-vector 63.25 12.65 -81.2509) (float-vector 63.25 -12.65 -81.2509)))
         (instance face :init :vertices (list (float-vector -13.25 -12.65 -81.2509) (float-vector -13.25 12.65 -81.2509) (float-vector 25.0 12.65 -91.5) (float-vector 25.0 -12.65 -91.5)))
         (instance face :init :vertices (list (float-vector -41.2509 -12.65 -53.25) (float-vector -41.2509 12.65 -53.25) (float-vector -13.25 12.65 -81.2509) (float-vector -13.25 -12.65 -81.2509)))
         (instance face :init :vertices (list (float-vector -51.5 -12.65 -15.0) (float-vector -51.5 12.65 -15.0) (float-vector -41.2509 12.65 -53.25) (float-vector -41.2509 -12.65 -53.25)))
         (instance face :init :vertices (list (float-vector -41.2509 -12.65 23.25) (float-vector -41.2509 12.65 23.25) (float-vector -51.5 12.65 -15.0) (float-vector -51.5 -12.65 -15.0)))
         (instance face :init :vertices (list (float-vector -13.25 -12.65 51.2509) (float-vector -13.25 12.65 51.2509) (float-vector -41.2509 12.65 23.25) (float-vector -41.2509 -12.65 23.25)))
         (instance face :init :vertices (list (float-vector 25.0 -12.65 61.5) (float-vector 25.0 12.65 61.5) (float-vector -13.25 12.65 51.2509) (float-vector -13.25 -12.65 51.2509)))
         (instance face :init :vertices (list (float-vector 63.25 -12.65 51.2509) (float-vector 63.25 12.65 51.2509) (float-vector 25.0 12.65 61.5) (float-vector 25.0 -12.65 61.5)))
         (instance face :init :vertices (list (float-vector 91.2509 -12.65 23.25) (float-vector 91.2509 12.65 23.25) (float-vector 63.25 12.65 51.2509) (float-vector 63.25 -12.65 51.2509)))
         (instance face :init :vertices (list (float-vector 101.5 -12.65 -15.0) (float-vector 101.5 12.65 -15.0) (float-vector 91.2509 12.65 23.25) (float-vector 91.2509 -12.65 23.25)))
         (instance face :init :vertices (list (float-vector 82.375 -50.9 -48.1255) (float-vector 91.2509 -12.65 -53.25) (float-vector 101.5 -12.65 -15.0) (float-vector 91.2509 -50.9 -15.0)))
         (instance face :init :vertices (list (float-vector 58.1255 -50.9 -72.375) (float-vector 63.25 -12.65 -81.2509) (float-vector 91.2509 -12.65 -53.25) (float-vector 82.375 -50.9 -48.1255)))
         (instance face :init :vertices (list (float-vector 25.0 -50.9 -81.2509) (float-vector 25.0 -12.65 -91.5) (float-vector 63.25 -12.65 -81.2509) (float-vector 58.1255 -50.9 -72.375)))
         (instance face :init :vertices (list (float-vector -8.12547 -50.9 -72.375) (float-vector -13.25 -12.65 -81.2509) (float-vector 25.0 -12.65 -91.5) (float-vector 25.0 -50.9 -81.2509)))
         (instance face :init :vertices (list (float-vector -32.375 -50.9 -48.1255) (float-vector -41.2509 -12.65 -53.25) (float-vector -13.25 -12.65 -81.2509) (float-vector -8.12547 -50.9 -72.375)))
         (instance face :init :vertices (list (float-vector -41.2509 -50.9 -15.0) (float-vector -51.5 -12.65 -15.0) (float-vector -41.2509 -12.65 -53.25) (float-vector -32.375 -50.9 -48.1255)))
         (instance face :init :vertices (list (float-vector -32.375 -50.9 18.1255) (float-vector -41.2509 -12.65 23.25) (float-vector -51.5 -12.65 -15.0) (float-vector -41.2509 -50.9 -15.0)))
         (instance face :init :vertices (list (float-vector -8.12547 -50.9 42.375) (float-vector -13.25 -12.65 51.2509) (float-vector -41.2509 -12.65 23.25) (float-vector -32.375 -50.9 18.1255)))
         (instance face :init :vertices (list (float-vector 25.0 -50.9 51.2509) (float-vector 25.0 -12.65 61.5) (float-vector -13.25 -12.65 51.2509) (float-vector -8.12547 -50.9 42.375)))
         (instance face :init :vertices (list (float-vector 58.1255 -50.9 42.375) (float-vector 63.25 -12.65 51.2509) (float-vector 25.0 -12.65 61.5) (float-vector 25.0 -50.9 51.2509)))
         (instance face :init :vertices (list (float-vector 82.375 -50.9 18.1255) (float-vector 91.2509 -12.65 23.25) (float-vector 63.25 -12.65 51.2509) (float-vector 58.1255 -50.9 42.375)))
         (instance face :init :vertices (list (float-vector 91.2509 -50.9 -15.0) (float-vector 101.5 -12.65 -15.0) (float-vector 91.2509 -12.65 23.25) (float-vector 82.375 -50.9 18.1255)))
         (instance face :init :vertices (list (float-vector 58.1255 -78.9009 -34.125) (float-vector 82.375 -50.9 -48.1255) (float-vector 91.2509 -50.9 -15.0) (float-vector 63.25 -78.9009 -15.0)))
         (instance face :init :vertices (list (float-vector 44.125 -78.9009 -48.1255) (float-vector 58.1255 -50.9 -72.375) (float-vector 82.375 -50.9 -48.1255) (float-vector 58.1255 -78.9009 -34.125)))
         (instance face :init :vertices (list (float-vector 25.0 -78.9009 -53.25) (float-vector 25.0 -50.9 -81.2509) (float-vector 58.1255 -50.9 -72.375) (float-vector 44.125 -78.9009 -48.1255)))
         (instance face :init :vertices (list (float-vector 5.875 -78.9009 -48.1255) (float-vector -8.12547 -50.9 -72.375) (float-vector 25.0 -50.9 -81.2509) (float-vector 25.0 -78.9009 -53.25)))
         (instance face :init :vertices (list (float-vector -8.12547 -78.9009 -34.125) (float-vector -32.375 -50.9 -48.1255) (float-vector -8.12547 -50.9 -72.375) (float-vector 5.875 -78.9009 -48.1255)))
         (instance face :init :vertices (list (float-vector -13.25 -78.9009 -15.0) (float-vector -41.2509 -50.9 -15.0) (float-vector -32.375 -50.9 -48.1255) (float-vector -8.12547 -78.9009 -34.125)))
         (instance face :init :vertices (list (float-vector -8.12547 -78.9009 4.125) (float-vector -32.375 -50.9 18.1255) (float-vector -41.2509 -50.9 -15.0) (float-vector -13.25 -78.9009 -15.0)))
         (instance face :init :vertices (list (float-vector 5.875 -78.9009 18.1255) (float-vector -8.12547 -50.9 42.375) (float-vector -32.375 -50.9 18.1255) (float-vector -8.12547 -78.9009 4.125)))
         (instance face :init :vertices (list (float-vector 25.0 -78.9009 23.25) (float-vector 25.0 -50.9 51.2509) (float-vector -8.12547 -50.9 42.375) (float-vector 5.875 -78.9009 18.1255)))
         (instance face :init :vertices (list (float-vector 44.125 -78.9009 18.1255) (float-vector 58.1255 -50.9 42.375) (float-vector 25.0 -50.9 51.2509) (float-vector 25.0 -78.9009 23.25)))
         (instance face :init :vertices (list (float-vector 58.1255 -78.9009 4.125) (float-vector 82.375 -50.9 18.1255) (float-vector 58.1255 -50.9 42.375) (float-vector 44.125 -78.9009 18.1255)))
         (instance face :init :vertices (list (float-vector 63.25 -78.9009 -15.0) (float-vector 91.2509 -50.9 -15.0) (float-vector 82.375 -50.9 18.1255) (float-vector 58.1255 -78.9009 4.125)))
         (instance face :init :vertices (list (float-vector 58.1255 -78.9009 -34.125) (float-vector 63.25 -78.9009 -15.0) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 63.25 -78.9009 -15.0) (float-vector 58.1255 -78.9009 4.125) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 58.1255 -78.9009 4.125) (float-vector 44.125 -78.9009 18.1255) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 44.125 -78.9009 18.1255) (float-vector 25.0 -78.9009 23.25) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 25.0 -78.9009 23.25) (float-vector 5.875 -78.9009 18.1255) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 5.875 -78.9009 18.1255) (float-vector -8.12547 -78.9009 4.125) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector -8.12547 -78.9009 4.125) (float-vector -13.25 -78.9009 -15.0) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector -13.25 -78.9009 -15.0) (float-vector -8.12547 -78.9009 -34.125) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector -8.12547 -78.9009 -34.125) (float-vector 5.875 -78.9009 -48.1255) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 5.875 -78.9009 -48.1255) (float-vector 25.0 -78.9009 -53.25) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 25.0 -78.9009 -53.25) (float-vector 44.125 -78.9009 -48.1255) (float-vector 25.0 -89.15 -15.0)))
         (instance face :init :vertices (list (float-vector 44.125 -78.9009 -48.1255) (float-vector 58.1255 -78.9009 -34.125) (float-vector 25.0 -89.15 -15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :gray30)
     (send (elt bc 2) :set-color :white)
     (send (elt bc 3) :set-color :papayawhip)
     (setq blink22 (instance bodyset-link :init (make-cascoords) :bodies bc :name :torso-middletorso :weight 388 :centroid (float-vector -0.417526 17.6716 -2.76588) :inertia-tensor #2f((2.707257e+05 -67283.7 10573.3) (-67283.7 38970.4 52142.1) (10573.3 52142.1 2.870179e+05))))

     ;; definition of :torso-uppertorso
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 24.85 79.4 72.5) (float-vector 22.85 79.4 72.5) (float-vector 22.85 77.4 72.5) (float-vector 24.85 77.4 72.5)))
         (instance face :init :vertices (list (float-vector 22.85 79.4 70.5) (float-vector 24.85 79.4 70.5) (float-vector 24.85 77.4 70.5) (float-vector 22.85 77.4 70.5)))
         (instance face :init :vertices (list (float-vector 24.85 79.4 72.5) (float-vector 24.85 79.4 70.5) (float-vector 22.85 79.4 70.5) (float-vector 22.85 79.4 72.5)))
         (instance face :init :vertices (list (float-vector 24.85 77.4 72.5) (float-vector 24.85 77.4 70.5) (float-vector 24.85 79.4 70.5) (float-vector 24.85 79.4 72.5)))
         (instance face :init :vertices (list (float-vector 22.85 77.4 72.5) (float-vector 22.85 77.4 70.5) (float-vector 24.85 77.4 70.5) (float-vector 24.85 77.4 72.5)))
         (instance face :init :vertices (list (float-vector 22.85 79.4 72.5) (float-vector 22.85 79.4 70.5) (float-vector 22.85 77.4 70.5) (float-vector 22.85 77.4 72.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 24.85 -77.4 72.5) (float-vector 22.85 -77.4 72.5) (float-vector 22.85 -79.4 72.5) (float-vector 24.85 -79.4 72.5)))
         (instance face :init :vertices (list (float-vector 22.85 -77.4 70.5) (float-vector 24.85 -77.4 70.5) (float-vector 24.85 -79.4 70.5) (float-vector 22.85 -79.4 70.5)))
         (instance face :init :vertices (list (float-vector 24.85 -77.4 72.5) (float-vector 24.85 -77.4 70.5) (float-vector 22.85 -77.4 70.5) (float-vector 22.85 -77.4 72.5)))
         (instance face :init :vertices (list (float-vector 24.85 -79.4 72.5) (float-vector 24.85 -79.4 70.5) (float-vector 24.85 -77.4 70.5) (float-vector 24.85 -77.4 72.5)))
         (instance face :init :vertices (list (float-vector 22.85 -79.4 72.5) (float-vector 22.85 -79.4 70.5) (float-vector 24.85 -79.4 70.5) (float-vector 24.85 -79.4 72.5)))
         (instance face :init :vertices (list (float-vector 22.85 -77.4 72.5) (float-vector 22.85 -77.4 70.5) (float-vector 22.85 -79.4 70.5) (float-vector 22.85 -79.4 72.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 21.0 1.0 130.5) (float-vector 19.0 1.0 130.5) (float-vector 19.0 -1.0 130.5) (float-vector 21.0 -1.0 130.5)))
         (instance face :init :vertices (list (float-vector 19.0 1.0 128.5) (float-vector 21.0 1.0 128.5) (float-vector 21.0 -1.0 128.5) (float-vector 19.0 -1.0 128.5)))
         (instance face :init :vertices (list (float-vector 21.0 1.0 130.5) (float-vector 21.0 1.0 128.5) (float-vector 19.0 1.0 128.5) (float-vector 19.0 1.0 130.5)))
         (instance face :init :vertices (list (float-vector 21.0 -1.0 130.5) (float-vector 21.0 -1.0 128.5) (float-vector 21.0 1.0 128.5) (float-vector 21.0 1.0 130.5)))
         (instance face :init :vertices (list (float-vector 19.0 -1.0 130.5) (float-vector 19.0 -1.0 128.5) (float-vector 21.0 -1.0 128.5) (float-vector 21.0 -1.0 130.5)))
         (instance face :init :vertices (list (float-vector 19.0 1.0 130.5) (float-vector 19.0 1.0 128.5) (float-vector 19.0 -1.0 128.5) (float-vector 19.0 -1.0 130.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 37.0 58.0 107.5) (float-vector -23.0 58.0 107.5) (float-vector -23.0 -58.0 107.5) (float-vector 37.0 -58.0 107.5)))
         (instance face :init :vertices (list (float-vector -23.0 58.0 32.5) (float-vector 37.0 58.0 32.5) (float-vector 37.0 -58.0 32.5) (float-vector -23.0 -58.0 32.5)))
         (instance face :init :vertices (list (float-vector 37.0 58.0 107.5) (float-vector 37.0 58.0 32.5) (float-vector -23.0 58.0 32.5) (float-vector -23.0 58.0 107.5)))
         (instance face :init :vertices (list (float-vector 37.0 -58.0 107.5) (float-vector 37.0 -58.0 32.5) (float-vector 37.0 58.0 32.5) (float-vector 37.0 58.0 107.5)))
         (instance face :init :vertices (list (float-vector -23.0 -58.0 107.5) (float-vector -23.0 -58.0 32.5) (float-vector 37.0 -58.0 32.5) (float-vector 37.0 -58.0 107.5)))
         (instance face :init :vertices (list (float-vector -23.0 58.0 107.5) (float-vector -23.0 58.0 32.5) (float-vector -23.0 -58.0 32.5) (float-vector -23.0 -58.0 107.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.0 -53.0 1.0) (float-vector -14.0 -53.0 33.0) (float-vector -14.0 53.0 33.0) (float-vector -14.0 53.0 1.0) (float-vector -14.0 51.0 1.0) (float-vector -14.0 51.0 31.0) (float-vector -14.0 -51.0 31.0) (float-vector -14.0 -51.0 1.0)))
         (instance face :init :vertices (list (float-vector 14.0 -53.0 33.0) (float-vector 14.0 53.0 33.0) (float-vector -14.0 53.0 33.0) (float-vector -14.0 -53.0 33.0)))
         (instance face :init :vertices (list (float-vector 14.0 -53.0 1.0) (float-vector 14.0 -51.0 1.0) (float-vector 14.0 -51.0 31.0) (float-vector 14.0 51.0 31.0) (float-vector 14.0 51.0 1.0) (float-vector 14.0 53.0 1.0) (float-vector 14.0 53.0 33.0) (float-vector 14.0 -53.0 33.0)))
         (instance face :init :vertices (list (float-vector 9.89949 53.0 -8.89949) (float-vector 14.0 53.0 1.0) (float-vector 14.0 51.0 1.0) (float-vector 9.89949 51.0 -8.89949)))
         (instance face :init :vertices (list (float-vector 9.89949 -53.0 -8.89949) (float-vector 9.89949 -51.0 -8.89949) (float-vector 14.0 -51.0 1.0) (float-vector 14.0 -53.0 1.0)))
         (instance face :init :vertices (list (float-vector 8.881784e-15 53.0 -13.0) (float-vector 9.89949 53.0 -8.89949) (float-vector 9.89949 51.0 -8.89949) (float-vector 7.993606e-15 51.0 -13.0)))
         (instance face :init :vertices (list (float-vector 1.776357e-15 -53.0 -13.0) (float-vector 1.776357e-15 -51.0 -13.0) (float-vector 9.89949 -51.0 -8.89949) (float-vector 9.89949 -53.0 -8.89949)))
         (instance face :init :vertices (list (float-vector -9.89949 53.0 -8.89949) (float-vector 8.881784e-15 53.0 -13.0) (float-vector 7.993606e-15 51.0 -13.0) (float-vector -9.89949 51.0 -8.89949)))
         (instance face :init :vertices (list (float-vector -9.89949 -53.0 -8.89949) (float-vector -9.89949 -51.0 -8.89949) (float-vector 1.776357e-15 -51.0 -13.0) (float-vector 1.776357e-15 -53.0 -13.0)))
         (instance face :init :vertices (list (float-vector -14.0 53.0 1.0) (float-vector -14.0 53.0 33.0) (float-vector 14.0 53.0 33.0) (float-vector 14.0 53.0 1.0) (float-vector 9.89949 53.0 -8.89949) (float-vector 8.881784e-15 53.0 -13.0) (float-vector -9.89949 53.0 -8.89949)))
         (instance face :init :vertices (list (float-vector -9.89949 -53.0 -8.89949) (float-vector 1.776357e-15 -53.0 -13.0) (float-vector 9.89949 -53.0 -8.89949) (float-vector 14.0 -53.0 1.0) (float-vector 14.0 -53.0 33.0) (float-vector -14.0 -53.0 33.0) (float-vector -14.0 -53.0 1.0)))
         (instance face :init :vertices (list (float-vector -9.89949 53.0 -8.89949) (float-vector -9.89949 51.0 -8.89949) (float-vector -14.0 51.0 1.0) (float-vector -14.0 53.0 1.0)))
         (instance face :init :vertices (list (float-vector -14.0 -53.0 1.0) (float-vector -14.0 -51.0 1.0) (float-vector -9.89949 -51.0 -8.89949) (float-vector -9.89949 -53.0 -8.89949)))
         (instance face :init :vertices (list (float-vector -14.0 51.0 31.0) (float-vector -14.0 51.0 1.0) (float-vector -9.89949 51.0 -8.89949) (float-vector 7.993606e-15 51.0 -13.0) (float-vector 9.89949 51.0 -8.89949) (float-vector 14.0 51.0 1.0) (float-vector 14.0 51.0 31.0)))
         (instance face :init :vertices (list (float-vector -14.0 -51.0 31.0) (float-vector -14.0 51.0 31.0) (float-vector 14.0 51.0 31.0) (float-vector 14.0 -51.0 31.0)))
         (instance face :init :vertices (list (float-vector 14.0 -51.0 31.0) (float-vector 14.0 -51.0 1.0) (float-vector 9.89949 -51.0 -8.89949) (float-vector 1.776357e-15 -51.0 -13.0) (float-vector -9.89949 -51.0 -8.89949) (float-vector -14.0 -51.0 1.0) (float-vector -14.0 -51.0 31.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.925 85.3842 60.0) (float-vector 45.4421 85.3842 39.5375) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector 45.4421 85.3842 39.5375) (float-vector 30.4625 85.3842 24.5579) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector 30.4625 85.3842 24.5579) (float-vector 10.0 85.3842 19.075) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector 10.0 85.3842 19.075) (float-vector -10.4625 85.3842 24.5579) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector -10.4625 85.3842 24.5579) (float-vector -25.4421 85.3842 39.5375) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector -25.4421 85.3842 39.5375) (float-vector -30.925 85.3842 60.0) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector -30.925 85.3842 60.0) (float-vector -25.4421 85.3842 80.4625) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector -25.4421 85.3842 80.4625) (float-vector -10.4625 85.3842 95.4421) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector -10.4625 85.3842 95.4421) (float-vector 10.0 85.3842 100.925) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector 10.0 85.3842 100.925) (float-vector 30.4625 85.3842 95.4421) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector 30.4625 85.3842 95.4421) (float-vector 45.4421 85.3842 80.4625) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector 45.4421 85.3842 80.4625) (float-vector 50.925 85.3842 60.0) (float-vector 10.0 96.35 60.0)))
         (instance face :init :vertices (list (float-vector 71.3875 55.425 24.5579) (float-vector 45.4421 85.3842 39.5375) (float-vector 50.925 85.3842 60.0) (float-vector 80.8842 55.425 60.0)))
         (instance face :init :vertices (list (float-vector 45.4421 55.425 -1.3875) (float-vector 30.4625 85.3842 24.5579) (float-vector 45.4421 85.3842 39.5375) (float-vector 71.3875 55.425 24.5579)))
         (instance face :init :vertices (list (float-vector 10.0 55.425 -10.8842) (float-vector 10.0 85.3842 19.075) (float-vector 30.4625 85.3842 24.5579) (float-vector 45.4421 55.425 -1.3875)))
         (instance face :init :vertices (list (float-vector -25.4421 55.425 -1.3875) (float-vector -10.4625 85.3842 24.5579) (float-vector 10.0 85.3842 19.075) (float-vector 10.0 55.425 -10.8842)))
         (instance face :init :vertices (list (float-vector -51.3875 55.425 24.5579) (float-vector -25.4421 85.3842 39.5375) (float-vector -10.4625 85.3842 24.5579) (float-vector -25.4421 55.425 -1.3875)))
         (instance face :init :vertices (list (float-vector -60.8842 55.425 60.0) (float-vector -30.925 85.3842 60.0) (float-vector -25.4421 85.3842 39.5375) (float-vector -51.3875 55.425 24.5579)))
         (instance face :init :vertices (list (float-vector -51.3875 55.425 95.4421) (float-vector -25.4421 85.3842 80.4625) (float-vector -30.925 85.3842 60.0) (float-vector -60.8842 55.425 60.0)))
         (instance face :init :vertices (list (float-vector -25.4421 55.425 121.388) (float-vector -10.4625 85.3842 95.4421) (float-vector -25.4421 85.3842 80.4625) (float-vector -51.3875 55.425 95.4421)))
         (instance face :init :vertices (list (float-vector 10.0 55.425 130.884) (float-vector 10.0 85.3842 100.925) (float-vector -10.4625 85.3842 95.4421) (float-vector -25.4421 55.425 121.388)))
         (instance face :init :vertices (list (float-vector 45.4421 55.425 121.387) (float-vector 30.4625 85.3842 95.4421) (float-vector 10.0 85.3842 100.925) (float-vector 10.0 55.425 130.884)))
         (instance face :init :vertices (list (float-vector 71.3875 55.425 95.4421) (float-vector 45.4421 85.3842 80.4625) (float-vector 30.4625 85.3842 95.4421) (float-vector 45.4421 55.425 121.387)))
         (instance face :init :vertices (list (float-vector 80.8842 55.425 60.0) (float-vector 50.925 85.3842 60.0) (float-vector 45.4421 85.3842 80.4625) (float-vector 71.3875 55.425 95.4421)))
         (instance face :init :vertices (list (float-vector 80.8842 14.5 19.075) (float-vector 71.3875 55.425 24.5579) (float-vector 80.8842 55.425 60.0) (float-vector 91.85 14.5 60.0)))
         (instance face :init :vertices (list (float-vector 50.925 14.5 -10.8842) (float-vector 45.4421 55.425 -1.3875) (float-vector 71.3875 55.425 24.5579) (float-vector 80.8842 14.5 19.075)))
         (instance face :init :vertices (list (float-vector 10.0 14.5 -21.85) (float-vector 10.0 55.425 -10.8842) (float-vector 45.4421 55.425 -1.3875) (float-vector 50.925 14.5 -10.8842)))
         (instance face :init :vertices (list (float-vector -30.925 14.5 -10.8842) (float-vector -25.4421 55.425 -1.3875) (float-vector 10.0 55.425 -10.8842) (float-vector 10.0 14.5 -21.85)))
         (instance face :init :vertices (list (float-vector -60.8842 14.5 19.075) (float-vector -51.3875 55.425 24.5579) (float-vector -25.4421 55.425 -1.3875) (float-vector -30.925 14.5 -10.8842)))
         (instance face :init :vertices (list (float-vector -71.85 14.5 60.0) (float-vector -60.8842 55.425 60.0) (float-vector -51.3875 55.425 24.5579) (float-vector -60.8842 14.5 19.075)))
         (instance face :init :vertices (list (float-vector -60.8842 14.5 100.925) (float-vector -51.3875 55.425 95.4421) (float-vector -60.8842 55.425 60.0) (float-vector -71.85 14.5 60.0)))
         (instance face :init :vertices (list (float-vector -30.925 14.5 130.884) (float-vector -25.4421 55.425 121.388) (float-vector -51.3875 55.425 95.4421) (float-vector -60.8842 14.5 100.925)))
         (instance face :init :vertices (list (float-vector 10.0 14.5 141.85) (float-vector 10.0 55.425 130.884) (float-vector -25.4421 55.425 121.388) (float-vector -30.925 14.5 130.884)))
         (instance face :init :vertices (list (float-vector 50.925 14.5 130.884) (float-vector 45.4421 55.425 121.387) (float-vector 10.0 55.425 130.884) (float-vector 10.0 14.5 141.85)))
         (instance face :init :vertices (list (float-vector 80.8842 14.5 100.925) (float-vector 71.3875 55.425 95.4421) (float-vector 45.4421 55.425 121.387) (float-vector 50.925 14.5 130.884)))
         (instance face :init :vertices (list (float-vector 91.85 14.5 60.0) (float-vector 80.8842 55.425 60.0) (float-vector 71.3875 55.425 95.4421) (float-vector 80.8842 14.5 100.925)))
         (instance face :init :vertices (list (float-vector 80.8842 -14.5 19.075) (float-vector 80.8842 14.5 19.075) (float-vector 91.85 14.5 60.0) (float-vector 91.85 -14.5 60.0)))
         (instance face :init :vertices (list (float-vector 50.925 -14.5 -10.8842) (float-vector 50.925 14.5 -10.8842) (float-vector 80.8842 14.5 19.075) (float-vector 80.8842 -14.5 19.075)))
         (instance face :init :vertices (list (float-vector 10.0 -14.5 -21.85) (float-vector 10.0 14.5 -21.85) (float-vector 50.925 14.5 -10.8842) (float-vector 50.925 -14.5 -10.8842)))
         (instance face :init :vertices (list (float-vector -30.925 -14.5 -10.8842) (float-vector -30.925 14.5 -10.8842) (float-vector 10.0 14.5 -21.85) (float-vector 10.0 -14.5 -21.85)))
         (instance face :init :vertices (list (float-vector -60.8842 -14.5 19.075) (float-vector -60.8842 14.5 19.075) (float-vector -30.925 14.5 -10.8842) (float-vector -30.925 -14.5 -10.8842)))
         (instance face :init :vertices (list (float-vector -71.85 -14.5 60.0) (float-vector -71.85 14.5 60.0) (float-vector -60.8842 14.5 19.075) (float-vector -60.8842 -14.5 19.075)))
         (instance face :init :vertices (list (float-vector -60.8842 -14.5 100.925) (float-vector -60.8842 14.5 100.925) (float-vector -71.85 14.5 60.0) (float-vector -71.85 -14.5 60.0)))
         (instance face :init :vertices (list (float-vector -30.925 -14.5 130.884) (float-vector -30.925 14.5 130.884) (float-vector -60.8842 14.5 100.925) (float-vector -60.8842 -14.5 100.925)))
         (instance face :init :vertices (list (float-vector 10.0 -14.5 141.85) (float-vector 10.0 14.5 141.85) (float-vector -30.925 14.5 130.884) (float-vector -30.925 -14.5 130.884)))
         (instance face :init :vertices (list (float-vector 50.925 -14.5 130.884) (float-vector 50.925 14.5 130.884) (float-vector 10.0 14.5 141.85) (float-vector 10.0 -14.5 141.85)))
         (instance face :init :vertices (list (float-vector 80.8842 -14.5 100.925) (float-vector 80.8842 14.5 100.925) (float-vector 50.925 14.5 130.884) (float-vector 50.925 -14.5 130.884)))
         (instance face :init :vertices (list (float-vector 91.85 -14.5 60.0) (float-vector 91.85 14.5 60.0) (float-vector 80.8842 14.5 100.925) (float-vector 80.8842 -14.5 100.925)))
         (instance face :init :vertices (list (float-vector 71.3875 -55.425 24.5579) (float-vector 80.8842 -14.5 19.075) (float-vector 91.85 -14.5 60.0) (float-vector 80.8842 -55.425 60.0)))
         (instance face :init :vertices (list (float-vector 45.4421 -55.425 -1.3875) (float-vector 50.925 -14.5 -10.8842) (float-vector 80.8842 -14.5 19.075) (float-vector 71.3875 -55.425 24.5579)))
         (instance face :init :vertices (list (float-vector 10.0 -55.425 -10.8842) (float-vector 10.0 -14.5 -21.85) (float-vector 50.925 -14.5 -10.8842) (float-vector 45.4421 -55.425 -1.3875)))
         (instance face :init :vertices (list (float-vector -25.4421 -55.425 -1.3875) (float-vector -30.925 -14.5 -10.8842) (float-vector 10.0 -14.5 -21.85) (float-vector 10.0 -55.425 -10.8842)))
         (instance face :init :vertices (list (float-vector -51.3875 -55.425 24.5579) (float-vector -60.8842 -14.5 19.075) (float-vector -30.925 -14.5 -10.8842) (float-vector -25.4421 -55.425 -1.3875)))
         (instance face :init :vertices (list (float-vector -60.8842 -55.425 60.0) (float-vector -71.85 -14.5 60.0) (float-vector -60.8842 -14.5 19.075) (float-vector -51.3875 -55.425 24.5579)))
         (instance face :init :vertices (list (float-vector -51.3875 -55.425 95.4421) (float-vector -60.8842 -14.5 100.925) (float-vector -71.85 -14.5 60.0) (float-vector -60.8842 -55.425 60.0)))
         (instance face :init :vertices (list (float-vector -25.4421 -55.425 121.388) (float-vector -30.925 -14.5 130.884) (float-vector -60.8842 -14.5 100.925) (float-vector -51.3875 -55.425 95.4421)))
         (instance face :init :vertices (list (float-vector 10.0 -55.425 130.884) (float-vector 10.0 -14.5 141.85) (float-vector -30.925 -14.5 130.884) (float-vector -25.4421 -55.425 121.388)))
         (instance face :init :vertices (list (float-vector 45.4421 -55.425 121.387) (float-vector 50.925 -14.5 130.884) (float-vector 10.0 -14.5 141.85) (float-vector 10.0 -55.425 130.884)))
         (instance face :init :vertices (list (float-vector 71.3875 -55.425 95.4421) (float-vector 80.8842 -14.5 100.925) (float-vector 50.925 -14.5 130.884) (float-vector 45.4421 -55.425 121.387)))
         (instance face :init :vertices (list (float-vector 80.8842 -55.425 60.0) (float-vector 91.85 -14.5 60.0) (float-vector 80.8842 -14.5 100.925) (float-vector 71.3875 -55.425 95.4421)))
         (instance face :init :vertices (list (float-vector 45.4421 -85.3842 39.5375) (float-vector 71.3875 -55.425 24.5579) (float-vector 80.8842 -55.425 60.0) (float-vector 50.925 -85.3842 60.0)))
         (instance face :init :vertices (list (float-vector 30.4625 -85.3842 24.5579) (float-vector 45.4421 -55.425 -1.3875) (float-vector 71.3875 -55.425 24.5579) (float-vector 45.4421 -85.3842 39.5375)))
         (instance face :init :vertices (list (float-vector 10.0 -85.3842 19.075) (float-vector 10.0 -55.425 -10.8842) (float-vector 45.4421 -55.425 -1.3875) (float-vector 30.4625 -85.3842 24.5579)))
         (instance face :init :vertices (list (float-vector -10.4625 -85.3842 24.5579) (float-vector -25.4421 -55.425 -1.3875) (float-vector 10.0 -55.425 -10.8842) (float-vector 10.0 -85.3842 19.075)))
         (instance face :init :vertices (list (float-vector -25.4421 -85.3842 39.5375) (float-vector -51.3875 -55.425 24.5579) (float-vector -25.4421 -55.425 -1.3875) (float-vector -10.4625 -85.3842 24.5579)))
         (instance face :init :vertices (list (float-vector -30.925 -85.3842 60.0) (float-vector -60.8842 -55.425 60.0) (float-vector -51.3875 -55.425 24.5579) (float-vector -25.4421 -85.3842 39.5375)))
         (instance face :init :vertices (list (float-vector -25.4421 -85.3842 80.4625) (float-vector -51.3875 -55.425 95.4421) (float-vector -60.8842 -55.425 60.0) (float-vector -30.925 -85.3842 60.0)))
         (instance face :init :vertices (list (float-vector -10.4625 -85.3842 95.4421) (float-vector -25.4421 -55.425 121.388) (float-vector -51.3875 -55.425 95.4421) (float-vector -25.4421 -85.3842 80.4625)))
         (instance face :init :vertices (list (float-vector 10.0 -85.3842 100.925) (float-vector 10.0 -55.425 130.884) (float-vector -25.4421 -55.425 121.388) (float-vector -10.4625 -85.3842 95.4421)))
         (instance face :init :vertices (list (float-vector 30.4625 -85.3842 95.4421) (float-vector 45.4421 -55.425 121.387) (float-vector 10.0 -55.425 130.884) (float-vector 10.0 -85.3842 100.925)))
         (instance face :init :vertices (list (float-vector 45.4421 -85.3842 80.4625) (float-vector 71.3875 -55.425 95.4421) (float-vector 45.4421 -55.425 121.387) (float-vector 30.4625 -85.3842 95.4421)))
         (instance face :init :vertices (list (float-vector 50.925 -85.3842 60.0) (float-vector 80.8842 -55.425 60.0) (float-vector 71.3875 -55.425 95.4421) (float-vector 45.4421 -85.3842 80.4625)))
         (instance face :init :vertices (list (float-vector 45.4421 -85.3842 39.5375) (float-vector 50.925 -85.3842 60.0) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector 50.925 -85.3842 60.0) (float-vector 45.4421 -85.3842 80.4625) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector 45.4421 -85.3842 80.4625) (float-vector 30.4625 -85.3842 95.4421) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector 30.4625 -85.3842 95.4421) (float-vector 10.0 -85.3842 100.925) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector 10.0 -85.3842 100.925) (float-vector -10.4625 -85.3842 95.4421) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector -10.4625 -85.3842 95.4421) (float-vector -25.4421 -85.3842 80.4625) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector -25.4421 -85.3842 80.4625) (float-vector -30.925 -85.3842 60.0) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector -30.925 -85.3842 60.0) (float-vector -25.4421 -85.3842 39.5375) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector -25.4421 -85.3842 39.5375) (float-vector -10.4625 -85.3842 24.5579) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector -10.4625 -85.3842 24.5579) (float-vector 10.0 -85.3842 19.075) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector 10.0 -85.3842 19.075) (float-vector 30.4625 -85.3842 24.5579) (float-vector 10.0 -96.35 60.0)))
         (instance face :init :vertices (list (float-vector 30.4625 -85.3842 24.5579) (float-vector 45.4421 -85.3842 39.5375) (float-vector 10.0 -96.35 60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 10.0 70.0) (float-vector 50.0 10.0 90.0) (float-vector 50.0 -10.0 90.0) (float-vector 50.0 -10.0 70.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 90.0) (float-vector 30.0 10.0 70.0) (float-vector 30.0 -10.0 70.0) (float-vector 30.0 -10.0 90.0)))
         (instance face :init :vertices (list (float-vector 50.0 10.0 70.0) (float-vector 30.0 10.0 70.0) (float-vector 30.0 10.0 90.0) (float-vector 50.0 10.0 90.0)))
         (instance face :init :vertices (list (float-vector 50.0 -10.0 70.0) (float-vector 30.0 -10.0 70.0) (float-vector 30.0 10.0 70.0) (float-vector 50.0 10.0 70.0)))
         (instance face :init :vertices (list (float-vector 50.0 -10.0 90.0) (float-vector 30.0 -10.0 90.0) (float-vector 30.0 -10.0 70.0) (float-vector 50.0 -10.0 70.0)))
         (instance face :init :vertices (list (float-vector 50.0 10.0 90.0) (float-vector 30.0 10.0 90.0) (float-vector 30.0 -10.0 90.0) (float-vector 50.0 -10.0 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 60.0 70.0) (float-vector 50.0 60.0 90.0) (float-vector 50.0 40.0 90.0) (float-vector 50.0 40.0 70.0)))
         (instance face :init :vertices (list (float-vector 30.0 60.0 90.0) (float-vector 30.0 60.0 70.0) (float-vector 30.0 40.0 70.0) (float-vector 30.0 40.0 90.0)))
         (instance face :init :vertices (list (float-vector 50.0 60.0 70.0) (float-vector 30.0 60.0 70.0) (float-vector 30.0 60.0 90.0) (float-vector 50.0 60.0 90.0)))
         (instance face :init :vertices (list (float-vector 50.0 40.0 70.0) (float-vector 30.0 40.0 70.0) (float-vector 30.0 60.0 70.0) (float-vector 50.0 60.0 70.0)))
         (instance face :init :vertices (list (float-vector 50.0 40.0 90.0) (float-vector 30.0 40.0 90.0) (float-vector 30.0 40.0 70.0) (float-vector 50.0 40.0 70.0)))
         (instance face :init :vertices (list (float-vector 50.0 60.0 90.0) (float-vector 30.0 60.0 90.0) (float-vector 30.0 40.0 90.0) (float-vector 50.0 40.0 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 -40.0 70.0) (float-vector 50.0 -40.0 90.0) (float-vector 50.0 -60.0 90.0) (float-vector 50.0 -60.0 70.0)))
         (instance face :init :vertices (list (float-vector 30.0 -40.0 90.0) (float-vector 30.0 -40.0 70.0) (float-vector 30.0 -60.0 70.0) (float-vector 30.0 -60.0 90.0)))
         (instance face :init :vertices (list (float-vector 50.0 -40.0 70.0) (float-vector 30.0 -40.0 70.0) (float-vector 30.0 -40.0 90.0) (float-vector 50.0 -40.0 90.0)))
         (instance face :init :vertices (list (float-vector 50.0 -60.0 70.0) (float-vector 30.0 -60.0 70.0) (float-vector 30.0 -40.0 70.0) (float-vector 50.0 -40.0 70.0)))
         (instance face :init :vertices (list (float-vector 50.0 -60.0 90.0) (float-vector 30.0 -60.0 90.0) (float-vector 30.0 -60.0 70.0) (float-vector 50.0 -60.0 70.0)))
         (instance face :init :vertices (list (float-vector 50.0 -40.0 90.0) (float-vector 30.0 -40.0 90.0) (float-vector 30.0 -60.0 90.0) (float-vector 50.0 -60.0 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 10.0 20.0) (float-vector 50.0 10.0 40.0) (float-vector 50.0 -10.0 40.0) (float-vector 50.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 40.0) (float-vector 30.0 10.0 20.0) (float-vector 30.0 -10.0 20.0) (float-vector 30.0 -10.0 40.0)))
         (instance face :init :vertices (list (float-vector 50.0 10.0 20.0) (float-vector 30.0 10.0 20.0) (float-vector 30.0 10.0 40.0) (float-vector 50.0 10.0 40.0)))
         (instance face :init :vertices (list (float-vector 50.0 -10.0 20.0) (float-vector 30.0 -10.0 20.0) (float-vector 30.0 10.0 20.0) (float-vector 50.0 10.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 -10.0 40.0) (float-vector 30.0 -10.0 40.0) (float-vector 30.0 -10.0 20.0) (float-vector 50.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 10.0 40.0) (float-vector 30.0 10.0 40.0) (float-vector 30.0 -10.0 40.0) (float-vector 50.0 -10.0 40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 60.0 20.0) (float-vector 50.0 60.0 40.0) (float-vector 50.0 40.0 40.0) (float-vector 50.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 60.0 40.0) (float-vector 30.0 60.0 20.0) (float-vector 30.0 40.0 20.0) (float-vector 30.0 40.0 40.0)))
         (instance face :init :vertices (list (float-vector 50.0 60.0 20.0) (float-vector 30.0 60.0 20.0) (float-vector 30.0 60.0 40.0) (float-vector 50.0 60.0 40.0)))
         (instance face :init :vertices (list (float-vector 50.0 40.0 20.0) (float-vector 30.0 40.0 20.0) (float-vector 30.0 60.0 20.0) (float-vector 50.0 60.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 40.0 40.0) (float-vector 30.0 40.0 40.0) (float-vector 30.0 40.0 20.0) (float-vector 50.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 60.0 40.0) (float-vector 30.0 60.0 40.0) (float-vector 30.0 40.0 40.0) (float-vector 50.0 40.0 40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 -40.0 20.0) (float-vector 50.0 -40.0 40.0) (float-vector 50.0 -60.0 40.0) (float-vector 50.0 -60.0 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 -40.0 40.0) (float-vector 30.0 -40.0 20.0) (float-vector 30.0 -60.0 20.0) (float-vector 30.0 -60.0 40.0)))
         (instance face :init :vertices (list (float-vector 50.0 -40.0 20.0) (float-vector 30.0 -40.0 20.0) (float-vector 30.0 -40.0 40.0) (float-vector 50.0 -40.0 40.0)))
         (instance face :init :vertices (list (float-vector 50.0 -60.0 20.0) (float-vector 30.0 -60.0 20.0) (float-vector 30.0 -40.0 20.0) (float-vector 50.0 -40.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 -60.0 40.0) (float-vector 30.0 -60.0 40.0) (float-vector 30.0 -60.0 20.0) (float-vector 50.0 -60.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 -40.0 40.0) (float-vector 30.0 -40.0 40.0) (float-vector 30.0 -60.0 40.0) (float-vector 50.0 -60.0 40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 80.0 10.0) (float-vector 30.0 80.0 10.0) (float-vector 30.0 80.0 30.0) (float-vector 50.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector 30.0 60.0 10.0) (float-vector 50.0 60.0 10.0) (float-vector 50.0 60.0 30.0) (float-vector 30.0 60.0 30.0)))
         (instance face :init :vertices (list (float-vector 50.0 80.0 10.0) (float-vector 50.0 60.0 10.0) (float-vector 30.0 60.0 10.0) (float-vector 30.0 80.0 10.0)))
         (instance face :init :vertices (list (float-vector 50.0 80.0 30.0) (float-vector 50.0 60.0 30.0) (float-vector 50.0 60.0 10.0) (float-vector 50.0 80.0 10.0)))
         (instance face :init :vertices (list (float-vector 30.0 80.0 30.0) (float-vector 30.0 60.0 30.0) (float-vector 50.0 60.0 30.0) (float-vector 50.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector 30.0 80.0 10.0) (float-vector 30.0 60.0 10.0) (float-vector 30.0 60.0 30.0) (float-vector 30.0 80.0 30.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 80.0 10.0) (float-vector -10.0 80.0 10.0) (float-vector -10.0 80.0 30.0) (float-vector 10.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 60.0 10.0) (float-vector 10.0 60.0 10.0) (float-vector 10.0 60.0 30.0) (float-vector -10.0 60.0 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 10.0) (float-vector 10.0 60.0 10.0) (float-vector -10.0 60.0 10.0) (float-vector -10.0 80.0 10.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 30.0) (float-vector 10.0 60.0 30.0) (float-vector 10.0 60.0 10.0) (float-vector 10.0 80.0 10.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 30.0) (float-vector -10.0 60.0 30.0) (float-vector 10.0 60.0 30.0) (float-vector 10.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 10.0) (float-vector -10.0 60.0 10.0) (float-vector -10.0 60.0 30.0) (float-vector -10.0 80.0 30.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 80.0 10.0) (float-vector -50.0 80.0 10.0) (float-vector -50.0 80.0 30.0) (float-vector -30.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -50.0 60.0 10.0) (float-vector -30.0 60.0 10.0) (float-vector -30.0 60.0 30.0) (float-vector -50.0 60.0 30.0)))
         (instance face :init :vertices (list (float-vector -30.0 80.0 10.0) (float-vector -30.0 60.0 10.0) (float-vector -50.0 60.0 10.0) (float-vector -50.0 80.0 10.0)))
         (instance face :init :vertices (list (float-vector -30.0 80.0 30.0) (float-vector -30.0 60.0 30.0) (float-vector -30.0 60.0 10.0) (float-vector -30.0 80.0 10.0)))
         (instance face :init :vertices (list (float-vector -50.0 80.0 30.0) (float-vector -50.0 60.0 30.0) (float-vector -30.0 60.0 30.0) (float-vector -30.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -50.0 80.0 10.0) (float-vector -50.0 60.0 10.0) (float-vector -50.0 60.0 30.0) (float-vector -50.0 80.0 30.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 80.0 -30.0) (float-vector 30.0 80.0 -30.0) (float-vector 30.0 80.0 -10.0) (float-vector 50.0 80.0 -10.0)))
         (instance face :init :vertices (list (float-vector 30.0 60.0 -30.0) (float-vector 50.0 60.0 -30.0) (float-vector 50.0 60.0 -10.0) (float-vector 30.0 60.0 -10.0)))
         (instance face :init :vertices (list (float-vector 50.0 80.0 -30.0) (float-vector 50.0 60.0 -30.0) (float-vector 30.0 60.0 -30.0) (float-vector 30.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 50.0 80.0 -10.0) (float-vector 50.0 60.0 -10.0) (float-vector 50.0 60.0 -30.0) (float-vector 50.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 30.0 80.0 -10.0) (float-vector 30.0 60.0 -10.0) (float-vector 50.0 60.0 -10.0) (float-vector 50.0 80.0 -10.0)))
         (instance face :init :vertices (list (float-vector 30.0 80.0 -30.0) (float-vector 30.0 60.0 -30.0) (float-vector 30.0 60.0 -10.0) (float-vector 30.0 80.0 -10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 80.0 -30.0) (float-vector -10.0 80.0 -30.0) (float-vector -10.0 80.0 -10.0) (float-vector 10.0 80.0 -10.0)))
         (instance face :init :vertices (list (float-vector -10.0 60.0 -30.0) (float-vector 10.0 60.0 -30.0) (float-vector 10.0 60.0 -10.0) (float-vector -10.0 60.0 -10.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -30.0) (float-vector 10.0 60.0 -30.0) (float-vector -10.0 60.0 -30.0) (float-vector -10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -10.0) (float-vector 10.0 60.0 -10.0) (float-vector 10.0 60.0 -30.0) (float-vector 10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -10.0) (float-vector -10.0 60.0 -10.0) (float-vector 10.0 60.0 -10.0) (float-vector 10.0 80.0 -10.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 60.0 -30.0) (float-vector -10.0 60.0 -10.0) (float-vector -10.0 80.0 -10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 80.0 -30.0) (float-vector -50.0 80.0 -30.0) (float-vector -50.0 80.0 -10.0) (float-vector -30.0 80.0 -10.0)))
         (instance face :init :vertices (list (float-vector -50.0 60.0 -30.0) (float-vector -30.0 60.0 -30.0) (float-vector -30.0 60.0 -10.0) (float-vector -50.0 60.0 -10.0)))
         (instance face :init :vertices (list (float-vector -30.0 80.0 -30.0) (float-vector -30.0 60.0 -30.0) (float-vector -50.0 60.0 -30.0) (float-vector -50.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -30.0 80.0 -10.0) (float-vector -30.0 60.0 -10.0) (float-vector -30.0 60.0 -30.0) (float-vector -30.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -50.0 80.0 -10.0) (float-vector -50.0 60.0 -10.0) (float-vector -30.0 60.0 -10.0) (float-vector -30.0 80.0 -10.0)))
         (instance face :init :vertices (list (float-vector -50.0 80.0 -30.0) (float-vector -50.0 60.0 -30.0) (float-vector -50.0 60.0 -10.0) (float-vector -50.0 80.0 -10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 10.0 70.0) (float-vector -30.0 10.0 90.0) (float-vector -30.0 -10.0 90.0) (float-vector -30.0 -10.0 70.0)))
         (instance face :init :vertices (list (float-vector -50.0 10.0 90.0) (float-vector -50.0 10.0 70.0) (float-vector -50.0 -10.0 70.0) (float-vector -50.0 -10.0 90.0)))
         (instance face :init :vertices (list (float-vector -30.0 10.0 70.0) (float-vector -50.0 10.0 70.0) (float-vector -50.0 10.0 90.0) (float-vector -30.0 10.0 90.0)))
         (instance face :init :vertices (list (float-vector -30.0 -10.0 70.0) (float-vector -50.0 -10.0 70.0) (float-vector -50.0 10.0 70.0) (float-vector -30.0 10.0 70.0)))
         (instance face :init :vertices (list (float-vector -30.0 -10.0 90.0) (float-vector -50.0 -10.0 90.0) (float-vector -50.0 -10.0 70.0) (float-vector -30.0 -10.0 70.0)))
         (instance face :init :vertices (list (float-vector -30.0 10.0 90.0) (float-vector -50.0 10.0 90.0) (float-vector -50.0 -10.0 90.0) (float-vector -30.0 -10.0 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 60.0 70.0) (float-vector -30.0 60.0 90.0) (float-vector -30.0 40.0 90.0) (float-vector -30.0 40.0 70.0)))
         (instance face :init :vertices (list (float-vector -50.0 60.0 90.0) (float-vector -50.0 60.0 70.0) (float-vector -50.0 40.0 70.0) (float-vector -50.0 40.0 90.0)))
         (instance face :init :vertices (list (float-vector -30.0 60.0 70.0) (float-vector -50.0 60.0 70.0) (float-vector -50.0 60.0 90.0) (float-vector -30.0 60.0 90.0)))
         (instance face :init :vertices (list (float-vector -30.0 40.0 70.0) (float-vector -50.0 40.0 70.0) (float-vector -50.0 60.0 70.0) (float-vector -30.0 60.0 70.0)))
         (instance face :init :vertices (list (float-vector -30.0 40.0 90.0) (float-vector -50.0 40.0 90.0) (float-vector -50.0 40.0 70.0) (float-vector -30.0 40.0 70.0)))
         (instance face :init :vertices (list (float-vector -30.0 60.0 90.0) (float-vector -50.0 60.0 90.0) (float-vector -50.0 40.0 90.0) (float-vector -30.0 40.0 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 -40.0 70.0) (float-vector -30.0 -40.0 90.0) (float-vector -30.0 -60.0 90.0) (float-vector -30.0 -60.0 70.0)))
         (instance face :init :vertices (list (float-vector -50.0 -40.0 90.0) (float-vector -50.0 -40.0 70.0) (float-vector -50.0 -60.0 70.0) (float-vector -50.0 -60.0 90.0)))
         (instance face :init :vertices (list (float-vector -30.0 -40.0 70.0) (float-vector -50.0 -40.0 70.0) (float-vector -50.0 -40.0 90.0) (float-vector -30.0 -40.0 90.0)))
         (instance face :init :vertices (list (float-vector -30.0 -60.0 70.0) (float-vector -50.0 -60.0 70.0) (float-vector -50.0 -40.0 70.0) (float-vector -30.0 -40.0 70.0)))
         (instance face :init :vertices (list (float-vector -30.0 -60.0 90.0) (float-vector -50.0 -60.0 90.0) (float-vector -50.0 -60.0 70.0) (float-vector -30.0 -60.0 70.0)))
         (instance face :init :vertices (list (float-vector -30.0 -40.0 90.0) (float-vector -50.0 -40.0 90.0) (float-vector -50.0 -60.0 90.0) (float-vector -30.0 -60.0 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 10.0 20.0) (float-vector -30.0 10.0 40.0) (float-vector -30.0 -10.0 40.0) (float-vector -30.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector -50.0 10.0 40.0) (float-vector -50.0 10.0 20.0) (float-vector -50.0 -10.0 20.0) (float-vector -50.0 -10.0 40.0)))
         (instance face :init :vertices (list (float-vector -30.0 10.0 20.0) (float-vector -50.0 10.0 20.0) (float-vector -50.0 10.0 40.0) (float-vector -30.0 10.0 40.0)))
         (instance face :init :vertices (list (float-vector -30.0 -10.0 20.0) (float-vector -50.0 -10.0 20.0) (float-vector -50.0 10.0 20.0) (float-vector -30.0 10.0 20.0)))
         (instance face :init :vertices (list (float-vector -30.0 -10.0 40.0) (float-vector -50.0 -10.0 40.0) (float-vector -50.0 -10.0 20.0) (float-vector -30.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector -30.0 10.0 40.0) (float-vector -50.0 10.0 40.0) (float-vector -50.0 -10.0 40.0) (float-vector -30.0 -10.0 40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 60.0 20.0) (float-vector -30.0 60.0 40.0) (float-vector -30.0 40.0 40.0) (float-vector -30.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector -50.0 60.0 40.0) (float-vector -50.0 60.0 20.0) (float-vector -50.0 40.0 20.0) (float-vector -50.0 40.0 40.0)))
         (instance face :init :vertices (list (float-vector -30.0 60.0 20.0) (float-vector -50.0 60.0 20.0) (float-vector -50.0 60.0 40.0) (float-vector -30.0 60.0 40.0)))
         (instance face :init :vertices (list (float-vector -30.0 40.0 20.0) (float-vector -50.0 40.0 20.0) (float-vector -50.0 60.0 20.0) (float-vector -30.0 60.0 20.0)))
         (instance face :init :vertices (list (float-vector -30.0 40.0 40.0) (float-vector -50.0 40.0 40.0) (float-vector -50.0 40.0 20.0) (float-vector -30.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector -30.0 60.0 40.0) (float-vector -50.0 60.0 40.0) (float-vector -50.0 40.0 40.0) (float-vector -30.0 40.0 40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 -40.0 20.0) (float-vector -30.0 -40.0 40.0) (float-vector -30.0 -60.0 40.0) (float-vector -30.0 -60.0 20.0)))
         (instance face :init :vertices (list (float-vector -50.0 -40.0 40.0) (float-vector -50.0 -40.0 20.0) (float-vector -50.0 -60.0 20.0) (float-vector -50.0 -60.0 40.0)))
         (instance face :init :vertices (list (float-vector -30.0 -40.0 20.0) (float-vector -50.0 -40.0 20.0) (float-vector -50.0 -40.0 40.0) (float-vector -30.0 -40.0 40.0)))
         (instance face :init :vertices (list (float-vector -30.0 -60.0 20.0) (float-vector -50.0 -60.0 20.0) (float-vector -50.0 -40.0 20.0) (float-vector -30.0 -40.0 20.0)))
         (instance face :init :vertices (list (float-vector -30.0 -60.0 40.0) (float-vector -50.0 -60.0 40.0) (float-vector -50.0 -60.0 20.0) (float-vector -30.0 -60.0 20.0)))
         (instance face :init :vertices (list (float-vector -30.0 -40.0 40.0) (float-vector -50.0 -40.0 40.0) (float-vector -50.0 -60.0 40.0) (float-vector -30.0 -60.0 40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 -80.0 30.0) (float-vector 30.0 -80.0 30.0) (float-vector 30.0 -80.0 10.0) (float-vector 50.0 -80.0 10.0)))
         (instance face :init :vertices (list (float-vector 30.0 -60.0 30.0) (float-vector 50.0 -60.0 30.0) (float-vector 50.0 -60.0 10.0) (float-vector 30.0 -60.0 10.0)))
         (instance face :init :vertices (list (float-vector 50.0 -80.0 30.0) (float-vector 50.0 -60.0 30.0) (float-vector 30.0 -60.0 30.0) (float-vector 30.0 -80.0 30.0)))
         (instance face :init :vertices (list (float-vector 50.0 -80.0 10.0) (float-vector 50.0 -60.0 10.0) (float-vector 50.0 -60.0 30.0) (float-vector 50.0 -80.0 30.0)))
         (instance face :init :vertices (list (float-vector 30.0 -80.0 10.0) (float-vector 30.0 -60.0 10.0) (float-vector 50.0 -60.0 10.0) (float-vector 50.0 -80.0 10.0)))
         (instance face :init :vertices (list (float-vector 30.0 -80.0 30.0) (float-vector 30.0 -60.0 30.0) (float-vector 30.0 -60.0 10.0) (float-vector 30.0 -80.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -80.0 30.0) (float-vector -10.0 -80.0 30.0) (float-vector -10.0 -80.0 10.0) (float-vector 10.0 -80.0 10.0)))
         (instance face :init :vertices (list (float-vector -10.0 -60.0 30.0) (float-vector 10.0 -60.0 30.0) (float-vector 10.0 -60.0 10.0) (float-vector -10.0 -60.0 10.0)))
         (instance face :init :vertices (list (float-vector 10.0 -80.0 30.0) (float-vector 10.0 -60.0 30.0) (float-vector -10.0 -60.0 30.0) (float-vector -10.0 -80.0 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -80.0 10.0) (float-vector 10.0 -60.0 10.0) (float-vector 10.0 -60.0 30.0) (float-vector 10.0 -80.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 -80.0 10.0) (float-vector -10.0 -60.0 10.0) (float-vector 10.0 -60.0 10.0) (float-vector 10.0 -80.0 10.0)))
         (instance face :init :vertices (list (float-vector -10.0 -80.0 30.0) (float-vector -10.0 -60.0 30.0) (float-vector -10.0 -60.0 10.0) (float-vector -10.0 -80.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 -80.0 30.0) (float-vector -50.0 -80.0 30.0) (float-vector -50.0 -80.0 10.0) (float-vector -30.0 -80.0 10.0)))
         (instance face :init :vertices (list (float-vector -50.0 -60.0 30.0) (float-vector -30.0 -60.0 30.0) (float-vector -30.0 -60.0 10.0) (float-vector -50.0 -60.0 10.0)))
         (instance face :init :vertices (list (float-vector -30.0 -80.0 30.0) (float-vector -30.0 -60.0 30.0) (float-vector -50.0 -60.0 30.0) (float-vector -50.0 -80.0 30.0)))
         (instance face :init :vertices (list (float-vector -30.0 -80.0 10.0) (float-vector -30.0 -60.0 10.0) (float-vector -30.0 -60.0 30.0) (float-vector -30.0 -80.0 30.0)))
         (instance face :init :vertices (list (float-vector -50.0 -80.0 10.0) (float-vector -50.0 -60.0 10.0) (float-vector -30.0 -60.0 10.0) (float-vector -30.0 -80.0 10.0)))
         (instance face :init :vertices (list (float-vector -50.0 -80.0 30.0) (float-vector -50.0 -60.0 30.0) (float-vector -50.0 -60.0 10.0) (float-vector -50.0 -80.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 50.0 -80.0 -10.0) (float-vector 30.0 -80.0 -10.0) (float-vector 30.0 -80.0 -30.0) (float-vector 50.0 -80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 30.0 -60.0 -10.0) (float-vector 50.0 -60.0 -10.0) (float-vector 50.0 -60.0 -30.0) (float-vector 30.0 -60.0 -30.0)))
         (instance face :init :vertices (list (float-vector 50.0 -80.0 -10.0) (float-vector 50.0 -60.0 -10.0) (float-vector 30.0 -60.0 -10.0) (float-vector 30.0 -80.0 -10.0)))
         (instance face :init :vertices (list (float-vector 50.0 -80.0 -30.0) (float-vector 50.0 -60.0 -30.0) (float-vector 50.0 -60.0 -10.0) (float-vector 50.0 -80.0 -10.0)))
         (instance face :init :vertices (list (float-vector 30.0 -80.0 -30.0) (float-vector 30.0 -60.0 -30.0) (float-vector 50.0 -60.0 -30.0) (float-vector 50.0 -80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 30.0 -80.0 -10.0) (float-vector 30.0 -60.0 -10.0) (float-vector 30.0 -60.0 -30.0) (float-vector 30.0 -80.0 -30.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -80.0 -10.0) (float-vector -10.0 -80.0 -10.0) (float-vector -10.0 -80.0 -30.0) (float-vector 10.0 -80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 -60.0 -10.0) (float-vector 10.0 -60.0 -10.0) (float-vector 10.0 -60.0 -30.0) (float-vector -10.0 -60.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -80.0 -10.0) (float-vector 10.0 -60.0 -10.0) (float-vector -10.0 -60.0 -10.0) (float-vector -10.0 -80.0 -10.0)))
         (instance face :init :vertices (list (float-vector 10.0 -80.0 -30.0) (float-vector 10.0 -60.0 -30.0) (float-vector 10.0 -60.0 -10.0) (float-vector 10.0 -80.0 -10.0)))
         (instance face :init :vertices (list (float-vector -10.0 -80.0 -30.0) (float-vector -10.0 -60.0 -30.0) (float-vector 10.0 -60.0 -30.0) (float-vector 10.0 -80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 -80.0 -10.0) (float-vector -10.0 -60.0 -10.0) (float-vector -10.0 -60.0 -30.0) (float-vector -10.0 -80.0 -30.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 -80.0 -10.0) (float-vector -50.0 -80.0 -10.0) (float-vector -50.0 -80.0 -30.0) (float-vector -30.0 -80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -50.0 -60.0 -10.0) (float-vector -30.0 -60.0 -10.0) (float-vector -30.0 -60.0 -30.0) (float-vector -50.0 -60.0 -30.0)))
         (instance face :init :vertices (list (float-vector -30.0 -80.0 -10.0) (float-vector -30.0 -60.0 -10.0) (float-vector -50.0 -60.0 -10.0) (float-vector -50.0 -80.0 -10.0)))
         (instance face :init :vertices (list (float-vector -30.0 -80.0 -30.0) (float-vector -30.0 -60.0 -30.0) (float-vector -30.0 -60.0 -10.0) (float-vector -30.0 -80.0 -10.0)))
         (instance face :init :vertices (list (float-vector -50.0 -80.0 -30.0) (float-vector -50.0 -60.0 -30.0) (float-vector -30.0 -60.0 -30.0) (float-vector -30.0 -80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -50.0 -80.0 -10.0) (float-vector -50.0 -60.0 -10.0) (float-vector -50.0 -60.0 -30.0) (float-vector -50.0 -80.0 -30.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color :gray90)
     (send (elt bc 5) :set-color :papayawhip)
     (send (elt bc 6) :set-color :linen)
     (send (elt bc 7) :set-color :linen)
     (send (elt bc 8) :set-color :linen)
     (send (elt bc 9) :set-color :linen)
     (send (elt bc 10) :set-color :linen)
     (send (elt bc 11) :set-color :linen)
     (send (elt bc 12) :set-color :linen)
     (send (elt bc 13) :set-color :linen)
     (send (elt bc 14) :set-color :linen)
     (send (elt bc 15) :set-color :linen)
     (send (elt bc 16) :set-color :linen)
     (send (elt bc 17) :set-color :linen)
     (send (elt bc 18) :set-color :linen)
     (send (elt bc 19) :set-color :linen)
     (send (elt bc 20) :set-color :linen)
     (send (elt bc 21) :set-color :linen)
     (send (elt bc 22) :set-color :linen)
     (send (elt bc 23) :set-color :linen)
     (send (elt bc 24) :set-color :linen)
     (send (elt bc 25) :set-color :linen)
     (send (elt bc 26) :set-color :linen)
     (send (elt bc 27) :set-color :linen)
     (send (elt bc 28) :set-color :linen)
     (send (elt bc 29) :set-color :linen)
     (setq blink23 (instance bodyset-link :init (make-cascoords) :bodies bc :name :torso-uppertorso :weight 631.093 :centroid (float-vector 6.7624 4.372244e-15 68.0037) :inertia-tensor #2f((1.125727e+05 3.048463e-12 -8847.57) (3.048463e-12 68090.5 4.945785e-11) (-8847.57 4.945785e-11 50791.2))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 0.0 -13.0) (float-vector -30.0 26.0 -13.0) (float-vector 30.0 26.0 -13.0) (float-vector 30.0 0.0 -13.0) (float-vector 28.0 0.0 -13.0) (float-vector 28.0 24.0 -13.0) (float-vector -28.0 24.0 -13.0) (float-vector -28.0 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector -30.0 26.0 13.0) (float-vector 30.0 26.0 13.0) (float-vector 30.0 26.0 -13.0) (float-vector -30.0 26.0 -13.0)))
         (instance face :init :vertices (list (float-vector -30.0 0.0 13.0) (float-vector -28.0 0.0 13.0) (float-vector -28.0 24.0 13.0) (float-vector 28.0 24.0 13.0) (float-vector 28.0 0.0 13.0) (float-vector 30.0 0.0 13.0) (float-vector 30.0 26.0 13.0) (float-vector -30.0 26.0 13.0)))
         (instance face :init :vertices (list (float-vector 30.0 -9.19239 9.19239) (float-vector 30.0 0.0 13.0) (float-vector 28.0 0.0 13.0) (float-vector 28.0 -9.19239 9.19239)))
         (instance face :init :vertices (list (float-vector -30.0 -9.19239 9.19239) (float-vector -28.0 -9.19239 9.19239) (float-vector -28.0 0.0 13.0) (float-vector -30.0 0.0 13.0)))
         (instance face :init :vertices (list (float-vector 30.0 -13.0 0.0) (float-vector 30.0 -9.19239 9.19239) (float-vector 28.0 -9.19239 9.19239) (float-vector 28.0 -13.0 0.0)))
         (instance face :init :vertices (list (float-vector -30.0 -13.0 0.0) (float-vector -28.0 -13.0 0.0) (float-vector -28.0 -9.19239 9.19239) (float-vector -30.0 -9.19239 9.19239)))
         (instance face :init :vertices (list (float-vector 30.0 -9.19239 -9.19239) (float-vector 30.0 -13.0 0.0) (float-vector 28.0 -13.0 0.0) (float-vector 28.0 -9.19239 -9.19239)))
         (instance face :init :vertices (list (float-vector -30.0 -9.19239 -9.19239) (float-vector -28.0 -9.19239 -9.19239) (float-vector -28.0 -13.0 0.0) (float-vector -30.0 -13.0 0.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 -13.0) (float-vector 30.0 26.0 -13.0) (float-vector 30.0 26.0 13.0) (float-vector 30.0 0.0 13.0) (float-vector 30.0 -9.19239 9.19239) (float-vector 30.0 -13.0 0.0) (float-vector 30.0 -9.19239 -9.19239)))
         (instance face :init :vertices (list (float-vector -30.0 -9.19239 -9.19239) (float-vector -30.0 -13.0 0.0) (float-vector -30.0 -9.19239 9.19239) (float-vector -30.0 0.0 13.0) (float-vector -30.0 26.0 13.0) (float-vector -30.0 26.0 -13.0) (float-vector -30.0 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector 30.0 -9.19239 -9.19239) (float-vector 28.0 -9.19239 -9.19239) (float-vector 28.0 0.0 -13.0) (float-vector 30.0 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector -30.0 0.0 -13.0) (float-vector -28.0 0.0 -13.0) (float-vector -28.0 -9.19239 -9.19239) (float-vector -30.0 -9.19239 -9.19239)))
         (instance face :init :vertices (list (float-vector 28.0 24.0 -13.0) (float-vector 28.0 0.0 -13.0) (float-vector 28.0 -9.19239 -9.19239) (float-vector 28.0 -13.0 0.0) (float-vector 28.0 -9.19239 9.19239) (float-vector 28.0 0.0 13.0) (float-vector 28.0 24.0 13.0)))
         (instance face :init :vertices (list (float-vector -28.0 24.0 -13.0) (float-vector 28.0 24.0 -13.0) (float-vector 28.0 24.0 13.0) (float-vector -28.0 24.0 13.0)))
         (instance face :init :vertices (list (float-vector -28.0 24.0 13.0) (float-vector -28.0 0.0 13.0) (float-vector -28.0 -9.19239 9.19239) (float-vector -28.0 -13.0 0.0) (float-vector -28.0 -9.19239 -9.19239) (float-vector -28.0 0.0 -13.0) (float-vector -28.0 24.0 -13.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 3.53553 96.0 3.53553) (float-vector -10.6066 96.0 17.6777) (float-vector -10.6066 26.0 17.6777) (float-vector 3.53553 26.0 3.53553) (float-vector 3.53553 28.0 3.53553) (float-vector -9.19239 28.0 16.2635) (float-vector -9.19239 94.0 16.2635) (float-vector 3.53553 94.0 3.53553)))
         (instance face :init :vertices (list (float-vector -17.6777 96.0 10.6066) (float-vector -17.6777 26.0 10.6066) (float-vector -10.6066 26.0 17.6777) (float-vector -10.6066 96.0 17.6777)))
         (instance face :init :vertices (list (float-vector -3.53553 96.0 -3.53553) (float-vector -3.53553 94.0 -3.53553) (float-vector -16.2635 94.0 9.19239) (float-vector -16.2635 28.0 9.19239) (float-vector -3.53553 28.0 -3.53553) (float-vector -3.53553 26.0 -3.53553) (float-vector -17.6777 26.0 10.6066) (float-vector -17.6777 96.0 10.6066)))
         (instance face :init :vertices (list (float-vector 0.0 26.0 -5.0) (float-vector -3.53553 26.0 -3.53553) (float-vector -3.53553 28.0 -3.53553) (float-vector 0.0 28.0 -5.0)))
         (instance face :init :vertices (list (float-vector 0.0 96.0 -5.0) (float-vector 0.0 94.0 -5.0) (float-vector -3.53553 94.0 -3.53553) (float-vector -3.53553 96.0 -3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 26.0 -3.53553) (float-vector 0.0 26.0 -5.0) (float-vector 0.0 28.0 -5.0) (float-vector 3.53553 28.0 -3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 96.0 -3.53553) (float-vector 3.53553 94.0 -3.53553) (float-vector 0.0 94.0 -5.0) (float-vector 0.0 96.0 -5.0)))
         (instance face :init :vertices (list (float-vector 5.0 26.0 0.0) (float-vector 3.53553 26.0 -3.53553) (float-vector 3.53553 28.0 -3.53553) (float-vector 5.0 28.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.0 96.0 -1.136868e-13) (float-vector 5.0 94.0 -5.684342e-14) (float-vector 3.53553 94.0 -3.53553) (float-vector 3.53553 96.0 -3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 26.0 3.53553) (float-vector -10.6066 26.0 17.6777) (float-vector -17.6777 26.0 10.6066) (float-vector -3.53553 26.0 -3.53553) (float-vector 0.0 26.0 -5.0) (float-vector 3.53553 26.0 -3.53553) (float-vector 5.0 26.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.0 96.0 -1.136868e-13) (float-vector 3.53553 96.0 -3.53553) (float-vector 0.0 96.0 -5.0) (float-vector -3.53553 96.0 -3.53553) (float-vector -17.6777 96.0 10.6066) (float-vector -10.6066 96.0 17.6777) (float-vector 3.53553 96.0 3.53553)))
         (instance face :init :vertices (list (float-vector 5.0 26.0 0.0) (float-vector 5.0 28.0 0.0) (float-vector 3.53553 28.0 3.53553) (float-vector 3.53553 26.0 3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 96.0 3.53553) (float-vector 3.53553 94.0 3.53553) (float-vector 5.0 94.0 -5.684342e-14) (float-vector 5.0 96.0 -1.136868e-13)))
         (instance face :init :vertices (list (float-vector -9.19239 28.0 16.2635) (float-vector 3.53553 28.0 3.53553) (float-vector 5.0 28.0 0.0) (float-vector 3.53553 28.0 -3.53553) (float-vector 0.0 28.0 -5.0) (float-vector -3.53553 28.0 -3.53553) (float-vector -16.2635 28.0 9.19239)))
         (instance face :init :vertices (list (float-vector -9.19239 94.0 16.2635) (float-vector -9.19239 28.0 16.2635) (float-vector -16.2635 28.0 9.19239) (float-vector -16.2635 94.0 9.19239)))
         (instance face :init :vertices (list (float-vector -16.2635 94.0 9.19239) (float-vector -3.53553 94.0 -3.53553) (float-vector 0.0 94.0 -5.0) (float-vector 3.53553 94.0 -3.53553) (float-vector 5.0 94.0 -5.684342e-14) (float-vector 3.53553 94.0 3.53553) (float-vector -9.19239 94.0 16.2635)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray90)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 23.8503 :centroid (float-vector -2.62524 27.2712 2.62524) :inertia-tensor #2f((25036.6 2841.59 608.705) (2841.59 1320.17 -2841.59) (608.705 -2841.59 25036.6))))

     ;; definition of :larm-upperarm
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.5 41.0 -48.1) (float-vector -14.5 41.0 -48.1) (float-vector -20.1 41.0 -42.6) (float-vector -20.1 41.0 5.0) (float-vector -14.5 41.0 13.0) (float-vector 14.5 41.0 13.0) (float-vector 20.1 41.0 5.0) (float-vector 20.1 41.0 -42.6)))
         (instance face :init :vertices (list (float-vector -14.5 0.0 -48.1) (float-vector 14.5 0.0 -48.1) (float-vector 20.1 0.0 -42.6) (float-vector 20.1 -5.684342e-14 5.0) (float-vector 14.5 0.0 13.0) (float-vector -14.5 0.0 13.0) (float-vector -20.1 -5.684342e-14 5.0) (float-vector -20.1 0.0 -42.6)))
         (instance face :init :vertices (list (float-vector 14.5 41.0 -48.1) (float-vector 14.5 0.0 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector -14.5 41.0 -48.1)))
         (instance face :init :vertices (list (float-vector 20.1 41.0 -42.6) (float-vector 20.1 0.0 -42.6) (float-vector 14.5 0.0 -48.1) (float-vector 14.5 41.0 -48.1)))
         (instance face :init :vertices (list (float-vector 20.1 41.0 5.0) (float-vector 20.1 -5.684342e-14 5.0) (float-vector 20.1 0.0 -42.6) (float-vector 20.1 41.0 -42.6)))
         (instance face :init :vertices (list (float-vector 14.5 41.0 13.0) (float-vector 14.5 0.0 13.0) (float-vector 20.1 -5.684342e-14 5.0) (float-vector 20.1 41.0 5.0)))
         (instance face :init :vertices (list (float-vector -14.5 41.0 13.0) (float-vector -14.5 0.0 13.0) (float-vector 14.5 0.0 13.0) (float-vector 14.5 41.0 13.0)))
         (instance face :init :vertices (list (float-vector -20.1 41.0 5.0) (float-vector -20.1 -5.684342e-14 5.0) (float-vector -14.5 0.0 13.0) (float-vector -14.5 41.0 13.0)))
         (instance face :init :vertices (list (float-vector -20.1 41.0 -42.6) (float-vector -20.1 0.0 -42.6) (float-vector -20.1 -5.684342e-14 5.0) (float-vector -20.1 41.0 5.0)))
         (instance face :init :vertices (list (float-vector -14.5 41.0 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector -20.1 0.0 -42.6) (float-vector -20.1 41.0 -42.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.0 -19.0 5.684342e-14) (float-vector 16.0 -7.0 5.684342e-14) (float-vector 13.8564 -7.0 8.0) (float-vector 13.8564 -19.0 8.0)))
         (instance face :init :vertices (list (float-vector 13.8564 -7.0 8.0) (float-vector 8.0 -7.0 13.8564) (float-vector 8.0 -19.0 13.8564) (float-vector 13.8564 -19.0 8.0)))
         (instance face :init :vertices (list (float-vector 8.0 -7.0 13.8564) (float-vector 7.105427e-15 -7.0 16.0) (float-vector 7.105427e-15 -19.0 16.0) (float-vector 8.0 -19.0 13.8564)))
         (instance face :init :vertices (list (float-vector 7.105427e-15 -7.0 16.0) (float-vector -8.0 -7.0 13.8564) (float-vector -8.0 -19.0 13.8564) (float-vector 7.105427e-15 -19.0 16.0)))
         (instance face :init :vertices (list (float-vector -8.0 -7.0 13.8564) (float-vector -13.8564 -7.0 8.0) (float-vector -13.8564 -19.0 8.0) (float-vector -8.0 -19.0 13.8564)))
         (instance face :init :vertices (list (float-vector -13.8564 -7.0 8.0) (float-vector -16.0 -7.0 5.684342e-14) (float-vector -16.0 -19.0 5.684342e-14) (float-vector -13.8564 -19.0 8.0)))
         (instance face :init :vertices (list (float-vector -16.0 -7.0 5.684342e-14) (float-vector -13.8564 -7.0 -8.0) (float-vector -13.8564 -19.0 -8.0) (float-vector -16.0 -19.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -13.8564 -7.0 -8.0) (float-vector -8.0 -7.0 -13.8564) (float-vector -8.0 -19.0 -13.8564) (float-vector -13.8564 -19.0 -8.0)))
         (instance face :init :vertices (list (float-vector -8.0 -7.0 -13.8564) (float-vector -2.486900e-14 -7.0 -16.0) (float-vector -2.486900e-14 -19.0 -16.0) (float-vector -8.0 -19.0 -13.8564)))
         (instance face :init :vertices (list (float-vector -2.486900e-14 -7.0 -16.0) (float-vector 8.0 -7.0 -13.8564) (float-vector 8.0 -19.0 -13.8564) (float-vector -2.486900e-14 -19.0 -16.0)))
         (instance face :init :vertices (list (float-vector 8.0 -7.0 -13.8564) (float-vector 13.8564 -7.0 -8.0) (float-vector 13.8564 -19.0 -8.0) (float-vector 8.0 -19.0 -13.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 -19.0 -8.0) (float-vector 16.0 -19.0 5.684342e-14) (float-vector 13.8564 -19.0 8.0) (float-vector 8.0 -19.0 13.8564) (float-vector 7.105427e-15 -19.0 16.0) (float-vector -8.0 -19.0 13.8564) (float-vector -13.8564 -19.0 8.0) (float-vector -16.0 -19.0 5.684342e-14) (float-vector -13.8564 -19.0 -8.0) (float-vector -8.0 -19.0 -13.8564) (float-vector -2.486900e-14 -19.0 -16.0) (float-vector 8.0 -19.0 -13.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 -7.0 -8.0) (float-vector 16.0 -7.0 5.684342e-14) (float-vector 16.0 -19.0 5.684342e-14) (float-vector 13.8564 -19.0 -8.0)))
         (instance face :init :vertices (list (float-vector 20.5 -7.0 5.684342e-14) (float-vector 20.5 0.0 0.0) (float-vector 17.7535 0.0 10.25) (float-vector 17.7535 -7.0 10.25)))
         (instance face :init :vertices (list (float-vector 17.7535 0.0 10.25) (float-vector 10.25 0.0 17.7535) (float-vector 10.25 -7.0 17.7535) (float-vector 17.7535 -7.0 10.25)))
         (instance face :init :vertices (list (float-vector 10.25 0.0 17.7535) (float-vector 1.065814e-14 -5.684342e-14 20.5) (float-vector 1.065814e-14 -7.0 20.5) (float-vector 10.25 -7.0 17.7535)))
         (instance face :init :vertices (list (float-vector 1.065814e-14 -5.684342e-14 20.5) (float-vector -10.25 0.0 17.7535) (float-vector -10.25 -7.0 17.7535) (float-vector 1.065814e-14 -7.0 20.5)))
         (instance face :init :vertices (list (float-vector -10.25 0.0 17.7535) (float-vector -17.7535 0.0 10.25) (float-vector -17.7535 -7.0 10.25) (float-vector -10.25 -7.0 17.7535)))
         (instance face :init :vertices (list (float-vector -17.7535 0.0 10.25) (float-vector -20.5 -5.684342e-14 0.0) (float-vector -20.5 -7.0 5.684342e-14) (float-vector -17.7535 -7.0 10.25)))
         (instance face :init :vertices (list (float-vector -20.5 -5.684342e-14 0.0) (float-vector -17.7535 0.0 -10.25) (float-vector -17.7535 -7.0 -10.25) (float-vector -20.5 -7.0 5.684342e-14)))
         (instance face :init :vertices (list (float-vector -17.7535 0.0 -10.25) (float-vector -10.25 0.0 -17.7535) (float-vector -10.25 -7.0 -17.7535) (float-vector -17.7535 -7.0 -10.25)))
         (instance face :init :vertices (list (float-vector -10.25 0.0 -17.7535) (float-vector -3.552714e-14 -5.684342e-14 -20.5) (float-vector -3.552714e-14 -7.0 -20.5) (float-vector -10.25 -7.0 -17.7535)))
         (instance face :init :vertices (list (float-vector -3.552714e-14 -5.684342e-14 -20.5) (float-vector 10.25 -5.684342e-14 -17.7535) (float-vector 10.25 -7.0 -17.7535) (float-vector -3.552714e-14 -7.0 -20.5)))
         (instance face :init :vertices (list (float-vector 10.25 -5.684342e-14 -17.7535) (float-vector 17.7535 0.0 -10.25) (float-vector 17.7535 -7.0 -10.25) (float-vector 10.25 -7.0 -17.7535)))
         (instance face :init :vertices (list (float-vector 17.7535 -7.0 -10.25) (float-vector 20.5 -7.0 5.684342e-14) (float-vector 17.7535 -7.0 10.25) (float-vector 10.25 -7.0 17.7535) (float-vector 1.065814e-14 -7.0 20.5) (float-vector -10.25 -7.0 17.7535) (float-vector -17.7535 -7.0 10.25) (float-vector -20.5 -7.0 5.684342e-14) (float-vector -17.7535 -7.0 -10.25) (float-vector -10.25 -7.0 -17.7535) (float-vector -3.552714e-14 -7.0 -20.5) (float-vector 10.25 -7.0 -17.7535))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 16.0 -7.0 5.684342e-14) (float-vector 13.8564 -7.0 -8.0) (float-vector 8.0 -7.0 -13.8564) (float-vector -2.486900e-14 -7.0 -16.0) (float-vector -8.0 -7.0 -13.8564) (float-vector -13.8564 -7.0 -8.0) (float-vector -16.0 -7.0 5.684342e-14) (float-vector -13.8564 -7.0 8.0) (float-vector -8.0 -7.0 13.8564) (float-vector 7.105427e-15 -7.0 16.0) (float-vector 8.0 -7.0 13.8564) (float-vector 13.8564 -7.0 8.0)))
))
         (instance face :init :vertices (list (float-vector 17.7535 0.0 -10.25) (float-vector 20.5 0.0 0.0) (float-vector 20.5 -7.0 5.684342e-14) (float-vector 17.7535 -7.0 -10.25)))
         (instance face :init :vertices (list (float-vector 20.5 0.0 0.0) (float-vector 17.7535 0.0 -10.25) (float-vector 10.25 -5.684342e-14 -17.7535) (float-vector -3.552714e-14 -5.684342e-14 -20.5) (float-vector -10.25 0.0 -17.7535) (float-vector -17.7535 0.0 -10.25) (float-vector -20.5 -5.684342e-14 0.0) (float-vector -17.7535 0.0 10.25) (float-vector -10.25 0.0 17.7535) (float-vector 1.065814e-14 -5.684342e-14 20.5) (float-vector 10.25 0.0 17.7535) (float-vector 17.7535 0.0 10.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.6 32.2 -49.5) (float-vector -30.6 7.8 -49.5) (float-vector -25.0 2.2 -49.5) (float-vector 14.0 2.2 -49.5) (float-vector 20.0 7.8 -49.5) (float-vector 20.0 32.2 -49.5) (float-vector 14.0 37.8 -49.5) (float-vector -25.0 37.8 -49.5)))
         (instance face :init :vertices (list (float-vector -30.6 7.8 -85.0) (float-vector -30.6 32.2 -85.0) (float-vector -25.0 37.8 -85.0) (float-vector 14.0 37.8 -85.0) (float-vector 20.0 32.2 -85.0) (float-vector 20.0 7.8 -85.0) (float-vector 14.0 2.2 -85.0) (float-vector -25.0 2.2 -85.0)))
         (instance face :init :vertices (list (float-vector -30.6 32.2 -49.5) (float-vector -30.6 32.2 -85.0) (float-vector -30.6 7.8 -85.0) (float-vector -30.6 7.8 -49.5)))
         (instance face :init :vertices (list (float-vector -25.0 37.8 -49.5) (float-vector -25.0 37.8 -85.0) (float-vector -30.6 32.2 -85.0) (float-vector -30.6 32.2 -49.5)))
         (instance face :init :vertices (list (float-vector 14.0 37.8 -49.5) (float-vector 14.0 37.8 -85.0) (float-vector -25.0 37.8 -85.0) (float-vector -25.0 37.8 -49.5)))
         (instance face :init :vertices (list (float-vector 20.0 32.2 -49.5) (float-vector 20.0 32.2 -85.0) (float-vector 14.0 37.8 -85.0) (float-vector 14.0 37.8 -49.5)))
         (instance face :init :vertices (list (float-vector 20.0 7.8 -49.5) (float-vector 20.0 7.8 -85.0) (float-vector 20.0 32.2 -85.0) (float-vector 20.0 32.2 -49.5)))
         (instance face :init :vertices (list (float-vector 14.0 2.2 -49.5) (float-vector 14.0 2.2 -85.0) (float-vector 20.0 7.8 -85.0) (float-vector 20.0 7.8 -49.5)))
         (instance face :init :vertices (list (float-vector -25.0 2.2 -49.5) (float-vector -25.0 2.2 -85.0) (float-vector 14.0 2.2 -85.0) (float-vector 14.0 2.2 -49.5)))
         (instance face :init :vertices (list (float-vector -30.6 7.8 -49.5) (float-vector -30.6 7.8 -85.0) (float-vector -25.0 2.2 -85.0) (float-vector -25.0 2.2 -49.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.5055 18.0 -109.091) (float-vector 19.4903 6.74725 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 19.4903 6.74725 -109.091) (float-vector 11.2527 -1.49033 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 11.2527 -1.49033 -109.091) (float-vector -1.243450e-13 -4.5055 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -1.243450e-13 -4.5055 -109.091) (float-vector -11.2528 -1.49033 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -11.2528 -1.49033 -109.091) (float-vector -19.4903 6.74725 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -19.4903 6.74725 -109.091) (float-vector -22.5055 18.0 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -22.5055 18.0 -109.091) (float-vector -19.4903 29.2528 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -19.4903 29.2528 -109.091) (float-vector -11.2527 37.4903 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -11.2527 37.4903 -109.091) (float-vector 2.131628e-14 40.5055 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 40.5055 -109.091) (float-vector 11.2527 37.4903 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 11.2527 37.4903 -109.091) (float-vector 19.4903 29.2527 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 19.4903 29.2527 -109.091) (float-vector 22.5055 18.0 -109.091) (float-vector 0.0 18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 33.7582 -1.49033 -92.6155) (float-vector 19.4903 6.74725 -109.091) (float-vector 22.5055 18.0 -109.091) (float-vector 38.9807 18.0 -92.6155)))
         (instance face :init :vertices (list (float-vector 19.4903 -15.7583 -92.6155) (float-vector 11.2527 -1.49033 -109.091) (float-vector 19.4903 6.74725 -109.091) (float-vector 33.7582 -1.49033 -92.6155)))
         (instance face :init :vertices (list (float-vector -2.131628e-13 -20.9807 -92.6155) (float-vector -1.243450e-13 -4.5055 -109.091) (float-vector 11.2527 -1.49033 -109.091) (float-vector 19.4903 -15.7583 -92.6155)))
         (instance face :init :vertices (list (float-vector -19.4903 -15.7582 -92.6155) (float-vector -11.2528 -1.49033 -109.091) (float-vector -1.243450e-13 -4.5055 -109.091) (float-vector -2.131628e-13 -20.9807 -92.6155)))
         (instance face :init :vertices (list (float-vector -33.7583 -1.49033 -92.6155) (float-vector -19.4903 6.74725 -109.091) (float-vector -11.2528 -1.49033 -109.091) (float-vector -19.4903 -15.7582 -92.6155)))
         (instance face :init :vertices (list (float-vector -38.9807 18.0 -92.6155) (float-vector -22.5055 18.0 -109.091) (float-vector -19.4903 6.74725 -109.091) (float-vector -33.7583 -1.49033 -92.6155)))
         (instance face :init :vertices (list (float-vector -33.7582 37.4903 -92.6155) (float-vector -19.4903 29.2528 -109.091) (float-vector -22.5055 18.0 -109.091) (float-vector -38.9807 18.0 -92.6155)))
         (instance face :init :vertices (list (float-vector -19.4903 51.7582 -92.6155) (float-vector -11.2527 37.4903 -109.091) (float-vector -19.4903 29.2528 -109.091) (float-vector -33.7582 37.4903 -92.6155)))
         (instance face :init :vertices (list (float-vector 3.552714e-14 56.9807 -92.6155) (float-vector 2.131628e-14 40.5055 -109.091) (float-vector -11.2527 37.4903 -109.091) (float-vector -19.4903 51.7582 -92.6155)))
         (instance face :init :vertices (list (float-vector 19.4903 51.7582 -92.6155) (float-vector 11.2527 37.4903 -109.091) (float-vector 2.131628e-14 40.5055 -109.091) (float-vector 3.552714e-14 56.9807 -92.6155)))
         (instance face :init :vertices (list (float-vector 33.7582 37.4903 -92.6155) (float-vector 19.4903 29.2527 -109.091) (float-vector 11.2527 37.4903 -109.091) (float-vector 19.4903 51.7582 -92.6155)))
         (instance face :init :vertices (list (float-vector 38.9807 18.0 -92.6155) (float-vector 22.5055 18.0 -109.091) (float-vector 19.4903 29.2527 -109.091) (float-vector 33.7582 37.4903 -92.6155)))
         (instance face :init :vertices (list (float-vector 38.9807 -4.5055 -70.11) (float-vector 33.7582 -1.49033 -92.6155) (float-vector 38.9807 18.0 -92.6155) (float-vector 45.011 18.0 -70.11)))
         (instance face :init :vertices (list (float-vector 22.5055 -20.9807 -70.11) (float-vector 19.4903 -15.7583 -92.6155) (float-vector 33.7582 -1.49033 -92.6155) (float-vector 38.9807 -4.5055 -70.11)))
         (instance face :init :vertices (list (float-vector -2.486900e-13 -27.011 -70.11) (float-vector -2.131628e-13 -20.9807 -92.6155) (float-vector 19.4903 -15.7583 -92.6155) (float-vector 22.5055 -20.9807 -70.11)))
         (instance face :init :vertices (list (float-vector -22.5055 -20.9807 -70.11) (float-vector -19.4903 -15.7582 -92.6155) (float-vector -2.131628e-13 -20.9807 -92.6155) (float-vector -2.486900e-13 -27.011 -70.11)))
         (instance face :init :vertices (list (float-vector -38.9807 -4.5055 -70.11) (float-vector -33.7583 -1.49033 -92.6155) (float-vector -19.4903 -15.7582 -92.6155) (float-vector -22.5055 -20.9807 -70.11)))
         (instance face :init :vertices (list (float-vector -45.011 18.0 -70.11) (float-vector -38.9807 18.0 -92.6155) (float-vector -33.7583 -1.49033 -92.6155) (float-vector -38.9807 -4.5055 -70.11)))
         (instance face :init :vertices (list (float-vector -38.9807 40.5055 -70.11) (float-vector -33.7582 37.4903 -92.6155) (float-vector -38.9807 18.0 -92.6155) (float-vector -45.011 18.0 -70.11)))
         (instance face :init :vertices (list (float-vector -22.5055 56.9807 -70.11) (float-vector -19.4903 51.7582 -92.6155) (float-vector -33.7582 37.4903 -92.6155) (float-vector -38.9807 40.5055 -70.11)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 63.011 -70.11) (float-vector 3.552714e-14 56.9807 -92.6155) (float-vector -19.4903 51.7582 -92.6155) (float-vector -22.5055 56.9807 -70.11)))
         (instance face :init :vertices (list (float-vector 22.5055 56.9807 -70.11) (float-vector 19.4903 51.7582 -92.6155) (float-vector 3.552714e-14 56.9807 -92.6155) (float-vector 4.263256e-14 63.011 -70.11)))
         (instance face :init :vertices (list (float-vector 38.9807 40.5055 -70.11) (float-vector 33.7582 37.4903 -92.6155) (float-vector 19.4903 51.7582 -92.6155) (float-vector 22.5055 56.9807 -70.11)))
         (instance face :init :vertices (list (float-vector 45.011 18.0 -70.11) (float-vector 38.9807 18.0 -92.6155) (float-vector 33.7582 37.4903 -92.6155) (float-vector 38.9807 40.5055 -70.11)))
         (instance face :init :vertices (list (float-vector 38.9807 -4.5055 9.89) (float-vector 38.9807 -4.5055 -70.11) (float-vector 45.011 18.0 -70.11) (float-vector 45.011 18.0 9.89)))
         (instance face :init :vertices (list (float-vector 22.5055 -20.9807 9.89) (float-vector 22.5055 -20.9807 -70.11) (float-vector 38.9807 -4.5055 -70.11) (float-vector 38.9807 -4.5055 9.89)))
         (instance face :init :vertices (list (float-vector -2.486900e-13 -27.011 9.89) (float-vector -2.486900e-13 -27.011 -70.11) (float-vector 22.5055 -20.9807 -70.11) (float-vector 22.5055 -20.9807 9.89)))
         (instance face :init :vertices (list (float-vector -22.5055 -20.9807 9.89) (float-vector -22.5055 -20.9807 -70.11) (float-vector -2.486900e-13 -27.011 -70.11) (float-vector -2.486900e-13 -27.011 9.89)))
         (instance face :init :vertices (list (float-vector -38.9807 -4.5055 9.89) (float-vector -38.9807 -4.5055 -70.11) (float-vector -22.5055 -20.9807 -70.11) (float-vector -22.5055 -20.9807 9.89)))
         (instance face :init :vertices (list (float-vector -45.011 18.0 9.89) (float-vector -45.011 18.0 -70.11) (float-vector -38.9807 -4.5055 -70.11) (float-vector -38.9807 -4.5055 9.89)))
         (instance face :init :vertices (list (float-vector -38.9807 40.5055 9.89) (float-vector -38.9807 40.5055 -70.11) (float-vector -45.011 18.0 -70.11) (float-vector -45.011 18.0 9.89)))
         (instance face :init :vertices (list (float-vector -22.5055 56.9807 9.89) (float-vector -22.5055 56.9807 -70.11) (float-vector -38.9807 40.5055 -70.11) (float-vector -38.9807 40.5055 9.89)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 63.011 9.89) (float-vector 4.263256e-14 63.011 -70.11) (float-vector -22.5055 56.9807 -70.11) (float-vector -22.5055 56.9807 9.89)))
         (instance face :init :vertices (list (float-vector 22.5055 56.9807 9.89) (float-vector 22.5055 56.9807 -70.11) (float-vector 4.263256e-14 63.011 -70.11) (float-vector 4.263256e-14 63.011 9.89)))
         (instance face :init :vertices (list (float-vector 38.9807 40.5055 9.89) (float-vector 38.9807 40.5055 -70.11) (float-vector 22.5055 56.9807 -70.11) (float-vector 22.5055 56.9807 9.89)))
         (instance face :init :vertices (list (float-vector 45.011 18.0 9.89) (float-vector 45.011 18.0 -70.11) (float-vector 38.9807 40.5055 -70.11) (float-vector 38.9807 40.5055 9.89)))
         (instance face :init :vertices (list (float-vector 33.7582 -1.49033 32.3955) (float-vector 38.9807 -4.5055 9.89) (float-vector 45.011 18.0 9.89) (float-vector 38.9807 18.0 32.3955)))
         (instance face :init :vertices (list (float-vector 19.4903 -15.7583 32.3955) (float-vector 22.5055 -20.9807 9.89) (float-vector 38.9807 -4.5055 9.89) (float-vector 33.7582 -1.49033 32.3955)))
         (instance face :init :vertices (list (float-vector -2.131628e-13 -20.9807 32.3955) (float-vector -2.486900e-13 -27.011 9.89) (float-vector 22.5055 -20.9807 9.89) (float-vector 19.4903 -15.7583 32.3955)))
         (instance face :init :vertices (list (float-vector -19.4903 -15.7582 32.3955) (float-vector -22.5055 -20.9807 9.89) (float-vector -2.486900e-13 -27.011 9.89) (float-vector -2.131628e-13 -20.9807 32.3955)))
         (instance face :init :vertices (list (float-vector -33.7583 -1.49033 32.3955) (float-vector -38.9807 -4.5055 9.89) (float-vector -22.5055 -20.9807 9.89) (float-vector -19.4903 -15.7582 32.3955)))
         (instance face :init :vertices (list (float-vector -38.9807 18.0 32.3955) (float-vector -45.011 18.0 9.89) (float-vector -38.9807 -4.5055 9.89) (float-vector -33.7583 -1.49033 32.3955)))
         (instance face :init :vertices (list (float-vector -33.7582 37.4903 32.3955) (float-vector -38.9807 40.5055 9.89) (float-vector -45.011 18.0 9.89) (float-vector -38.9807 18.0 32.3955)))
         (instance face :init :vertices (list (float-vector -19.4903 51.7582 32.3955) (float-vector -22.5055 56.9807 9.89) (float-vector -38.9807 40.5055 9.89) (float-vector -33.7582 37.4903 32.3955)))
         (instance face :init :vertices (list (float-vector 3.552714e-14 56.9807 32.3955) (float-vector 4.263256e-14 63.011 9.89) (float-vector -22.5055 56.9807 9.89) (float-vector -19.4903 51.7582 32.3955)))
         (instance face :init :vertices (list (float-vector 19.4903 51.7582 32.3955) (float-vector 22.5055 56.9807 9.89) (float-vector 4.263256e-14 63.011 9.89) (float-vector 3.552714e-14 56.9807 32.3955)))
         (instance face :init :vertices (list (float-vector 33.7582 37.4903 32.3955) (float-vector 38.9807 40.5055 9.89) (float-vector 22.5055 56.9807 9.89) (float-vector 19.4903 51.7582 32.3955)))
         (instance face :init :vertices (list (float-vector 38.9807 18.0 32.3955) (float-vector 45.011 18.0 9.89) (float-vector 38.9807 40.5055 9.89) (float-vector 33.7582 37.4903 32.3955)))
         (instance face :init :vertices (list (float-vector 19.4903 6.74725 48.8707) (float-vector 33.7582 -1.49033 32.3955) (float-vector 38.9807 18.0 32.3955) (float-vector 22.5055 18.0 48.8707)))
         (instance face :init :vertices (list (float-vector 11.2527 -1.49033 48.8707) (float-vector 19.4903 -15.7583 32.3955) (float-vector 33.7582 -1.49033 32.3955) (float-vector 19.4903 6.74725 48.8707)))
         (instance face :init :vertices (list (float-vector -1.243450e-13 -4.5055 48.8707) (float-vector -2.131628e-13 -20.9807 32.3955) (float-vector 19.4903 -15.7583 32.3955) (float-vector 11.2527 -1.49033 48.8707)))
         (instance face :init :vertices (list (float-vector -11.2528 -1.49033 48.8707) (float-vector -19.4903 -15.7582 32.3955) (float-vector -2.131628e-13 -20.9807 32.3955) (float-vector -1.243450e-13 -4.5055 48.8707)))
         (instance face :init :vertices (list (float-vector -19.4903 6.74725 48.8707) (float-vector -33.7583 -1.49033 32.3955) (float-vector -19.4903 -15.7582 32.3955) (float-vector -11.2528 -1.49033 48.8707)))
         (instance face :init :vertices (list (float-vector -22.5055 18.0 48.8707) (float-vector -38.9807 18.0 32.3955) (float-vector -33.7583 -1.49033 32.3955) (float-vector -19.4903 6.74725 48.8707)))
         (instance face :init :vertices (list (float-vector -19.4903 29.2527 48.8707) (float-vector -33.7582 37.4903 32.3955) (float-vector -38.9807 18.0 32.3955) (float-vector -22.5055 18.0 48.8707)))
         (instance face :init :vertices (list (float-vector -11.2527 37.4903 48.8707) (float-vector -19.4903 51.7582 32.3955) (float-vector -33.7582 37.4903 32.3955) (float-vector -19.4903 29.2527 48.8707)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 40.5055 48.8707) (float-vector 3.552714e-14 56.9807 32.3955) (float-vector -19.4903 51.7582 32.3955) (float-vector -11.2527 37.4903 48.8707)))
         (instance face :init :vertices (list (float-vector 11.2527 37.4903 48.8707) (float-vector 19.4903 51.7582 32.3955) (float-vector 3.552714e-14 56.9807 32.3955) (float-vector 2.131628e-14 40.5055 48.8707)))
         (instance face :init :vertices (list (float-vector 19.4903 29.2527 48.8707) (float-vector 33.7582 37.4903 32.3955) (float-vector 19.4903 51.7582 32.3955) (float-vector 11.2527 37.4903 48.8707)))
         (instance face :init :vertices (list (float-vector 22.5055 18.0 48.8707) (float-vector 38.9807 18.0 32.3955) (float-vector 33.7582 37.4903 32.3955) (float-vector 19.4903 29.2527 48.8707)))
         (instance face :init :vertices (list (float-vector 19.4903 6.74725 48.8707) (float-vector 22.5055 18.0 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector 22.5055 18.0 48.8707) (float-vector 19.4903 29.2527 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector 19.4903 29.2527 48.8707) (float-vector 11.2527 37.4903 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector 11.2527 37.4903 48.8707) (float-vector 2.131628e-14 40.5055 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 40.5055 48.8707) (float-vector -11.2527 37.4903 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector -11.2527 37.4903 48.8707) (float-vector -19.4903 29.2527 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector -19.4903 29.2527 48.8707) (float-vector -22.5055 18.0 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector -22.5055 18.0 48.8707) (float-vector -19.4903 6.74725 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector -19.4903 6.74725 48.8707) (float-vector -11.2528 -1.49033 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector -11.2528 -1.49033 48.8707) (float-vector -1.243450e-13 -4.5055 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector -1.243450e-13 -4.5055 48.8707) (float-vector 11.2527 -1.49033 48.8707) (float-vector 0.0 18.0 54.901)))
         (instance face :init :vertices (list (float-vector 11.2527 -1.49033 48.8707) (float-vector 19.4903 6.74725 48.8707) (float-vector 0.0 18.0 54.901)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -25.0 -50.0) (float-vector -10.0 -25.0 -50.0) (float-vector -10.0 -25.0 -70.0) (float-vector 10.0 -25.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 -5.0 -50.0) (float-vector 10.0 -5.0 -50.0) (float-vector 10.0 -5.0 -70.0) (float-vector -10.0 -5.0 -70.0)))
         (instance face :init :vertices (list (float-vector 10.0 -25.0 -50.0) (float-vector 10.0 -5.0 -50.0) (float-vector -10.0 -5.0 -50.0) (float-vector -10.0 -25.0 -50.0)))
         (instance face :init :vertices (list (float-vector 10.0 -25.0 -70.0) (float-vector 10.0 -5.0 -70.0) (float-vector 10.0 -5.0 -50.0) (float-vector 10.0 -25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 -25.0 -70.0) (float-vector -10.0 -5.0 -70.0) (float-vector 10.0 -5.0 -70.0) (float-vector 10.0 -25.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 -25.0 -50.0) (float-vector -10.0 -5.0 -50.0) (float-vector -10.0 -5.0 -70.0) (float-vector -10.0 -25.0 -70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 50.0 -70.0) (float-vector -10.0 50.0 -70.0) (float-vector -10.0 50.0 -50.0) (float-vector 10.0 50.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -70.0) (float-vector 10.0 30.0 -70.0) (float-vector 10.0 30.0 -50.0) (float-vector -10.0 30.0 -50.0)))
         (instance face :init :vertices (list (float-vector 10.0 50.0 -70.0) (float-vector 10.0 30.0 -70.0) (float-vector -10.0 30.0 -70.0) (float-vector -10.0 50.0 -70.0)))
         (instance face :init :vertices (list (float-vector 10.0 50.0 -50.0) (float-vector 10.0 30.0 -50.0) (float-vector 10.0 30.0 -70.0) (float-vector 10.0 50.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -50.0) (float-vector -10.0 30.0 -50.0) (float-vector 10.0 30.0 -50.0) (float-vector 10.0 50.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -70.0) (float-vector -10.0 30.0 -70.0) (float-vector -10.0 30.0 -50.0) (float-vector -10.0 50.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 30.0 -40.0) (float-vector 40.0 30.0 -20.0) (float-vector 40.0 10.0 -20.0) (float-vector 40.0 10.0 -40.0)))
         (instance face :init :vertices (list (float-vector 20.0 30.0 -20.0) (float-vector 20.0 30.0 -40.0) (float-vector 20.0 10.0 -40.0) (float-vector 20.0 10.0 -20.0)))
         (instance face :init :vertices (list (float-vector 40.0 30.0 -40.0) (float-vector 20.0 30.0 -40.0) (float-vector 20.0 30.0 -20.0) (float-vector 40.0 30.0 -20.0)))
         (instance face :init :vertices (list (float-vector 40.0 10.0 -40.0) (float-vector 20.0 10.0 -40.0) (float-vector 20.0 30.0 -40.0) (float-vector 40.0 30.0 -40.0)))
         (instance face :init :vertices (list (float-vector 40.0 10.0 -20.0) (float-vector 20.0 10.0 -20.0) (float-vector 20.0 10.0 -40.0) (float-vector 40.0 10.0 -40.0)))
         (instance face :init :vertices (list (float-vector 40.0 30.0 -20.0) (float-vector 20.0 30.0 -20.0) (float-vector 20.0 10.0 -20.0) (float-vector 40.0 10.0 -20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -50.0 30.0 -20.0) (float-vector -50.0 30.0 -40.0) (float-vector -50.0 10.0 -40.0) (float-vector -50.0 10.0 -20.0)))
         (instance face :init :vertices (list (float-vector -30.0 30.0 -40.0) (float-vector -30.0 30.0 -20.0) (float-vector -30.0 10.0 -20.0) (float-vector -30.0 10.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 30.0 -20.0) (float-vector -30.0 30.0 -20.0) (float-vector -30.0 30.0 -40.0) (float-vector -50.0 30.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 10.0 -20.0) (float-vector -30.0 10.0 -20.0) (float-vector -30.0 30.0 -20.0) (float-vector -50.0 30.0 -20.0)))
         (instance face :init :vertices (list (float-vector -50.0 10.0 -40.0) (float-vector -30.0 10.0 -40.0) (float-vector -30.0 10.0 -20.0) (float-vector -50.0 10.0 -20.0)))
         (instance face :init :vertices (list (float-vector -50.0 30.0 -40.0) (float-vector -30.0 30.0 -40.0) (float-vector -30.0 10.0 -40.0) (float-vector -50.0 10.0 -40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 30.0 -70.0) (float-vector 40.0 30.0 -50.0) (float-vector 40.0 10.0 -50.0) (float-vector 40.0 10.0 -70.0)))
         (instance face :init :vertices (list (float-vector 20.0 30.0 -50.0) (float-vector 20.0 30.0 -70.0) (float-vector 20.0 10.0 -70.0) (float-vector 20.0 10.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 30.0 -70.0) (float-vector 20.0 30.0 -70.0) (float-vector 20.0 30.0 -50.0) (float-vector 40.0 30.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 10.0 -70.0) (float-vector 20.0 10.0 -70.0) (float-vector 20.0 30.0 -70.0) (float-vector 40.0 30.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 10.0 -50.0) (float-vector 20.0 10.0 -50.0) (float-vector 20.0 10.0 -70.0) (float-vector 40.0 10.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 30.0 -50.0) (float-vector 20.0 30.0 -50.0) (float-vector 20.0 10.0 -50.0) (float-vector 40.0 10.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -5.0 -100.0) (float-vector -10.0 -5.0 -100.0) (float-vector -10.0 -5.0 -80.0) (float-vector 10.0 -5.0 -80.0)))
         (instance face :init :vertices (list (float-vector -10.0 -25.0 -100.0) (float-vector 10.0 -25.0 -100.0) (float-vector 10.0 -25.0 -80.0) (float-vector -10.0 -25.0 -80.0)))
         (instance face :init :vertices (list (float-vector 10.0 -5.0 -100.0) (float-vector 10.0 -25.0 -100.0) (float-vector -10.0 -25.0 -100.0) (float-vector -10.0 -5.0 -100.0)))
         (instance face :init :vertices (list (float-vector 10.0 -5.0 -80.0) (float-vector 10.0 -25.0 -80.0) (float-vector 10.0 -25.0 -100.0) (float-vector 10.0 -5.0 -100.0)))
         (instance face :init :vertices (list (float-vector -10.0 -5.0 -80.0) (float-vector -10.0 -25.0 -80.0) (float-vector 10.0 -25.0 -80.0) (float-vector 10.0 -5.0 -80.0)))
         (instance face :init :vertices (list (float-vector -10.0 -5.0 -100.0) (float-vector -10.0 -25.0 -100.0) (float-vector -10.0 -25.0 -80.0) (float-vector -10.0 -5.0 -80.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray30)
     (send (elt bc 3) :set-color :papayawhip)
     (send (elt bc 4) :set-color :linen)
     (send (elt bc 5) :set-color :linen)
     (send (elt bc 6) :set-color :linen)
     (send (elt bc 7) :set-color :linen)
     (send (elt bc 8) :set-color :linen)
     (send (elt bc 9) :set-color :linen)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-upperarm :weight 288 :centroid (float-vector -1.33191 10.3566 -23.943) :inertia-tensor #2f((3.540518e+05 -4879.23 37324.9) (-4879.23 3.413899e+05 71157.6) (37324.9 71157.6 25615.6))))

     ;; definition of :larm-forearm-bracket
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 22.5 0.0) (float-vector 10.0 22.5 30.0) (float-vector 10.0 -22.5 30.0) (float-vector 10.0 -22.5 5.684342e-14) (float-vector 10.0 -20.5 5.684342e-14) (float-vector 10.0 -20.5 28.0) (float-vector 10.0 20.5 28.0) (float-vector 10.0 20.5 0.0)))
         (instance face :init :vertices (list (float-vector -10.0 22.5 30.0) (float-vector -10.0 -22.5 30.0) (float-vector 10.0 -22.5 30.0) (float-vector 10.0 22.5 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 22.5 0.0) (float-vector -10.0 20.5 0.0) (float-vector -10.0 20.5 28.0) (float-vector -10.0 -20.5 28.0) (float-vector -10.0 -20.5 0.0) (float-vector -10.0 -22.5 5.684342e-14) (float-vector -10.0 -22.5 30.0) (float-vector -10.0 22.5 30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -22.5 -7.07107) (float-vector -10.0 -22.5 5.684342e-14) (float-vector -10.0 -20.5 0.0) (float-vector -7.07107 -20.5 -7.07107)))
         (instance face :init :vertices (list (float-vector -7.07107 22.5 -7.07107) (float-vector -7.07107 20.5 -7.07107) (float-vector -10.0 20.5 0.0) (float-vector -10.0 22.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 -22.5 -10.0) (float-vector -7.07107 -22.5 -7.07107) (float-vector -7.07107 -20.5 -7.07107) (float-vector 0.0 -20.5 -10.0)))
         (instance face :init :vertices (list (float-vector 0.0 22.5 -10.0) (float-vector 0.0 20.5 -10.0) (float-vector -7.07107 20.5 -7.07107) (float-vector -7.07107 22.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 7.07107 -22.5 -7.07107) (float-vector 0.0 -22.5 -10.0) (float-vector 0.0 -20.5 -10.0) (float-vector 7.07107 -20.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 7.07107 22.5 -7.07107) (float-vector 7.07107 20.5 -7.07107) (float-vector 0.0 20.5 -10.0) (float-vector 0.0 22.5 -10.0)))
         (instance face :init :vertices (list (float-vector 10.0 -22.5 5.684342e-14) (float-vector 10.0 -22.5 30.0) (float-vector -10.0 -22.5 30.0) (float-vector -10.0 -22.5 5.684342e-14) (float-vector -7.07107 -22.5 -7.07107) (float-vector 0.0 -22.5 -10.0) (float-vector 7.07107 -22.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 7.07107 22.5 -7.07107) (float-vector 0.0 22.5 -10.0) (float-vector -7.07107 22.5 -7.07107) (float-vector -10.0 22.5 0.0) (float-vector -10.0 22.5 30.0) (float-vector 10.0 22.5 30.0) (float-vector 10.0 22.5 0.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -22.5 -7.07107) (float-vector 7.07107 -20.5 -7.07107) (float-vector 10.0 -20.5 5.684342e-14) (float-vector 10.0 -22.5 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 10.0 22.5 0.0) (float-vector 10.0 20.5 0.0) (float-vector 7.07107 20.5 -7.07107) (float-vector 7.07107 22.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 10.0 -20.5 28.0) (float-vector 10.0 -20.5 5.684342e-14) (float-vector 7.07107 -20.5 -7.07107) (float-vector 0.0 -20.5 -10.0) (float-vector -7.07107 -20.5 -7.07107) (float-vector -10.0 -20.5 0.0) (float-vector -10.0 -20.5 28.0)))
         (instance face :init :vertices (list (float-vector 10.0 20.5 28.0) (float-vector 10.0 -20.5 28.0) (float-vector -10.0 -20.5 28.0) (float-vector -10.0 20.5 28.0)))
         (instance face :init :vertices (list (float-vector -10.0 20.5 28.0) (float-vector -10.0 20.5 0.0) (float-vector -7.07107 20.5 -7.07107) (float-vector 0.0 20.5 -10.0) (float-vector 7.07107 20.5 -7.07107) (float-vector 10.0 20.5 0.0) (float-vector 10.0 20.5 28.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.375 39.4225 12.6275) (float-vector 7.63753 25.285 35.5025) (float-vector 30.5125 16.5475 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 16.5475 21.365) (float-vector 32.4173 26.4622 -1.51) (float-vector 16.375 39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector 7.63753 25.285 35.5025) (float-vector 17.5522 2.41 37.4073) (float-vector 30.5125 16.5475 21.365)))
         (instance face :init :vertices (list (float-vector 16.375 39.4225 12.6275) (float-vector -6.5 41.3273 22.5422) (float-vector 7.63753 25.285 35.5025)))
         (instance face :init :vertices (list (float-vector 7.63753 -20.465 35.5025) (float-vector -6.5 2.41 44.24) (float-vector -20.6375 -20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 -20.465 35.5025) (float-vector -6.5 -36.5073 22.5422) (float-vector 7.63753 -20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -6.5 2.41 44.24) (float-vector -30.5522 2.41 37.4073) (float-vector -20.6375 -20.465 35.5025)))
         (instance face :init :vertices (list (float-vector 7.63753 -20.465 35.5025) (float-vector 17.5522 2.41 37.4073) (float-vector -6.5 2.41 44.24)))
         (instance face :init :vertices (list (float-vector -29.375 39.4225 -15.6475) (float-vector -29.375 39.4225 12.6275) (float-vector -6.5 48.16 -1.51)))
         (instance face :init :vertices (list (float-vector -6.5 48.16 -1.51) (float-vector -6.5 41.3273 -25.5622) (float-vector -29.375 39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector -29.375 39.4225 12.6275) (float-vector -6.5 41.3273 22.5422) (float-vector -6.5 48.16 -1.51)))
         (instance face :init :vertices (list (float-vector -29.375 39.4225 -15.6475) (float-vector -45.4173 26.4622 -1.51) (float-vector -29.375 39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector 7.63753 25.285 35.5025) (float-vector -20.6375 25.285 35.5025) (float-vector -6.5 2.41 44.24)))
         (instance face :init :vertices (list (float-vector -6.5 2.41 44.24) (float-vector 17.5522 2.41 37.4073) (float-vector 7.63753 25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 25.285 35.5025) (float-vector -30.5522 2.41 37.4073) (float-vector -6.5 2.41 44.24)))
         (instance face :init :vertices (list (float-vector 7.63753 25.285 35.5025) (float-vector -6.5 41.3273 22.5422) (float-vector -20.6375 25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -29.375 39.4225 12.6275) (float-vector -43.5125 16.5475 21.365) (float-vector -20.6375 25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 25.285 35.5025) (float-vector -6.5 41.3273 22.5422) (float-vector -29.375 39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector -43.5125 16.5475 21.365) (float-vector -30.5522 2.41 37.4073) (float-vector -20.6375 25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -29.375 39.4225 12.6275) (float-vector -45.4173 26.4622 -1.51) (float-vector -43.5125 16.5475 21.365)))
         (instance face :init :vertices (list (float-vector -43.5125 16.5475 21.365) (float-vector -52.25 2.41 -1.51) (float-vector -43.5125 -11.7275 21.365)))
         (instance face :init :vertices (list (float-vector -43.5125 -11.7275 21.365) (float-vector -30.5522 2.41 37.4073) (float-vector -43.5125 16.5475 21.365)))
         (instance face :init :vertices (list (float-vector -52.25 2.41 -1.51) (float-vector -45.4173 -21.6422 -1.51) (float-vector -43.5125 -11.7275 21.365)))
         (instance face :init :vertices (list (float-vector -43.5125 16.5475 21.365) (float-vector -45.4173 26.4622 -1.51) (float-vector -52.25 2.41 -1.51)))
         (instance face :init :vertices (list (float-vector -43.5125 16.5475 -24.385) (float-vector -43.5125 -11.7275 -24.385) (float-vector -52.25 2.41 -1.51)))
         (instance face :init :vertices (list (float-vector -52.25 2.41 -1.51) (float-vector -45.4173 26.4622 -1.51) (float-vector -43.5125 16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector -43.5125 -11.7275 -24.385) (float-vector -45.4173 -21.6422 -1.51) (float-vector -52.25 2.41 -1.51)))
         (instance face :init :vertices (list (float-vector -43.5125 16.5475 -24.385) (float-vector -30.5522 2.41 -40.4273) (float-vector -43.5125 -11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector -20.6375 -20.465 -38.5225) (float-vector -29.375 -34.6025 -15.6475) (float-vector -43.5125 -11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector -43.5125 -11.7275 -24.385) (float-vector -30.5522 2.41 -40.4273) (float-vector -20.6375 -20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector -29.375 -34.6025 -15.6475) (float-vector -45.4173 -21.6422 -1.51) (float-vector -43.5125 -11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector -20.6375 -20.465 -38.5225) (float-vector -6.5 -36.5073 -25.5622) (float-vector -29.375 -34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector -43.5125 -11.7275 21.365) (float-vector -29.375 -34.6025 12.6275) (float-vector -20.6375 -20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 -20.465 35.5025) (float-vector -30.5522 2.41 37.4073) (float-vector -43.5125 -11.7275 21.365)))
         (instance face :init :vertices (list (float-vector -29.375 -34.6025 12.6275) (float-vector -6.5 -36.5073 22.5422) (float-vector -20.6375 -20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -43.5125 -11.7275 21.365) (float-vector -45.4173 -21.6422 -1.51) (float-vector -29.375 -34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector -29.375 -34.6025 -15.6475) (float-vector -6.5 -43.34 -1.51) (float-vector -29.375 -34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector -29.375 -34.6025 12.6275) (float-vector -45.4173 -21.6422 -1.51) (float-vector -29.375 -34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector -6.5 -43.34 -1.51) (float-vector -6.5 -36.5073 22.5422) (float-vector -29.375 -34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector -29.375 -34.6025 -15.6475) (float-vector -6.5 -36.5073 -25.5622) (float-vector -6.5 -43.34 -1.51)))
         (instance face :init :vertices (list (float-vector 7.63753 -20.465 35.5025) (float-vector 16.375 -34.6025 12.6275) (float-vector 30.5125 -11.7275 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 -11.7275 21.365) (float-vector 17.5522 2.41 37.4073) (float-vector 7.63753 -20.465 35.5025)))
         (instance face :init :vertices (list (float-vector 16.375 -34.6025 12.6275) (float-vector 32.4173 -21.6422 -1.51) (float-vector 30.5125 -11.7275 21.365)))
         (instance face :init :vertices (list (float-vector 7.63753 -20.465 35.5025) (float-vector -6.5 -36.5073 22.5422) (float-vector 16.375 -34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector -6.5 -43.34 -1.51) (float-vector 16.375 -34.6025 -15.6475) (float-vector 16.375 -34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector 16.375 -34.6025 12.6275) (float-vector -6.5 -36.5073 22.5422) (float-vector -6.5 -43.34 -1.51)))
         (instance face :init :vertices (list (float-vector 16.375 -34.6025 -15.6475) (float-vector 32.4173 -21.6422 -1.51) (float-vector 16.375 -34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector -6.5 -43.34 -1.51) (float-vector -6.5 -36.5073 -25.5622) (float-vector 16.375 -34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector 7.63753 -20.465 -38.5225) (float-vector 30.5125 -11.7275 -24.385) (float-vector 16.375 -34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector 16.375 -34.6025 -15.6475) (float-vector -6.5 -36.5073 -25.5622) (float-vector 7.63753 -20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector 30.5125 -11.7275 -24.385) (float-vector 32.4173 -21.6422 -1.51) (float-vector 16.375 -34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector 7.63753 -20.465 -38.5225) (float-vector 17.5522 2.41 -40.4273) (float-vector 30.5125 -11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector 30.5125 -11.7275 21.365) (float-vector 39.25 2.41 -1.51) (float-vector 30.5125 16.5475 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 16.5475 21.365) (float-vector 17.5522 2.41 37.4073) (float-vector 30.5125 -11.7275 21.365)))
         (instance face :init :vertices (list (float-vector 39.25 2.41 -1.51) (float-vector 32.4173 26.4622 -1.51) (float-vector 30.5125 16.5475 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 -11.7275 21.365) (float-vector 32.4173 -21.6422 -1.51) (float-vector 39.25 2.41 -1.51)))
         (instance face :init :vertices (list (float-vector 30.5125 -11.7275 -24.385) (float-vector 30.5125 16.5475 -24.385) (float-vector 39.25 2.41 -1.51)))
         (instance face :init :vertices (list (float-vector 39.25 2.41 -1.51) (float-vector 32.4173 -21.6422 -1.51) (float-vector 30.5125 -11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector 30.5125 16.5475 -24.385) (float-vector 32.4173 26.4622 -1.51) (float-vector 39.25 2.41 -1.51)))
         (instance face :init :vertices (list (float-vector 30.5125 -11.7275 -24.385) (float-vector 17.5522 2.41 -40.4273) (float-vector 30.5125 16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector 16.375 39.4225 12.6275) (float-vector 16.375 39.4225 -15.6475) (float-vector -6.5 48.16 -1.51)))
         (instance face :init :vertices (list (float-vector -6.5 48.16 -1.51) (float-vector -6.5 41.3273 22.5422) (float-vector 16.375 39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector 16.375 39.4225 -15.6475) (float-vector -6.5 41.3273 -25.5622) (float-vector -6.5 48.16 -1.51)))
         (instance face :init :vertices (list (float-vector 16.375 39.4225 12.6275) (float-vector 32.4173 26.4622 -1.51) (float-vector 16.375 39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector 30.5125 16.5475 -24.385) (float-vector 7.63753 25.285 -38.5225) (float-vector 16.375 39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector 16.375 39.4225 -15.6475) (float-vector 32.4173 26.4622 -1.51) (float-vector 30.5125 16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector 7.63753 25.285 -38.5225) (float-vector -6.5 41.3273 -25.5622) (float-vector 16.375 39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector 30.5125 16.5475 -24.385) (float-vector 17.5522 2.41 -40.4273) (float-vector 7.63753 25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector -29.375 39.4225 -15.6475) (float-vector -20.6375 25.285 -38.5225) (float-vector -43.5125 16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector -43.5125 16.5475 -24.385) (float-vector -45.4173 26.4622 -1.51) (float-vector -29.375 39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector -20.6375 25.285 -38.5225) (float-vector -30.5522 2.41 -40.4273) (float-vector -43.5125 16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector -29.375 39.4225 -15.6475) (float-vector -6.5 41.3273 -25.5622) (float-vector -20.6375 25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector -20.6375 -20.465 -38.5225) (float-vector -6.5 2.41 -47.26) (float-vector 7.63753 -20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector 7.63753 -20.465 -38.5225) (float-vector -6.5 -36.5073 -25.5622) (float-vector -20.6375 -20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector -6.5 2.41 -47.26) (float-vector 17.5522 2.41 -40.4273) (float-vector 7.63753 -20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector -20.6375 -20.465 -38.5225) (float-vector -30.5522 2.41 -40.4273) (float-vector -6.5 2.41 -47.26)))
         (instance face :init :vertices (list (float-vector 7.63753 25.285 -38.5225) (float-vector -6.5 2.41 -47.26) (float-vector -20.6375 25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector -20.6375 25.285 -38.5225) (float-vector -6.5 41.3273 -25.5622) (float-vector 7.63753 25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector -6.5 2.41 -47.26) (float-vector -30.5522 2.41 -40.4273) (float-vector -20.6375 25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector 7.63753 25.285 -38.5225) (float-vector 17.5522 2.41 -40.4273) (float-vector -6.5 2.41 -47.26)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :papayawhip)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-forearm-bracket :weight 12.4354 :centroid (float-vector -4.566544e-16 -2.211688e-14 17.6486) :inertia-tensor #2f((3874.27 -1.255942e-28 1.002203e-13) (-1.255942e-28 3874.27 4.853913e-12) (1.002203e-13 4.853913e-12 1.0))))

     ;; definition of :larm-forearm
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.2 35.5 -38.6) (float-vector -12.2 35.5 -38.6) (float-vector -17.8 35.5 -33.0) (float-vector -17.8 35.5 6.0) (float-vector -12.2 35.5 12.0) (float-vector 12.2 35.5 12.0) (float-vector 17.8 35.5 6.0) (float-vector 17.8 35.5 -33.0)))
         (instance face :init :vertices (list (float-vector -12.2 0.0 -38.6) (float-vector 12.2 0.0 -38.6) (float-vector 17.8 0.0 -33.0) (float-vector 17.8 0.0 6.0) (float-vector 12.2 0.0 12.0) (float-vector -12.2 0.0 12.0) (float-vector -17.8 0.0 6.0) (float-vector -17.8 0.0 -33.0)))
         (instance face :init :vertices (list (float-vector 12.2 35.5 -38.6) (float-vector 12.2 0.0 -38.6) (float-vector -12.2 0.0 -38.6) (float-vector -12.2 35.5 -38.6)))
         (instance face :init :vertices (list (float-vector 17.8 35.5 -33.0) (float-vector 17.8 0.0 -33.0) (float-vector 12.2 0.0 -38.6) (float-vector 12.2 35.5 -38.6)))
         (instance face :init :vertices (list (float-vector 17.8 35.5 6.0) (float-vector 17.8 0.0 6.0) (float-vector 17.8 0.0 -33.0) (float-vector 17.8 35.5 -33.0)))
         (instance face :init :vertices (list (float-vector 12.2 35.5 12.0) (float-vector 12.2 0.0 12.0) (float-vector 17.8 0.0 6.0) (float-vector 17.8 35.5 6.0)))
         (instance face :init :vertices (list (float-vector -12.2 35.5 12.0) (float-vector -12.2 0.0 12.0) (float-vector 12.2 0.0 12.0) (float-vector 12.2 35.5 12.0)))
         (instance face :init :vertices (list (float-vector -17.8 35.5 6.0) (float-vector -17.8 0.0 6.0) (float-vector -12.2 0.0 12.0) (float-vector -12.2 35.5 12.0)))
         (instance face :init :vertices (list (float-vector -17.8 35.5 -33.0) (float-vector -17.8 0.0 -33.0) (float-vector -17.8 0.0 6.0) (float-vector -17.8 35.5 6.0)))
         (instance face :init :vertices (list (float-vector -12.2 35.5 -38.6) (float-vector -12.2 0.0 -38.6) (float-vector -17.8 0.0 -33.0) (float-vector -17.8 35.5 -33.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 13.0 31.0 -36.0) (float-vector -13.0 31.0 -36.0) (float-vector -13.0 5.0 -36.0) (float-vector 13.0 5.0 -36.0)))
         (instance face :init :vertices (list (float-vector -13.0 31.0 -108.0) (float-vector 13.0 31.0 -108.0) (float-vector 13.0 5.0 -108.0) (float-vector -13.0 5.0 -108.0)))
         (instance face :init :vertices (list (float-vector 13.0 31.0 -36.0) (float-vector 13.0 31.0 -108.0) (float-vector -13.0 31.0 -108.0) (float-vector -13.0 31.0 -36.0)))
         (instance face :init :vertices (list (float-vector 13.0 5.0 -36.0) (float-vector 13.0 5.0 -108.0) (float-vector 13.0 31.0 -108.0) (float-vector 13.0 31.0 -36.0)))
         (instance face :init :vertices (list (float-vector -13.0 5.0 -36.0) (float-vector -13.0 5.0 -108.0) (float-vector 13.0 5.0 -108.0) (float-vector 13.0 5.0 -36.0)))
         (instance face :init :vertices (list (float-vector -13.0 31.0 -36.0) (float-vector -13.0 31.0 -108.0) (float-vector -13.0 5.0 -108.0) (float-vector -13.0 5.0 -36.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 20.6 20.0 -124.285) (float-vector 17.3176 7.75 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 17.3176 7.75 -124.285) (float-vector 8.35 -1.21762 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 8.35 -1.21762 -124.285) (float-vector -3.9 -4.5 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -3.9 -4.5 -124.285) (float-vector -16.15 -1.21762 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -16.15 -1.21762 -124.285) (float-vector -25.1176 7.75 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -25.1176 7.75 -124.285) (float-vector -28.4 20.0 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -28.4 20.0 -124.285) (float-vector -25.1176 32.25 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -25.1176 32.25 -124.285) (float-vector -16.15 41.2176 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -16.15 41.2176 -124.285) (float-vector -3.9 44.5 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -3.9 44.5 -124.285) (float-vector 8.35 41.2176 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 8.35 41.2176 -124.285) (float-vector 17.3176 32.25 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 17.3176 32.25 -124.285) (float-vector 20.6 20.0 -124.285) (float-vector -3.9 20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 32.85 -1.21762 -106.35) (float-vector 17.3176 7.75 -124.285) (float-vector 20.6 20.0 -124.285) (float-vector 38.5352 20.0 -106.35)))
         (instance face :init :vertices (list (float-vector 17.3176 -16.75 -106.35) (float-vector 8.35 -1.21762 -124.285) (float-vector 17.3176 7.75 -124.285) (float-vector 32.85 -1.21762 -106.35)))
         (instance face :init :vertices (list (float-vector -3.9 -22.4352 -106.35) (float-vector -3.9 -4.5 -124.285) (float-vector 8.35 -1.21762 -124.285) (float-vector 17.3176 -16.75 -106.35)))
         (instance face :init :vertices (list (float-vector -25.1176 -16.75 -106.35) (float-vector -16.15 -1.21762 -124.285) (float-vector -3.9 -4.5 -124.285) (float-vector -3.9 -22.4352 -106.35)))
         (instance face :init :vertices (list (float-vector -40.65 -1.21762 -106.35) (float-vector -25.1176 7.75 -124.285) (float-vector -16.15 -1.21762 -124.285) (float-vector -25.1176 -16.75 -106.35)))
         (instance face :init :vertices (list (float-vector -46.3352 20.0 -106.35) (float-vector -28.4 20.0 -124.285) (float-vector -25.1176 7.75 -124.285) (float-vector -40.65 -1.21762 -106.35)))
         (instance face :init :vertices (list (float-vector -40.65 41.2176 -106.35) (float-vector -25.1176 32.25 -124.285) (float-vector -28.4 20.0 -124.285) (float-vector -46.3352 20.0 -106.35)))
         (instance face :init :vertices (list (float-vector -25.1176 56.75 -106.35) (float-vector -16.15 41.2176 -124.285) (float-vector -25.1176 32.25 -124.285) (float-vector -40.65 41.2176 -106.35)))
         (instance face :init :vertices (list (float-vector -3.9 62.4352 -106.35) (float-vector -3.9 44.5 -124.285) (float-vector -16.15 41.2176 -124.285) (float-vector -25.1176 56.75 -106.35)))
         (instance face :init :vertices (list (float-vector 17.3176 56.75 -106.35) (float-vector 8.35 41.2176 -124.285) (float-vector -3.9 44.5 -124.285) (float-vector -3.9 62.4352 -106.35)))
         (instance face :init :vertices (list (float-vector 32.85 41.2176 -106.35) (float-vector 17.3176 32.25 -124.285) (float-vector 8.35 41.2176 -124.285) (float-vector 17.3176 56.75 -106.35)))
         (instance face :init :vertices (list (float-vector 38.5352 20.0 -106.35) (float-vector 20.6 20.0 -124.285) (float-vector 17.3176 32.25 -124.285) (float-vector 32.85 41.2176 -106.35)))
         (instance face :init :vertices (list (float-vector 38.5352 -4.5 -81.85) (float-vector 32.85 -1.21762 -106.35) (float-vector 38.5352 20.0 -106.35) (float-vector 45.1 20.0 -81.85)))
         (instance face :init :vertices (list (float-vector 20.6 -22.4352 -81.85) (float-vector 17.3176 -16.75 -106.35) (float-vector 32.85 -1.21762 -106.35) (float-vector 38.5352 -4.5 -81.85)))
         (instance face :init :vertices (list (float-vector -3.9 -29.0 -81.85) (float-vector -3.9 -22.4352 -106.35) (float-vector 17.3176 -16.75 -106.35) (float-vector 20.6 -22.4352 -81.85)))
         (instance face :init :vertices (list (float-vector -28.4 -22.4352 -81.85) (float-vector -25.1176 -16.75 -106.35) (float-vector -3.9 -22.4352 -106.35) (float-vector -3.9 -29.0 -81.85)))
         (instance face :init :vertices (list (float-vector -46.3352 -4.5 -81.85) (float-vector -40.65 -1.21762 -106.35) (float-vector -25.1176 -16.75 -106.35) (float-vector -28.4 -22.4352 -81.85)))
         (instance face :init :vertices (list (float-vector -52.9 20.0 -81.85) (float-vector -46.3352 20.0 -106.35) (float-vector -40.65 -1.21762 -106.35) (float-vector -46.3352 -4.5 -81.85)))
         (instance face :init :vertices (list (float-vector -46.3352 44.5 -81.85) (float-vector -40.65 41.2176 -106.35) (float-vector -46.3352 20.0 -106.35) (float-vector -52.9 20.0 -81.85)))
         (instance face :init :vertices (list (float-vector -28.4 62.4352 -81.85) (float-vector -25.1176 56.75 -106.35) (float-vector -40.65 41.2176 -106.35) (float-vector -46.3352 44.5 -81.85)))
         (instance face :init :vertices (list (float-vector -3.9 69.0 -81.85) (float-vector -3.9 62.4352 -106.35) (float-vector -25.1176 56.75 -106.35) (float-vector -28.4 62.4352 -81.85)))
         (instance face :init :vertices (list (float-vector 20.6 62.4352 -81.85) (float-vector 17.3176 56.75 -106.35) (float-vector -3.9 62.4352 -106.35) (float-vector -3.9 69.0 -81.85)))
         (instance face :init :vertices (list (float-vector 38.5352 44.5 -81.85) (float-vector 32.85 41.2176 -106.35) (float-vector 17.3176 56.75 -106.35) (float-vector 20.6 62.4352 -81.85)))
         (instance face :init :vertices (list (float-vector 45.1 20.0 -81.85) (float-vector 38.5352 20.0 -106.35) (float-vector 32.85 41.2176 -106.35) (float-vector 38.5352 44.5 -81.85)))
         (instance face :init :vertices (list (float-vector 38.5352 -4.5 -38.47) (float-vector 38.5352 -4.5 -81.85) (float-vector 45.1 20.0 -81.85) (float-vector 45.1 20.0 -38.47)))
         (instance face :init :vertices (list (float-vector 20.6 -22.4352 -38.47) (float-vector 20.6 -22.4352 -81.85) (float-vector 38.5352 -4.5 -81.85) (float-vector 38.5352 -4.5 -38.47)))
         (instance face :init :vertices (list (float-vector -3.9 -29.0 -38.47) (float-vector -3.9 -29.0 -81.85) (float-vector 20.6 -22.4352 -81.85) (float-vector 20.6 -22.4352 -38.47)))
         (instance face :init :vertices (list (float-vector -28.4 -22.4352 -38.47) (float-vector -28.4 -22.4352 -81.85) (float-vector -3.9 -29.0 -81.85) (float-vector -3.9 -29.0 -38.47)))
         (instance face :init :vertices (list (float-vector -46.3352 -4.5 -38.47) (float-vector -46.3352 -4.5 -81.85) (float-vector -28.4 -22.4352 -81.85) (float-vector -28.4 -22.4352 -38.47)))
         (instance face :init :vertices (list (float-vector -52.9 20.0 -38.47) (float-vector -52.9 20.0 -81.85) (float-vector -46.3352 -4.5 -81.85) (float-vector -46.3352 -4.5 -38.47)))
         (instance face :init :vertices (list (float-vector -46.3352 44.5 -38.47) (float-vector -46.3352 44.5 -81.85) (float-vector -52.9 20.0 -81.85) (float-vector -52.9 20.0 -38.47)))
         (instance face :init :vertices (list (float-vector -28.4 62.4352 -38.47) (float-vector -28.4 62.4352 -81.85) (float-vector -46.3352 44.5 -81.85) (float-vector -46.3352 44.5 -38.47)))
         (instance face :init :vertices (list (float-vector -3.9 69.0 -38.47) (float-vector -3.9 69.0 -81.85) (float-vector -28.4 62.4352 -81.85) (float-vector -28.4 62.4352 -38.47)))
         (instance face :init :vertices (list (float-vector 20.6 62.4352 -38.47) (float-vector 20.6 62.4352 -81.85) (float-vector -3.9 69.0 -81.85) (float-vector -3.9 69.0 -38.47)))
         (instance face :init :vertices (list (float-vector 38.5352 44.5 -38.47) (float-vector 38.5352 44.5 -81.85) (float-vector 20.6 62.4352 -81.85) (float-vector 20.6 62.4352 -38.47)))
         (instance face :init :vertices (list (float-vector 45.1 20.0 -38.47) (float-vector 45.1 20.0 -81.85) (float-vector 38.5352 44.5 -81.85) (float-vector 38.5352 44.5 -38.47)))
         (instance face :init :vertices (list (float-vector 32.85 -1.21762 -13.97) (float-vector 38.5352 -4.5 -38.47) (float-vector 45.1 20.0 -38.47) (float-vector 38.5352 20.0 -13.97)))
         (instance face :init :vertices (list (float-vector 17.3176 -16.75 -13.97) (float-vector 20.6 -22.4352 -38.47) (float-vector 38.5352 -4.5 -38.47) (float-vector 32.85 -1.21762 -13.97)))
         (instance face :init :vertices (list (float-vector -3.9 -22.4352 -13.97) (float-vector -3.9 -29.0 -38.47) (float-vector 20.6 -22.4352 -38.47) (float-vector 17.3176 -16.75 -13.97)))
         (instance face :init :vertices (list (float-vector -25.1176 -16.75 -13.97) (float-vector -28.4 -22.4352 -38.47) (float-vector -3.9 -29.0 -38.47) (float-vector -3.9 -22.4352 -13.97)))
         (instance face :init :vertices (list (float-vector -40.65 -1.21762 -13.97) (float-vector -46.3352 -4.5 -38.47) (float-vector -28.4 -22.4352 -38.47) (float-vector -25.1176 -16.75 -13.97)))
         (instance face :init :vertices (list (float-vector -46.3352 20.0 -13.97) (float-vector -52.9 20.0 -38.47) (float-vector -46.3352 -4.5 -38.47) (float-vector -40.65 -1.21762 -13.97)))
         (instance face :init :vertices (list (float-vector -40.65 41.2176 -13.97) (float-vector -46.3352 44.5 -38.47) (float-vector -52.9 20.0 -38.47) (float-vector -46.3352 20.0 -13.97)))
         (instance face :init :vertices (list (float-vector -25.1176 56.75 -13.97) (float-vector -28.4 62.4352 -38.47) (float-vector -46.3352 44.5 -38.47) (float-vector -40.65 41.2176 -13.97)))
         (instance face :init :vertices (list (float-vector -3.9 62.4352 -13.97) (float-vector -3.9 69.0 -38.47) (float-vector -28.4 62.4352 -38.47) (float-vector -25.1176 56.75 -13.97)))
         (instance face :init :vertices (list (float-vector 17.3176 56.75 -13.97) (float-vector 20.6 62.4352 -38.47) (float-vector -3.9 69.0 -38.47) (float-vector -3.9 62.4352 -13.97)))
         (instance face :init :vertices (list (float-vector 32.85 41.2176 -13.97) (float-vector 38.5352 44.5 -38.47) (float-vector 20.6 62.4352 -38.47) (float-vector 17.3176 56.75 -13.97)))
         (instance face :init :vertices (list (float-vector 38.5352 20.0 -13.97) (float-vector 45.1 20.0 -38.47) (float-vector 38.5352 44.5 -38.47) (float-vector 32.85 41.2176 -13.97)))
         (instance face :init :vertices (list (float-vector 17.3176 7.75 3.96524) (float-vector 32.85 -1.21762 -13.97) (float-vector 38.5352 20.0 -13.97) (float-vector 20.6 20.0 3.96524)))
         (instance face :init :vertices (list (float-vector 8.35 -1.21762 3.96524) (float-vector 17.3176 -16.75 -13.97) (float-vector 32.85 -1.21762 -13.97) (float-vector 17.3176 7.75 3.96524)))
         (instance face :init :vertices (list (float-vector -3.9 -4.5 3.96524) (float-vector -3.9 -22.4352 -13.97) (float-vector 17.3176 -16.75 -13.97) (float-vector 8.35 -1.21762 3.96524)))
         (instance face :init :vertices (list (float-vector -16.15 -1.21762 3.96524) (float-vector -25.1176 -16.75 -13.97) (float-vector -3.9 -22.4352 -13.97) (float-vector -3.9 -4.5 3.96524)))
         (instance face :init :vertices (list (float-vector -25.1176 7.75 3.96524) (float-vector -40.65 -1.21762 -13.97) (float-vector -25.1176 -16.75 -13.97) (float-vector -16.15 -1.21762 3.96524)))
         (instance face :init :vertices (list (float-vector -28.4 20.0 3.96524) (float-vector -46.3352 20.0 -13.97) (float-vector -40.65 -1.21762 -13.97) (float-vector -25.1176 7.75 3.96524)))
         (instance face :init :vertices (list (float-vector -25.1176 32.25 3.96524) (float-vector -40.65 41.2176 -13.97) (float-vector -46.3352 20.0 -13.97) (float-vector -28.4 20.0 3.96524)))
         (instance face :init :vertices (list (float-vector -16.15 41.2176 3.96524) (float-vector -25.1176 56.75 -13.97) (float-vector -40.65 41.2176 -13.97) (float-vector -25.1176 32.25 3.96524)))
         (instance face :init :vertices (list (float-vector -3.9 44.5 3.96524) (float-vector -3.9 62.4352 -13.97) (float-vector -25.1176 56.75 -13.97) (float-vector -16.15 41.2176 3.96524)))
         (instance face :init :vertices (list (float-vector 8.35 41.2176 3.96524) (float-vector 17.3176 56.75 -13.97) (float-vector -3.9 62.4352 -13.97) (float-vector -3.9 44.5 3.96524)))
         (instance face :init :vertices (list (float-vector 17.3176 32.25 3.96524) (float-vector 32.85 41.2176 -13.97) (float-vector 17.3176 56.75 -13.97) (float-vector 8.35 41.2176 3.96524)))
         (instance face :init :vertices (list (float-vector 20.6 20.0 3.96524) (float-vector 38.5352 20.0 -13.97) (float-vector 32.85 41.2176 -13.97) (float-vector 17.3176 32.25 3.96524)))
         (instance face :init :vertices (list (float-vector 17.3176 7.75 3.96524) (float-vector 20.6 20.0 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector 20.6 20.0 3.96524) (float-vector 17.3176 32.25 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector 17.3176 32.25 3.96524) (float-vector 8.35 41.2176 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector 8.35 41.2176 3.96524) (float-vector -3.9 44.5 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector -3.9 44.5 3.96524) (float-vector -16.15 41.2176 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector -16.15 41.2176 3.96524) (float-vector -25.1176 32.25 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector -25.1176 32.25 3.96524) (float-vector -28.4 20.0 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector -28.4 20.0 3.96524) (float-vector -25.1176 7.75 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector -25.1176 7.75 3.96524) (float-vector -16.15 -1.21762 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector -16.15 -1.21762 3.96524) (float-vector -3.9 -4.5 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector -3.9 -4.5 3.96524) (float-vector 8.35 -1.21762 3.96524) (float-vector -3.9 20.0 10.53)))
         (instance face :init :vertices (list (float-vector 8.35 -1.21762 3.96524) (float-vector 17.3176 7.75 3.96524) (float-vector -3.9 20.0 10.53)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -25.0 -30.0) (float-vector -10.0 -25.0 -30.0) (float-vector -10.0 -25.0 -50.0) (float-vector 10.0 -25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 -5.0 -30.0) (float-vector 10.0 -5.0 -30.0) (float-vector 10.0 -5.0 -50.0) (float-vector -10.0 -5.0 -50.0)))
         (instance face :init :vertices (list (float-vector 10.0 -25.0 -30.0) (float-vector 10.0 -5.0 -30.0) (float-vector -10.0 -5.0 -30.0) (float-vector -10.0 -25.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -25.0 -50.0) (float-vector 10.0 -5.0 -50.0) (float-vector 10.0 -5.0 -30.0) (float-vector 10.0 -25.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 -25.0 -50.0) (float-vector -10.0 -5.0 -50.0) (float-vector 10.0 -5.0 -50.0) (float-vector 10.0 -25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 -25.0 -30.0) (float-vector -10.0 -5.0 -30.0) (float-vector -10.0 -5.0 -50.0) (float-vector -10.0 -25.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 50.0 -90.0) (float-vector -10.0 50.0 -90.0) (float-vector -10.0 50.0 -70.0) (float-vector 10.0 50.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -90.0) (float-vector 10.0 30.0 -90.0) (float-vector 10.0 30.0 -70.0) (float-vector -10.0 30.0 -70.0)))
         (instance face :init :vertices (list (float-vector 10.0 50.0 -90.0) (float-vector 10.0 30.0 -90.0) (float-vector -10.0 30.0 -90.0) (float-vector -10.0 50.0 -90.0)))
         (instance face :init :vertices (list (float-vector 10.0 50.0 -70.0) (float-vector 10.0 30.0 -70.0) (float-vector 10.0 30.0 -90.0) (float-vector 10.0 50.0 -90.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -70.0) (float-vector -10.0 30.0 -70.0) (float-vector 10.0 30.0 -70.0) (float-vector 10.0 50.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -90.0) (float-vector -10.0 30.0 -90.0) (float-vector -10.0 30.0 -70.0) (float-vector -10.0 50.0 -70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 25.0 -70.0) (float-vector 40.0 25.0 -50.0) (float-vector 40.0 5.0 -50.0) (float-vector 40.0 5.0 -70.0)))
         (instance face :init :vertices (list (float-vector 20.0 25.0 -50.0) (float-vector 20.0 25.0 -70.0) (float-vector 20.0 5.0 -70.0) (float-vector 20.0 5.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 25.0 -70.0) (float-vector 20.0 25.0 -70.0) (float-vector 20.0 25.0 -50.0) (float-vector 40.0 25.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 5.0 -70.0) (float-vector 20.0 5.0 -70.0) (float-vector 20.0 25.0 -70.0) (float-vector 40.0 25.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 5.0 -50.0) (float-vector 20.0 5.0 -50.0) (float-vector 20.0 5.0 -70.0) (float-vector 40.0 5.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 25.0 -50.0) (float-vector 20.0 25.0 -50.0) (float-vector 20.0 5.0 -50.0) (float-vector 40.0 5.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -40.0 25.0 -50.0) (float-vector -40.0 25.0 -70.0) (float-vector -40.0 5.0 -70.0) (float-vector -40.0 5.0 -50.0)))
         (instance face :init :vertices (list (float-vector -20.0 25.0 -70.0) (float-vector -20.0 25.0 -50.0) (float-vector -20.0 5.0 -50.0) (float-vector -20.0 5.0 -70.0)))
         (instance face :init :vertices (list (float-vector -40.0 25.0 -50.0) (float-vector -20.0 25.0 -50.0) (float-vector -20.0 25.0 -70.0) (float-vector -40.0 25.0 -70.0)))
         (instance face :init :vertices (list (float-vector -40.0 5.0 -50.0) (float-vector -20.0 5.0 -50.0) (float-vector -20.0 25.0 -50.0) (float-vector -40.0 25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -40.0 5.0 -70.0) (float-vector -20.0 5.0 -70.0) (float-vector -20.0 5.0 -50.0) (float-vector -40.0 5.0 -50.0)))
         (instance face :init :vertices (list (float-vector -40.0 25.0 -70.0) (float-vector -20.0 25.0 -70.0) (float-vector -20.0 5.0 -70.0) (float-vector -40.0 5.0 -70.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :papayawhip)
     (send (elt bc 3) :set-color :linen)
     (send (elt bc 4) :set-color :linen)
     (send (elt bc 5) :set-color :linen)
     (send (elt bc 6) :set-color :linen)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-forearm :weight 112 :centroid (float-vector -8.233278e-16 17.8393 -34.2821) :inertia-tensor #2f((1.075330e+05 1.057506e-12 -2.032227e-12) (1.057506e-12 84619.7 44032.9) (-2.032227e-12 44032.9 22914.3))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 0.0 -13.0) (float-vector 30.0 -26.0 -13.0) (float-vector -30.0 -26.0 -13.0) (float-vector -30.0 0.0 -13.0) (float-vector -28.0 0.0 -13.0) (float-vector -28.0 -24.0 -13.0) (float-vector 28.0 -24.0 -13.0) (float-vector 28.0 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector 30.0 -26.0 13.0) (float-vector -30.0 -26.0 13.0) (float-vector -30.0 -26.0 -13.0) (float-vector 30.0 -26.0 -13.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 13.0) (float-vector 28.0 0.0 13.0) (float-vector 28.0 -24.0 13.0) (float-vector -28.0 -24.0 13.0) (float-vector -28.0 0.0 13.0) (float-vector -30.0 0.0 13.0) (float-vector -30.0 -26.0 13.0) (float-vector 30.0 -26.0 13.0)))
         (instance face :init :vertices (list (float-vector -30.0 9.19239 9.19239) (float-vector -30.0 0.0 13.0) (float-vector -28.0 0.0 13.0) (float-vector -28.0 9.19239 9.19239)))
         (instance face :init :vertices (list (float-vector 30.0 9.19239 9.19239) (float-vector 28.0 9.19239 9.19239) (float-vector 28.0 0.0 13.0) (float-vector 30.0 0.0 13.0)))
         (instance face :init :vertices (list (float-vector -30.0 13.0 0.0) (float-vector -30.0 9.19239 9.19239) (float-vector -28.0 9.19239 9.19239) (float-vector -28.0 13.0 0.0)))
         (instance face :init :vertices (list (float-vector 30.0 13.0 0.0) (float-vector 28.0 13.0 0.0) (float-vector 28.0 9.19239 9.19239) (float-vector 30.0 9.19239 9.19239)))
         (instance face :init :vertices (list (float-vector -30.0 9.19239 -9.19239) (float-vector -30.0 13.0 0.0) (float-vector -28.0 13.0 0.0) (float-vector -28.0 9.19239 -9.19239)))
         (instance face :init :vertices (list (float-vector 30.0 9.19239 -9.19239) (float-vector 28.0 9.19239 -9.19239) (float-vector 28.0 13.0 0.0) (float-vector 30.0 13.0 0.0)))
         (instance face :init :vertices (list (float-vector -30.0 0.0 -13.0) (float-vector -30.0 -26.0 -13.0) (float-vector -30.0 -26.0 13.0) (float-vector -30.0 0.0 13.0) (float-vector -30.0 9.19239 9.19239) (float-vector -30.0 13.0 0.0) (float-vector -30.0 9.19239 -9.19239)))
         (instance face :init :vertices (list (float-vector 30.0 9.19239 -9.19239) (float-vector 30.0 13.0 0.0) (float-vector 30.0 9.19239 9.19239) (float-vector 30.0 0.0 13.0) (float-vector 30.0 -26.0 13.0) (float-vector 30.0 -26.0 -13.0) (float-vector 30.0 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector -30.0 9.19239 -9.19239) (float-vector -28.0 9.19239 -9.19239) (float-vector -28.0 0.0 -13.0) (float-vector -30.0 0.0 -13.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 -13.0) (float-vector 28.0 0.0 -13.0) (float-vector 28.0 9.19239 -9.19239) (float-vector 30.0 9.19239 -9.19239)))
         (instance face :init :vertices (list (float-vector -28.0 -24.0 -13.0) (float-vector -28.0 0.0 -13.0) (float-vector -28.0 9.19239 -9.19239) (float-vector -28.0 13.0 0.0) (float-vector -28.0 9.19239 9.19239) (float-vector -28.0 0.0 13.0) (float-vector -28.0 -24.0 13.0)))
         (instance face :init :vertices (list (float-vector 28.0 -24.0 -13.0) (float-vector -28.0 -24.0 -13.0) (float-vector -28.0 -24.0 13.0) (float-vector 28.0 -24.0 13.0)))
         (instance face :init :vertices (list (float-vector 28.0 -24.0 13.0) (float-vector 28.0 0.0 13.0) (float-vector 28.0 9.19239 9.19239) (float-vector 28.0 13.0 0.0) (float-vector 28.0 9.19239 -9.19239) (float-vector 28.0 0.0 -13.0) (float-vector 28.0 -24.0 -13.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 3.53553 -26.0 3.53553) (float-vector -10.6066 -26.0 17.6777) (float-vector -10.6066 -96.0 17.6777) (float-vector 3.53553 -96.0 3.53553) (float-vector 3.53553 -94.0 3.53553) (float-vector -9.19239 -94.0 16.2635) (float-vector -9.19239 -28.0 16.2635) (float-vector 3.53553 -28.0 3.53553)))
         (instance face :init :vertices (list (float-vector -17.6777 -26.0 10.6066) (float-vector -17.6777 -96.0 10.6066) (float-vector -10.6066 -96.0 17.6777) (float-vector -10.6066 -26.0 17.6777)))
         (instance face :init :vertices (list (float-vector -3.53553 -26.0 -3.53553) (float-vector -3.53553 -28.0 -3.53553) (float-vector -16.2635 -28.0 9.19239) (float-vector -16.2635 -94.0 9.19239) (float-vector -3.53553 -94.0 -3.53553) (float-vector -3.53553 -96.0 -3.53553) (float-vector -17.6777 -96.0 10.6066) (float-vector -17.6777 -26.0 10.6066)))
         (instance face :init :vertices (list (float-vector -3.552714e-15 -96.0 -5.0) (float-vector -3.53553 -96.0 -3.53553) (float-vector -3.53553 -94.0 -3.53553) (float-vector -3.552714e-15 -94.0 -5.0)))
         (instance face :init :vertices (list (float-vector -3.552714e-15 -26.0 -5.0) (float-vector -3.552714e-15 -28.0 -5.0) (float-vector -3.53553 -28.0 -3.53553) (float-vector -3.53553 -26.0 -3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 -96.0 -3.53553) (float-vector -3.552714e-15 -96.0 -5.0) (float-vector -3.552714e-15 -94.0 -5.0) (float-vector 3.53553 -94.0 -3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 -26.0 -3.53553) (float-vector 3.53553 -28.0 -3.53553) (float-vector -3.552714e-15 -28.0 -5.0) (float-vector -3.552714e-15 -26.0 -5.0)))
         (instance face :init :vertices (list (float-vector 5.0 -96.0 -1.136868e-13) (float-vector 3.53553 -96.0 -3.53553) (float-vector 3.53553 -94.0 -3.53553) (float-vector 5.0 -94.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.0 -26.0 0.0) (float-vector 5.0 -28.0 0.0) (float-vector 3.53553 -28.0 -3.53553) (float-vector 3.53553 -26.0 -3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 -96.0 3.53553) (float-vector -10.6066 -96.0 17.6777) (float-vector -17.6777 -96.0 10.6066) (float-vector -3.53553 -96.0 -3.53553) (float-vector -3.552714e-15 -96.0 -5.0) (float-vector 3.53553 -96.0 -3.53553) (float-vector 5.0 -96.0 -1.136868e-13)))
         (instance face :init :vertices (list (float-vector 5.0 -26.0 0.0) (float-vector 3.53553 -26.0 -3.53553) (float-vector -3.552714e-15 -26.0 -5.0) (float-vector -3.53553 -26.0 -3.53553) (float-vector -17.6777 -26.0 10.6066) (float-vector -10.6066 -26.0 17.6777) (float-vector 3.53553 -26.0 3.53553)))
         (instance face :init :vertices (list (float-vector 5.0 -96.0 -1.136868e-13) (float-vector 5.0 -94.0 0.0) (float-vector 3.53553 -94.0 3.53553) (float-vector 3.53553 -96.0 3.53553)))
         (instance face :init :vertices (list (float-vector 3.53553 -26.0 3.53553) (float-vector 3.53553 -28.0 3.53553) (float-vector 5.0 -28.0 0.0) (float-vector 5.0 -26.0 0.0)))
         (instance face :init :vertices (list (float-vector -9.19239 -94.0 16.2635) (float-vector 3.53553 -94.0 3.53553) (float-vector 5.0 -94.0 0.0) (float-vector 3.53553 -94.0 -3.53553) (float-vector -3.552714e-15 -94.0 -5.0) (float-vector -3.53553 -94.0 -3.53553) (float-vector -16.2635 -94.0 9.19239)))
         (instance face :init :vertices (list (float-vector -9.19239 -28.0 16.2635) (float-vector -9.19239 -94.0 16.2635) (float-vector -16.2635 -94.0 9.19239) (float-vector -16.2635 -28.0 9.19239)))
         (instance face :init :vertices (list (float-vector -16.2635 -28.0 9.19239) (float-vector -3.53553 -28.0 -3.53553) (float-vector -3.552714e-15 -28.0 -5.0) (float-vector 3.53553 -28.0 -3.53553) (float-vector 5.0 -28.0 0.0) (float-vector 3.53553 -28.0 3.53553) (float-vector -9.19239 -28.0 16.2635)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray90)
     (setq blink20 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 23.8503 :centroid (float-vector -2.62524 -27.2712 2.62524) :inertia-tensor #2f((25036.6 -2841.59 608.705) (-2841.59 1320.17 2841.59) (608.705 2841.59 25036.6))))

     ;; definition of :rarm-upperarm
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.5 -41.0 -48.1) (float-vector 14.5 -41.0 -48.1) (float-vector 20.1 -41.0 -42.6) (float-vector 20.1 -41.0 5.0) (float-vector 14.5 -41.0 13.0) (float-vector -14.5 -41.0 13.0) (float-vector -20.1 -41.0 5.0) (float-vector -20.1 -41.0 -42.6)))
         (instance face :init :vertices (list (float-vector 14.5 0.0 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector -20.1 0.0 -42.6) (float-vector -20.1 5.684342e-14 5.0) (float-vector -14.5 0.0 13.0) (float-vector 14.5 0.0 13.0) (float-vector 20.1 5.684342e-14 5.0) (float-vector 20.1 0.0 -42.6)))
         (instance face :init :vertices (list (float-vector -14.5 -41.0 -48.1) (float-vector -14.5 0.0 -48.1) (float-vector 14.5 0.0 -48.1) (float-vector 14.5 -41.0 -48.1)))
         (instance face :init :vertices (list (float-vector -20.1 -41.0 -42.6) (float-vector -20.1 0.0 -42.6) (float-vector -14.5 0.0 -48.1) (float-vector -14.5 -41.0 -48.1)))
         (instance face :init :vertices (list (float-vector -20.1 -41.0 5.0) (float-vector -20.1 5.684342e-14 5.0) (float-vector -20.1 0.0 -42.6) (float-vector -20.1 -41.0 -42.6)))
         (instance face :init :vertices (list (float-vector -14.5 -41.0 13.0) (float-vector -14.5 0.0 13.0) (float-vector -20.1 5.684342e-14 5.0) (float-vector -20.1 -41.0 5.0)))
         (instance face :init :vertices (list (float-vector 14.5 -41.0 13.0) (float-vector 14.5 0.0 13.0) (float-vector -14.5 0.0 13.0) (float-vector -14.5 -41.0 13.0)))
         (instance face :init :vertices (list (float-vector 20.1 -41.0 5.0) (float-vector 20.1 5.684342e-14 5.0) (float-vector 14.5 0.0 13.0) (float-vector 14.5 -41.0 13.0)))
         (instance face :init :vertices (list (float-vector 20.1 -41.0 -42.6) (float-vector 20.1 0.0 -42.6) (float-vector 20.1 5.684342e-14 5.0) (float-vector 20.1 -41.0 5.0)))
         (instance face :init :vertices (list (float-vector 14.5 -41.0 -48.1) (float-vector 14.5 0.0 -48.1) (float-vector 20.1 0.0 -42.6) (float-vector 20.1 -41.0 -42.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.0 19.0 5.684342e-14) (float-vector 16.0 7.0 5.684342e-14) (float-vector 13.8564 7.0 -8.0) (float-vector 13.8564 19.0 -8.0)))
         (instance face :init :vertices (list (float-vector 13.8564 7.0 -8.0) (float-vector 8.0 7.0 -13.8564) (float-vector 8.0 19.0 -13.8564) (float-vector 13.8564 19.0 -8.0)))
         (instance face :init :vertices (list (float-vector 8.0 7.0 -13.8564) (float-vector 1.065814e-14 7.0 -16.0) (float-vector 1.065814e-14 19.0 -16.0) (float-vector 8.0 19.0 -13.8564)))
         (instance face :init :vertices (list (float-vector 1.065814e-14 7.0 -16.0) (float-vector -8.0 7.0 -13.8564) (float-vector -8.0 19.0 -13.8564) (float-vector 1.065814e-14 19.0 -16.0)))
         (instance face :init :vertices (list (float-vector -8.0 7.0 -13.8564) (float-vector -13.8564 7.0 -8.0) (float-vector -13.8564 19.0 -8.0) (float-vector -8.0 19.0 -13.8564)))
         (instance face :init :vertices (list (float-vector -13.8564 7.0 -8.0) (float-vector -16.0 7.0 -5.684342e-14) (float-vector -16.0 19.0 -5.684342e-14) (float-vector -13.8564 19.0 -8.0)))
         (instance face :init :vertices (list (float-vector -16.0 7.0 -5.684342e-14) (float-vector -13.8564 7.0 8.0) (float-vector -13.8564 19.0 8.0) (float-vector -16.0 19.0 -5.684342e-14)))
         (instance face :init :vertices (list (float-vector -13.8564 7.0 8.0) (float-vector -8.0 7.0 13.8564) (float-vector -8.0 19.0 13.8564) (float-vector -13.8564 19.0 8.0)))
         (instance face :init :vertices (list (float-vector -8.0 7.0 13.8564) (float-vector -2.842171e-14 7.0 16.0) (float-vector -2.842171e-14 19.0 16.0) (float-vector -8.0 19.0 13.8564)))
         (instance face :init :vertices (list (float-vector -2.842171e-14 7.0 16.0) (float-vector 8.0 7.0 13.8564) (float-vector 8.0 19.0 13.8564) (float-vector -2.842171e-14 19.0 16.0)))
         (instance face :init :vertices (list (float-vector 8.0 7.0 13.8564) (float-vector 13.8564 7.0 8.0) (float-vector 13.8564 19.0 8.0) (float-vector 8.0 19.0 13.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 19.0 8.0) (float-vector 16.0 19.0 5.684342e-14) (float-vector 13.8564 19.0 -8.0) (float-vector 8.0 19.0 -13.8564) (float-vector 1.065814e-14 19.0 -16.0) (float-vector -8.0 19.0 -13.8564) (float-vector -13.8564 19.0 -8.0) (float-vector -16.0 19.0 -5.684342e-14) (float-vector -13.8564 19.0 8.0) (float-vector -8.0 19.0 13.8564) (float-vector -2.842171e-14 19.0 16.0) (float-vector 8.0 19.0 13.8564)))
         (instance face :init :vertices (list (float-vector 13.8564 7.0 8.0) (float-vector 16.0 7.0 5.684342e-14) (float-vector 16.0 19.0 5.684342e-14) (float-vector 13.8564 19.0 8.0)))
         (instance face :init :vertices (list (float-vector 20.5 7.0 5.684342e-14) (float-vector 20.5 0.0 0.0) (float-vector 17.7535 5.684342e-14 -10.25) (float-vector 17.7535 7.0 -10.25)))
         (instance face :init :vertices (list (float-vector 17.7535 5.684342e-14 -10.25) (float-vector 10.25 5.684342e-14 -17.7535) (float-vector 10.25 7.0 -17.7535) (float-vector 17.7535 7.0 -10.25)))
         (instance face :init :vertices (list (float-vector 10.25 5.684342e-14 -17.7535) (float-vector 1.421085e-14 5.684342e-14 -20.5) (float-vector 1.421085e-14 7.0 -20.5) (float-vector 10.25 7.0 -17.7535)))
         (instance face :init :vertices (list (float-vector 1.421085e-14 5.684342e-14 -20.5) (float-vector -10.25 5.684342e-14 -17.7535) (float-vector -10.25 7.0 -17.7535) (float-vector 1.421085e-14 7.0 -20.5)))
         (instance face :init :vertices (list (float-vector -10.25 5.684342e-14 -17.7535) (float-vector -17.7535 5.684342e-14 -10.25) (float-vector -17.7535 7.0 -10.25) (float-vector -10.25 7.0 -17.7535)))
         (instance face :init :vertices (list (float-vector -17.7535 5.684342e-14 -10.25) (float-vector -20.5 0.0 0.0) (float-vector -20.5 7.0 -5.684342e-14) (float-vector -17.7535 7.0 -10.25)))
         (instance face :init :vertices (list (float-vector -20.5 0.0 0.0) (float-vector -17.7535 5.684342e-14 10.25) (float-vector -17.7535 7.0 10.25) (float-vector -20.5 7.0 -5.684342e-14)))
         (instance face :init :vertices (list (float-vector -17.7535 5.684342e-14 10.25) (float-vector -10.25 5.684342e-14 17.7535) (float-vector -10.25 7.0 17.7535) (float-vector -17.7535 7.0 10.25)))
         (instance face :init :vertices (list (float-vector -10.25 5.684342e-14 17.7535) (float-vector -3.907985e-14 5.684342e-14 20.5) (float-vector -3.907985e-14 7.0 20.5) (float-vector -10.25 7.0 17.7535)))
         (instance face :init :vertices (list (float-vector -3.907985e-14 5.684342e-14 20.5) (float-vector 10.25 5.684342e-14 17.7535) (float-vector 10.25 7.0 17.7535) (float-vector -3.907985e-14 7.0 20.5)))
         (instance face :init :vertices (list (float-vector 10.25 5.684342e-14 17.7535) (float-vector 17.7535 0.0 10.25) (float-vector 17.7535 7.0 10.25) (float-vector 10.25 7.0 17.7535)))
         (instance face :init :vertices (list (float-vector 17.7535 7.0 10.25) (float-vector 20.5 7.0 5.684342e-14) (float-vector 17.7535 7.0 -10.25) (float-vector 10.25 7.0 -17.7535) (float-vector 1.421085e-14 7.0 -20.5) (float-vector -10.25 7.0 -17.7535) (float-vector -17.7535 7.0 -10.25) (float-vector -20.5 7.0 -5.684342e-14) (float-vector -17.7535 7.0 10.25) (float-vector -10.25 7.0 17.7535) (float-vector -3.907985e-14 7.0 20.5) (float-vector 10.25 7.0 17.7535))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 16.0 7.0 5.684342e-14) (float-vector 13.8564 7.0 8.0) (float-vector 8.0 7.0 13.8564) (float-vector -2.842171e-14 7.0 16.0) (float-vector -8.0 7.0 13.8564) (float-vector -13.8564 7.0 8.0) (float-vector -16.0 7.0 -5.684342e-14) (float-vector -13.8564 7.0 -8.0) (float-vector -8.0 7.0 -13.8564) (float-vector 1.065814e-14 7.0 -16.0) (float-vector 8.0 7.0 -13.8564) (float-vector 13.8564 7.0 -8.0)))
))
         (instance face :init :vertices (list (float-vector 17.7535 0.0 10.25) (float-vector 20.5 0.0 0.0) (float-vector 20.5 7.0 5.684342e-14) (float-vector 17.7535 7.0 10.25)))
         (instance face :init :vertices (list (float-vector 20.5 0.0 0.0) (float-vector 17.7535 0.0 10.25) (float-vector 10.25 5.684342e-14 17.7535) (float-vector -3.907985e-14 5.684342e-14 20.5) (float-vector -10.25 5.684342e-14 17.7535) (float-vector -17.7535 5.684342e-14 10.25) (float-vector -20.5 0.0 0.0) (float-vector -17.7535 5.684342e-14 -10.25) (float-vector -10.25 5.684342e-14 -17.7535) (float-vector 1.421085e-14 5.684342e-14 -20.5) (float-vector 10.25 5.684342e-14 -17.7535) (float-vector 17.7535 5.684342e-14 -10.25)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.6 -7.8 -49.5) (float-vector -30.6 -32.2 -49.5) (float-vector -25.0 -37.8 -49.5) (float-vector 14.0 -37.8 -49.5) (float-vector 20.0 -32.2 -49.5) (float-vector 20.0 -7.8 -49.5) (float-vector 14.0 -2.2 -49.5) (float-vector -25.0 -2.2 -49.5)))
         (instance face :init :vertices (list (float-vector -30.6 -32.2 -85.0) (float-vector -30.6 -7.8 -85.0) (float-vector -25.0 -2.2 -85.0) (float-vector 14.0 -2.2 -85.0) (float-vector 20.0 -7.8 -85.0) (float-vector 20.0 -32.2 -85.0) (float-vector 14.0 -37.8 -85.0) (float-vector -25.0 -37.8 -85.0)))
         (instance face :init :vertices (list (float-vector -30.6 -7.8 -49.5) (float-vector -30.6 -7.8 -85.0) (float-vector -30.6 -32.2 -85.0) (float-vector -30.6 -32.2 -49.5)))
         (instance face :init :vertices (list (float-vector -25.0 -2.2 -49.5) (float-vector -25.0 -2.2 -85.0) (float-vector -30.6 -7.8 -85.0) (float-vector -30.6 -7.8 -49.5)))
         (instance face :init :vertices (list (float-vector 14.0 -2.2 -49.5) (float-vector 14.0 -2.2 -85.0) (float-vector -25.0 -2.2 -85.0) (float-vector -25.0 -2.2 -49.5)))
         (instance face :init :vertices (list (float-vector 20.0 -7.8 -49.5) (float-vector 20.0 -7.8 -85.0) (float-vector 14.0 -2.2 -85.0) (float-vector 14.0 -2.2 -49.5)))
         (instance face :init :vertices (list (float-vector 20.0 -32.2 -49.5) (float-vector 20.0 -32.2 -85.0) (float-vector 20.0 -7.8 -85.0) (float-vector 20.0 -7.8 -49.5)))
         (instance face :init :vertices (list (float-vector 14.0 -37.8 -49.5) (float-vector 14.0 -37.8 -85.0) (float-vector 20.0 -32.2 -85.0) (float-vector 20.0 -32.2 -49.5)))
         (instance face :init :vertices (list (float-vector -25.0 -37.8 -49.5) (float-vector -25.0 -37.8 -85.0) (float-vector 14.0 -37.8 -85.0) (float-vector 14.0 -37.8 -49.5)))
         (instance face :init :vertices (list (float-vector -30.6 -32.2 -49.5) (float-vector -30.6 -32.2 -85.0) (float-vector -25.0 -37.8 -85.0) (float-vector -25.0 -37.8 -49.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.5055 -18.0 -109.091) (float-vector 19.4903 -29.2528 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 19.4903 -29.2528 -109.091) (float-vector 11.2527 -37.4903 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 11.2527 -37.4903 -109.091) (float-vector -1.243450e-13 -40.5055 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -1.243450e-13 -40.5055 -109.091) (float-vector -11.2528 -37.4903 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -11.2528 -37.4903 -109.091) (float-vector -19.4903 -29.2527 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -19.4903 -29.2527 -109.091) (float-vector -22.5055 -18.0 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -22.5055 -18.0 -109.091) (float-vector -19.4903 -6.74725 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -19.4903 -6.74725 -109.091) (float-vector -11.2527 1.49033 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector -11.2527 1.49033 -109.091) (float-vector 2.131628e-14 4.5055 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 4.5055 -109.091) (float-vector 11.2527 1.49033 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 11.2527 1.49033 -109.091) (float-vector 19.4903 -6.74725 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 19.4903 -6.74725 -109.091) (float-vector 22.5055 -18.0 -109.091) (float-vector 0.0 -18.0 -115.121)))
         (instance face :init :vertices (list (float-vector 33.7582 -37.4903 -92.6155) (float-vector 19.4903 -29.2528 -109.091) (float-vector 22.5055 -18.0 -109.091) (float-vector 38.9807 -18.0 -92.6155)))
         (instance face :init :vertices (list (float-vector 19.4903 -51.7583 -92.6155) (float-vector 11.2527 -37.4903 -109.091) (float-vector 19.4903 -29.2528 -109.091) (float-vector 33.7582 -37.4903 -92.6155)))
         (instance face :init :vertices (list (float-vector -2.131628e-13 -56.9807 -92.6155) (float-vector -1.243450e-13 -40.5055 -109.091) (float-vector 11.2527 -37.4903 -109.091) (float-vector 19.4903 -51.7583 -92.6155)))
         (instance face :init :vertices (list (float-vector -19.4903 -51.7582 -92.6155) (float-vector -11.2528 -37.4903 -109.091) (float-vector -1.243450e-13 -40.5055 -109.091) (float-vector -2.131628e-13 -56.9807 -92.6155)))
         (instance face :init :vertices (list (float-vector -33.7583 -37.4903 -92.6155) (float-vector -19.4903 -29.2527 -109.091) (float-vector -11.2528 -37.4903 -109.091) (float-vector -19.4903 -51.7582 -92.6155)))
         (instance face :init :vertices (list (float-vector -38.9807 -18.0 -92.6155) (float-vector -22.5055 -18.0 -109.091) (float-vector -19.4903 -29.2527 -109.091) (float-vector -33.7583 -37.4903 -92.6155)))
         (instance face :init :vertices (list (float-vector -33.7582 1.49033 -92.6155) (float-vector -19.4903 -6.74725 -109.091) (float-vector -22.5055 -18.0 -109.091) (float-vector -38.9807 -18.0 -92.6155)))
         (instance face :init :vertices (list (float-vector -19.4903 15.7583 -92.6155) (float-vector -11.2527 1.49033 -109.091) (float-vector -19.4903 -6.74725 -109.091) (float-vector -33.7582 1.49033 -92.6155)))
         (instance face :init :vertices (list (float-vector 3.552714e-14 20.9807 -92.6155) (float-vector 2.131628e-14 4.5055 -109.091) (float-vector -11.2527 1.49033 -109.091) (float-vector -19.4903 15.7583 -92.6155)))
         (instance face :init :vertices (list (float-vector 19.4903 15.7583 -92.6155) (float-vector 11.2527 1.49033 -109.091) (float-vector 2.131628e-14 4.5055 -109.091) (float-vector 3.552714e-14 20.9807 -92.6155)))
         (instance face :init :vertices (list (float-vector 33.7582 1.49033 -92.6155) (float-vector 19.4903 -6.74725 -109.091) (float-vector 11.2527 1.49033 -109.091) (float-vector 19.4903 15.7583 -92.6155)))
         (instance face :init :vertices (list (float-vector 38.9807 -18.0 -92.6155) (float-vector 22.5055 -18.0 -109.091) (float-vector 19.4903 -6.74725 -109.091) (float-vector 33.7582 1.49033 -92.6155)))
         (instance face :init :vertices (list (float-vector 38.9807 -40.5055 -70.11) (float-vector 33.7582 -37.4903 -92.6155) (float-vector 38.9807 -18.0 -92.6155) (float-vector 45.011 -18.0 -70.11)))
         (instance face :init :vertices (list (float-vector 22.5055 -56.9807 -70.11) (float-vector 19.4903 -51.7583 -92.6155) (float-vector 33.7582 -37.4903 -92.6155) (float-vector 38.9807 -40.5055 -70.11)))
         (instance face :init :vertices (list (float-vector -2.486900e-13 -63.011 -70.11) (float-vector -2.131628e-13 -56.9807 -92.6155) (float-vector 19.4903 -51.7583 -92.6155) (float-vector 22.5055 -56.9807 -70.11)))
         (instance face :init :vertices (list (float-vector -22.5055 -56.9807 -70.11) (float-vector -19.4903 -51.7582 -92.6155) (float-vector -2.131628e-13 -56.9807 -92.6155) (float-vector -2.486900e-13 -63.011 -70.11)))
         (instance face :init :vertices (list (float-vector -38.9807 -40.5055 -70.11) (float-vector -33.7583 -37.4903 -92.6155) (float-vector -19.4903 -51.7582 -92.6155) (float-vector -22.5055 -56.9807 -70.11)))
         (instance face :init :vertices (list (float-vector -45.011 -18.0 -70.11) (float-vector -38.9807 -18.0 -92.6155) (float-vector -33.7583 -37.4903 -92.6155) (float-vector -38.9807 -40.5055 -70.11)))
         (instance face :init :vertices (list (float-vector -38.9807 4.5055 -70.11) (float-vector -33.7582 1.49033 -92.6155) (float-vector -38.9807 -18.0 -92.6155) (float-vector -45.011 -18.0 -70.11)))
         (instance face :init :vertices (list (float-vector -22.5055 20.9807 -70.11) (float-vector -19.4903 15.7583 -92.6155) (float-vector -33.7582 1.49033 -92.6155) (float-vector -38.9807 4.5055 -70.11)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 27.011 -70.11) (float-vector 3.552714e-14 20.9807 -92.6155) (float-vector -19.4903 15.7583 -92.6155) (float-vector -22.5055 20.9807 -70.11)))
         (instance face :init :vertices (list (float-vector 22.5055 20.9807 -70.11) (float-vector 19.4903 15.7583 -92.6155) (float-vector 3.552714e-14 20.9807 -92.6155) (float-vector 4.263256e-14 27.011 -70.11)))
         (instance face :init :vertices (list (float-vector 38.9807 4.5055 -70.11) (float-vector 33.7582 1.49033 -92.6155) (float-vector 19.4903 15.7583 -92.6155) (float-vector 22.5055 20.9807 -70.11)))
         (instance face :init :vertices (list (float-vector 45.011 -18.0 -70.11) (float-vector 38.9807 -18.0 -92.6155) (float-vector 33.7582 1.49033 -92.6155) (float-vector 38.9807 4.5055 -70.11)))
         (instance face :init :vertices (list (float-vector 38.9807 -40.5055 9.89) (float-vector 38.9807 -40.5055 -70.11) (float-vector 45.011 -18.0 -70.11) (float-vector 45.011 -18.0 9.89)))
         (instance face :init :vertices (list (float-vector 22.5055 -56.9807 9.89) (float-vector 22.5055 -56.9807 -70.11) (float-vector 38.9807 -40.5055 -70.11) (float-vector 38.9807 -40.5055 9.89)))
         (instance face :init :vertices (list (float-vector -2.486900e-13 -63.011 9.89) (float-vector -2.486900e-13 -63.011 -70.11) (float-vector 22.5055 -56.9807 -70.11) (float-vector 22.5055 -56.9807 9.89)))
         (instance face :init :vertices (list (float-vector -22.5055 -56.9807 9.89) (float-vector -22.5055 -56.9807 -70.11) (float-vector -2.486900e-13 -63.011 -70.11) (float-vector -2.486900e-13 -63.011 9.89)))
         (instance face :init :vertices (list (float-vector -38.9807 -40.5055 9.89) (float-vector -38.9807 -40.5055 -70.11) (float-vector -22.5055 -56.9807 -70.11) (float-vector -22.5055 -56.9807 9.89)))
         (instance face :init :vertices (list (float-vector -45.011 -18.0 9.89) (float-vector -45.011 -18.0 -70.11) (float-vector -38.9807 -40.5055 -70.11) (float-vector -38.9807 -40.5055 9.89)))
         (instance face :init :vertices (list (float-vector -38.9807 4.5055 9.89) (float-vector -38.9807 4.5055 -70.11) (float-vector -45.011 -18.0 -70.11) (float-vector -45.011 -18.0 9.89)))
         (instance face :init :vertices (list (float-vector -22.5055 20.9807 9.89) (float-vector -22.5055 20.9807 -70.11) (float-vector -38.9807 4.5055 -70.11) (float-vector -38.9807 4.5055 9.89)))
         (instance face :init :vertices (list (float-vector 4.263256e-14 27.011 9.89) (float-vector 4.263256e-14 27.011 -70.11) (float-vector -22.5055 20.9807 -70.11) (float-vector -22.5055 20.9807 9.89)))
         (instance face :init :vertices (list (float-vector 22.5055 20.9807 9.89) (float-vector 22.5055 20.9807 -70.11) (float-vector 4.263256e-14 27.011 -70.11) (float-vector 4.263256e-14 27.011 9.89)))
         (instance face :init :vertices (list (float-vector 38.9807 4.5055 9.89) (float-vector 38.9807 4.5055 -70.11) (float-vector 22.5055 20.9807 -70.11) (float-vector 22.5055 20.9807 9.89)))
         (instance face :init :vertices (list (float-vector 45.011 -18.0 9.89) (float-vector 45.011 -18.0 -70.11) (float-vector 38.9807 4.5055 -70.11) (float-vector 38.9807 4.5055 9.89)))
         (instance face :init :vertices (list (float-vector 33.7582 -37.4903 32.3955) (float-vector 38.9807 -40.5055 9.89) (float-vector 45.011 -18.0 9.89) (float-vector 38.9807 -18.0 32.3955)))
         (instance face :init :vertices (list (float-vector 19.4903 -51.7583 32.3955) (float-vector 22.5055 -56.9807 9.89) (float-vector 38.9807 -40.5055 9.89) (float-vector 33.7582 -37.4903 32.3955)))
         (instance face :init :vertices (list (float-vector -2.131628e-13 -56.9807 32.3955) (float-vector -2.486900e-13 -63.011 9.89) (float-vector 22.5055 -56.9807 9.89) (float-vector 19.4903 -51.7583 32.3955)))
         (instance face :init :vertices (list (float-vector -19.4903 -51.7582 32.3955) (float-vector -22.5055 -56.9807 9.89) (float-vector -2.486900e-13 -63.011 9.89) (float-vector -2.131628e-13 -56.9807 32.3955)))
         (instance face :init :vertices (list (float-vector -33.7583 -37.4903 32.3955) (float-vector -38.9807 -40.5055 9.89) (float-vector -22.5055 -56.9807 9.89) (float-vector -19.4903 -51.7582 32.3955)))
         (instance face :init :vertices (list (float-vector -38.9807 -18.0 32.3955) (float-vector -45.011 -18.0 9.89) (float-vector -38.9807 -40.5055 9.89) (float-vector -33.7583 -37.4903 32.3955)))
         (instance face :init :vertices (list (float-vector -33.7582 1.49033 32.3955) (float-vector -38.9807 4.5055 9.89) (float-vector -45.011 -18.0 9.89) (float-vector -38.9807 -18.0 32.3955)))
         (instance face :init :vertices (list (float-vector -19.4903 15.7583 32.3955) (float-vector -22.5055 20.9807 9.89) (float-vector -38.9807 4.5055 9.89) (float-vector -33.7582 1.49033 32.3955)))
         (instance face :init :vertices (list (float-vector 3.552714e-14 20.9807 32.3955) (float-vector 4.263256e-14 27.011 9.89) (float-vector -22.5055 20.9807 9.89) (float-vector -19.4903 15.7583 32.3955)))
         (instance face :init :vertices (list (float-vector 19.4903 15.7583 32.3955) (float-vector 22.5055 20.9807 9.89) (float-vector 4.263256e-14 27.011 9.89) (float-vector 3.552714e-14 20.9807 32.3955)))
         (instance face :init :vertices (list (float-vector 33.7582 1.49033 32.3955) (float-vector 38.9807 4.5055 9.89) (float-vector 22.5055 20.9807 9.89) (float-vector 19.4903 15.7583 32.3955)))
         (instance face :init :vertices (list (float-vector 38.9807 -18.0 32.3955) (float-vector 45.011 -18.0 9.89) (float-vector 38.9807 4.5055 9.89) (float-vector 33.7582 1.49033 32.3955)))
         (instance face :init :vertices (list (float-vector 19.4903 -29.2528 48.8707) (float-vector 33.7582 -37.4903 32.3955) (float-vector 38.9807 -18.0 32.3955) (float-vector 22.5055 -18.0 48.8707)))
         (instance face :init :vertices (list (float-vector 11.2527 -37.4903 48.8707) (float-vector 19.4903 -51.7583 32.3955) (float-vector 33.7582 -37.4903 32.3955) (float-vector 19.4903 -29.2528 48.8707)))
         (instance face :init :vertices (list (float-vector -1.243450e-13 -40.5055 48.8707) (float-vector -2.131628e-13 -56.9807 32.3955) (float-vector 19.4903 -51.7583 32.3955) (float-vector 11.2527 -37.4903 48.8707)))
         (instance face :init :vertices (list (float-vector -11.2528 -37.4903 48.8707) (float-vector -19.4903 -51.7582 32.3955) (float-vector -2.131628e-13 -56.9807 32.3955) (float-vector -1.243450e-13 -40.5055 48.8707)))
         (instance face :init :vertices (list (float-vector -19.4903 -29.2527 48.8707) (float-vector -33.7583 -37.4903 32.3955) (float-vector -19.4903 -51.7582 32.3955) (float-vector -11.2528 -37.4903 48.8707)))
         (instance face :init :vertices (list (float-vector -22.5055 -18.0 48.8707) (float-vector -38.9807 -18.0 32.3955) (float-vector -33.7583 -37.4903 32.3955) (float-vector -19.4903 -29.2527 48.8707)))
         (instance face :init :vertices (list (float-vector -19.4903 -6.74725 48.8707) (float-vector -33.7582 1.49033 32.3955) (float-vector -38.9807 -18.0 32.3955) (float-vector -22.5055 -18.0 48.8707)))
         (instance face :init :vertices (list (float-vector -11.2527 1.49033 48.8707) (float-vector -19.4903 15.7583 32.3955) (float-vector -33.7582 1.49033 32.3955) (float-vector -19.4903 -6.74725 48.8707)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 4.5055 48.8707) (float-vector 3.552714e-14 20.9807 32.3955) (float-vector -19.4903 15.7583 32.3955) (float-vector -11.2527 1.49033 48.8707)))
         (instance face :init :vertices (list (float-vector 11.2527 1.49033 48.8707) (float-vector 19.4903 15.7583 32.3955) (float-vector 3.552714e-14 20.9807 32.3955) (float-vector 2.131628e-14 4.5055 48.8707)))
         (instance face :init :vertices (list (float-vector 19.4903 -6.74725 48.8707) (float-vector 33.7582 1.49033 32.3955) (float-vector 19.4903 15.7583 32.3955) (float-vector 11.2527 1.49033 48.8707)))
         (instance face :init :vertices (list (float-vector 22.5055 -18.0 48.8707) (float-vector 38.9807 -18.0 32.3955) (float-vector 33.7582 1.49033 32.3955) (float-vector 19.4903 -6.74725 48.8707)))
         (instance face :init :vertices (list (float-vector 19.4903 -29.2528 48.8707) (float-vector 22.5055 -18.0 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector 22.5055 -18.0 48.8707) (float-vector 19.4903 -6.74725 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector 19.4903 -6.74725 48.8707) (float-vector 11.2527 1.49033 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector 11.2527 1.49033 48.8707) (float-vector 2.131628e-14 4.5055 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector 2.131628e-14 4.5055 48.8707) (float-vector -11.2527 1.49033 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector -11.2527 1.49033 48.8707) (float-vector -19.4903 -6.74725 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector -19.4903 -6.74725 48.8707) (float-vector -22.5055 -18.0 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector -22.5055 -18.0 48.8707) (float-vector -19.4903 -29.2527 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector -19.4903 -29.2527 48.8707) (float-vector -11.2528 -37.4903 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector -11.2528 -37.4903 48.8707) (float-vector -1.243450e-13 -40.5055 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector -1.243450e-13 -40.5055 48.8707) (float-vector 11.2527 -37.4903 48.8707) (float-vector 0.0 -18.0 54.901)))
         (instance face :init :vertices (list (float-vector 11.2527 -37.4903 48.8707) (float-vector 19.4903 -29.2528 48.8707) (float-vector 0.0 -18.0 54.901)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 25.0 -70.0) (float-vector -10.0 25.0 -70.0) (float-vector -10.0 25.0 -50.0) (float-vector 10.0 25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 5.0 -70.0) (float-vector 10.0 5.0 -70.0) (float-vector 10.0 5.0 -50.0) (float-vector -10.0 5.0 -50.0)))
         (instance face :init :vertices (list (float-vector 10.0 25.0 -70.0) (float-vector 10.0 5.0 -70.0) (float-vector -10.0 5.0 -70.0) (float-vector -10.0 25.0 -70.0)))
         (instance face :init :vertices (list (float-vector 10.0 25.0 -50.0) (float-vector 10.0 5.0 -50.0) (float-vector 10.0 5.0 -70.0) (float-vector 10.0 25.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 25.0 -50.0) (float-vector -10.0 5.0 -50.0) (float-vector 10.0 5.0 -50.0) (float-vector 10.0 25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 25.0 -70.0) (float-vector -10.0 5.0 -70.0) (float-vector -10.0 5.0 -50.0) (float-vector -10.0 25.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -50.0 -50.0) (float-vector -10.0 -50.0 -50.0) (float-vector -10.0 -50.0 -70.0) (float-vector 10.0 -50.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 -30.0 -50.0) (float-vector 10.0 -30.0 -50.0) (float-vector 10.0 -30.0 -70.0) (float-vector -10.0 -30.0 -70.0)))
         (instance face :init :vertices (list (float-vector 10.0 -50.0 -50.0) (float-vector 10.0 -30.0 -50.0) (float-vector -10.0 -30.0 -50.0) (float-vector -10.0 -50.0 -50.0)))
         (instance face :init :vertices (list (float-vector 10.0 -50.0 -70.0) (float-vector 10.0 -30.0 -70.0) (float-vector 10.0 -30.0 -50.0) (float-vector 10.0 -50.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 -50.0 -70.0) (float-vector -10.0 -30.0 -70.0) (float-vector 10.0 -30.0 -70.0) (float-vector 10.0 -50.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 -50.0 -50.0) (float-vector -10.0 -30.0 -50.0) (float-vector -10.0 -30.0 -70.0) (float-vector -10.0 -50.0 -70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 -10.0 -40.0) (float-vector 40.0 -10.0 -20.0) (float-vector 40.0 -30.0 -20.0) (float-vector 40.0 -30.0 -40.0)))
         (instance face :init :vertices (list (float-vector 20.0 -10.0 -20.0) (float-vector 20.0 -10.0 -40.0) (float-vector 20.0 -30.0 -40.0) (float-vector 20.0 -30.0 -20.0)))
         (instance face :init :vertices (list (float-vector 40.0 -10.0 -40.0) (float-vector 20.0 -10.0 -40.0) (float-vector 20.0 -10.0 -20.0) (float-vector 40.0 -10.0 -20.0)))
         (instance face :init :vertices (list (float-vector 40.0 -30.0 -40.0) (float-vector 20.0 -30.0 -40.0) (float-vector 20.0 -10.0 -40.0) (float-vector 40.0 -10.0 -40.0)))
         (instance face :init :vertices (list (float-vector 40.0 -30.0 -20.0) (float-vector 20.0 -30.0 -20.0) (float-vector 20.0 -30.0 -40.0) (float-vector 40.0 -30.0 -40.0)))
         (instance face :init :vertices (list (float-vector 40.0 -10.0 -20.0) (float-vector 20.0 -10.0 -20.0) (float-vector 20.0 -30.0 -20.0) (float-vector 40.0 -30.0 -20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -50.0 -10.0 -20.0) (float-vector -50.0 -10.0 -40.0) (float-vector -50.0 -30.0 -40.0) (float-vector -50.0 -30.0 -20.0)))
         (instance face :init :vertices (list (float-vector -30.0 -10.0 -40.0) (float-vector -30.0 -10.0 -20.0) (float-vector -30.0 -30.0 -20.0) (float-vector -30.0 -30.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 -10.0 -20.0) (float-vector -30.0 -10.0 -20.0) (float-vector -30.0 -10.0 -40.0) (float-vector -50.0 -10.0 -40.0)))
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -20.0) (float-vector -30.0 -30.0 -20.0) (float-vector -30.0 -10.0 -20.0) (float-vector -50.0 -10.0 -20.0)))
         (instance face :init :vertices (list (float-vector -50.0 -30.0 -40.0) (float-vector -30.0 -30.0 -40.0) (float-vector -30.0 -30.0 -20.0) (float-vector -50.0 -30.0 -20.0)))
         (instance face :init :vertices (list (float-vector -50.0 -10.0 -40.0) (float-vector -30.0 -10.0 -40.0) (float-vector -30.0 -30.0 -40.0) (float-vector -50.0 -30.0 -40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 -10.0 -70.0) (float-vector 40.0 -10.0 -50.0) (float-vector 40.0 -30.0 -50.0) (float-vector 40.0 -30.0 -70.0)))
         (instance face :init :vertices (list (float-vector 20.0 -10.0 -50.0) (float-vector 20.0 -10.0 -70.0) (float-vector 20.0 -30.0 -70.0) (float-vector 20.0 -30.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 -10.0 -70.0) (float-vector 20.0 -10.0 -70.0) (float-vector 20.0 -10.0 -50.0) (float-vector 40.0 -10.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 -30.0 -70.0) (float-vector 20.0 -30.0 -70.0) (float-vector 20.0 -10.0 -70.0) (float-vector 40.0 -10.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 -30.0 -50.0) (float-vector 20.0 -30.0 -50.0) (float-vector 20.0 -30.0 -70.0) (float-vector 40.0 -30.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 -10.0 -50.0) (float-vector 20.0 -10.0 -50.0) (float-vector 20.0 -30.0 -50.0) (float-vector 40.0 -30.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 25.0 -100.0) (float-vector -10.0 25.0 -100.0) (float-vector -10.0 25.0 -80.0) (float-vector 10.0 25.0 -80.0)))
         (instance face :init :vertices (list (float-vector -10.0 5.0 -100.0) (float-vector 10.0 5.0 -100.0) (float-vector 10.0 5.0 -80.0) (float-vector -10.0 5.0 -80.0)))
         (instance face :init :vertices (list (float-vector 10.0 25.0 -100.0) (float-vector 10.0 5.0 -100.0) (float-vector -10.0 5.0 -100.0) (float-vector -10.0 25.0 -100.0)))
         (instance face :init :vertices (list (float-vector 10.0 25.0 -80.0) (float-vector 10.0 5.0 -80.0) (float-vector 10.0 5.0 -100.0) (float-vector 10.0 25.0 -100.0)))
         (instance face :init :vertices (list (float-vector -10.0 25.0 -80.0) (float-vector -10.0 5.0 -80.0) (float-vector 10.0 5.0 -80.0) (float-vector 10.0 25.0 -80.0)))
         (instance face :init :vertices (list (float-vector -10.0 25.0 -100.0) (float-vector -10.0 5.0 -100.0) (float-vector -10.0 5.0 -80.0) (float-vector -10.0 25.0 -80.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray30)
     (send (elt bc 3) :set-color :papayawhip)
     (send (elt bc 4) :set-color :linen)
     (send (elt bc 5) :set-color :linen)
     (send (elt bc 6) :set-color :linen)
     (send (elt bc 7) :set-color :linen)
     (send (elt bc 8) :set-color :linen)
     (send (elt bc 9) :set-color :linen)
     (setq blink19 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-upperarm :weight 288 :centroid (float-vector -1.33191 -10.3566 -23.943) :inertia-tensor #2f((3.540518e+05 4879.23 37324.9) (4879.23 3.413899e+05 -71157.6) (37324.9 -71157.6 25615.6))))

     ;; definition of :rarm-forearm-bracket
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 22.5 5.684342e-14) (float-vector 10.0 22.5 30.0) (float-vector 10.0 -22.5 30.0) (float-vector 10.0 -22.5 0.0) (float-vector 10.0 -20.5 0.0) (float-vector 10.0 -20.5 28.0) (float-vector 10.0 20.5 28.0) (float-vector 10.0 20.5 0.0)))
         (instance face :init :vertices (list (float-vector -10.0 22.5 30.0) (float-vector -10.0 -22.5 30.0) (float-vector 10.0 -22.5 30.0) (float-vector 10.0 22.5 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 22.5 5.684342e-14) (float-vector -10.0 20.5 5.684342e-14) (float-vector -10.0 20.5 28.0) (float-vector -10.0 -20.5 28.0) (float-vector -10.0 -20.5 0.0) (float-vector -10.0 -22.5 0.0) (float-vector -10.0 -22.5 30.0) (float-vector -10.0 22.5 30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -22.5 -7.07107) (float-vector -10.0 -22.5 0.0) (float-vector -10.0 -20.5 0.0) (float-vector -7.07107 -20.5 -7.07107)))
         (instance face :init :vertices (list (float-vector -7.07107 22.5 -7.07107) (float-vector -7.07107 20.5 -7.07107) (float-vector -10.0 20.5 5.684342e-14) (float-vector -10.0 22.5 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 0.0 -22.5 -10.0) (float-vector -7.07107 -22.5 -7.07107) (float-vector -7.07107 -20.5 -7.07107) (float-vector 0.0 -20.5 -10.0)))
         (instance face :init :vertices (list (float-vector 0.0 22.5 -10.0) (float-vector 0.0 20.5 -10.0) (float-vector -7.07107 20.5 -7.07107) (float-vector -7.07107 22.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 7.07107 -22.5 -7.07107) (float-vector 0.0 -22.5 -10.0) (float-vector 0.0 -20.5 -10.0) (float-vector 7.07107 -20.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 7.07107 22.5 -7.07107) (float-vector 7.07107 20.5 -7.07107) (float-vector 0.0 20.5 -10.0) (float-vector 0.0 22.5 -10.0)))
         (instance face :init :vertices (list (float-vector 10.0 -22.5 0.0) (float-vector 10.0 -22.5 30.0) (float-vector -10.0 -22.5 30.0) (float-vector -10.0 -22.5 0.0) (float-vector -7.07107 -22.5 -7.07107) (float-vector 0.0 -22.5 -10.0) (float-vector 7.07107 -22.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 7.07107 22.5 -7.07107) (float-vector 0.0 22.5 -10.0) (float-vector -7.07107 22.5 -7.07107) (float-vector -10.0 22.5 5.684342e-14) (float-vector -10.0 22.5 30.0) (float-vector 10.0 22.5 30.0) (float-vector 10.0 22.5 5.684342e-14)))
         (instance face :init :vertices (list (float-vector 7.07107 -22.5 -7.07107) (float-vector 7.07107 -20.5 -7.07107) (float-vector 10.0 -20.5 0.0) (float-vector 10.0 -22.5 0.0)))
         (instance face :init :vertices (list (float-vector 10.0 22.5 5.684342e-14) (float-vector 10.0 20.5 0.0) (float-vector 7.07107 20.5 -7.07107) (float-vector 7.07107 22.5 -7.07107)))
         (instance face :init :vertices (list (float-vector 10.0 -20.5 28.0) (float-vector 10.0 -20.5 0.0) (float-vector 7.07107 -20.5 -7.07107) (float-vector 0.0 -20.5 -10.0) (float-vector -7.07107 -20.5 -7.07107) (float-vector -10.0 -20.5 0.0) (float-vector -10.0 -20.5 28.0)))
         (instance face :init :vertices (list (float-vector 10.0 20.5 28.0) (float-vector 10.0 -20.5 28.0) (float-vector -10.0 -20.5 28.0) (float-vector -10.0 20.5 28.0)))
         (instance face :init :vertices (list (float-vector -10.0 20.5 28.0) (float-vector -10.0 20.5 5.684342e-14) (float-vector -7.07107 20.5 -7.07107) (float-vector 0.0 20.5 -10.0) (float-vector 7.07107 20.5 -7.07107) (float-vector 10.0 20.5 0.0) (float-vector 10.0 20.5 28.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 16.375 34.6025 12.6275) (float-vector 7.63753 20.465 35.5025) (float-vector 30.5125 11.7275 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 11.7275 21.365) (float-vector 32.4173 21.6422 -1.51) (float-vector 16.375 34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector 7.63753 20.465 35.5025) (float-vector 17.5522 -2.41 37.4073) (float-vector 30.5125 11.7275 21.365)))
         (instance face :init :vertices (list (float-vector 16.375 34.6025 12.6275) (float-vector -6.5 36.5073 22.5422) (float-vector 7.63753 20.465 35.5025)))
         (instance face :init :vertices (list (float-vector 7.63753 -25.285 35.5025) (float-vector -6.5 -2.41 44.24) (float-vector -20.6375 -25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 -25.285 35.5025) (float-vector -6.5 -41.3273 22.5422) (float-vector 7.63753 -25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -6.5 -2.41 44.24) (float-vector -30.5522 -2.41 37.4073) (float-vector -20.6375 -25.285 35.5025)))
         (instance face :init :vertices (list (float-vector 7.63753 -25.285 35.5025) (float-vector 17.5522 -2.41 37.4073) (float-vector -6.5 -2.41 44.24)))
         (instance face :init :vertices (list (float-vector -29.375 34.6025 -15.6475) (float-vector -29.375 34.6025 12.6275) (float-vector -6.5 43.34 -1.51)))
         (instance face :init :vertices (list (float-vector -6.5 43.34 -1.51) (float-vector -6.5 36.5073 -25.5622) (float-vector -29.375 34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector -29.375 34.6025 12.6275) (float-vector -6.5 36.5073 22.5422) (float-vector -6.5 43.34 -1.51)))
         (instance face :init :vertices (list (float-vector -29.375 34.6025 -15.6475) (float-vector -45.4173 21.6422 -1.51) (float-vector -29.375 34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector 7.63753 20.465 35.5025) (float-vector -20.6375 20.465 35.5025) (float-vector -6.5 -2.41 44.24)))
         (instance face :init :vertices (list (float-vector -6.5 -2.41 44.24) (float-vector 17.5522 -2.41 37.4073) (float-vector 7.63753 20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 20.465 35.5025) (float-vector -30.5522 -2.41 37.4073) (float-vector -6.5 -2.41 44.24)))
         (instance face :init :vertices (list (float-vector 7.63753 20.465 35.5025) (float-vector -6.5 36.5073 22.5422) (float-vector -20.6375 20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -29.375 34.6025 12.6275) (float-vector -43.5125 11.7275 21.365) (float-vector -20.6375 20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 20.465 35.5025) (float-vector -6.5 36.5073 22.5422) (float-vector -29.375 34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector -43.5125 11.7275 21.365) (float-vector -30.5522 -2.41 37.4073) (float-vector -20.6375 20.465 35.5025)))
         (instance face :init :vertices (list (float-vector -29.375 34.6025 12.6275) (float-vector -45.4173 21.6422 -1.51) (float-vector -43.5125 11.7275 21.365)))
         (instance face :init :vertices (list (float-vector -43.5125 11.7275 21.365) (float-vector -52.25 -2.41 -1.51) (float-vector -43.5125 -16.5475 21.365)))
         (instance face :init :vertices (list (float-vector -43.5125 -16.5475 21.365) (float-vector -30.5522 -2.41 37.4073) (float-vector -43.5125 11.7275 21.365)))
         (instance face :init :vertices (list (float-vector -52.25 -2.41 -1.51) (float-vector -45.4173 -26.4622 -1.51) (float-vector -43.5125 -16.5475 21.365)))
         (instance face :init :vertices (list (float-vector -43.5125 11.7275 21.365) (float-vector -45.4173 21.6422 -1.51) (float-vector -52.25 -2.41 -1.51)))
         (instance face :init :vertices (list (float-vector -43.5125 11.7275 -24.385) (float-vector -43.5125 -16.5475 -24.385) (float-vector -52.25 -2.41 -1.51)))
         (instance face :init :vertices (list (float-vector -52.25 -2.41 -1.51) (float-vector -45.4173 21.6422 -1.51) (float-vector -43.5125 11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector -43.5125 -16.5475 -24.385) (float-vector -45.4173 -26.4622 -1.51) (float-vector -52.25 -2.41 -1.51)))
         (instance face :init :vertices (list (float-vector -43.5125 11.7275 -24.385) (float-vector -30.5522 -2.41 -40.4273) (float-vector -43.5125 -16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector -20.6375 -25.285 -38.5225) (float-vector -29.375 -39.4225 -15.6475) (float-vector -43.5125 -16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector -43.5125 -16.5475 -24.385) (float-vector -30.5522 -2.41 -40.4273) (float-vector -20.6375 -25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector -29.375 -39.4225 -15.6475) (float-vector -45.4173 -26.4622 -1.51) (float-vector -43.5125 -16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector -20.6375 -25.285 -38.5225) (float-vector -6.5 -41.3273 -25.5622) (float-vector -29.375 -39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector -43.5125 -16.5475 21.365) (float-vector -29.375 -39.4225 12.6275) (float-vector -20.6375 -25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -20.6375 -25.285 35.5025) (float-vector -30.5522 -2.41 37.4073) (float-vector -43.5125 -16.5475 21.365)))
         (instance face :init :vertices (list (float-vector -29.375 -39.4225 12.6275) (float-vector -6.5 -41.3273 22.5422) (float-vector -20.6375 -25.285 35.5025)))
         (instance face :init :vertices (list (float-vector -43.5125 -16.5475 21.365) (float-vector -45.4173 -26.4622 -1.51) (float-vector -29.375 -39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector -29.375 -39.4225 -15.6475) (float-vector -6.5 -48.16 -1.51) (float-vector -29.375 -39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector -29.375 -39.4225 12.6275) (float-vector -45.4173 -26.4622 -1.51) (float-vector -29.375 -39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector -6.5 -48.16 -1.51) (float-vector -6.5 -41.3273 22.5422) (float-vector -29.375 -39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector -29.375 -39.4225 -15.6475) (float-vector -6.5 -41.3273 -25.5622) (float-vector -6.5 -48.16 -1.51)))
         (instance face :init :vertices (list (float-vector 7.63753 -25.285 35.5025) (float-vector 16.375 -39.4225 12.6275) (float-vector 30.5125 -16.5475 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 -16.5475 21.365) (float-vector 17.5522 -2.41 37.4073) (float-vector 7.63753 -25.285 35.5025)))
         (instance face :init :vertices (list (float-vector 16.375 -39.4225 12.6275) (float-vector 32.4173 -26.4622 -1.51) (float-vector 30.5125 -16.5475 21.365)))
         (instance face :init :vertices (list (float-vector 7.63753 -25.285 35.5025) (float-vector -6.5 -41.3273 22.5422) (float-vector 16.375 -39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector -6.5 -48.16 -1.51) (float-vector 16.375 -39.4225 -15.6475) (float-vector 16.375 -39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector 16.375 -39.4225 12.6275) (float-vector -6.5 -41.3273 22.5422) (float-vector -6.5 -48.16 -1.51)))
         (instance face :init :vertices (list (float-vector 16.375 -39.4225 -15.6475) (float-vector 32.4173 -26.4622 -1.51) (float-vector 16.375 -39.4225 12.6275)))
         (instance face :init :vertices (list (float-vector -6.5 -48.16 -1.51) (float-vector -6.5 -41.3273 -25.5622) (float-vector 16.375 -39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector 7.63753 -25.285 -38.5225) (float-vector 30.5125 -16.5475 -24.385) (float-vector 16.375 -39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector 16.375 -39.4225 -15.6475) (float-vector -6.5 -41.3273 -25.5622) (float-vector 7.63753 -25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector 30.5125 -16.5475 -24.385) (float-vector 32.4173 -26.4622 -1.51) (float-vector 16.375 -39.4225 -15.6475)))
         (instance face :init :vertices (list (float-vector 7.63753 -25.285 -38.5225) (float-vector 17.5522 -2.41 -40.4273) (float-vector 30.5125 -16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector 30.5125 -16.5475 21.365) (float-vector 39.25 -2.41 -1.51) (float-vector 30.5125 11.7275 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 11.7275 21.365) (float-vector 17.5522 -2.41 37.4073) (float-vector 30.5125 -16.5475 21.365)))
         (instance face :init :vertices (list (float-vector 39.25 -2.41 -1.51) (float-vector 32.4173 21.6422 -1.51) (float-vector 30.5125 11.7275 21.365)))
         (instance face :init :vertices (list (float-vector 30.5125 -16.5475 21.365) (float-vector 32.4173 -26.4622 -1.51) (float-vector 39.25 -2.41 -1.51)))
         (instance face :init :vertices (list (float-vector 30.5125 -16.5475 -24.385) (float-vector 30.5125 11.7275 -24.385) (float-vector 39.25 -2.41 -1.51)))
         (instance face :init :vertices (list (float-vector 39.25 -2.41 -1.51) (float-vector 32.4173 -26.4622 -1.51) (float-vector 30.5125 -16.5475 -24.385)))
         (instance face :init :vertices (list (float-vector 30.5125 11.7275 -24.385) (float-vector 32.4173 21.6422 -1.51) (float-vector 39.25 -2.41 -1.51)))
         (instance face :init :vertices (list (float-vector 30.5125 -16.5475 -24.385) (float-vector 17.5522 -2.41 -40.4273) (float-vector 30.5125 11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector 16.375 34.6025 12.6275) (float-vector 16.375 34.6025 -15.6475) (float-vector -6.5 43.34 -1.51)))
         (instance face :init :vertices (list (float-vector -6.5 43.34 -1.51) (float-vector -6.5 36.5073 22.5422) (float-vector 16.375 34.6025 12.6275)))
         (instance face :init :vertices (list (float-vector 16.375 34.6025 -15.6475) (float-vector -6.5 36.5073 -25.5622) (float-vector -6.5 43.34 -1.51)))
         (instance face :init :vertices (list (float-vector 16.375 34.6025 12.6275) (float-vector 32.4173 21.6422 -1.51) (float-vector 16.375 34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector 30.5125 11.7275 -24.385) (float-vector 7.63753 20.465 -38.5225) (float-vector 16.375 34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector 16.375 34.6025 -15.6475) (float-vector 32.4173 21.6422 -1.51) (float-vector 30.5125 11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector 7.63753 20.465 -38.5225) (float-vector -6.5 36.5073 -25.5622) (float-vector 16.375 34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector 30.5125 11.7275 -24.385) (float-vector 17.5522 -2.41 -40.4273) (float-vector 7.63753 20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector -29.375 34.6025 -15.6475) (float-vector -20.6375 20.465 -38.5225) (float-vector -43.5125 11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector -43.5125 11.7275 -24.385) (float-vector -45.4173 21.6422 -1.51) (float-vector -29.375 34.6025 -15.6475)))
         (instance face :init :vertices (list (float-vector -20.6375 20.465 -38.5225) (float-vector -30.5522 -2.41 -40.4273) (float-vector -43.5125 11.7275 -24.385)))
         (instance face :init :vertices (list (float-vector -29.375 34.6025 -15.6475) (float-vector -6.5 36.5073 -25.5622) (float-vector -20.6375 20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector -20.6375 -25.285 -38.5225) (float-vector -6.5 -2.41 -47.26) (float-vector 7.63753 -25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector 7.63753 -25.285 -38.5225) (float-vector -6.5 -41.3273 -25.5622) (float-vector -20.6375 -25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector -6.5 -2.41 -47.26) (float-vector 17.5522 -2.41 -40.4273) (float-vector 7.63753 -25.285 -38.5225)))
         (instance face :init :vertices (list (float-vector -20.6375 -25.285 -38.5225) (float-vector -30.5522 -2.41 -40.4273) (float-vector -6.5 -2.41 -47.26)))
         (instance face :init :vertices (list (float-vector 7.63753 20.465 -38.5225) (float-vector -6.5 -2.41 -47.26) (float-vector -20.6375 20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector -20.6375 20.465 -38.5225) (float-vector -6.5 36.5073 -25.5622) (float-vector 7.63753 20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector -6.5 -2.41 -47.26) (float-vector -30.5522 -2.41 -40.4273) (float-vector -20.6375 20.465 -38.5225)))
         (instance face :init :vertices (list (float-vector 7.63753 20.465 -38.5225) (float-vector 17.5522 -2.41 -40.4273) (float-vector -6.5 -2.41 -47.26)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :papayawhip)
     (setq blink18 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-forearm-bracket :weight 12.4354 :centroid (float-vector -4.566544e-16 -2.211688e-14 17.6486) :inertia-tensor #2f((3874.27 -1.255942e-28 1.002203e-13) (-1.255942e-28 3874.27 4.853913e-12) (1.002203e-13 4.853913e-12 1.0))))

     ;; definition of :rarm-forearm
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -12.2 -35.5 -38.6) (float-vector 12.2 -35.5 -38.6) (float-vector 17.8 -35.5 -33.0) (float-vector 17.8 -35.5 6.0) (float-vector 12.2 -35.5 12.0) (float-vector -12.2 -35.5 12.0) (float-vector -17.8 -35.5 6.0) (float-vector -17.8 -35.5 -33.0)))
         (instance face :init :vertices (list (float-vector 12.2 0.0 -38.6) (float-vector -12.2 0.0 -38.6) (float-vector -17.8 0.0 -33.0) (float-vector -17.8 0.0 6.0) (float-vector -12.2 0.0 12.0) (float-vector 12.2 0.0 12.0) (float-vector 17.8 0.0 6.0) (float-vector 17.8 0.0 -33.0)))
         (instance face :init :vertices (list (float-vector -12.2 -35.5 -38.6) (float-vector -12.2 0.0 -38.6) (float-vector 12.2 0.0 -38.6) (float-vector 12.2 -35.5 -38.6)))
         (instance face :init :vertices (list (float-vector -17.8 -35.5 -33.0) (float-vector -17.8 0.0 -33.0) (float-vector -12.2 0.0 -38.6) (float-vector -12.2 -35.5 -38.6)))
         (instance face :init :vertices (list (float-vector -17.8 -35.5 6.0) (float-vector -17.8 0.0 6.0) (float-vector -17.8 0.0 -33.0) (float-vector -17.8 -35.5 -33.0)))
         (instance face :init :vertices (list (float-vector -12.2 -35.5 12.0) (float-vector -12.2 0.0 12.0) (float-vector -17.8 0.0 6.0) (float-vector -17.8 -35.5 6.0)))
         (instance face :init :vertices (list (float-vector 12.2 -35.5 12.0) (float-vector 12.2 0.0 12.0) (float-vector -12.2 0.0 12.0) (float-vector -12.2 -35.5 12.0)))
         (instance face :init :vertices (list (float-vector 17.8 -35.5 6.0) (float-vector 17.8 0.0 6.0) (float-vector 12.2 0.0 12.0) (float-vector 12.2 -35.5 12.0)))
         (instance face :init :vertices (list (float-vector 17.8 -35.5 -33.0) (float-vector 17.8 0.0 -33.0) (float-vector 17.8 0.0 6.0) (float-vector 17.8 -35.5 6.0)))
         (instance face :init :vertices (list (float-vector 12.2 -35.5 -38.6) (float-vector 12.2 0.0 -38.6) (float-vector 17.8 0.0 -33.0) (float-vector 17.8 -35.5 -33.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 13.0 -5.0 -36.0) (float-vector -13.0 -5.0 -36.0) (float-vector -13.0 -31.0 -36.0) (float-vector 13.0 -31.0 -36.0)))
         (instance face :init :vertices (list (float-vector -13.0 -5.0 -108.0) (float-vector 13.0 -5.0 -108.0) (float-vector 13.0 -31.0 -108.0) (float-vector -13.0 -31.0 -108.0)))
         (instance face :init :vertices (list (float-vector 13.0 -5.0 -36.0) (float-vector 13.0 -5.0 -108.0) (float-vector -13.0 -5.0 -108.0) (float-vector -13.0 -5.0 -36.0)))
         (instance face :init :vertices (list (float-vector 13.0 -31.0 -36.0) (float-vector 13.0 -31.0 -108.0) (float-vector 13.0 -5.0 -108.0) (float-vector 13.0 -5.0 -36.0)))
         (instance face :init :vertices (list (float-vector -13.0 -31.0 -36.0) (float-vector -13.0 -31.0 -108.0) (float-vector 13.0 -31.0 -108.0) (float-vector 13.0 -31.0 -36.0)))
         (instance face :init :vertices (list (float-vector -13.0 -5.0 -36.0) (float-vector -13.0 -5.0 -108.0) (float-vector -13.0 -31.0 -108.0) (float-vector -13.0 -31.0 -36.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 20.6 -20.0 -124.285) (float-vector 17.3176 -32.25 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 17.3176 -32.25 -124.285) (float-vector 8.35 -41.2176 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 8.35 -41.2176 -124.285) (float-vector -3.9 -44.5 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -3.9 -44.5 -124.285) (float-vector -16.15 -41.2176 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -16.15 -41.2176 -124.285) (float-vector -25.1176 -32.25 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -25.1176 -32.25 -124.285) (float-vector -28.4 -20.0 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -28.4 -20.0 -124.285) (float-vector -25.1176 -7.75 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -25.1176 -7.75 -124.285) (float-vector -16.15 1.21762 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -16.15 1.21762 -124.285) (float-vector -3.9 4.5 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector -3.9 4.5 -124.285) (float-vector 8.35 1.21762 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 8.35 1.21762 -124.285) (float-vector 17.3176 -7.75 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 17.3176 -7.75 -124.285) (float-vector 20.6 -20.0 -124.285) (float-vector -3.9 -20.0 -130.85)))
         (instance face :init :vertices (list (float-vector 32.85 -41.2176 -106.35) (float-vector 17.3176 -32.25 -124.285) (float-vector 20.6 -20.0 -124.285) (float-vector 38.5352 -20.0 -106.35)))
         (instance face :init :vertices (list (float-vector 17.3176 -56.75 -106.35) (float-vector 8.35 -41.2176 -124.285) (float-vector 17.3176 -32.25 -124.285) (float-vector 32.85 -41.2176 -106.35)))
         (instance face :init :vertices (list (float-vector -3.9 -62.4352 -106.35) (float-vector -3.9 -44.5 -124.285) (float-vector 8.35 -41.2176 -124.285) (float-vector 17.3176 -56.75 -106.35)))
         (instance face :init :vertices (list (float-vector -25.1176 -56.75 -106.35) (float-vector -16.15 -41.2176 -124.285) (float-vector -3.9 -44.5 -124.285) (float-vector -3.9 -62.4352 -106.35)))
         (instance face :init :vertices (list (float-vector -40.65 -41.2176 -106.35) (float-vector -25.1176 -32.25 -124.285) (float-vector -16.15 -41.2176 -124.285) (float-vector -25.1176 -56.75 -106.35)))
         (instance face :init :vertices (list (float-vector -46.3352 -20.0 -106.35) (float-vector -28.4 -20.0 -124.285) (float-vector -25.1176 -32.25 -124.285) (float-vector -40.65 -41.2176 -106.35)))
         (instance face :init :vertices (list (float-vector -40.65 1.21762 -106.35) (float-vector -25.1176 -7.75 -124.285) (float-vector -28.4 -20.0 -124.285) (float-vector -46.3352 -20.0 -106.35)))
         (instance face :init :vertices (list (float-vector -25.1176 16.75 -106.35) (float-vector -16.15 1.21762 -124.285) (float-vector -25.1176 -7.75 -124.285) (float-vector -40.65 1.21762 -106.35)))
         (instance face :init :vertices (list (float-vector -3.9 22.4352 -106.35) (float-vector -3.9 4.5 -124.285) (float-vector -16.15 1.21762 -124.285) (float-vector -25.1176 16.75 -106.35)))
         (instance face :init :vertices (list (float-vector 17.3176 16.75 -106.35) (float-vector 8.35 1.21762 -124.285) (float-vector -3.9 4.5 -124.285) (float-vector -3.9 22.4352 -106.35)))
         (instance face :init :vertices (list (float-vector 32.85 1.21762 -106.35) (float-vector 17.3176 -7.75 -124.285) (float-vector 8.35 1.21762 -124.285) (float-vector 17.3176 16.75 -106.35)))
         (instance face :init :vertices (list (float-vector 38.5352 -20.0 -106.35) (float-vector 20.6 -20.0 -124.285) (float-vector 17.3176 -7.75 -124.285) (float-vector 32.85 1.21762 -106.35)))
         (instance face :init :vertices (list (float-vector 38.5352 -44.5 -81.85) (float-vector 32.85 -41.2176 -106.35) (float-vector 38.5352 -20.0 -106.35) (float-vector 45.1 -20.0 -81.85)))
         (instance face :init :vertices (list (float-vector 20.6 -62.4352 -81.85) (float-vector 17.3176 -56.75 -106.35) (float-vector 32.85 -41.2176 -106.35) (float-vector 38.5352 -44.5 -81.85)))
         (instance face :init :vertices (list (float-vector -3.9 -69.0 -81.85) (float-vector -3.9 -62.4352 -106.35) (float-vector 17.3176 -56.75 -106.35) (float-vector 20.6 -62.4352 -81.85)))
         (instance face :init :vertices (list (float-vector -28.4 -62.4352 -81.85) (float-vector -25.1176 -56.75 -106.35) (float-vector -3.9 -62.4352 -106.35) (float-vector -3.9 -69.0 -81.85)))
         (instance face :init :vertices (list (float-vector -46.3352 -44.5 -81.85) (float-vector -40.65 -41.2176 -106.35) (float-vector -25.1176 -56.75 -106.35) (float-vector -28.4 -62.4352 -81.85)))
         (instance face :init :vertices (list (float-vector -52.9 -20.0 -81.85) (float-vector -46.3352 -20.0 -106.35) (float-vector -40.65 -41.2176 -106.35) (float-vector -46.3352 -44.5 -81.85)))
         (instance face :init :vertices (list (float-vector -46.3352 4.5 -81.85) (float-vector -40.65 1.21762 -106.35) (float-vector -46.3352 -20.0 -106.35) (float-vector -52.9 -20.0 -81.85)))
         (instance face :init :vertices (list (float-vector -28.4 22.4352 -81.85) (float-vector -25.1176 16.75 -106.35) (float-vector -40.65 1.21762 -106.35) (float-vector -46.3352 4.5 -81.85)))
         (instance face :init :vertices (list (float-vector -3.9 29.0 -81.85) (float-vector -3.9 22.4352 -106.35) (float-vector -25.1176 16.75 -106.35) (float-vector -28.4 22.4352 -81.85)))
         (instance face :init :vertices (list (float-vector 20.6 22.4352 -81.85) (float-vector 17.3176 16.75 -106.35) (float-vector -3.9 22.4352 -106.35) (float-vector -3.9 29.0 -81.85)))
         (instance face :init :vertices (list (float-vector 38.5352 4.5 -81.85) (float-vector 32.85 1.21762 -106.35) (float-vector 17.3176 16.75 -106.35) (float-vector 20.6 22.4352 -81.85)))
         (instance face :init :vertices (list (float-vector 45.1 -20.0 -81.85) (float-vector 38.5352 -20.0 -106.35) (float-vector 32.85 1.21762 -106.35) (float-vector 38.5352 4.5 -81.85)))
         (instance face :init :vertices (list (float-vector 38.5352 -44.5 -38.47) (float-vector 38.5352 -44.5 -81.85) (float-vector 45.1 -20.0 -81.85) (float-vector 45.1 -20.0 -38.47)))
         (instance face :init :vertices (list (float-vector 20.6 -62.4352 -38.47) (float-vector 20.6 -62.4352 -81.85) (float-vector 38.5352 -44.5 -81.85) (float-vector 38.5352 -44.5 -38.47)))
         (instance face :init :vertices (list (float-vector -3.9 -69.0 -38.47) (float-vector -3.9 -69.0 -81.85) (float-vector 20.6 -62.4352 -81.85) (float-vector 20.6 -62.4352 -38.47)))
         (instance face :init :vertices (list (float-vector -28.4 -62.4352 -38.47) (float-vector -28.4 -62.4352 -81.85) (float-vector -3.9 -69.0 -81.85) (float-vector -3.9 -69.0 -38.47)))
         (instance face :init :vertices (list (float-vector -46.3352 -44.5 -38.47) (float-vector -46.3352 -44.5 -81.85) (float-vector -28.4 -62.4352 -81.85) (float-vector -28.4 -62.4352 -38.47)))
         (instance face :init :vertices (list (float-vector -52.9 -20.0 -38.47) (float-vector -52.9 -20.0 -81.85) (float-vector -46.3352 -44.5 -81.85) (float-vector -46.3352 -44.5 -38.47)))
         (instance face :init :vertices (list (float-vector -46.3352 4.5 -38.47) (float-vector -46.3352 4.5 -81.85) (float-vector -52.9 -20.0 -81.85) (float-vector -52.9 -20.0 -38.47)))
         (instance face :init :vertices (list (float-vector -28.4 22.4352 -38.47) (float-vector -28.4 22.4352 -81.85) (float-vector -46.3352 4.5 -81.85) (float-vector -46.3352 4.5 -38.47)))
         (instance face :init :vertices (list (float-vector -3.9 29.0 -38.47) (float-vector -3.9 29.0 -81.85) (float-vector -28.4 22.4352 -81.85) (float-vector -28.4 22.4352 -38.47)))
         (instance face :init :vertices (list (float-vector 20.6 22.4352 -38.47) (float-vector 20.6 22.4352 -81.85) (float-vector -3.9 29.0 -81.85) (float-vector -3.9 29.0 -38.47)))
         (instance face :init :vertices (list (float-vector 38.5352 4.5 -38.47) (float-vector 38.5352 4.5 -81.85) (float-vector 20.6 22.4352 -81.85) (float-vector 20.6 22.4352 -38.47)))
         (instance face :init :vertices (list (float-vector 45.1 -20.0 -38.47) (float-vector 45.1 -20.0 -81.85) (float-vector 38.5352 4.5 -81.85) (float-vector 38.5352 4.5 -38.47)))
         (instance face :init :vertices (list (float-vector 32.85 -41.2176 -13.97) (float-vector 38.5352 -44.5 -38.47) (float-vector 45.1 -20.0 -38.47) (float-vector 38.5352 -20.0 -13.97)))
         (instance face :init :vertices (list (float-vector 17.3176 -56.75 -13.97) (float-vector 20.6 -62.4352 -38.47) (float-vector 38.5352 -44.5 -38.47) (float-vector 32.85 -41.2176 -13.97)))
         (instance face :init :vertices (list (float-vector -3.9 -62.4352 -13.97) (float-vector -3.9 -69.0 -38.47) (float-vector 20.6 -62.4352 -38.47) (float-vector 17.3176 -56.75 -13.97)))
         (instance face :init :vertices (list (float-vector -25.1176 -56.75 -13.97) (float-vector -28.4 -62.4352 -38.47) (float-vector -3.9 -69.0 -38.47) (float-vector -3.9 -62.4352 -13.97)))
         (instance face :init :vertices (list (float-vector -40.65 -41.2176 -13.97) (float-vector -46.3352 -44.5 -38.47) (float-vector -28.4 -62.4352 -38.47) (float-vector -25.1176 -56.75 -13.97)))
         (instance face :init :vertices (list (float-vector -46.3352 -20.0 -13.97) (float-vector -52.9 -20.0 -38.47) (float-vector -46.3352 -44.5 -38.47) (float-vector -40.65 -41.2176 -13.97)))
         (instance face :init :vertices (list (float-vector -40.65 1.21762 -13.97) (float-vector -46.3352 4.5 -38.47) (float-vector -52.9 -20.0 -38.47) (float-vector -46.3352 -20.0 -13.97)))
         (instance face :init :vertices (list (float-vector -25.1176 16.75 -13.97) (float-vector -28.4 22.4352 -38.47) (float-vector -46.3352 4.5 -38.47) (float-vector -40.65 1.21762 -13.97)))
         (instance face :init :vertices (list (float-vector -3.9 22.4352 -13.97) (float-vector -3.9 29.0 -38.47) (float-vector -28.4 22.4352 -38.47) (float-vector -25.1176 16.75 -13.97)))
         (instance face :init :vertices (list (float-vector 17.3176 16.75 -13.97) (float-vector 20.6 22.4352 -38.47) (float-vector -3.9 29.0 -38.47) (float-vector -3.9 22.4352 -13.97)))
         (instance face :init :vertices (list (float-vector 32.85 1.21762 -13.97) (float-vector 38.5352 4.5 -38.47) (float-vector 20.6 22.4352 -38.47) (float-vector 17.3176 16.75 -13.97)))
         (instance face :init :vertices (list (float-vector 38.5352 -20.0 -13.97) (float-vector 45.1 -20.0 -38.47) (float-vector 38.5352 4.5 -38.47) (float-vector 32.85 1.21762 -13.97)))
         (instance face :init :vertices (list (float-vector 17.3176 -32.25 3.96524) (float-vector 32.85 -41.2176 -13.97) (float-vector 38.5352 -20.0 -13.97) (float-vector 20.6 -20.0 3.96524)))
         (instance face :init :vertices (list (float-vector 8.35 -41.2176 3.96524) (float-vector 17.3176 -56.75 -13.97) (float-vector 32.85 -41.2176 -13.97) (float-vector 17.3176 -32.25 3.96524)))
         (instance face :init :vertices (list (float-vector -3.9 -44.5 3.96524) (float-vector -3.9 -62.4352 -13.97) (float-vector 17.3176 -56.75 -13.97) (float-vector 8.35 -41.2176 3.96524)))
         (instance face :init :vertices (list (float-vector -16.15 -41.2176 3.96524) (float-vector -25.1176 -56.75 -13.97) (float-vector -3.9 -62.4352 -13.97) (float-vector -3.9 -44.5 3.96524)))
         (instance face :init :vertices (list (float-vector -25.1176 -32.25 3.96524) (float-vector -40.65 -41.2176 -13.97) (float-vector -25.1176 -56.75 -13.97) (float-vector -16.15 -41.2176 3.96524)))
         (instance face :init :vertices (list (float-vector -28.4 -20.0 3.96524) (float-vector -46.3352 -20.0 -13.97) (float-vector -40.65 -41.2176 -13.97) (float-vector -25.1176 -32.25 3.96524)))
         (instance face :init :vertices (list (float-vector -25.1176 -7.75 3.96524) (float-vector -40.65 1.21762 -13.97) (float-vector -46.3352 -20.0 -13.97) (float-vector -28.4 -20.0 3.96524)))
         (instance face :init :vertices (list (float-vector -16.15 1.21762 3.96524) (float-vector -25.1176 16.75 -13.97) (float-vector -40.65 1.21762 -13.97) (float-vector -25.1176 -7.75 3.96524)))
         (instance face :init :vertices (list (float-vector -3.9 4.5 3.96524) (float-vector -3.9 22.4352 -13.97) (float-vector -25.1176 16.75 -13.97) (float-vector -16.15 1.21762 3.96524)))
         (instance face :init :vertices (list (float-vector 8.35 1.21762 3.96524) (float-vector 17.3176 16.75 -13.97) (float-vector -3.9 22.4352 -13.97) (float-vector -3.9 4.5 3.96524)))
         (instance face :init :vertices (list (float-vector 17.3176 -7.75 3.96524) (float-vector 32.85 1.21762 -13.97) (float-vector 17.3176 16.75 -13.97) (float-vector 8.35 1.21762 3.96524)))
         (instance face :init :vertices (list (float-vector 20.6 -20.0 3.96524) (float-vector 38.5352 -20.0 -13.97) (float-vector 32.85 1.21762 -13.97) (float-vector 17.3176 -7.75 3.96524)))
         (instance face :init :vertices (list (float-vector 17.3176 -32.25 3.96524) (float-vector 20.6 -20.0 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector 20.6 -20.0 3.96524) (float-vector 17.3176 -7.75 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector 17.3176 -7.75 3.96524) (float-vector 8.35 1.21762 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector 8.35 1.21762 3.96524) (float-vector -3.9 4.5 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector -3.9 4.5 3.96524) (float-vector -16.15 1.21762 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector -16.15 1.21762 3.96524) (float-vector -25.1176 -7.75 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector -25.1176 -7.75 3.96524) (float-vector -28.4 -20.0 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector -28.4 -20.0 3.96524) (float-vector -25.1176 -32.25 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector -25.1176 -32.25 3.96524) (float-vector -16.15 -41.2176 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector -16.15 -41.2176 3.96524) (float-vector -3.9 -44.5 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector -3.9 -44.5 3.96524) (float-vector 8.35 -41.2176 3.96524) (float-vector -3.9 -20.0 10.53)))
         (instance face :init :vertices (list (float-vector 8.35 -41.2176 3.96524) (float-vector 17.3176 -32.25 3.96524) (float-vector -3.9 -20.0 10.53)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 25.0 -50.0) (float-vector -10.0 25.0 -50.0) (float-vector -10.0 25.0 -30.0) (float-vector 10.0 25.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 5.0 -50.0) (float-vector 10.0 5.0 -50.0) (float-vector 10.0 5.0 -30.0) (float-vector -10.0 5.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 25.0 -50.0) (float-vector 10.0 5.0 -50.0) (float-vector -10.0 5.0 -50.0) (float-vector -10.0 25.0 -50.0)))
         (instance face :init :vertices (list (float-vector 10.0 25.0 -30.0) (float-vector 10.0 5.0 -30.0) (float-vector 10.0 5.0 -50.0) (float-vector 10.0 25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -10.0 25.0 -30.0) (float-vector -10.0 5.0 -30.0) (float-vector 10.0 5.0 -30.0) (float-vector 10.0 25.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 25.0 -50.0) (float-vector -10.0 5.0 -50.0) (float-vector -10.0 5.0 -30.0) (float-vector -10.0 25.0 -30.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -50.0 -70.0) (float-vector -10.0 -50.0 -70.0) (float-vector -10.0 -50.0 -90.0) (float-vector 10.0 -50.0 -90.0)))
         (instance face :init :vertices (list (float-vector -10.0 -30.0 -70.0) (float-vector 10.0 -30.0 -70.0) (float-vector 10.0 -30.0 -90.0) (float-vector -10.0 -30.0 -90.0)))
         (instance face :init :vertices (list (float-vector 10.0 -50.0 -70.0) (float-vector 10.0 -30.0 -70.0) (float-vector -10.0 -30.0 -70.0) (float-vector -10.0 -50.0 -70.0)))
         (instance face :init :vertices (list (float-vector 10.0 -50.0 -90.0) (float-vector 10.0 -30.0 -90.0) (float-vector 10.0 -30.0 -70.0) (float-vector 10.0 -50.0 -70.0)))
         (instance face :init :vertices (list (float-vector -10.0 -50.0 -90.0) (float-vector -10.0 -30.0 -90.0) (float-vector 10.0 -30.0 -90.0) (float-vector 10.0 -50.0 -90.0)))
         (instance face :init :vertices (list (float-vector -10.0 -50.0 -70.0) (float-vector -10.0 -30.0 -70.0) (float-vector -10.0 -30.0 -90.0) (float-vector -10.0 -50.0 -90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 -5.0 -70.0) (float-vector 40.0 -5.0 -50.0) (float-vector 40.0 -25.0 -50.0) (float-vector 40.0 -25.0 -70.0)))
         (instance face :init :vertices (list (float-vector 20.0 -5.0 -50.0) (float-vector 20.0 -5.0 -70.0) (float-vector 20.0 -25.0 -70.0) (float-vector 20.0 -25.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 -5.0 -70.0) (float-vector 20.0 -5.0 -70.0) (float-vector 20.0 -5.0 -50.0) (float-vector 40.0 -5.0 -50.0)))
         (instance face :init :vertices (list (float-vector 40.0 -25.0 -70.0) (float-vector 20.0 -25.0 -70.0) (float-vector 20.0 -5.0 -70.0) (float-vector 40.0 -5.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 -25.0 -50.0) (float-vector 20.0 -25.0 -50.0) (float-vector 20.0 -25.0 -70.0) (float-vector 40.0 -25.0 -70.0)))
         (instance face :init :vertices (list (float-vector 40.0 -5.0 -50.0) (float-vector 20.0 -5.0 -50.0) (float-vector 20.0 -25.0 -50.0) (float-vector 40.0 -25.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -40.0 -5.0 -50.0) (float-vector -40.0 -5.0 -70.0) (float-vector -40.0 -25.0 -70.0) (float-vector -40.0 -25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -20.0 -5.0 -70.0) (float-vector -20.0 -5.0 -50.0) (float-vector -20.0 -25.0 -50.0) (float-vector -20.0 -25.0 -70.0)))
         (instance face :init :vertices (list (float-vector -40.0 -5.0 -50.0) (float-vector -20.0 -5.0 -50.0) (float-vector -20.0 -5.0 -70.0) (float-vector -40.0 -5.0 -70.0)))
         (instance face :init :vertices (list (float-vector -40.0 -25.0 -50.0) (float-vector -20.0 -25.0 -50.0) (float-vector -20.0 -5.0 -50.0) (float-vector -40.0 -5.0 -50.0)))
         (instance face :init :vertices (list (float-vector -40.0 -25.0 -70.0) (float-vector -20.0 -25.0 -70.0) (float-vector -20.0 -25.0 -50.0) (float-vector -40.0 -25.0 -50.0)))
         (instance face :init :vertices (list (float-vector -40.0 -5.0 -70.0) (float-vector -20.0 -5.0 -70.0) (float-vector -20.0 -25.0 -70.0) (float-vector -40.0 -25.0 -70.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :papayawhip)
     (send (elt bc 3) :set-color :linen)
     (send (elt bc 4) :set-color :linen)
     (send (elt bc 5) :set-color :linen)
     (send (elt bc 6) :set-color :linen)
     (setq blink17 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-forearm :weight 112 :centroid (float-vector -3.512333e-16 -17.8393 -34.2821) :inertia-tensor #2f((1.075330e+05 -4.511341e-13 -8.669520e-13) (-4.511341e-13 84619.7 -44032.9) (-8.669520e-13 -44032.9 22914.3))))

     ;; definition of :head-neck
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.0 -22.0 0.0) (float-vector 11.0 -22.0 -20.0) (float-vector 11.0 22.0 -20.0) (float-vector 11.0 22.0 0.0) (float-vector 11.0 20.0 0.0) (float-vector 11.0 20.0 -18.0) (float-vector 11.0 -20.0 -18.0) (float-vector 11.0 -20.0 0.0)))
         (instance face :init :vertices (list (float-vector -11.0 -22.0 -20.0) (float-vector -11.0 22.0 -20.0) (float-vector 11.0 22.0 -20.0) (float-vector 11.0 -22.0 -20.0)))
         (instance face :init :vertices (list (float-vector -11.0 -22.0 0.0) (float-vector -11.0 -20.0 0.0) (float-vector -11.0 -20.0 -18.0) (float-vector -11.0 20.0 -18.0) (float-vector -11.0 20.0 0.0) (float-vector -11.0 22.0 0.0) (float-vector -11.0 22.0 -20.0) (float-vector -11.0 -22.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.77817 22.0 7.77817) (float-vector -11.0 22.0 0.0) (float-vector -11.0 20.0 0.0) (float-vector -7.77817 20.0 7.77817)))
         (instance face :init :vertices (list (float-vector -7.77817 -22.0 7.77817) (float-vector -7.77817 -20.0 7.77817) (float-vector -11.0 -20.0 0.0) (float-vector -11.0 -22.0 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 22.0 11.0) (float-vector -7.77817 22.0 7.77817) (float-vector -7.77817 20.0 7.77817) (float-vector 0.0 20.0 11.0)))
         (instance face :init :vertices (list (float-vector 0.0 -22.0 11.0) (float-vector 0.0 -20.0 11.0) (float-vector -7.77817 -20.0 7.77817) (float-vector -7.77817 -22.0 7.77817)))
         (instance face :init :vertices (list (float-vector 7.77817 22.0 7.77817) (float-vector 0.0 22.0 11.0) (float-vector 0.0 20.0 11.0) (float-vector 7.77817 20.0 7.77817)))
         (instance face :init :vertices (list (float-vector 7.77817 -22.0 7.77817) (float-vector 7.77817 -20.0 7.77817) (float-vector 0.0 -20.0 11.0) (float-vector 0.0 -22.0 11.0)))
         (instance face :init :vertices (list (float-vector 11.0 22.0 0.0) (float-vector 11.0 22.0 -20.0) (float-vector -11.0 22.0 -20.0) (float-vector -11.0 22.0 0.0) (float-vector -7.77817 22.0 7.77817) (float-vector 0.0 22.0 11.0) (float-vector 7.77817 22.0 7.77817)))
         (instance face :init :vertices (list (float-vector 7.77817 -22.0 7.77817) (float-vector 0.0 -22.0 11.0) (float-vector -7.77817 -22.0 7.77817) (float-vector -11.0 -22.0 0.0) (float-vector -11.0 -22.0 -20.0) (float-vector 11.0 -22.0 -20.0) (float-vector 11.0 -22.0 0.0)))
         (instance face :init :vertices (list (float-vector 7.77817 22.0 7.77817) (float-vector 7.77817 20.0 7.77817) (float-vector 11.0 20.0 0.0) (float-vector 11.0 22.0 0.0)))
         (instance face :init :vertices (list (float-vector 11.0 -22.0 0.0) (float-vector 11.0 -20.0 0.0) (float-vector 7.77817 -20.0 7.77817) (float-vector 7.77817 -22.0 7.77817)))
         (instance face :init :vertices (list (float-vector 11.0 20.0 -18.0) (float-vector 11.0 20.0 0.0) (float-vector 7.77817 20.0 7.77817) (float-vector 0.0 20.0 11.0) (float-vector -7.77817 20.0 7.77817) (float-vector -11.0 20.0 0.0) (float-vector -11.0 20.0 -18.0)))
         (instance face :init :vertices (list (float-vector 11.0 -20.0 -18.0) (float-vector 11.0 20.0 -18.0) (float-vector -11.0 20.0 -18.0) (float-vector -11.0 -20.0 -18.0)))
         (instance face :init :vertices (list (float-vector -11.0 -20.0 -18.0) (float-vector -11.0 -20.0 0.0) (float-vector -7.77817 -20.0 7.77817) (float-vector 0.0 -20.0 11.0) (float-vector 7.77817 -20.0 7.77817) (float-vector 11.0 -20.0 0.0) (float-vector 11.0 -20.0 -18.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink24 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck :weight 11.3521 :centroid (float-vector 3.379932e-16 1.730525e-15 -11.4189) :inertia-tensor #2f((1481.21 -6.639906e-30 4.381346e-14) (-6.639906e-30 1481.21 2.243249e-13) (4.381346e-14 2.243249e-13 1.0))))

     ;; definition of :head-head
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.2 -35.5 38.6) (float-vector -12.2 -35.5 38.6) (float-vector -17.8 -35.5 33.0) (float-vector -17.8 -35.5 -6.0) (float-vector -12.2 -35.5 -12.0) (float-vector 12.2 -35.5 -12.0) (float-vector 17.8 -35.5 -6.0) (float-vector 17.8 -35.5 33.0)))
         (instance face :init :vertices (list (float-vector -12.2 0.0 38.6) (float-vector 12.2 0.0 38.6) (float-vector 17.8 0.0 33.0) (float-vector 17.8 0.0 -6.0) (float-vector 12.2 0.0 -12.0) (float-vector -12.2 0.0 -12.0) (float-vector -17.8 0.0 -6.0) (float-vector -17.8 0.0 33.0)))
         (instance face :init :vertices (list (float-vector 12.2 -35.5 38.6) (float-vector 12.2 0.0 38.6) (float-vector -12.2 0.0 38.6) (float-vector -12.2 -35.5 38.6)))
         (instance face :init :vertices (list (float-vector 17.8 -35.5 33.0) (float-vector 17.8 0.0 33.0) (float-vector 12.2 0.0 38.6) (float-vector 12.2 -35.5 38.6)))
         (instance face :init :vertices (list (float-vector 17.8 -35.5 -6.0) (float-vector 17.8 0.0 -6.0) (float-vector 17.8 0.0 33.0) (float-vector 17.8 -35.5 33.0)))
         (instance face :init :vertices (list (float-vector 12.2 -35.5 -12.0) (float-vector 12.2 0.0 -12.0) (float-vector 17.8 0.0 -6.0) (float-vector 17.8 -35.5 -6.0)))
         (instance face :init :vertices (list (float-vector -12.2 -35.5 -12.0) (float-vector -12.2 0.0 -12.0) (float-vector 12.2 0.0 -12.0) (float-vector 12.2 -35.5 -12.0)))
         (instance face :init :vertices (list (float-vector -17.8 -35.5 -6.0) (float-vector -17.8 0.0 -6.0) (float-vector -12.2 0.0 -12.0) (float-vector -12.2 -35.5 -12.0)))
         (instance face :init :vertices (list (float-vector -17.8 -35.5 33.0) (float-vector -17.8 0.0 33.0) (float-vector -17.8 0.0 -6.0) (float-vector -17.8 -35.5 -6.0)))
         (instance face :init :vertices (list (float-vector -12.2 -35.5 38.6) (float-vector -12.2 0.0 38.6) (float-vector -17.8 0.0 33.0) (float-vector -17.8 -35.5 33.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 48.2 30.791 102.141) (float-vector 36.741 12.25 132.141) (float-vector 66.741 0.79102 113.6)))
         (instance face :init :vertices (list (float-vector 66.741 0.79102 113.6) (float-vector 69.239 13.7939 83.6) (float-vector 48.2 30.791 102.141)))
         (instance face :init :vertices (list (float-vector 36.741 12.25 132.141) (float-vector 49.7439 -17.75 134.639) (float-vector 66.741 0.79102 113.6)))
         (instance face :init :vertices (list (float-vector 48.2 30.791 102.141) (float-vector 18.2 33.289 115.144) (float-vector 36.741 12.25 132.141)))
         (instance face :init :vertices (list (float-vector 36.741 -47.75 132.141) (float-vector 18.2 -17.75 143.6) (float-vector -0.34102 -47.75 132.141)))
         (instance face :init :vertices (list (float-vector -0.34102 -47.75 132.141) (float-vector 18.2 -68.789 115.144) (float-vector 36.741 -47.75 132.141)))
         (instance face :init :vertices (list (float-vector 18.2 -17.75 143.6) (float-vector -13.3439 -17.75 134.639) (float-vector -0.34102 -47.75 132.141)))
         (instance face :init :vertices (list (float-vector 36.741 -47.75 132.141) (float-vector 49.7439 -17.75 134.639) (float-vector 18.2 -17.75 143.6)))
         (instance face :init :vertices (list (float-vector -11.8 30.791 65.059) (float-vector -11.8 30.791 102.141) (float-vector 18.2 42.25 83.6)))
         (instance face :init :vertices (list (float-vector 18.2 42.25 83.6) (float-vector 18.2 33.289 52.0561) (float-vector -11.8 30.791 65.059)))
         (instance face :init :vertices (list (float-vector -11.8 30.791 102.141) (float-vector 18.2 33.289 115.144) (float-vector 18.2 42.25 83.6)))
         (instance face :init :vertices (list (float-vector -11.8 30.791 65.059) (float-vector -32.839 13.7939 83.6) (float-vector -11.8 30.791 102.141)))
         (instance face :init :vertices (list (float-vector 36.741 12.25 132.141) (float-vector -0.34102 12.25 132.141) (float-vector 18.2 -17.75 143.6)))
         (instance face :init :vertices (list (float-vector 18.2 -17.75 143.6) (float-vector 49.7439 -17.75 134.639) (float-vector 36.741 12.25 132.141)))
         (instance face :init :vertices (list (float-vector -0.34102 12.25 132.141) (float-vector -13.3439 -17.75 134.639) (float-vector 18.2 -17.75 143.6)))
         (instance face :init :vertices (list (float-vector 36.741 12.25 132.141) (float-vector 18.2 33.289 115.144) (float-vector -0.34102 12.25 132.141)))
         (instance face :init :vertices (list (float-vector -11.8 30.791 102.141) (float-vector -30.341 0.79102 113.6) (float-vector -0.34102 12.25 132.141)))
         (instance face :init :vertices (list (float-vector -0.34102 12.25 132.141) (float-vector 18.2 33.289 115.144) (float-vector -11.8 30.791 102.141)))
         (instance face :init :vertices (list (float-vector -30.341 0.79102 113.6) (float-vector -13.3439 -17.75 134.639) (float-vector -0.34102 12.25 132.141)))
         (instance face :init :vertices (list (float-vector -11.8 30.791 102.141) (float-vector -32.839 13.7939 83.6) (float-vector -30.341 0.79102 113.6)))
         (instance face :init :vertices (list (float-vector -30.341 0.79102 113.6) (float-vector -41.8 -17.75 83.6) (float-vector -30.341 -36.291 113.6)))
         (instance face :init :vertices (list (float-vector -30.341 -36.291 113.6) (float-vector -13.3439 -17.75 134.639) (float-vector -30.341 0.79102 113.6)))
         (instance face :init :vertices (list (float-vector -41.8 -17.75 83.6) (float-vector -32.839 -49.2939 83.6) (float-vector -30.341 -36.291 113.6)))
         (instance face :init :vertices (list (float-vector -30.341 0.79102 113.6) (float-vector -32.839 13.7939 83.6) (float-vector -41.8 -17.75 83.6)))
         (instance face :init :vertices (list (float-vector -30.341 0.79102 53.6) (float-vector -30.341 -36.291 53.6) (float-vector -41.8 -17.75 83.6)))
         (instance face :init :vertices (list (float-vector -41.8 -17.75 83.6) (float-vector -32.839 13.7939 83.6) (float-vector -30.341 0.79102 53.6)))
         (instance face :init :vertices (list (float-vector -30.341 -36.291 53.6) (float-vector -32.839 -49.2939 83.6) (float-vector -41.8 -17.75 83.6)))
         (instance face :init :vertices (list (float-vector -30.341 0.79102 53.6) (float-vector -13.3439 -17.75 32.561) (float-vector -30.341 -36.291 53.6)))
         (instance face :init :vertices (list (float-vector -0.34102 -47.75 35.059) (float-vector -11.8 -66.291 65.059) (float-vector -30.341 -36.291 53.6)))
         (instance face :init :vertices (list (float-vector -30.341 -36.291 53.6) (float-vector -13.3439 -17.75 32.561) (float-vector -0.34102 -47.75 35.059)))
         (instance face :init :vertices (list (float-vector -11.8 -66.291 65.059) (float-vector -32.839 -49.2939 83.6) (float-vector -30.341 -36.291 53.6)))
         (instance face :init :vertices (list (float-vector -0.34102 -47.75 35.059) (float-vector 18.2 -68.789 52.0561) (float-vector -11.8 -66.291 65.059)))
         (instance face :init :vertices (list (float-vector -30.341 -36.291 113.6) (float-vector -11.8 -66.291 102.141) (float-vector -0.34102 -47.75 132.141)))
         (instance face :init :vertices (list (float-vector -0.34102 -47.75 132.141) (float-vector -13.3439 -17.75 134.639) (float-vector -30.341 -36.291 113.6)))
         (instance face :init :vertices (list (float-vector -11.8 -66.291 102.141) (float-vector 18.2 -68.789 115.144) (float-vector -0.34102 -47.75 132.141)))
         (instance face :init :vertices (list (float-vector -30.341 -36.291 113.6) (float-vector -32.839 -49.2939 83.6) (float-vector -11.8 -66.291 102.141)))
         (instance face :init :vertices (list (float-vector -11.8 -66.291 65.059) (float-vector 18.2 -77.75 83.6) (float-vector -11.8 -66.291 102.141)))
         (instance face :init :vertices (list (float-vector -11.8 -66.291 102.141) (float-vector -32.839 -49.2939 83.6) (float-vector -11.8 -66.291 65.059)))
         (instance face :init :vertices (list (float-vector 18.2 -77.75 83.6) (float-vector 18.2 -68.789 115.144) (float-vector -11.8 -66.291 102.141)))
         (instance face :init :vertices (list (float-vector -11.8 -66.291 65.059) (float-vector 18.2 -68.789 52.0561) (float-vector 18.2 -77.75 83.6)))
         (instance face :init :vertices (list (float-vector 36.741 -47.75 132.141) (float-vector 48.2 -66.291 102.141) (float-vector 66.741 -36.291 113.6)))
         (instance face :init :vertices (list (float-vector 66.741 -36.291 113.6) (float-vector 49.7439 -17.75 134.639) (float-vector 36.741 -47.75 132.141)))
         (instance face :init :vertices (list (float-vector 48.2 -66.291 102.141) (float-vector 69.239 -49.2939 83.6) (float-vector 66.741 -36.291 113.6)))
         (instance face :init :vertices (list (float-vector 36.741 -47.75 132.141) (float-vector 18.2 -68.789 115.144) (float-vector 48.2 -66.291 102.141)))
         (instance face :init :vertices (list (float-vector 18.2 -77.75 83.6) (float-vector 48.2 -66.291 65.059) (float-vector 48.2 -66.291 102.141)))
         (instance face :init :vertices (list (float-vector 48.2 -66.291 102.141) (float-vector 18.2 -68.789 115.144) (float-vector 18.2 -77.75 83.6)))
         (instance face :init :vertices (list (float-vector 48.2 -66.291 65.059) (float-vector 69.239 -49.2939 83.6) (float-vector 48.2 -66.291 102.141)))
         (instance face :init :vertices (list (float-vector 18.2 -77.75 83.6) (float-vector 18.2 -68.789 52.0561) (float-vector 48.2 -66.291 65.059)))
         (instance face :init :vertices (list (float-vector 36.741 -47.75 35.059) (float-vector 66.741 -36.291 53.6) (float-vector 48.2 -66.291 65.059)))
         (instance face :init :vertices (list (float-vector 48.2 -66.291 65.059) (float-vector 18.2 -68.789 52.0561) (float-vector 36.741 -47.75 35.059)))
         (instance face :init :vertices (list (float-vector 66.741 -36.291 53.6) (float-vector 69.239 -49.2939 83.6) (float-vector 48.2 -66.291 65.059)))
         (instance face :init :vertices (list (float-vector 36.741 -47.75 35.059) (float-vector 49.7439 -17.75 32.561) (float-vector 66.741 -36.291 53.6)))
         (instance face :init :vertices (list (float-vector 66.741 -36.291 113.6) (float-vector 78.2 -17.75 83.6) (float-vector 66.741 0.79102 113.6)))
         (instance face :init :vertices (list (float-vector 66.741 0.79102 113.6) (float-vector 49.7439 -17.75 134.639) (float-vector 66.741 -36.291 113.6)))
         (instance face :init :vertices (list (float-vector 78.2 -17.75 83.6) (float-vector 69.239 13.7939 83.6) (float-vector 66.741 0.79102 113.6)))
         (instance face :init :vertices (list (float-vector 66.741 -36.291 113.6) (float-vector 69.239 -49.2939 83.6) (float-vector 78.2 -17.75 83.6)))
         (instance face :init :vertices (list (float-vector 66.741 -36.291 53.6) (float-vector 66.741 0.79102 53.6) (float-vector 78.2 -17.75 83.6)))
         (instance face :init :vertices (list (float-vector 78.2 -17.75 83.6) (float-vector 69.239 -49.2939 83.6) (float-vector 66.741 -36.291 53.6)))
         (instance face :init :vertices (list (float-vector 66.741 0.79102 53.6) (float-vector 69.239 13.7939 83.6) (float-vector 78.2 -17.75 83.6)))
         (instance face :init :vertices (list (float-vector 66.741 -36.291 53.6) (float-vector 49.7439 -17.75 32.561) (float-vector 66.741 0.79102 53.6)))
         (instance face :init :vertices (list (float-vector 48.2 30.791 102.141) (float-vector 48.2 30.791 65.059) (float-vector 18.2 42.25 83.6)))
         (instance face :init :vertices (list (float-vector 18.2 42.25 83.6) (float-vector 18.2 33.289 115.144) (float-vector 48.2 30.791 102.141)))
         (instance face :init :vertices (list (float-vector 48.2 30.791 65.059) (float-vector 18.2 33.289 52.0561) (float-vector 18.2 42.25 83.6)))
         (instance face :init :vertices (list (float-vector 48.2 30.791 102.141) (float-vector 69.239 13.7939 83.6) (float-vector 48.2 30.791 65.059)))
         (instance face :init :vertices (list (float-vector 66.741 0.79102 53.6) (float-vector 36.741 12.25 35.059) (float-vector 48.2 30.791 65.059)))
         (instance face :init :vertices (list (float-vector 48.2 30.791 65.059) (float-vector 69.239 13.7939 83.6) (float-vector 66.741 0.79102 53.6)))
         (instance face :init :vertices (list (float-vector 36.741 12.25 35.059) (float-vector 18.2 33.289 52.0561) (float-vector 48.2 30.791 65.059)))
         (instance face :init :vertices (list (float-vector 66.741 0.79102 53.6) (float-vector 49.7439 -17.75 32.561) (float-vector 36.741 12.25 35.059)))
         (instance face :init :vertices (list (float-vector -11.8 30.791 65.059) (float-vector -0.34102 12.25 35.059) (float-vector -30.341 0.79102 53.6)))
         (instance face :init :vertices (list (float-vector -30.341 0.79102 53.6) (float-vector -32.839 13.7939 83.6) (float-vector -11.8 30.791 65.059)))
         (instance face :init :vertices (list (float-vector -0.34102 12.25 35.059) (float-vector -13.3439 -17.75 32.561) (float-vector -30.341 0.79102 53.6)))
         (instance face :init :vertices (list (float-vector -11.8 30.791 65.059) (float-vector 18.2 33.289 52.0561) (float-vector -0.34102 12.25 35.059)))
         (instance face :init :vertices (list (float-vector -0.34102 -47.75 35.059) (float-vector 18.2 -17.75 23.6) (float-vector 36.741 -47.75 35.059)))
         (instance face :init :vertices (list (float-vector 36.741 -47.75 35.059) (float-vector 18.2 -68.789 52.0561) (float-vector -0.34102 -47.75 35.059)))
         (instance face :init :vertices (list (float-vector 18.2 -17.75 23.6) (float-vector 49.7439 -17.75 32.561) (float-vector 36.741 -47.75 35.059)))
         (instance face :init :vertices (list (float-vector -0.34102 -47.75 35.059) (float-vector -13.3439 -17.75 32.561) (float-vector 18.2 -17.75 23.6)))
         (instance face :init :vertices (list (float-vector 36.741 12.25 35.059) (float-vector 18.2 -17.75 23.6) (float-vector -0.34102 12.25 35.059)))
         (instance face :init :vertices (list (float-vector -0.34102 12.25 35.059) (float-vector 18.2 33.289 52.0561) (float-vector 36.741 12.25 35.059)))
         (instance face :init :vertices (list (float-vector 18.2 -17.75 23.6) (float-vector -13.3439 -17.75 32.561) (float-vector -0.34102 12.25 35.059)))
         (instance face :init :vertices (list (float-vector 36.741 12.25 35.059) (float-vector 49.7439 -17.75 32.561) (float-vector 18.2 -17.75 23.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 70.0 -57.75 53.6) (float-vector 70.0 -57.75 89.6) (float-vector 70.0 -93.75 89.6) (float-vector 70.0 -93.75 53.6)))
         (instance face :init :vertices (list (float-vector 50.0 -57.75 89.6) (float-vector 50.0 -57.75 53.6) (float-vector 50.0 -93.75 53.6) (float-vector 50.0 -93.75 89.6)))
         (instance face :init :vertices (list (float-vector 70.0 -57.75 53.6) (float-vector 50.0 -57.75 53.6) (float-vector 50.0 -57.75 89.6) (float-vector 70.0 -57.75 89.6)))
         (instance face :init :vertices (list (float-vector 70.0 -93.75 53.6) (float-vector 50.0 -93.75 53.6) (float-vector 50.0 -57.75 53.6) (float-vector 70.0 -57.75 53.6)))
         (instance face :init :vertices (list (float-vector 70.0 -93.75 89.6) (float-vector 50.0 -93.75 89.6) (float-vector 50.0 -93.75 53.6) (float-vector 70.0 -93.75 53.6)))
         (instance face :init :vertices (list (float-vector 70.0 -57.75 89.6) (float-vector 50.0 -57.75 89.6) (float-vector 50.0 -93.75 89.6) (float-vector 70.0 -93.75 89.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 70.0 58.25 53.6) (float-vector 70.0 58.25 89.6) (float-vector 70.0 22.25 89.6) (float-vector 70.0 22.25 53.6)))
         (instance face :init :vertices (list (float-vector 50.0 58.25 89.6) (float-vector 50.0 58.25 53.6) (float-vector 50.0 22.25 53.6) (float-vector 50.0 22.25 89.6)))
         (instance face :init :vertices (list (float-vector 70.0 58.25 53.6) (float-vector 50.0 58.25 53.6) (float-vector 50.0 58.25 89.6) (float-vector 70.0 58.25 89.6)))
         (instance face :init :vertices (list (float-vector 70.0 22.25 53.6) (float-vector 50.0 22.25 53.6) (float-vector 50.0 58.25 53.6) (float-vector 70.0 58.25 53.6)))
         (instance face :init :vertices (list (float-vector 70.0 22.25 89.6) (float-vector 50.0 22.25 89.6) (float-vector 50.0 22.25 53.6) (float-vector 70.0 22.25 53.6)))
         (instance face :init :vertices (list (float-vector 70.0 58.25 89.6) (float-vector 50.0 58.25 89.6) (float-vector 50.0 22.25 89.6) (float-vector 70.0 22.25 89.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 65.0 52.25 53.6) (float-vector 75.5 52.25 53.6) (float-vector 75.5 18.25 53.6) (float-vector 75.0 18.25 53.6) (float-vector 75.0 42.25 53.6)))
         (instance face :init :vertices (list (float-vector 75.5 52.25 93.6) (float-vector 42.5 52.25 93.6) (float-vector 42.5 18.25 93.6) (float-vector 75.5 18.25 93.6)))
         (instance face :init :vertices (list (float-vector 75.5 52.25 53.6) (float-vector 75.5 52.25 93.6) (float-vector 75.5 18.25 93.6) (float-vector 75.5 18.25 53.6)))
         (instance face :init :vertices (list (float-vector 42.5 18.25 53.6) (float-vector 75.0 18.25 53.6) (float-vector 75.5 18.25 53.6) (float-vector 75.5 18.25 93.6) (float-vector 42.5 18.25 93.6)))
         (instance face :init :vertices (list (float-vector 42.5 52.25 93.6) (float-vector 42.5 52.25 53.6) (float-vector 42.5 18.25 53.6) (float-vector 42.5 18.25 93.6)))
         (instance face :init :vertices (list (float-vector 75.0 42.25 48.6) (float-vector 75.0 -77.75 48.6) (float-vector 65.0 -87.75 48.6) (float-vector 40.0 -87.75 48.6) (float-vector 15.0 -62.75 48.6) (float-vector 15.0 27.25 48.6) (float-vector 40.0 52.25 48.6) (float-vector 65.0 52.25 48.6)))
         (instance face :init :vertices (list (float-vector 75.0 42.25 48.6) (float-vector 75.0 42.25 53.6) (float-vector 75.0 18.25 53.6) (float-vector 75.0 -53.75 53.6) (float-vector 75.0 -77.75 53.6) (float-vector 75.0 -77.75 48.6)))
         (instance face :init :vertices (list (float-vector 42.5 52.25 53.6) (float-vector 40.0 52.25 53.6) (float-vector 15.0 27.25 53.6) (float-vector 15.0 -62.75 53.6) (float-vector 40.0 -87.75 53.6) (float-vector 42.5 -87.75 53.6) (float-vector 42.5 -53.75 53.6) (float-vector 75.0 -53.75 53.6) (float-vector 75.0 18.25 53.6) (float-vector 42.5 18.25 53.6)))
         (instance face :init :vertices (list (float-vector 65.0 -87.75 53.6) (float-vector 65.0 -87.75 48.6) (float-vector 75.0 -77.75 48.6) (float-vector 75.0 -77.75 53.6)))
         (instance face :init :vertices (list (float-vector 40.0 -87.75 53.6) (float-vector 40.0 -87.75 48.6) (float-vector 65.0 -87.75 48.6) (float-vector 65.0 -87.75 53.6) (float-vector 75.5 -87.75 53.6) (float-vector 75.5 -87.75 93.6) (float-vector 42.5 -87.75 93.6) (float-vector 42.5 -87.75 53.6)))
         (instance face :init :vertices (list (float-vector 15.0 -62.75 53.6) (float-vector 15.0 -62.75 48.6) (float-vector 40.0 -87.75 48.6) (float-vector 40.0 -87.75 53.6)))
         (instance face :init :vertices (list (float-vector 15.0 27.25 53.6) (float-vector 15.0 27.25 48.6) (float-vector 15.0 -62.75 48.6) (float-vector 15.0 -62.75 53.6)))
         (instance face :init :vertices (list (float-vector 40.0 52.25 53.6) (float-vector 40.0 52.25 48.6) (float-vector 15.0 27.25 48.6) (float-vector 15.0 27.25 53.6)))
         (instance face :init :vertices (list (float-vector 65.0 52.25 53.6) (float-vector 65.0 52.25 48.6) (float-vector 40.0 52.25 48.6) (float-vector 40.0 52.25 53.6) (float-vector 42.5 52.25 53.6) (float-vector 42.5 52.25 93.6) (float-vector 75.5 52.25 93.6) (float-vector 75.5 52.25 53.6)))
         (instance face :init :vertices (list (float-vector 65.0 52.25 48.6) (float-vector 65.0 52.25 53.6) (float-vector 75.0 42.25 53.6) (float-vector 75.0 42.25 48.6)))
         (instance face :init :vertices (list (float-vector 42.5 -53.75 93.6) (float-vector 42.5 -53.75 53.6) (float-vector 42.5 -87.75 53.6) (float-vector 42.5 -87.75 93.6)))
         (instance face :init :vertices (list (float-vector 75.5 -87.75 53.6) (float-vector 75.5 -53.75 53.6) (float-vector 75.5 -53.75 93.6) (float-vector 75.5 -87.75 93.6)))
         (instance face :init :vertices (list (float-vector 75.5 -53.75 93.6) (float-vector 42.5 -53.75 93.6) (float-vector 42.5 -87.75 93.6) (float-vector 75.5 -87.75 93.6)))
         (instance face :init :vertices (list (float-vector 75.5 -53.75 53.6) (float-vector 75.0 -53.75 53.6) (float-vector 42.5 -53.75 53.6) (float-vector 42.5 -53.75 93.6) (float-vector 75.5 -53.75 93.6)))
         (instance face :init :vertices (list (float-vector 75.0 -53.75 53.6) (float-vector 75.5 -53.75 53.6) (float-vector 75.5 -87.75 53.6) (float-vector 65.0 -87.75 53.6) (float-vector 75.0 -77.75 53.6)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 70.0 54.9615 104.812) (float-vector 52.8115 27.15 149.812) (float-vector 97.8115 9.96153 122.0)))
         (instance face :init :vertices (list (float-vector 97.8115 9.96153 122.0) (float-vector 101.559 29.4658 77.0) (float-vector 70.0 54.9615 104.812)))
         (instance face :init :vertices (list (float-vector 52.8115 27.15 149.812) (float-vector 72.3158 -17.85 153.559) (float-vector 97.8115 9.96153 122.0)))
         (instance face :init :vertices (list (float-vector 70.0 54.9615 104.812) (float-vector 25.0 58.7086 124.316) (float-vector 52.8115 27.15 149.812)))
         (instance face :init :vertices (list (float-vector 52.8115 -62.85 149.812) (float-vector 25.0 -17.85 167.0) (float-vector -2.81153 -62.85 149.812)))
         (instance face :init :vertices (list (float-vector -2.81153 -62.85 149.812) (float-vector 25.0 -94.4086 124.316) (float-vector 52.8115 -62.85 149.812)))
         (instance face :init :vertices (list (float-vector 25.0 -17.85 167.0) (float-vector -22.3158 -17.85 153.559) (float-vector -2.81153 -62.85 149.812)))
         (instance face :init :vertices (list (float-vector 52.8115 -62.85 149.812) (float-vector 72.3158 -17.85 153.559) (float-vector 25.0 -17.85 167.0)))
         (instance face :init :vertices (list (float-vector -20.0 54.9615 49.1885) (float-vector -20.0 54.9615 104.812) (float-vector 25.0 72.15 77.0)))
         (instance face :init :vertices (list (float-vector 25.0 72.15 77.0) (float-vector 25.0 58.7086 29.6842) (float-vector -20.0 54.9615 49.1885)))
         (instance face :init :vertices (list (float-vector -20.0 54.9615 104.812) (float-vector 25.0 58.7086 124.316) (float-vector 25.0 72.15 77.0)))
         (instance face :init :vertices (list (float-vector -20.0 54.9615 49.1885) (float-vector -51.5586 29.4658 77.0) (float-vector -20.0 54.9615 104.812)))
         (instance face :init :vertices (list (float-vector 52.8115 27.15 149.812) (float-vector -2.81153 27.15 149.812) (float-vector 25.0 -17.85 167.0)))
         (instance face :init :vertices (list (float-vector 25.0 -17.85 167.0) (float-vector 72.3158 -17.85 153.559) (float-vector 52.8115 27.15 149.812)))
         (instance face :init :vertices (list (float-vector -2.81153 27.15 149.812) (float-vector -22.3158 -17.85 153.559) (float-vector 25.0 -17.85 167.0)))
         (instance face :init :vertices (list (float-vector 52.8115 27.15 149.812) (float-vector 25.0 58.7086 124.316) (float-vector -2.81153 27.15 149.812)))
         (instance face :init :vertices (list (float-vector -20.0 54.9615 104.812) (float-vector -47.8115 9.96153 122.0) (float-vector -2.81153 27.15 149.812)))
         (instance face :init :vertices (list (float-vector -2.81153 27.15 149.812) (float-vector 25.0 58.7086 124.316) (float-vector -20.0 54.9615 104.812)))
         (instance face :init :vertices (list (float-vector -47.8115 9.96153 122.0) (float-vector -22.3158 -17.85 153.559) (float-vector -2.81153 27.15 149.812)))
         (instance face :init :vertices (list (float-vector -20.0 54.9615 104.812) (float-vector -51.5586 29.4658 77.0) (float-vector -47.8115 9.96153 122.0)))
         (instance face :init :vertices (list (float-vector -47.8115 9.96153 122.0) (float-vector -65.0 -17.85 77.0) (float-vector -47.8115 -45.6615 122.0)))
         (instance face :init :vertices (list (float-vector -47.8115 -45.6615 122.0) (float-vector -22.3158 -17.85 153.559) (float-vector -47.8115 9.96153 122.0)))
         (instance face :init :vertices (list (float-vector -65.0 -17.85 77.0) (float-vector -51.5586 -65.1658 77.0) (float-vector -47.8115 -45.6615 122.0)))
         (instance face :init :vertices (list (float-vector -47.8115 9.96153 122.0) (float-vector -51.5586 29.4658 77.0) (float-vector -65.0 -17.85 77.0)))
         (instance face :init :vertices (list (float-vector -47.8115 9.96153 32.0) (float-vector -47.8115 -45.6615 32.0) (float-vector -65.0 -17.85 77.0)))
         (instance face :init :vertices (list (float-vector -65.0 -17.85 77.0) (float-vector -51.5586 29.4658 77.0) (float-vector -47.8115 9.96153 32.0)))
         (instance face :init :vertices (list (float-vector -47.8115 -45.6615 32.0) (float-vector -51.5586 -65.1658 77.0) (float-vector -65.0 -17.85 77.0)))
         (instance face :init :vertices (list (float-vector -47.8115 9.96153 32.0) (float-vector -22.3158 -17.85 0.441427) (float-vector -47.8115 -45.6615 32.0)))
         (instance face :init :vertices (list (float-vector -2.81153 -62.85 4.18847) (float-vector -20.0 -90.6615 49.1885) (float-vector -47.8115 -45.6615 32.0)))
         (instance face :init :vertices (list (float-vector -47.8115 -45.6615 32.0) (float-vector -22.3158 -17.85 0.441427) (float-vector -2.81153 -62.85 4.18847)))
         (instance face :init :vertices (list (float-vector -20.0 -90.6615 49.1885) (float-vector -51.5586 -65.1658 77.0) (float-vector -47.8115 -45.6615 32.0)))
         (instance face :init :vertices (list (float-vector -2.81153 -62.85 4.18847) (float-vector 25.0 -94.4086 29.6842) (float-vector -20.0 -90.6615 49.1885)))
         (instance face :init :vertices (list (float-vector -47.8115 -45.6615 122.0) (float-vector -20.0 -90.6615 104.812) (float-vector -2.81153 -62.85 149.812)))
         (instance face :init :vertices (list (float-vector -2.81153 -62.85 149.812) (float-vector -22.3158 -17.85 153.559) (float-vector -47.8115 -45.6615 122.0)))
         (instance face :init :vertices (list (float-vector -20.0 -90.6615 104.812) (float-vector 25.0 -94.4086 124.316) (float-vector -2.81153 -62.85 149.812)))
         (instance face :init :vertices (list (float-vector -47.8115 -45.6615 122.0) (float-vector -51.5586 -65.1658 77.0) (float-vector -20.0 -90.6615 104.812)))
         (instance face :init :vertices (list (float-vector -20.0 -90.6615 49.1885) (float-vector 25.0 -107.85 77.0) (float-vector -20.0 -90.6615 104.812)))
         (instance face :init :vertices (list (float-vector -20.0 -90.6615 104.812) (float-vector -51.5586 -65.1658 77.0) (float-vector -20.0 -90.6615 49.1885)))
         (instance face :init :vertices (list (float-vector 25.0 -107.85 77.0) (float-vector 25.0 -94.4086 124.316) (float-vector -20.0 -90.6615 104.812)))
         (instance face :init :vertices (list (float-vector -20.0 -90.6615 49.1885) (float-vector 25.0 -94.4086 29.6842) (float-vector 25.0 -107.85 77.0)))
         (instance face :init :vertices (list (float-vector 52.8115 -62.85 149.812) (float-vector 70.0 -90.6615 104.812) (float-vector 97.8115 -45.6615 122.0)))
         (instance face :init :vertices (list (float-vector 97.8115 -45.6615 122.0) (float-vector 72.3158 -17.85 153.559) (float-vector 52.8115 -62.85 149.812)))
         (instance face :init :vertices (list (float-vector 70.0 -90.6615 104.812) (float-vector 101.559 -65.1658 77.0) (float-vector 97.8115 -45.6615 122.0)))
         (instance face :init :vertices (list (float-vector 52.8115 -62.85 149.812) (float-vector 25.0 -94.4086 124.316) (float-vector 70.0 -90.6615 104.812)))
         (instance face :init :vertices (list (float-vector 25.0 -107.85 77.0) (float-vector 70.0 -90.6615 49.1885) (float-vector 70.0 -90.6615 104.812)))
         (instance face :init :vertices (list (float-vector 70.0 -90.6615 104.812) (float-vector 25.0 -94.4086 124.316) (float-vector 25.0 -107.85 77.0)))
         (instance face :init :vertices (list (float-vector 70.0 -90.6615 49.1885) (float-vector 101.559 -65.1658 77.0) (float-vector 70.0 -90.6615 104.812)))
         (instance face :init :vertices (list (float-vector 25.0 -107.85 77.0) (float-vector 25.0 -94.4086 29.6842) (float-vector 70.0 -90.6615 49.1885)))
         (instance face :init :vertices (list (float-vector 52.8115 -62.85 4.18847) (float-vector 97.8115 -45.6615 32.0) (float-vector 70.0 -90.6615 49.1885)))
         (instance face :init :vertices (list (float-vector 70.0 -90.6615 49.1885) (float-vector 25.0 -94.4086 29.6842) (float-vector 52.8115 -62.85 4.18847)))
         (instance face :init :vertices (list (float-vector 97.8115 -45.6615 32.0) (float-vector 101.559 -65.1658 77.0) (float-vector 70.0 -90.6615 49.1885)))
         (instance face :init :vertices (list (float-vector 52.8115 -62.85 4.18847) (float-vector 72.3158 -17.85 0.441427) (float-vector 97.8115 -45.6615 32.0)))
         (instance face :init :vertices (list (float-vector 97.8115 -45.6615 122.0) (float-vector 115.0 -17.85 77.0) (float-vector 97.8115 9.96153 122.0)))
         (instance face :init :vertices (list (float-vector 97.8115 9.96153 122.0) (float-vector 72.3158 -17.85 153.559) (float-vector 97.8115 -45.6615 122.0)))
         (instance face :init :vertices (list (float-vector 115.0 -17.85 77.0) (float-vector 101.559 29.4658 77.0) (float-vector 97.8115 9.96153 122.0)))
         (instance face :init :vertices (list (float-vector 97.8115 -45.6615 122.0) (float-vector 101.559 -65.1658 77.0) (float-vector 115.0 -17.85 77.0)))
         (instance face :init :vertices (list (float-vector 97.8115 -45.6615 32.0) (float-vector 97.8115 9.96153 32.0) (float-vector 115.0 -17.85 77.0)))
         (instance face :init :vertices (list (float-vector 115.0 -17.85 77.0) (float-vector 101.559 -65.1658 77.0) (float-vector 97.8115 -45.6615 32.0)))
         (instance face :init :vertices (list (float-vector 97.8115 9.96153 32.0) (float-vector 101.559 29.4658 77.0) (float-vector 115.0 -17.85 77.0)))
         (instance face :init :vertices (list (float-vector 97.8115 -45.6615 32.0) (float-vector 72.3158 -17.85 0.441427) (float-vector 97.8115 9.96153 32.0)))
         (instance face :init :vertices (list (float-vector 70.0 54.9615 104.812) (float-vector 70.0 54.9615 49.1885) (float-vector 25.0 72.15 77.0)))
         (instance face :init :vertices (list (float-vector 25.0 72.15 77.0) (float-vector 25.0 58.7086 124.316) (float-vector 70.0 54.9615 104.812)))
         (instance face :init :vertices (list (float-vector 70.0 54.9615 49.1885) (float-vector 25.0 58.7086 29.6842) (float-vector 25.0 72.15 77.0)))
         (instance face :init :vertices (list (float-vector 70.0 54.9615 104.812) (float-vector 101.559 29.4658 77.0) (float-vector 70.0 54.9615 49.1885)))
         (instance face :init :vertices (list (float-vector 97.8115 9.96153 32.0) (float-vector 52.8115 27.15 4.18847) (float-vector 70.0 54.9615 49.1885)))
         (instance face :init :vertices (list (float-vector 70.0 54.9615 49.1885) (float-vector 101.559 29.4658 77.0) (float-vector 97.8115 9.96153 32.0)))
         (instance face :init :vertices (list (float-vector 52.8115 27.15 4.18847) (float-vector 25.0 58.7086 29.6842) (float-vector 70.0 54.9615 49.1885)))
         (instance face :init :vertices (list (float-vector 97.8115 9.96153 32.0) (float-vector 72.3158 -17.85 0.441427) (float-vector 52.8115 27.15 4.18847)))
         (instance face :init :vertices (list (float-vector -20.0 54.9615 49.1885) (float-vector -2.81153 27.15 4.18847) (float-vector -47.8115 9.96153 32.0)))
         (instance face :init :vertices (list (float-vector -47.8115 9.96153 32.0) (float-vector -51.5586 29.4658 77.0) (float-vector -20.0 54.9615 49.1885)))
         (instance face :init :vertices (list (float-vector -2.81153 27.15 4.18847) (float-vector -22.3158 -17.85 0.441427) (float-vector -47.8115 9.96153 32.0)))
         (instance face :init :vertices (list (float-vector -20.0 54.9615 49.1885) (float-vector 25.0 58.7086 29.6842) (float-vector -2.81153 27.15 4.18847)))
         (instance face :init :vertices (list (float-vector -2.81153 -62.85 4.18847) (float-vector 25.0 -17.85 -13.0) (float-vector 52.8115 -62.85 4.18847)))
         (instance face :init :vertices (list (float-vector 52.8115 -62.85 4.18847) (float-vector 25.0 -94.4086 29.6842) (float-vector -2.81153 -62.85 4.18847)))
         (instance face :init :vertices (list (float-vector 25.0 -17.85 -13.0) (float-vector 72.3158 -17.85 0.441427) (float-vector 52.8115 -62.85 4.18847)))
         (instance face :init :vertices (list (float-vector -2.81153 -62.85 4.18847) (float-vector -22.3158 -17.85 0.441427) (float-vector 25.0 -17.85 -13.0)))
         (instance face :init :vertices (list (float-vector 52.8115 27.15 4.18847) (float-vector 25.0 -17.85 -13.0) (float-vector -2.81153 27.15 4.18847)))
         (instance face :init :vertices (list (float-vector -2.81153 27.15 4.18847) (float-vector 25.0 58.7086 29.6842) (float-vector 52.8115 27.15 4.18847)))
         (instance face :init :vertices (list (float-vector 25.0 -17.85 -13.0) (float-vector -22.3158 -17.85 0.441427) (float-vector -2.81153 27.15 4.18847)))
         (instance face :init :vertices (list (float-vector 52.8115 27.15 4.18847) (float-vector 72.3158 -17.85 0.441427) (float-vector 25.0 -17.85 -13.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -7.85 155.0) (float-vector 10.0 -7.85 155.0) (float-vector 10.0 -27.85 155.0) (float-vector 30.0 -27.85 155.0)))
         (instance face :init :vertices (list (float-vector 10.0 -7.85 135.0) (float-vector 30.0 -7.85 135.0) (float-vector 30.0 -27.85 135.0) (float-vector 10.0 -27.85 135.0)))
         (instance face :init :vertices (list (float-vector 30.0 -7.85 155.0) (float-vector 30.0 -7.85 135.0) (float-vector 10.0 -7.85 135.0) (float-vector 10.0 -7.85 155.0)))
         (instance face :init :vertices (list (float-vector 30.0 -27.85 155.0) (float-vector 30.0 -27.85 135.0) (float-vector 30.0 -7.85 135.0) (float-vector 30.0 -7.85 155.0)))
         (instance face :init :vertices (list (float-vector 10.0 -27.85 155.0) (float-vector 10.0 -27.85 135.0) (float-vector 30.0 -27.85 135.0) (float-vector 30.0 -27.85 155.0)))
         (instance face :init :vertices (list (float-vector 10.0 -7.85 155.0) (float-vector 10.0 -7.85 135.0) (float-vector 10.0 -27.85 135.0) (float-vector 10.0 -27.85 155.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 80.1041 -7.85 125.962) (float-vector 65.9619 -7.85 140.104) (float-vector 65.9619 -27.85 140.104) (float-vector 80.1041 -27.85 125.962)))
         (instance face :init :vertices (list (float-vector 51.8198 -7.85 125.962) (float-vector 65.9619 -7.85 111.82) (float-vector 65.9619 -27.85 111.82) (float-vector 51.8198 -27.85 125.962)))
         (instance face :init :vertices (list (float-vector 80.1041 -7.85 125.962) (float-vector 65.9619 -7.85 111.82) (float-vector 51.8198 -7.85 125.962) (float-vector 65.9619 -7.85 140.104)))
         (instance face :init :vertices (list (float-vector 80.1041 -27.85 125.962) (float-vector 65.9619 -27.85 111.82) (float-vector 65.9619 -7.85 111.82) (float-vector 80.1041 -7.85 125.962)))
         (instance face :init :vertices (list (float-vector 65.9619 -27.85 140.104) (float-vector 51.8198 -27.85 125.962) (float-vector 65.9619 -27.85 111.82) (float-vector 80.1041 -27.85 125.962)))
         (instance face :init :vertices (list (float-vector 65.9619 -7.85 140.104) (float-vector 51.8198 -7.85 125.962) (float-vector 51.8198 -27.85 125.962) (float-vector 65.9619 -27.85 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 55.4289 31.7211 125.962) (float-vector 45.4289 21.7211 140.104) (float-vector 59.5711 7.57893 140.104) (float-vector 69.5711 17.5789 125.962)))
         (instance face :init :vertices (list (float-vector 35.4289 11.7211 125.962) (float-vector 45.4289 21.7211 111.82) (float-vector 59.5711 7.57893 111.82) (float-vector 49.5711 -2.42107 125.962)))
         (instance face :init :vertices (list (float-vector 55.4289 31.7211 125.962) (float-vector 45.4289 21.7211 111.82) (float-vector 35.4289 11.7211 125.962) (float-vector 45.4289 21.7211 140.104)))
         (instance face :init :vertices (list (float-vector 69.5711 17.5789 125.962) (float-vector 59.5711 7.57893 111.82) (float-vector 45.4289 21.7211 111.82) (float-vector 55.4289 31.7211 125.962)))
         (instance face :init :vertices (list (float-vector 59.5711 7.57893 140.104) (float-vector 49.5711 -2.42107 125.962) (float-vector 59.5711 7.57893 111.82) (float-vector 69.5711 17.5789 125.962)))
         (instance face :init :vertices (list (float-vector 45.4289 21.7211 140.104) (float-vector 35.4289 11.7211 125.962) (float-vector 49.5711 -2.42107 125.962) (float-vector 59.5711 7.57893 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 42.2541 125.962) (float-vector 10.0 28.1119 140.104) (float-vector 30.0 28.1119 140.104) (float-vector 30.0 42.2541 125.962)))
         (instance face :init :vertices (list (float-vector 10.0 13.9698 125.962) (float-vector 10.0 28.1119 111.82) (float-vector 30.0 28.1119 111.82) (float-vector 30.0 13.9698 125.962)))
         (instance face :init :vertices (list (float-vector 10.0 42.2541 125.962) (float-vector 10.0 28.1119 111.82) (float-vector 10.0 13.9698 125.962) (float-vector 10.0 28.1119 140.104)))
         (instance face :init :vertices (list (float-vector 30.0 42.2541 125.962) (float-vector 30.0 28.1119 111.82) (float-vector 10.0 28.1119 111.82) (float-vector 10.0 42.2541 125.962)))
         (instance face :init :vertices (list (float-vector 30.0 28.1119 140.104) (float-vector 30.0 13.9698 125.962) (float-vector 30.0 28.1119 111.82) (float-vector 30.0 42.2541 125.962)))
         (instance face :init :vertices (list (float-vector 10.0 28.1119 140.104) (float-vector 10.0 13.9698 125.962) (float-vector 30.0 13.9698 125.962) (float-vector 30.0 28.1119 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -29.5711 17.5789 125.962) (float-vector -19.5711 7.57893 140.104) (float-vector -5.42893 21.7211 140.104) (float-vector -15.4289 31.7211 125.962)))
         (instance face :init :vertices (list (float-vector -9.57107 -2.42107 125.962) (float-vector -19.5711 7.57893 111.82) (float-vector -5.42893 21.7211 111.82) (float-vector 4.57107 11.7211 125.962)))
         (instance face :init :vertices (list (float-vector -29.5711 17.5789 125.962) (float-vector -19.5711 7.57893 111.82) (float-vector -9.57107 -2.42107 125.962) (float-vector -19.5711 7.57893 140.104)))
         (instance face :init :vertices (list (float-vector -15.4289 31.7211 125.962) (float-vector -5.42893 21.7211 111.82) (float-vector -19.5711 7.57893 111.82) (float-vector -29.5711 17.5789 125.962)))
         (instance face :init :vertices (list (float-vector -5.42893 21.7211 140.104) (float-vector 4.57107 11.7211 125.962) (float-vector -5.42893 21.7211 111.82) (float-vector -15.4289 31.7211 125.962)))
         (instance face :init :vertices (list (float-vector -19.5711 7.57893 140.104) (float-vector -9.57107 -2.42107 125.962) (float-vector 4.57107 11.7211 125.962) (float-vector -5.42893 21.7211 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -40.1041 -27.85 125.962) (float-vector -25.9619 -27.85 140.104) (float-vector -25.9619 -7.85 140.104) (float-vector -40.1041 -7.85 125.962)))
         (instance face :init :vertices (list (float-vector -11.8198 -27.85 125.962) (float-vector -25.9619 -27.85 111.82) (float-vector -25.9619 -7.85 111.82) (float-vector -11.8198 -7.85 125.962)))
         (instance face :init :vertices (list (float-vector -40.1041 -27.85 125.962) (float-vector -25.9619 -27.85 111.82) (float-vector -11.8198 -27.85 125.962) (float-vector -25.9619 -27.85 140.104)))
         (instance face :init :vertices (list (float-vector -40.1041 -7.85 125.962) (float-vector -25.9619 -7.85 111.82) (float-vector -25.9619 -27.85 111.82) (float-vector -40.1041 -27.85 125.962)))
         (instance face :init :vertices (list (float-vector -25.9619 -7.85 140.104) (float-vector -11.8198 -7.85 125.962) (float-vector -25.9619 -7.85 111.82) (float-vector -40.1041 -7.85 125.962)))
         (instance face :init :vertices (list (float-vector -25.9619 -27.85 140.104) (float-vector -11.8198 -27.85 125.962) (float-vector -11.8198 -7.85 125.962) (float-vector -25.9619 -7.85 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.4289 -67.4211 125.962) (float-vector -5.42893 -57.4211 140.104) (float-vector -19.5711 -43.2789 140.104) (float-vector -29.5711 -53.2789 125.962)))
         (instance face :init :vertices (list (float-vector 4.57107 -47.4211 125.962) (float-vector -5.42893 -57.4211 111.82) (float-vector -19.5711 -43.2789 111.82) (float-vector -9.57107 -33.2789 125.962)))
         (instance face :init :vertices (list (float-vector -15.4289 -67.4211 125.962) (float-vector -5.42893 -57.4211 111.82) (float-vector 4.57107 -47.4211 125.962) (float-vector -5.42893 -57.4211 140.104)))
         (instance face :init :vertices (list (float-vector -29.5711 -53.2789 125.962) (float-vector -19.5711 -43.2789 111.82) (float-vector -5.42893 -57.4211 111.82) (float-vector -15.4289 -67.4211 125.962)))
         (instance face :init :vertices (list (float-vector -19.5711 -43.2789 140.104) (float-vector -9.57107 -33.2789 125.962) (float-vector -19.5711 -43.2789 111.82) (float-vector -29.5711 -53.2789 125.962)))
         (instance face :init :vertices (list (float-vector -5.42893 -57.4211 140.104) (float-vector 4.57107 -47.4211 125.962) (float-vector -9.57107 -33.2789 125.962) (float-vector -19.5711 -43.2789 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -77.9541 125.962) (float-vector 30.0 -63.8119 140.104) (float-vector 10.0 -63.8119 140.104) (float-vector 10.0 -77.9541 125.962)))
         (instance face :init :vertices (list (float-vector 30.0 -49.6698 125.962) (float-vector 30.0 -63.8119 111.82) (float-vector 10.0 -63.8119 111.82) (float-vector 10.0 -49.6698 125.962)))
         (instance face :init :vertices (list (float-vector 30.0 -77.9541 125.962) (float-vector 30.0 -63.8119 111.82) (float-vector 30.0 -49.6698 125.962) (float-vector 30.0 -63.8119 140.104)))
         (instance face :init :vertices (list (float-vector 10.0 -77.9541 125.962) (float-vector 10.0 -63.8119 111.82) (float-vector 30.0 -63.8119 111.82) (float-vector 30.0 -77.9541 125.962)))
         (instance face :init :vertices (list (float-vector 10.0 -63.8119 140.104) (float-vector 10.0 -49.6698 125.962) (float-vector 10.0 -63.8119 111.82) (float-vector 10.0 -77.9541 125.962)))
         (instance face :init :vertices (list (float-vector 30.0 -63.8119 140.104) (float-vector 30.0 -49.6698 125.962) (float-vector 10.0 -49.6698 125.962) (float-vector 10.0 -63.8119 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.5711 -53.2789 125.962) (float-vector 59.5711 -43.2789 140.104) (float-vector 45.4289 -57.4211 140.104) (float-vector 55.4289 -67.4211 125.962)))
         (instance face :init :vertices (list (float-vector 49.5711 -33.2789 125.962) (float-vector 59.5711 -43.2789 111.82) (float-vector 45.4289 -57.4211 111.82) (float-vector 35.4289 -47.4211 125.962)))
         (instance face :init :vertices (list (float-vector 69.5711 -53.2789 125.962) (float-vector 59.5711 -43.2789 111.82) (float-vector 49.5711 -33.2789 125.962) (float-vector 59.5711 -43.2789 140.104)))
         (instance face :init :vertices (list (float-vector 55.4289 -67.4211 125.962) (float-vector 45.4289 -57.4211 111.82) (float-vector 59.5711 -43.2789 111.82) (float-vector 69.5711 -53.2789 125.962)))
         (instance face :init :vertices (list (float-vector 45.4289 -57.4211 140.104) (float-vector 35.4289 -47.4211 125.962) (float-vector 45.4289 -57.4211 111.82) (float-vector 55.4289 -67.4211 125.962)))
         (instance face :init :vertices (list (float-vector 59.5711 -43.2789 140.104) (float-vector 49.5711 -33.2789 125.962) (float-vector 35.4289 -47.4211 125.962) (float-vector 45.4289 -57.4211 140.104)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.0963 61.1359 70.0) (float-vector 22.0963 61.1359 90.0) (float-vector 33.9859 45.0537 90.0) (float-vector 33.9859 45.0537 70.0)))
         (instance face :init :vertices (list (float-vector 6.01409 49.2463 90.0) (float-vector 6.01409 49.2463 70.0) (float-vector 17.9037 33.1641 70.0) (float-vector 17.9037 33.1641 90.0)))
         (instance face :init :vertices (list (float-vector 22.0963 61.1359 70.0) (float-vector 6.01409 49.2463 70.0) (float-vector 6.01409 49.2463 90.0) (float-vector 22.0963 61.1359 90.0)))
         (instance face :init :vertices (list (float-vector 33.9859 45.0537 70.0) (float-vector 17.9037 33.1641 70.0) (float-vector 6.01409 49.2463 70.0) (float-vector 22.0963 61.1359 70.0)))
         (instance face :init :vertices (list (float-vector 33.9859 45.0537 90.0) (float-vector 17.9037 33.1641 90.0) (float-vector 17.9037 33.1641 70.0) (float-vector 33.9859 45.0537 70.0)))
         (instance face :init :vertices (list (float-vector 22.0963 61.1359 90.0) (float-vector 6.01409 49.2463 90.0) (float-vector 17.9037 33.1641 90.0) (float-vector 33.9859 45.0537 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -40.1041 28.1119 70.0) (float-vector -40.1041 28.1119 90.0) (float-vector -25.9619 42.2541 90.0) (float-vector -25.9619 42.2541 70.0)))
         (instance face :init :vertices (list (float-vector -25.9619 13.9698 90.0) (float-vector -25.9619 13.9698 70.0) (float-vector -11.8198 28.1119 70.0) (float-vector -11.8198 28.1119 90.0)))
         (instance face :init :vertices (list (float-vector -40.1041 28.1119 70.0) (float-vector -25.9619 13.9698 70.0) (float-vector -25.9619 13.9698 90.0) (float-vector -40.1041 28.1119 90.0)))
         (instance face :init :vertices (list (float-vector -25.9619 42.2541 70.0) (float-vector -11.8198 28.1119 70.0) (float-vector -25.9619 13.9698 70.0) (float-vector -40.1041 28.1119 70.0)))
         (instance face :init :vertices (list (float-vector -25.9619 42.2541 90.0) (float-vector -11.8198 28.1119 90.0) (float-vector -11.8198 28.1119 70.0) (float-vector -25.9619 42.2541 70.0)))
         (instance face :init :vertices (list (float-vector -40.1041 28.1119 90.0) (float-vector -25.9619 13.9698 90.0) (float-vector -11.8198 28.1119 90.0) (float-vector -25.9619 42.2541 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -55.0 -27.85 70.0) (float-vector -55.0 -27.85 90.0) (float-vector -55.0 -7.85 90.0) (float-vector -55.0 -7.85 70.0)))
         (instance face :init :vertices (list (float-vector -35.0 -27.85 90.0) (float-vector -35.0 -27.85 70.0) (float-vector -35.0 -7.85 70.0) (float-vector -35.0 -7.85 90.0)))
         (instance face :init :vertices (list (float-vector -55.0 -27.85 70.0) (float-vector -35.0 -27.85 70.0) (float-vector -35.0 -27.85 90.0) (float-vector -55.0 -27.85 90.0)))
         (instance face :init :vertices (list (float-vector -55.0 -7.85 70.0) (float-vector -35.0 -7.85 70.0) (float-vector -35.0 -27.85 70.0) (float-vector -55.0 -27.85 70.0)))
         (instance face :init :vertices (list (float-vector -55.0 -7.85 90.0) (float-vector -35.0 -7.85 90.0) (float-vector -35.0 -7.85 70.0) (float-vector -55.0 -7.85 70.0)))
         (instance face :init :vertices (list (float-vector -55.0 -27.85 90.0) (float-vector -35.0 -27.85 90.0) (float-vector -35.0 -7.85 90.0) (float-vector -55.0 -7.85 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -25.9619 -77.9541 70.0) (float-vector -25.9619 -77.9541 90.0) (float-vector -40.1041 -63.8119 90.0) (float-vector -40.1041 -63.8119 70.0)))
         (instance face :init :vertices (list (float-vector -11.8198 -63.8119 90.0) (float-vector -11.8198 -63.8119 70.0) (float-vector -25.9619 -49.6698 70.0) (float-vector -25.9619 -49.6698 90.0)))
         (instance face :init :vertices (list (float-vector -25.9619 -77.9541 70.0) (float-vector -11.8198 -63.8119 70.0) (float-vector -11.8198 -63.8119 90.0) (float-vector -25.9619 -77.9541 90.0)))
         (instance face :init :vertices (list (float-vector -40.1041 -63.8119 70.0) (float-vector -25.9619 -49.6698 70.0) (float-vector -11.8198 -63.8119 70.0) (float-vector -25.9619 -77.9541 70.0)))
         (instance face :init :vertices (list (float-vector -40.1041 -63.8119 90.0) (float-vector -25.9619 -49.6698 90.0) (float-vector -25.9619 -49.6698 70.0) (float-vector -40.1041 -63.8119 70.0)))
         (instance face :init :vertices (list (float-vector -25.9619 -77.9541 90.0) (float-vector -11.8198 -63.8119 90.0) (float-vector -25.9619 -49.6698 90.0) (float-vector -40.1041 -63.8119 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -92.85 70.0) (float-vector 30.0 -92.85 90.0) (float-vector 10.0 -92.85 90.0) (float-vector 10.0 -92.85 70.0)))
         (instance face :init :vertices (list (float-vector 30.0 -72.85 90.0) (float-vector 30.0 -72.85 70.0) (float-vector 10.0 -72.85 70.0) (float-vector 10.0 -72.85 90.0)))
         (instance face :init :vertices (list (float-vector 30.0 -92.85 70.0) (float-vector 30.0 -72.85 70.0) (float-vector 30.0 -72.85 90.0) (float-vector 30.0 -92.85 90.0)))
         (instance face :init :vertices (list (float-vector 10.0 -92.85 70.0) (float-vector 10.0 -72.85 70.0) (float-vector 30.0 -72.85 70.0) (float-vector 30.0 -92.85 70.0)))
         (instance face :init :vertices (list (float-vector 10.0 -92.85 90.0) (float-vector 10.0 -72.85 90.0) (float-vector 10.0 -72.85 70.0) (float-vector 10.0 -92.85 70.0)))
         (instance face :init :vertices (list (float-vector 30.0 -92.85 90.0) (float-vector 30.0 -72.85 90.0) (float-vector 10.0 -72.85 90.0) (float-vector 10.0 -92.85 90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 45.4289 21.7211 19.8959) (float-vector 55.4289 31.7211 34.0381) (float-vector 69.5711 17.5789 34.0381) (float-vector 59.5711 7.57893 19.8959)))
         (instance face :init :vertices (list (float-vector 45.4289 21.7211 48.1802) (float-vector 35.4289 11.7211 34.0381) (float-vector 49.5711 -2.42107 34.0381) (float-vector 59.5711 7.57893 48.1802)))
         (instance face :init :vertices (list (float-vector 45.4289 21.7211 19.8959) (float-vector 35.4289 11.7211 34.0381) (float-vector 45.4289 21.7211 48.1802) (float-vector 55.4289 31.7211 34.0381)))
         (instance face :init :vertices (list (float-vector 59.5711 7.57893 19.8959) (float-vector 49.5711 -2.42107 34.0381) (float-vector 35.4289 11.7211 34.0381) (float-vector 45.4289 21.7211 19.8959)))
         (instance face :init :vertices (list (float-vector 69.5711 17.5789 34.0381) (float-vector 59.5711 7.57893 48.1802) (float-vector 49.5711 -2.42107 34.0381) (float-vector 59.5711 7.57893 19.8959)))
         (instance face :init :vertices (list (float-vector 55.4289 31.7211 34.0381) (float-vector 45.4289 21.7211 48.1802) (float-vector 59.5711 7.57893 48.1802) (float-vector 69.5711 17.5789 34.0381)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 28.1119 19.8959) (float-vector 10.0 42.2541 34.0381) (float-vector 30.0 42.2541 34.0381) (float-vector 30.0 28.1119 19.8959)))
         (instance face :init :vertices (list (float-vector 10.0 28.1119 48.1802) (float-vector 10.0 13.9698 34.0381) (float-vector 30.0 13.9698 34.0381) (float-vector 30.0 28.1119 48.1802)))
         (instance face :init :vertices (list (float-vector 10.0 28.1119 19.8959) (float-vector 10.0 13.9698 34.0381) (float-vector 10.0 28.1119 48.1802) (float-vector 10.0 42.2541 34.0381)))
         (instance face :init :vertices (list (float-vector 30.0 28.1119 19.8959) (float-vector 30.0 13.9698 34.0381) (float-vector 10.0 13.9698 34.0381) (float-vector 10.0 28.1119 19.8959)))
         (instance face :init :vertices (list (float-vector 30.0 42.2541 34.0381) (float-vector 30.0 28.1119 48.1802) (float-vector 30.0 13.9698 34.0381) (float-vector 30.0 28.1119 19.8959)))
         (instance face :init :vertices (list (float-vector 10.0 42.2541 34.0381) (float-vector 10.0 28.1119 48.1802) (float-vector 30.0 28.1119 48.1802) (float-vector 30.0 42.2541 34.0381)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -19.5711 7.57893 19.8959) (float-vector -29.5711 17.5789 34.0381) (float-vector -15.4289 31.7211 34.0381) (float-vector -5.42893 21.7211 19.8959)))
         (instance face :init :vertices (list (float-vector -19.5711 7.57893 48.1802) (float-vector -9.57107 -2.42107 34.0381) (float-vector 4.57107 11.7211 34.0381) (float-vector -5.42893 21.7211 48.1802)))
         (instance face :init :vertices (list (float-vector -19.5711 7.57893 19.8959) (float-vector -9.57107 -2.42107 34.0381) (float-vector -19.5711 7.57893 48.1802) (float-vector -29.5711 17.5789 34.0381)))
         (instance face :init :vertices (list (float-vector -5.42893 21.7211 19.8959) (float-vector 4.57107 11.7211 34.0381) (float-vector -9.57107 -2.42107 34.0381) (float-vector -19.5711 7.57893 19.8959)))
         (instance face :init :vertices (list (float-vector -15.4289 31.7211 34.0381) (float-vector -5.42893 21.7211 48.1802) (float-vector 4.57107 11.7211 34.0381) (float-vector -5.42893 21.7211 19.8959)))
         (instance face :init :vertices (list (float-vector -29.5711 17.5789 34.0381) (float-vector -19.5711 7.57893 48.1802) (float-vector -5.42893 21.7211 48.1802) (float-vector -15.4289 31.7211 34.0381)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -25.9619 -27.85 19.8959) (float-vector -40.1041 -27.85 34.0381) (float-vector -40.1041 -7.85 34.0381) (float-vector -25.9619 -7.85 19.8959)))
         (instance face :init :vertices (list (float-vector -25.9619 -27.85 48.1802) (float-vector -11.8198 -27.85 34.0381) (float-vector -11.8198 -7.85 34.0381) (float-vector -25.9619 -7.85 48.1802)))
         (instance face :init :vertices (list (float-vector -25.9619 -27.85 19.8959) (float-vector -11.8198 -27.85 34.0381) (float-vector -25.9619 -27.85 48.1802) (float-vector -40.1041 -27.85 34.0381)))
         (instance face :init :vertices (list (float-vector -25.9619 -7.85 19.8959) (float-vector -11.8198 -7.85 34.0381) (float-vector -11.8198 -27.85 34.0381) (float-vector -25.9619 -27.85 19.8959)))
         (instance face :init :vertices (list (float-vector -40.1041 -7.85 34.0381) (float-vector -25.9619 -7.85 48.1802) (float-vector -11.8198 -7.85 34.0381) (float-vector -25.9619 -7.85 19.8959)))
         (instance face :init :vertices (list (float-vector -40.1041 -27.85 34.0381) (float-vector -25.9619 -27.85 48.1802) (float-vector -25.9619 -7.85 48.1802) (float-vector -40.1041 -7.85 34.0381)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -5.42893 -57.4211 19.8959) (float-vector -15.4289 -67.4211 34.0381) (float-vector -29.5711 -53.2789 34.0381) (float-vector -19.5711 -43.2789 19.8959)))
         (instance face :init :vertices (list (float-vector -5.42893 -57.4211 48.1802) (float-vector 4.57107 -47.4211 34.0381) (float-vector -9.57107 -33.2789 34.0381) (float-vector -19.5711 -43.2789 48.1802)))
         (instance face :init :vertices (list (float-vector -5.42893 -57.4211 19.8959) (float-vector 4.57107 -47.4211 34.0381) (float-vector -5.42893 -57.4211 48.1802) (float-vector -15.4289 -67.4211 34.0381)))
         (instance face :init :vertices (list (float-vector -19.5711 -43.2789 19.8959) (float-vector -9.57107 -33.2789 34.0381) (float-vector 4.57107 -47.4211 34.0381) (float-vector -5.42893 -57.4211 19.8959)))
         (instance face :init :vertices (list (float-vector -29.5711 -53.2789 34.0381) (float-vector -19.5711 -43.2789 48.1802) (float-vector -9.57107 -33.2789 34.0381) (float-vector -19.5711 -43.2789 19.8959)))
         (instance face :init :vertices (list (float-vector -15.4289 -67.4211 34.0381) (float-vector -5.42893 -57.4211 48.1802) (float-vector -19.5711 -43.2789 48.1802) (float-vector -29.5711 -53.2789 34.0381)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -63.8119 19.8959) (float-vector 30.0 -77.9541 34.0381) (float-vector 10.0 -77.9541 34.0381) (float-vector 10.0 -63.8119 19.8959)))
         (instance face :init :vertices (list (float-vector 30.0 -63.8119 48.1802) (float-vector 30.0 -49.6698 34.0381) (float-vector 10.0 -49.6698 34.0381) (float-vector 10.0 -63.8119 48.1802)))
         (instance face :init :vertices (list (float-vector 30.0 -63.8119 19.8959) (float-vector 30.0 -49.6698 34.0381) (float-vector 30.0 -63.8119 48.1802) (float-vector 30.0 -77.9541 34.0381)))
         (instance face :init :vertices (list (float-vector 10.0 -63.8119 19.8959) (float-vector 10.0 -49.6698 34.0381) (float-vector 30.0 -49.6698 34.0381) (float-vector 30.0 -63.8119 19.8959)))
         (instance face :init :vertices (list (float-vector 10.0 -77.9541 34.0381) (float-vector 10.0 -63.8119 48.1802) (float-vector 10.0 -49.6698 34.0381) (float-vector 10.0 -63.8119 19.8959)))
         (instance face :init :vertices (list (float-vector 30.0 -77.9541 34.0381) (float-vector 30.0 -63.8119 48.1802) (float-vector 10.0 -63.8119 48.1802) (float-vector 10.0 -77.9541 34.0381)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 59.5711 -43.2789 19.8959) (float-vector 69.5711 -53.2789 34.0381) (float-vector 55.4289 -67.4211 34.0381) (float-vector 45.4289 -57.4211 19.8959)))
         (instance face :init :vertices (list (float-vector 59.5711 -43.2789 48.1802) (float-vector 49.5711 -33.2789 34.0381) (float-vector 35.4289 -47.4211 34.0381) (float-vector 45.4289 -57.4211 48.1802)))
         (instance face :init :vertices (list (float-vector 59.5711 -43.2789 19.8959) (float-vector 49.5711 -33.2789 34.0381) (float-vector 59.5711 -43.2789 48.1802) (float-vector 69.5711 -53.2789 34.0381)))
         (instance face :init :vertices (list (float-vector 45.4289 -57.4211 19.8959) (float-vector 35.4289 -47.4211 34.0381) (float-vector 49.5711 -33.2789 34.0381) (float-vector 59.5711 -43.2789 19.8959)))
         (instance face :init :vertices (list (float-vector 55.4289 -67.4211 34.0381) (float-vector 45.4289 -57.4211 48.1802) (float-vector 35.4289 -47.4211 34.0381) (float-vector 45.4289 -57.4211 19.8959)))
         (instance face :init :vertices (list (float-vector 69.5711 -53.2789 34.0381) (float-vector 59.5711 -43.2789 48.1802) (float-vector 45.4289 -57.4211 48.1802) (float-vector 55.4289 -67.4211 34.0381)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 65.0 -7.85 18.2) (float-vector 65.0 -7.85 38.2) (float-vector 65.0 -27.85 38.2) (float-vector 65.0 -27.85 18.2)))
         (instance face :init :vertices (list (float-vector 45.0 -7.85 38.2) (float-vector 45.0 -7.85 18.2) (float-vector 45.0 -27.85 18.2) (float-vector 45.0 -27.85 38.2)))
         (instance face :init :vertices (list (float-vector 65.0 -7.85 18.2) (float-vector 45.0 -7.85 18.2) (float-vector 45.0 -7.85 38.2) (float-vector 65.0 -7.85 38.2)))
         (instance face :init :vertices (list (float-vector 65.0 -27.85 18.2) (float-vector 45.0 -27.85 18.2) (float-vector 45.0 -7.85 18.2) (float-vector 65.0 -7.85 18.2)))
         (instance face :init :vertices (list (float-vector 65.0 -27.85 38.2) (float-vector 45.0 -27.85 38.2) (float-vector 45.0 -27.85 18.2) (float-vector 65.0 -27.85 18.2)))
         (instance face :init :vertices (list (float-vector 65.0 -7.85 38.2) (float-vector 45.0 -7.85 38.2) (float-vector 45.0 -27.85 38.2) (float-vector 65.0 -27.85 38.2)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 45.0 -7.85 0.0) (float-vector 45.0 -7.85 20.0) (float-vector 45.0 -27.85 20.0) (float-vector 45.0 -27.85 0.0)))
         (instance face :init :vertices (list (float-vector 25.0 -7.85 20.0) (float-vector 25.0 -7.85 0.0) (float-vector 25.0 -27.85 0.0) (float-vector 25.0 -27.85 20.0)))
         (instance face :init :vertices (list (float-vector 45.0 -7.85 0.0) (float-vector 25.0 -7.85 0.0) (float-vector 25.0 -7.85 20.0) (float-vector 45.0 -7.85 20.0)))
         (instance face :init :vertices (list (float-vector 45.0 -27.85 0.0) (float-vector 25.0 -27.85 0.0) (float-vector 25.0 -7.85 0.0) (float-vector 45.0 -7.85 0.0)))
         (instance face :init :vertices (list (float-vector 45.0 -27.85 20.0) (float-vector 25.0 -27.85 20.0) (float-vector 25.0 -27.85 0.0) (float-vector 45.0 -27.85 0.0)))
         (instance face :init :vertices (list (float-vector 45.0 -7.85 20.0) (float-vector 25.0 -7.85 20.0) (float-vector 25.0 -27.85 20.0) (float-vector 45.0 -27.85 20.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray30)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :gray20)
     (send (elt bc 3) :set-color :gray20)
     (send (elt bc 4) :set-color :white)
     (send (elt bc 5) :set-color :papayawhip)
     (send (elt bc 6) :set-color :linen)
     (send (elt bc 7) :set-color :linen)
     (send (elt bc 8) :set-color :linen)
     (send (elt bc 9) :set-color :linen)
     (send (elt bc 10) :set-color :linen)
     (send (elt bc 11) :set-color :linen)
     (send (elt bc 12) :set-color :linen)
     (send (elt bc 13) :set-color :linen)
     (send (elt bc 14) :set-color :linen)
     (send (elt bc 15) :set-color :linen)
     (send (elt bc 16) :set-color :linen)
     (send (elt bc 17) :set-color :linen)
     (send (elt bc 18) :set-color :linen)
     (send (elt bc 19) :set-color :linen)
     (send (elt bc 20) :set-color :linen)
     (send (elt bc 21) :set-color :linen)
     (send (elt bc 22) :set-color :linen)
     (send (elt bc 23) :set-color :linen)
     (send (elt bc 24) :set-color :linen)
     (send (elt bc 25) :set-color :linen)
     (send (elt bc 26) :set-color :linen)
     (send (elt bc 27) :set-color :linen)
     (send (elt bc 28) :set-color :linen)
     (setq blink25 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-head :weight 802.0 :centroid (float-vector 29.5366 -17.75 73.4915) :inertia-tensor #2f((1.272697e+06 37747.7 -1.401902e+05) (37747.7 7.813429e+05 93922.2) (-1.401902e+05 93922.2 1.221656e+06))))

     ;; definition of assoc
     (send blink11 :newcoords (make-coords :pos (float-vector -69.0 -21.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink12 :assoc blink11)
     (send blink12 :newcoords (make-coords :pos (float-vector 18.0 21.0 -135.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink13 :assoc blink12)
     (send blink13 :newcoords (make-coords :pos (float-vector 0.0 -21.0 -125.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink14 :assoc blink13)
     (send blink14 :newcoords (make-coords :pos (float-vector 0.0 20.5 5.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink15 :assoc blink14)
     (send blink15 :newcoords (make-coords :pos (float-vector 10.0 0.5 -5.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink16 :assoc blink15)
     (send blink1 :newcoords (make-coords :pos (float-vector -69.0 21.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink2 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 18.0 -21.0 -135.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink3 :assoc blink2)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 21.0 -125.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink4 :assoc blink3)
     (send blink4 :newcoords (make-coords :pos (float-vector 0.0 -20.5 5.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink5 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector 10.0 -0.5 -5.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink6 :assoc blink5)
     (send blink7 :newcoords (make-coords :pos (float-vector 0.0 -18.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink8 :assoc blink7)
     (send blink8 :newcoords (make-coords :pos (float-vector 8.0 20.0 -121.95) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink9 :assoc blink8)
     (send blink9 :newcoords (make-coords :pos (float-vector 0.0 48.5 -5.684342e-14) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink10 :assoc blink9)
     (send blink17 :newcoords (make-coords :pos (float-vector 0.0 18.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink18 :assoc blink17)
     (send blink18 :newcoords (make-coords :pos (float-vector 8.0 -20.0 -121.95) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink19 :assoc blink18)
     (send blink19 :newcoords (make-coords :pos (float-vector 0.0 -48.5 -5.684342e-14) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink20 :assoc blink19)
     (send blink25 :newcoords (make-coords :pos (float-vector 0.0 17.75 1.4) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink24 :assoc blink25)
     (send blink24 :newcoords (make-coords :pos (float-vector 20.0 0.0 129.5) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink23 :assoc blink24)
     (send blink20 :newcoords (make-coords :pos (float-vector 23.85 -81.4 71.5) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink23 :assoc blink20)
     (send blink10 :newcoords (make-coords :pos (float-vector 23.85 81.4 71.5) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink23 :assoc blink10)
     (send blink23 :newcoords (make-coords :pos (float-vector 0.0 0.0 5.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink22 :assoc blink23)
     (send blink22 :newcoords (make-coords :pos (float-vector 11.0 0.0 1.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink21 :assoc blink22)
     (send blink21 :newcoords (make-coords :pos (float-vector -16.0 0.0 34.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink21)
     (send blink6 :newcoords (make-coords :pos (float-vector 37.182 58.287 -73.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink6)
     (send blink16 :newcoords (make-coords :pos (float-vector 37.182 -58.287 -73.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink16)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of torso-end-coords
     (setq torso-end-coords
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 5.0 0.0 109.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink23 :assoc torso-end-coords)

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 18.0 -17.75 143.6) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink25 :assoc head-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -18.0 -110.0) :rot #2f((1.0 0.0 -2.775558e-17) (0.0 1.0 0.0) (2.775558e-17 0.0 1.0))))))
     (send blink17 :assoc rarm-end-coords)

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 18.0 -110.0) :rot #2f((1.0 0.0 -2.775558e-17) (0.0 1.0 0.0) (2.775558e-17 0.0 1.0))))))
     (send blink7 :assoc larm-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink1 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 70.0 -1.421085e-14 -70.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink1 :assoc lleg-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink11 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 70.0 1.421085e-14 -70.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink11 :assoc rleg-end-coords)

     ;; definition of joint

     ;; definition of :torso-waist-y
     (setq joint20 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink21 :name :torso-waist-y :axis :z 
			     :min  -90.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :torso-waist-r
     (setq joint21 (instance rotational-joint :init
			     :parent-link blink21 :child-link blink22 :name :torso-waist-r :axis :x 
			     :min  -80.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :torso-waist-p
     (setq joint22 (instance rotational-joint :init
			     :parent-link blink22 :child-link blink23 :name :torso-waist-p :axis :y 
			     :min  -90.0 :max   22.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :head-neck-y
     (setq joint23 (instance rotational-joint :init
			     :parent-link blink23 :child-link blink24 :name :head-neck-y :axis :-z
			     :min -100.0 :max  100.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :head-neck-p
     (setq joint24 (instance rotational-joint :init
			     :parent-link blink24 :child-link blink25 :name :head-neck-p :axis :y 
			     :min  -80.0 :max   80.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-r
     (setq joint19 (instance rotational-joint :init
			     :parent-link blink23 :child-link blink20 :name :rarm-shoulder-r :axis :-x
			     :min  -15.0 :max   80.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-p
     (setq joint18 (instance rotational-joint :init
			     :parent-link blink20 :child-link blink19 :name :rarm-shoulder-p :axis :y 
			     :min -170.0 :max   55.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-y
     (setq joint17 (instance rotational-joint :init
			     :parent-link blink19 :child-link blink18 :name :rarm-shoulder-y :axis :-z
			     :min -120.0 :max  120.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-elbow-p
     (setq joint16 (instance rotational-joint :init
			     :parent-link blink18 :child-link blink17 :name :rarm-elbow-p :axis :y 
			     :min -125.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-r
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink23 :child-link blink10 :name :larm-shoulder-r :axis :x 
			     :min  -15.0 :max   80.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-p
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink9 :name :larm-shoulder-p :axis :y 
			     :min -170.0 :max   55.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-y
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink9 :child-link blink8 :name :larm-shoulder-y :axis :z 
			     :min -120.0 :max  120.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-elbow-p
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink8 :child-link blink7 :name :larm-elbow-p :axis :y 
			     :min -125.0 :max    0.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-y
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink6 :name :lleg-crotch-y :axis :z 
			     :min  -90.0 :max   15.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-r
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink5 :name :lleg-crotch-r :axis :x 
			     :min  -40.0 :max  120.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-p
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink4 :name :lleg-crotch-p :axis :y 
			     :min -127.0 :max   12.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-knee-p
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink3 :name :lleg-knee-p :axis :y 
			     :min    0.0 :max  150.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-ankle-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink3 :child-link blink2 :name :lleg-ankle-p :axis :y 
			     :min  -90.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-ankle-r
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink1 :name :lleg-ankle-r :axis :x 
			     :min -100.0 :max  100.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-y
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink16 :name :rleg-crotch-y :axis :-z
			     :min  -90.0 :max   15.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-r
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink16 :child-link blink15 :name :rleg-crotch-r :axis :-x
			     :min  -40.0 :max  120.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-p
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink15 :child-link blink14 :name :rleg-crotch-p :axis :y 
			     :min -127.0 :max   12.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-knee-p
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink13 :name :rleg-knee-p :axis :y 
			     :min    0.0 :max  150.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-ankle-p
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink12 :name :rleg-ankle-p :axis :y 
			     :min  -90.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-ankle-r
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink12 :child-link blink11 :name :rleg-ankle-r :axis :-x
			     :min -100.0 :max  100.0 :max-joint-velocity 5 :max-joint-torque 100))

     (setq torso-root-link blink21)
     (setq torso (list blink21 blink22 blink23))
     (setq head-root-link blink24)
     (setq head (list blink24 blink25))
     (setq rarm-root-link blink20)
     (setq rarm (list blink20 blink19 blink18 blink17))
     (setq larm-root-link blink10)
     (setq larm (list blink10 blink9 blink8 blink7))
     (setq lleg-root-link blink6)
     (setq lleg (list blink6 blink5 blink4 blink3 blink2 blink1))
     (setq rleg-root-link blink16)
     (setq rleg (list blink16 blink15 blink14 blink13 blink12 blink11))

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20 blink21 blink22 blink23 blink24 blink25))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 joint20 joint21 joint22 joint23 joint24))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     ;; definition of torso force-sensor-coords
     (setq sensor0
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -60.0 -70.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor0)

     ;; definition of torso force-sensor-coords
     (setq sensor1
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 60.0 -70.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 1.0) (0.0 -1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor1)

     ;; definition of torso force-sensor-coords
     (setq sensor2
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -40.0 -100.0) :rot #2f((2.220446e-16 0.0 -1.0) (0.0 1.0 0.0) (1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor2)

     ;; definition of torso force-sensor-coords
     (setq sensor3
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 40.0 -100.0) :rot #2f((2.220446e-16 0.0 -1.0) (0.0 1.0 0.0) (1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor3)

     ;; definition of torso force-sensor-coords
     (setq sensor4
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 0.0 -80.0) :rot #2f((2.220446e-16 0.0 -1.0) (0.0 1.0 0.0) (1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor4)

     ;; definition of torso force-sensor-coords
     (setq sensor5
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -40.0 -50.0) :rot #2f((2.220446e-16 0.0 -1.0) (0.0 1.0 0.0) (1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor5)

     ;; definition of torso force-sensor-coords
     (setq sensor6
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 40.0 -50.0) :rot #2f((2.220446e-16 0.0 -1.0) (0.0 1.0 0.0) (1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor6)

     ;; definition of torso force-sensor-coords
     (setq sensor7
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 60.0 -50.0 -70.0) :rot #2f((-6.938894e-18 0.587785 0.809017) (0.0 0.809017 -0.587785) (-1.0 0.0 6.938894e-18))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor7)

     ;; definition of torso force-sensor-coords
     (setq sensor8
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 60.0 50.0 -70.0) :rot #2f((-6.938894e-18 -0.587785 0.809017) (0.0 0.809017 0.587785) (-1.0 0.0 6.938894e-18))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor8)

     ;; definition of torso force-sensor-coords
     (setq sensor9
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 60.0 0.0 -70.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink21 :assoc sensor9)

     ;; definition of torso shock-sensor-coords
     (setq sensor10
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -32.0 65.0 -100.0) :rot #2f((0.5 1.110223e-16 0.866025) (0.866025 -1.665335e-16 -0.5) (1.110223e-16 1.0 -1.665335e-16))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor10)

     ;; definition of torso shock-sensor-coords
     (setq sensor11
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -5.0 80.0 -45.0) :rot #2f((0.866025 -2.775558e-17 0.5) (0.5 1.249001e-16 -0.866025) (-8.326673e-17 1.0 9.714451e-17))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor11)

     ;; definition of torso shock-sensor-coords
     (setq sensor12
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -32.0 -65.0 -100.0) :rot #2f((0.5 -1.110223e-16 -0.866025) (-0.866025 -1.665335e-16 -0.5) (-1.110223e-16 1.0 -1.665335e-16))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor12)

     ;; definition of torso shock-sensor-coords
     (setq sensor13
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -5.0 -80.0 -45.0) :rot #2f((0.866025 2.775558e-17 -0.5) (-0.5 1.249001e-16 -0.866025) (8.326673e-17 1.0 9.714451e-17))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor13)

     ;; definition of torso shock-sensor-coords
     (setq sensor14
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -30.0 0.0 -125.0) :rot #2f((0.866025 0.0 0.5) (0.0 1.0 0.0) (-0.5 0.0 0.866025))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor14)

     ;; definition of torso shock-sensor-coords
     (setq sensor15
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -45.0 0.0 -100.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor15)

     ;; definition of torso shock-sensor-coords
     (setq sensor16
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 92.0 57.0 -80.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor16)

     ;; definition of torso shock-sensor-coords
     (setq sensor17
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 92.0 -57.0 -80.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor17)

     ;; definition of torso shock-sensor-coords
     (setq sensor18
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 85.0 0.0 -112.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink21 :assoc sensor18)

     ;; definition of torso adxl-coords
     (setq sensor19
       (make-cascoords
	:coords (send (send blink21 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 70.0 0.0 -55.0) :rot #2f((1.0 0.0 0.0) (0.0 -1.0 -1.224647e-16) (0.0 1.224647e-16 -1.0))))
        :name "torso-adxl(list)"))
     (send blink21 :assoc sensor19)

     ;; definition of torso shock-sensor-coords
     (setq sensor20
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -10.0 70.0 0.0) :rot #2f((0.965926 0.0 0.258819) (0.258819 0.0 -0.965926) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink22 :assoc sensor20)

     ;; definition of torso shock-sensor-coords
     (setq sensor21
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -10.0 -70.0 0.0) :rot #2f((0.965926 0.0 -0.258819) (-0.258819 0.0 -0.965926) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink22 :assoc sensor21)

     ;; definition of torso shock-sensor-coords
     (setq sensor22
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 0.0 0.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink22 :assoc sensor22)

     ;; definition of torso shock-sensor-coords
     (setq sensor23
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 25.0 75.0 0.0) :rot #2f((0.965926 0.0 -0.258819) (-0.258819 0.0 -0.965926) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink22 :assoc sensor23)

     ;; definition of torso shock-sensor-coords
     (setq sensor24
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 25.0 -75.0 0.0) :rot #2f((0.965926 0.0 0.258819) (0.258819 0.0 -0.965926) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink22 :assoc sensor24)

     ;; definition of torso shock-sensor-coords
     (setq sensor25
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 55.0 0.0 0.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink22 :assoc sensor25)

     ;; definition of torso force-sensor-coords
     (setq sensor26
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -70.0 -20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor26)

     ;; definition of torso force-sensor-coords
     (setq sensor27
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -70.0 -20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor27)

     ;; definition of torso force-sensor-coords
     (setq sensor28
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 -70.0 -20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor28)

     ;; definition of torso force-sensor-coords
     (setq sensor29
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -70.0 20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor29)

     ;; definition of torso force-sensor-coords
     (setq sensor30
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -70.0 20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor30)

     ;; definition of torso force-sensor-coords
     (setq sensor31
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 -70.0 20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor31)

     ;; definition of torso force-sensor-coords
     (setq sensor32
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -50.0 30.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor32)

     ;; definition of torso force-sensor-coords
     (setq sensor33
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 50.0 30.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor33)

     ;; definition of torso force-sensor-coords
     (setq sensor34
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 0.0 30.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor34)

     ;; definition of torso force-sensor-coords
     (setq sensor35
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -50.0 80.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor35)

     ;; definition of torso force-sensor-coords
     (setq sensor36
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 50.0 80.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor36)

     ;; definition of torso force-sensor-coords
     (setq sensor37
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 0.0 80.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor37)

     ;; definition of torso force-sensor-coords
     (setq sensor38
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 70.0 -20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 1.0) (0.0 -1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor38)

     ;; definition of torso force-sensor-coords
     (setq sensor39
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 70.0 -20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 1.0) (0.0 -1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor39)

     ;; definition of torso force-sensor-coords
     (setq sensor40
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 70.0 -20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 1.0) (0.0 -1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor40)

     ;; definition of torso force-sensor-coords
     (setq sensor41
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 70.0 20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 1.0) (0.0 -1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor41)

     ;; definition of torso force-sensor-coords
     (setq sensor42
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 70.0 20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 1.0) (0.0 -1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor42)

     ;; definition of torso force-sensor-coords
     (setq sensor43
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 70.0 20.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 1.0) (0.0 -1.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor43)

     ;; definition of torso force-sensor-coords
     (setq sensor44
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 -50.0 30.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor44)

     ;; definition of torso force-sensor-coords
     (setq sensor45
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 50.0 30.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor45)

     ;; definition of torso force-sensor-coords
     (setq sensor46
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 0.0 30.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor46)

     ;; definition of torso force-sensor-coords
     (setq sensor47
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 -50.0 80.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor47)

     ;; definition of torso force-sensor-coords
     (setq sensor48
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 50.0 80.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor48)

     ;; definition of torso force-sensor-coords
     (setq sensor49
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 0.0 80.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor49)

     ;; definition of torso shock-sensor-coords
     (setq sensor50
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 73.0 30.0) :rot #2f((0.866025 -2.775558e-17 0.5) (0.5 1.249001e-16 -0.866025) (-8.326673e-17 1.0 9.714451e-17))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor50)

     ;; definition of torso shock-sensor-coords
     (setq sensor51
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 57.0 110.0) :rot #2f((0.866025 0.25 -0.433013) (-6.938894e-17 0.866025 0.5) (0.5 -0.433013 0.75))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor51)

     ;; definition of torso shock-sensor-coords
     (setq sensor52
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 -73.0 30.0) :rot #2f((0.866025 2.775558e-17 -0.5) (-0.5 1.249001e-16 -0.866025) (8.326673e-17 1.0 9.714451e-17))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor52)

     ;; definition of torso shock-sensor-coords
     (setq sensor53
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -57.0 110.0) :rot #2f((0.866025 -0.25 -0.433013) (6.938894e-17 0.866025 -0.5) (0.5 0.433013 0.75))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor53)

     ;; definition of torso shock-sensor-coords
     (setq sensor54
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -45.0 0.0 105.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor54)

     ;; definition of torso shock-sensor-coords
     (setq sensor55
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 45.0 68.0 30.0) :rot #2f((0.866025 2.775558e-17 -0.5) (-0.5 1.249001e-16 -0.866025) (8.326673e-17 1.0 9.714451e-17))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor55)

     ;; definition of torso shock-sensor-coords
     (setq sensor56
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 32.0 57.0 112.0) :rot #2f((0.866025 -0.25 0.433013) (6.938894e-17 0.866025 0.5) (-0.5 -0.433013 0.75))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor56)

     ;; definition of torso shock-sensor-coords
     (setq sensor57
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 45.0 -68.0 30.0) :rot #2f((0.866025 -2.775558e-17 0.5) (0.5 1.249001e-16 -0.866025) (-8.326673e-17 1.0 9.714451e-17))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor57)

     ;; definition of torso shock-sensor-coords
     (setq sensor58
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 32.0 -57.0 112.0) :rot #2f((0.866025 0.25 0.433013) (-6.938894e-17 0.866025 -0.5) (-0.5 0.433013 0.75))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor58)

     ;; definition of torso shock-sensor-coords
     (setq sensor59
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 55.0 0.0 105.0) :rot #2f((0.0 0.0 1.0) (1.0 0.0 0.0) (0.0 1.0 0.0))))
        :name "torso-shock-sensor(list)"))
     (send blink23 :assoc sensor59)

     ;; definition of torso force-sensor-coords
     (setq sensor60
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor60)

     ;; definition of torso force-sensor-coords
     (setq sensor61
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor61)

     ;; definition of torso force-sensor-coords
     (setq sensor62
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor62)

     ;; definition of torso force-sensor-coords
     (setq sensor63
       (make-cascoords
	:coords (send (send blink23 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
        :name "torso-force-sensor(list)"))
     (send blink23 :assoc sensor63)

     ;; definition of head force-sensor-coords
     (setq sensor64
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 35.0 -17.85 10.0) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor64)

     ;; definition of head force-sensor-coords
     (setq sensor65
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 55.0 -17.85 28.2) :rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor65)

     ;; definition of head force-sensor-coords
     (setq sensor66
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 52.5 -50.35 34.0381) :rot #2f((-0.5 0.707107 0.5) (0.5 0.707107 -0.5) (-0.707107 5.551115e-17 -0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor66)

     ;; definition of head force-sensor-coords
     (setq sensor67
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 -63.8119 34.0381) :rot #2f((1.318390e-15 1.0 -1.332268e-15) (0.707107 -1.790235e-15 -0.707107) (-0.707107 0.0 -0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor67)

     ;; definition of head force-sensor-coords
     (setq sensor68
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -12.5 -50.35 34.0381) :rot #2f((0.5 0.707107 -0.5) (0.5 -0.707107 -0.5) (-0.707107 0.0 -0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor68)

     ;; definition of head force-sensor-coords
     (setq sensor69
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.9619 -17.85 34.0381) :rot #2f((0.707107 -1.224647e-16 -0.707107) (-8.659561e-17 -1.0 8.659561e-17) (-0.707107 0.0 -0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor69)

     ;; definition of head force-sensor-coords
     (setq sensor70
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -12.5 14.65 34.0381) :rot #2f((0.5 -0.707107 -0.5) (-0.5 -0.707107 0.5) (-0.707107 1.110223e-16 -0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor70)

     ;; definition of head force-sensor-coords
     (setq sensor71
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 28.1119 34.0381) :rot #2f((-1.942890e-16 -1.0 5.551115e-17) (-0.707107 1.387779e-16 0.707107) (-0.707107 5.551115e-17 -0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor71)

     ;; definition of head force-sensor-coords
     (setq sensor72
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 52.5 14.65 34.0381) :rot #2f((-0.5 -0.707107 0.5) (-0.5 0.707107 0.5) (-0.707107 0.0 -0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor72)

     ;; definition of head force-sensor-coords
     (setq sensor73
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 -82.85 80.0) :rot #2f((0.0 1.0 -1.998401e-15) (-2.220446e-16 -1.998401e-15 -1.0) (-1.0 0.0 2.220446e-16))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor73)

     ;; definition of head force-sensor-coords
     (setq sensor74
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.9619 -63.8119 80.0) :rot #2f((5.551115e-17 0.707107 -0.707107) (0.0 -0.707107 -0.707107) (-1.0 0.0 5.551115e-17))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor74)

     ;; definition of head force-sensor-coords
     (setq sensor75
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -45.0 -17.85 80.0) :rot #2f((2.220446e-16 -1.224647e-16 -1.0) (-1.232595e-32 -1.0 1.224647e-16) (-1.0 -1.232595e-32 -2.220446e-16))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor75)

     ;; definition of head force-sensor-coords
     (setq sensor76
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.9619 28.1119 80.0) :rot #2f((2.220446e-16 -0.707107 -0.707107) (-5.551115e-17 -0.707107 0.707107) (-1.0 -5.551115e-17 -1.110223e-16))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor76)

     ;; definition of head force-sensor-coords
     (setq sensor77
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 47.15 80.0) :rot #2f((2.151057e-16 -0.594481 0.80411) (5.551115e-17 0.80411 0.594481) (-1.0 -5.551115e-17 1.734723e-16))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor77)

     ;; definition of head force-sensor-coords
     (setq sensor78
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 52.5 -50.35 125.962) :rot #2f((0.5 0.707107 0.5) (-0.5 0.707107 -0.5) (-0.707107 -1.110223e-16 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor78)

     ;; definition of head force-sensor-coords
     (setq sensor79
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 -63.8119 125.962) :rot #2f((-1.609823e-15 1.0 -1.443290e-15) (-0.707107 -2.164935e-15 -0.707107) (-0.707107 -1.110223e-16 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor79)

     ;; definition of head force-sensor-coords
     (setq sensor80
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -12.5 -50.35 125.962) :rot #2f((-0.5 0.707107 -0.5) (-0.5 -0.707107 -0.5) (-0.707107 0.0 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor80)

     ;; definition of head force-sensor-coords
     (setq sensor81
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.9619 -17.85 125.962) :rot #2f((-0.707107 -1.224647e-16 -0.707107) (8.659561e-17 -1.0 8.659561e-17) (-0.707107 0.0 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor81)

     ;; definition of head force-sensor-coords
     (setq sensor82
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -12.5 14.65 125.962) :rot #2f((-0.5 -0.707107 -0.5) (0.5 -0.707107 0.5) (-0.707107 0.0 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor82)

     ;; definition of head force-sensor-coords
     (setq sensor83
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 28.1119 125.962) :rot #2f((2.220446e-16 -1.0 5.551115e-17) (0.707107 1.110223e-16 0.707107) (-0.707107 -5.551115e-17 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor83)

     ;; definition of head force-sensor-coords
     (setq sensor84
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 52.5 14.65 125.962) :rot #2f((0.5 -0.707107 0.5) (0.5 0.707107 0.5) (-0.707107 0.0 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor84)

     ;; definition of head force-sensor-coords
     (setq sensor85
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 65.9619 -17.85 125.962) :rot #2f((0.707107 0.0 0.707107) (0.0 1.0 0.0) (-0.707107 0.0 0.707107))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor85)

     ;; definition of head force-sensor-coords
     (setq sensor86
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 -17.85 145.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor86)

     ;; definition of head force-sensor-coords
     (setq sensor87
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 32.15 125.0) :rot #2f((1.0 0.0 0.0) (0.0 0.866025 0.5) (0.0 -0.5 0.866025))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor87)

     ;; definition of head force-sensor-coords
     (setq sensor88
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -67.85 125.0) :rot #2f((1.0 0.0 0.0) (0.0 0.866025 -0.5) (0.0 0.5 0.866025))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor88)

     ;; definition of head force-sensor-coords
     (setq sensor89
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 80.0 -17.85 120.0) :rot #2f((0.866025 0.0 0.5) (0.0 1.0 0.0) (-0.5 0.0 0.866025))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor89)

     ;; definition of head force-sensor-coords
     (setq sensor90
       (make-cascoords
	:coords (send (send blink25 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -17.85 120.0) :rot #2f((0.866025 0.0 -0.5) (0.0 1.0 0.0) (0.5 0.0 0.866025))))
        :name "head-force-sensor(list)"))
     (send blink25 :assoc sensor90)

     ;; definition of rarm force-sensor-coords
     (setq sensor91
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 15.0 -90.0) :rot #2f((1.0 0.0 0.0) (0.0 0.0 1.0) (0.0 -1.0 0.0))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor91)

     ;; definition of rarm force-sensor-coords
     (setq sensor92
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 -20.0 -60.0) :rot #2f((2.220446e-16 -1.962616e-17 1.0) (1.962616e-17 1.0 1.962616e-17) (-1.0 1.962616e-17 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor92)

     ;; definition of rarm force-sensor-coords
     (setq sensor93
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -20.0 -30.0) :rot #2f((2.220446e-16 1.962616e-17 -1.0) (-1.962616e-17 1.0 1.962616e-17) (1.0 1.962616e-17 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor93)

     ;; definition of rarm force-sensor-coords
     (setq sensor94
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 -20.0 -30.0) :rot #2f((2.220446e-16 -1.962616e-17 1.0) (1.962616e-17 1.0 1.962616e-17) (-1.0 1.962616e-17 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor94)

     ;; definition of rarm force-sensor-coords
     (setq sensor95
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -40.0 -60.0) :rot #2f((1.0 0.0 0.0) (0.0 -3.330669e-16 -1.0) (0.0 1.0 -3.330669e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor95)

     ;; definition of rarm force-sensor-coords
     (setq sensor96
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 15.0 -60.0) :rot #2f((1.0 0.0 0.0) (0.0 0.0 1.0) (0.0 -1.0 0.0))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor96)

     ;; definition of rarm shock-sensor-coords
     (setq sensor97
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -35.0 -40.0 -30.0) :rot #2f((1.665335e-16 -0.5 0.866025) (-5.551115e-17 0.866025 0.5) (-1.0 -1.665335e-16 5.551115e-17))))
        :name "rarm-shock-sensor(list)"))
     (send blink19 :assoc sensor97)

     ;; definition of rarm shock-sensor-coords
     (setq sensor98
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 28.0 -40.0 -30.0) :rot #2f((1.526557e-16 0.5 0.866025) (0.0 0.866025 -0.5) (-1.0 8.326673e-17 1.249001e-16))))
        :name "rarm-shock-sensor(list)"))
     (send blink19 :assoc sensor98)

     ;; definition of rarm shock-sensor-coords
     (setq sensor99
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -52.0 -80.0) :rot #2f((0.0 1.0 0.0) (1.110223e-16 0.0 -1.0) (-1.0 0.0 -1.110223e-16))))
        :name "rarm-shock-sensor(list)"))
     (send blink19 :assoc sensor99)

     ;; definition of rarm shock-sensor-coords
     (setq sensor100
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -52.0 0.0) :rot #2f((0.0 1.0 0.0) (1.110223e-16 0.0 -1.0) (-1.0 0.0 -1.110223e-16))))
        :name "rarm-shock-sensor(list)"))
     (send blink19 :assoc sensor100)

     ;; definition of rarm force-sensor-coords
     (setq sensor101
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 -20.0 -50.0) :rot #2f((2.220446e-16 1.962616e-17 -1.0) (-1.962616e-17 1.0 1.962616e-17) (1.0 1.962616e-17 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor101)

     ;; definition of rarm force-sensor-coords
     (setq sensor102
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 15.0 -50.0) :rot #2f((1.0 0.0 0.0) (0.0 0.0 1.0) (0.0 -1.0 0.0))))
        :name "rarm-force-sensor(list)"))
     (send blink19 :assoc sensor102)

     ;; definition of rarm force-sensor-coords
     (setq sensor103
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -30.0 -15.0 -60.0) :rot #2f((2.220446e-16 -7.359808e-17 -1.0) (7.359808e-17 1.0 -7.359808e-17) (1.0 -7.359808e-17 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink17 :assoc sensor103)

     ;; definition of rarm force-sensor-coords
     (setq sensor104
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 -15.0 -60.0) :rot #2f((-1.925930e-34 -3.434577e-17 1.0) (4.906539e-18 1.0 3.434577e-17) (-1.0 4.906539e-18 1.925930e-34))))
        :name "rarm-force-sensor(list)"))
     (send blink17 :assoc sensor104)

     ;; definition of rarm force-sensor-coords
     (setq sensor105
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -40.0 -80.0) :rot #2f((1.0 0.0 1.962616e-17) (1.962616e-17 0.0 -1.0) (0.0 1.0 0.0))))
        :name "rarm-force-sensor(list)"))
     (send blink17 :assoc sensor105)

     ;; definition of rarm force-sensor-coords
     (setq sensor106
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 15.0 -40.0) :rot #2f((1.0 1.962616e-17 -1.962616e-17) (1.962616e-17 2.220446e-16 1.0) (1.962616e-17 -1.0 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink17 :assoc sensor106)

     ;; definition of rarm shock-sensor-coords
     (setq sensor107
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 10.0 -40.0) :rot #2f((0.866025 8.326673e-17 0.5) (0.5 3.191891e-16 -0.866025) (-2.220446e-16 1.0 2.359224e-16))))
        :name "rarm-shock-sensor(list)"))
     (send blink17 :assoc sensor107)

     ;; definition of rarm shock-sensor-coords
     (setq sensor108
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 10.0 -40.0) :rot #2f((0.866025 5.551115e-17 -0.5) (-0.5 2.844947e-16 -0.866025) (1.110223e-16 1.0 2.706169e-16))))
        :name "rarm-shock-sensor(list)"))
     (send blink17 :assoc sensor108)

     ;; definition of rarm shock-sensor-coords
     (setq sensor109
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 5.684342e-14 15.0 -90.0) :rot #2f((1.0 0.0 1.962616e-17) (1.962616e-17 0.0 -1.0) (0.0 1.0 0.0))))
        :name "rarm-shock-sensor(list)"))
     (send blink17 :assoc sensor109)

     ;; definition of rarm shock-sensor-coords
     (setq sensor110
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 5.684342e-14 -45.0 -55.0) :rot #2f((1.0 0.0 1.962616e-17) (1.962616e-17 0.0 -1.0) (0.0 1.0 0.0))))
        :name "rarm-shock-sensor(list)"))
     (send blink17 :assoc sensor110)

     ;; definition of rarm shock-sensor-coords
     (setq sensor111
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 -43.0 -105.0) :rot #2f((0.866025 2.498002e-16 0.5) (-0.433013 0.5 0.75) (-0.25 -0.866025 0.433013))))
        :name "rarm-shock-sensor(list)"))
     (send blink17 :assoc sensor111)

     ;; definition of rarm shock-sensor-coords
     (setq sensor112
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 23.0 -43.0 -105.0) :rot #2f((0.866025 1.387779e-16 -0.5) (0.433013 0.5 0.75) (0.25 -0.866025 0.433013))))
        :name "rarm-shock-sensor(list)"))
     (send blink17 :assoc sensor112)

     ;; definition of rarm force-sensor-coords
     (setq sensor113
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 -20.0 -20.0) :rot #2f((2.220446e-16 -7.359808e-17 -1.0) (7.359808e-17 1.0 -7.359808e-17) (1.0 -7.359808e-17 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink17 :assoc sensor113)

     ;; definition of rarm force-sensor-coords
     (setq sensor114
       (make-cascoords
	:coords (send (send blink17 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 5.684342e-14 10.0 -20.0) :rot #2f((1.0 1.962616e-17 -1.962616e-17) (1.962616e-17 2.220446e-16 1.0) (1.962616e-17 -1.0 2.220446e-16))))
        :name "rarm-force-sensor(list)"))
     (send blink17 :assoc sensor114)

     ;; definition of larm force-sensor-coords
     (setq sensor115
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -15.0 -90.0) :rot #2f((1.0 0.0 0.0) (0.0 -3.330669e-16 1.0) (0.0 -1.0 -3.330669e-16))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor115)

     ;; definition of larm force-sensor-coords
     (setq sensor116
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 20.0 -60.0) :rot #2f((2.220446e-16 1.962616e-17 1.0) (-1.962616e-17 1.0 -1.962616e-17) (-1.0 -1.962616e-17 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor116)

     ;; definition of larm force-sensor-coords
     (setq sensor117
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 20.0 -30.0) :rot #2f((2.220446e-16 -1.962616e-17 -1.0) (1.962616e-17 1.0 -1.962616e-17) (1.0 -1.962616e-17 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor117)

     ;; definition of larm force-sensor-coords
     (setq sensor118
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 20.0 -30.0) :rot #2f((2.220446e-16 1.962616e-17 1.0) (-1.962616e-17 1.0 -1.962616e-17) (-1.0 -1.962616e-17 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor118)

     ;; definition of larm force-sensor-coords
     (setq sensor119
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 40.0 -60.0) :rot #2f((1.0 0.0 0.0) (0.0 -3.330669e-16 1.0) (0.0 -1.0 -3.330669e-16))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor119)

     ;; definition of larm force-sensor-coords
     (setq sensor120
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -15.0 -60.0) :rot #2f((1.0 0.0 0.0) (0.0 0.0 -1.0) (0.0 1.0 0.0))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor120)

     ;; definition of larm shock-sensor-coords
     (setq sensor121
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -35.0 40.0 -30.0) :rot #2f((1.665335e-16 0.5 0.866025) (5.551115e-17 0.866025 -0.5) (-1.0 1.665335e-16 5.551115e-17))))
        :name "larm-shock-sensor(list)"))
     (send blink9 :assoc sensor121)

     ;; definition of larm shock-sensor-coords
     (setq sensor122
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 28.0 40.0 -30.0) :rot #2f((1.526557e-16 -0.5 0.866025) (0.0 0.866025 0.5) (-1.0 -8.326673e-17 1.249001e-16))))
        :name "larm-shock-sensor(list)"))
     (send blink9 :assoc sensor122)

     ;; definition of larm shock-sensor-coords
     (setq sensor123
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 52.0 -80.0) :rot #2f((0.0 -1.0 0.0) (-1.110223e-16 0.0 1.0) (-1.0 0.0 -1.110223e-16))))
        :name "larm-shock-sensor(list)"))
     (send blink9 :assoc sensor123)

     ;; definition of larm shock-sensor-coords
     (setq sensor124
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 52.0 0.0) :rot #2f((0.0 -1.0 0.0) (-1.110223e-16 0.0 1.0) (-1.0 0.0 -1.110223e-16))))
        :name "larm-shock-sensor(list)"))
     (send blink9 :assoc sensor124)

     ;; definition of larm force-sensor-coords
     (setq sensor125
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 20.0 -50.0) :rot #2f((2.220446e-16 -1.962616e-17 -1.0) (1.962616e-17 1.0 -1.962616e-17) (1.0 -1.962616e-17 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor125)

     ;; definition of larm force-sensor-coords
     (setq sensor126
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -15.0 -50.0) :rot #2f((1.0 0.0 0.0) (0.0 0.0 -1.0) (0.0 1.0 0.0))))
        :name "larm-force-sensor(list)"))
     (send blink9 :assoc sensor126)

     ;; definition of larm force-sensor-coords
     (setq sensor127
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -30.0 15.0 -60.0) :rot #2f((2.220446e-16 7.359808e-17 -1.0) (-7.359808e-17 1.0 7.359808e-17) (1.0 7.359808e-17 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink7 :assoc sensor127)

     ;; definition of larm force-sensor-coords
     (setq sensor128
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 15.0 -60.0) :rot #2f((-1.925930e-34 3.434577e-17 1.0) (-4.906539e-18 1.0 -3.434577e-17) (-1.0 -4.906539e-18 1.925930e-34))))
        :name "larm-force-sensor(list)"))
     (send blink7 :assoc sensor128)

     ;; definition of larm force-sensor-coords
     (setq sensor129
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 40.0 -80.0) :rot #2f((1.0 0.0 1.962616e-17) (-1.962616e-17 0.0 1.0) (0.0 -1.0 0.0))))
        :name "larm-force-sensor(list)"))
     (send blink7 :assoc sensor129)

     ;; definition of larm force-sensor-coords
     (setq sensor130
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -15.0 -40.0) :rot #2f((1.0 -1.962616e-17 -1.962616e-17) (-1.962616e-17 2.220446e-16 -1.0) (1.962616e-17 1.0 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink7 :assoc sensor130)

     ;; definition of larm shock-sensor-coords
     (setq sensor131
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -10.0 -40.0) :rot #2f((0.866025 5.551115e-17 -0.5) (-0.5 1.110223e-16 -0.866025) (5.551115e-17 1.0 1.110223e-16))))
        :name "larm-shock-sensor(list)"))
     (send blink7 :assoc sensor131)

     ;; definition of larm shock-sensor-coords
     (setq sensor132
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 20.0 -10.0 -40.0) :rot #2f((0.866025 1.387779e-16 0.5) (0.5 3.330669e-16 -0.866025) (-2.775558e-16 1.0 2.220446e-16))))
        :name "larm-shock-sensor(list)"))
     (send blink7 :assoc sensor132)

     ;; definition of larm shock-sensor-coords
     (setq sensor133
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 5.684342e-14 -15.0 -90.0) :rot #2f((1.0 0.0 1.962616e-17) (-1.962616e-17 0.0 1.0) (0.0 -1.0 0.0))))
        :name "larm-shock-sensor(list)"))
     (send blink7 :assoc sensor133)

     ;; definition of larm shock-sensor-coords
     (setq sensor134
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 5.684342e-14 45.0 -55.0) :rot #2f((1.0 -1.962616e-17 -1.962616e-17) (-1.962616e-17 2.220446e-16 -1.0) (1.962616e-17 1.0 2.220446e-16))))
        :name "larm-shock-sensor(list)"))
     (send blink7 :assoc sensor134)

     ;; definition of larm shock-sensor-coords
     (setq sensor135
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 43.0 -105.0) :rot #2f((0.866025 -2.498002e-16 0.5) (0.433013 0.5 -0.75) (-0.25 0.866025 0.433013))))
        :name "larm-shock-sensor(list)"))
     (send blink7 :assoc sensor135)

     ;; definition of larm shock-sensor-coords
     (setq sensor136
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 23.0 43.0 -105.0) :rot #2f((0.866025 -1.387779e-16 -0.5) (-0.433013 0.5 -0.75) (0.25 0.866025 0.433013))))
        :name "larm-shock-sensor(list)"))
     (send blink7 :assoc sensor136)

     ;; definition of larm force-sensor-coords
     (setq sensor137
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 5.684342e-14 -10.0 -20.0) :rot #2f((1.0 -1.962616e-17 -1.962616e-17) (-1.962616e-17 2.220446e-16 -1.0) (1.962616e-17 1.0 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink7 :assoc sensor137)

     ;; definition of larm force-sensor-coords
     (setq sensor138
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 20.0 -20.0) :rot #2f((2.220446e-16 7.359808e-17 -1.0) (-7.359808e-17 1.0 7.359808e-17) (1.0 7.359808e-17 2.220446e-16))))
        :name "larm-force-sensor(list)"))
     (send blink7 :assoc sensor138)

     ;; definition of lleg force-sensor-coords
     (setq sensor139
       (make-cascoords
	:coords (send (send blink4 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 20.0 -50.0) :rot #2f((-4.701977e-38 2.453269e-18 1.0) (1.839952e-18 1.0 -2.453269e-18) (-1.0 1.839952e-18 4.701977e-38))))
        :name "lleg-force-sensor(list)"))
     (send blink4 :assoc sensor139)

     ;; definition of lleg force-sensor-coords
     (setq sensor140
       (make-cascoords
	:coords (send (send blink4 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 -20.0 -60.0) :rot #2f((1.0 -2.146611e-17 -6.746491e-18) (-6.746491e-18 7.241045e-35 -1.0) (2.146611e-17 1.0 -7.241045e-35))))
        :name "lleg-force-sensor(list)"))
     (send blink4 :assoc sensor140)

     ;; definition of lleg force-sensor-coords
     (setq sensor141
       (make-cascoords
	:coords (send (send blink3 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 0.0 -70.0) :rot #2f((-2.220446e-16 -1.839952e-18 -1.0) (-4.293222e-18 1.0 -1.839952e-18) (1.0 4.293222e-18 -2.220446e-16))))
        :name "lleg-force-sensor(list)"))
     (send blink3 :assoc sensor141)

     ;; definition of lleg force-sensor-coords
     (setq sensor142
       (make-cascoords
	:coords (send (send blink3 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 7.105427e-15 -40.0 -70.0) :rot #2f((1.0 1.238901e-16 -1.226635e-17) (-1.226635e-17 -7.598395e-34 -1.0) (-1.238901e-16 1.0 7.598395e-34))))
        :name "lleg-force-sensor(list)"))
     (send blink3 :assoc sensor142)

     ;; definition of rleg force-sensor-coords
     (setq sensor143
       (make-cascoords
	:coords (send (send blink14 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 30.0 -20.0 -50.0) :rot #2f((-4.701977e-38 -2.453269e-18 1.0) (-1.839952e-18 1.0 2.453269e-18) (-1.0 -1.839952e-18 4.701977e-38))))
        :name "rleg-force-sensor(list)"))
     (send blink14 :assoc sensor143)

     ;; definition of rleg force-sensor-coords
     (setq sensor144
       (make-cascoords
	:coords (send (send blink14 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 20.0 -60.0) :rot #2f((1.0 2.146611e-17 -6.746491e-18) (6.746491e-18 7.241045e-35 1.0) (2.146611e-17 -1.0 -7.241045e-35))))
        :name "rleg-force-sensor(list)"))
     (send blink14 :assoc sensor144)

     ;; definition of rleg force-sensor-coords
     (setq sensor145
       (make-cascoords
	:coords (send (send blink13 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 7.105427e-15 40.0 -70.0) :rot #2f((1.0 -1.238901e-16 -1.226635e-17) (1.226635e-17 -7.598395e-34 1.0) (-1.238901e-16 -1.0 7.598395e-34))))
        :name "rleg-force-sensor(list)"))
     (send blink13 :assoc sensor145)

     ;; definition of rleg force-sensor-coords
     (setq sensor146
       (make-cascoords
	:coords (send (send blink13 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -40.0 0.0 -70.0) :rot #2f((-2.220446e-16 1.839952e-18 -1.0) (4.293222e-18 1.0 1.839952e-18) (1.0 -4.293222e-18 -2.220446e-16))))
        :name "rleg-force-sensor(list)"))
     (send blink13 :assoc sensor146)

     (setq force-sensors (list sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor26 sensor27 sensor28 sensor29 sensor30 sensor31 sensor32 sensor33 sensor34 sensor35 sensor36 sensor37 sensor38 sensor39 sensor40 sensor41 sensor42 sensor43 sensor44 sensor45 sensor46 sensor47 sensor48 sensor49 sensor60 sensor61 sensor62 sensor63 sensor64 sensor65 sensor66 sensor67 sensor68 sensor69 sensor70 sensor71 sensor72 sensor73 sensor74 sensor75 sensor76 sensor77 sensor78 sensor79 sensor80 sensor81 sensor82 sensor83 sensor84 sensor85 sensor86 sensor87 sensor88 sensor89 sensor90 sensor91 sensor92 sensor93 sensor94 sensor95 sensor96 sensor101 sensor102 sensor103 sensor104 sensor105 sensor106 sensor113 sensor114 sensor115 sensor116 sensor117 sensor118 sensor119 sensor120 sensor125 sensor126 sensor127 sensor128 sensor129 sensor130 sensor137 sensor138 sensor139 sensor140 sensor141 sensor142 sensor143 sensor144 sensor145 sensor146))
     (setq sensors (list sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor10 sensor11 sensor12 sensor13 sensor14 sensor15 sensor16 sensor17 sensor18 sensor19 sensor20 sensor21 sensor22 sensor23 sensor24 sensor25 sensor26 sensor27 sensor28 sensor29 sensor30 sensor31 sensor32 sensor33 sensor34 sensor35 sensor36 sensor37 sensor38 sensor39 sensor40 sensor41 sensor42 sensor43 sensor44 sensor45 sensor46 sensor47 sensor48 sensor49 sensor50 sensor51 sensor52 sensor53 sensor54 sensor55 sensor56 sensor57 sensor58 sensor59 sensor60 sensor61 sensor62 sensor63 sensor64 sensor65 sensor66 sensor67 sensor68 sensor69 sensor70 sensor71 sensor72 sensor73 sensor74 sensor75 sensor76 sensor77 sensor78 sensor79 sensor80 sensor81 sensor82 sensor83 sensor84 sensor85 sensor86 sensor87 sensor88 sensor89 sensor90 sensor91 sensor92 sensor93 sensor94 sensor95 sensor96 sensor97 sensor98 sensor99 sensor100 sensor101 sensor102 sensor103 sensor104 sensor105 sensor106 sensor107 sensor108 sensor109 sensor110 sensor111 sensor112 sensor113 sensor114 sensor115 sensor116 sensor117 sensor118 sensor119 sensor120 sensor121 sensor122 sensor123 sensor124 sensor125 sensor126 sensor127 sensor128 sensor129 sensor130 sensor131 sensor132 sensor133 sensor134 sensor135 sensor136 sensor137 sensor138 sensor139 sensor140 sensor141 sensor142 sensor143 sensor144 sensor145 sensor146))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:reset-pose () (send self :angle-vector (float-vector -2.0 -35.0 45.0 -15.0 2.0 0.0 -50.0 0.0 0.0 20.0 -2.0 -35.0 45.0 -15.0 2.0 0.0 -50.0 0.0 0.0 20.0 0.0 0.0 0.0 0.0 0.0)))
  (:torso-waist-y (&rest args) (forward-message-to joint20 args))
  (:torso-waist-r (&rest args) (forward-message-to joint21 args))
  (:torso-waist-p (&rest args) (forward-message-to joint22 args))
  (:head-neck-y (&rest args) (forward-message-to joint23 args))
  (:head-neck-p (&rest args) (forward-message-to joint24 args))
  (:rarm-shoulder-r (&rest args) (forward-message-to joint19 args))
  (:rarm-shoulder-p (&rest args) (forward-message-to joint18 args))
  (:rarm-shoulder-y (&rest args) (forward-message-to joint17 args))
  (:rarm-elbow-p (&rest args) (forward-message-to joint16 args))
  (:larm-shoulder-r (&rest args) (forward-message-to joint9 args))
  (:larm-shoulder-p (&rest args) (forward-message-to joint8 args))
  (:larm-shoulder-y (&rest args) (forward-message-to joint7 args))
  (:larm-elbow-p (&rest args) (forward-message-to joint6 args))
  (:lleg-crotch-y (&rest args) (forward-message-to joint5 args))
  (:lleg-crotch-r (&rest args) (forward-message-to joint4 args))
  (:lleg-crotch-p (&rest args) (forward-message-to joint3 args))
  (:lleg-knee-p (&rest args) (forward-message-to joint2 args))
  (:lleg-ankle-p (&rest args) (forward-message-to joint1 args))
  (:lleg-ankle-r (&rest args) (forward-message-to joint0 args))
  (:rleg-crotch-y (&rest args) (forward-message-to joint15 args))
  (:rleg-crotch-r (&rest args) (forward-message-to joint14 args))
  (:rleg-crotch-p (&rest args) (forward-message-to joint13 args))
  (:rleg-knee-p (&rest args) (forward-message-to joint12 args))
  (:rleg-ankle-p (&rest args) (forward-message-to joint11 args))
  (:rleg-ankle-r (&rest args) (forward-message-to joint10 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun macket (&rest args) (instance* macket-robot :init args))
;; (format *error-output* "(instance macket-robot :init) for generating model~%")
