;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass ape3-robot
  :super robot-model
  :slots (sensors
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 ))
(defmethod ape3-robot
  (:init
   (&rest args &key (name "ape3") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -15.0 60.0) (float-vector 10.0 -15.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector 10.0 -70.0 60.0) (float-vector 10.0 -69.0 60.0) (float-vector 10.0 -69.0 89.0) (float-vector 10.0 -16.0 89.0) (float-vector 10.0 -16.0 60.0)))
         (instance face :init :vertices (list (float-vector -10.0 -15.0 90.0) (float-vector -10.0 -70.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector 10.0 -15.0 90.0)))
         (instance face :init :vertices (list (float-vector -10.0 -15.0 60.0) (float-vector -10.0 -16.0 60.0) (float-vector -10.0 -16.0 89.0) (float-vector -10.0 -69.0 89.0) (float-vector -10.0 -69.0 60.0) (float-vector -10.0 -70.0 60.0) (float-vector -10.0 -70.0 90.0) (float-vector -10.0 -15.0 90.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -70.0 52.9289) (float-vector -10.0 -70.0 60.0) (float-vector -10.0 -69.0 60.0) (float-vector -7.07107 -69.0 52.9289)))
         (instance face :init :vertices (list (float-vector -7.07107 -15.0 52.9289) (float-vector -7.07107 -16.0 52.9289) (float-vector -10.0 -16.0 60.0) (float-vector -10.0 -15.0 60.0)))
         (instance face :init :vertices (list (float-vector 1.081073e-14 -70.0 50.0) (float-vector -7.07107 -70.0 52.9289) (float-vector -7.07107 -69.0 52.9289) (float-vector 1.073222e-14 -69.0 50.0)))
         (instance face :init :vertices (list (float-vector 6.492972e-15 -15.0 50.0) (float-vector 6.571477e-15 -16.0 50.0) (float-vector -7.07107 -16.0 52.9289) (float-vector -7.07107 -15.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07107 -70.0 52.9289) (float-vector 1.081073e-14 -70.0 50.0) (float-vector 1.073222e-14 -69.0 50.0) (float-vector 7.07107 -69.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07107 -15.0 52.9289) (float-vector 7.07107 -16.0 52.9289) (float-vector 6.571477e-15 -16.0 50.0) (float-vector 6.492972e-15 -15.0 50.0)))
         (instance face :init :vertices (list (float-vector 10.0 -70.0 60.0) (float-vector 10.0 -70.0 90.0) (float-vector -10.0 -70.0 90.0) (float-vector -10.0 -70.0 60.0) (float-vector -7.07107 -70.0 52.9289) (float-vector 1.081073e-14 -70.0 50.0) (float-vector 7.07107 -70.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07107 -15.0 52.9289) (float-vector 6.492972e-15 -15.0 50.0) (float-vector -7.07107 -15.0 52.9289) (float-vector -10.0 -15.0 60.0) (float-vector -10.0 -15.0 90.0) (float-vector 10.0 -15.0 90.0) (float-vector 10.0 -15.0 60.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -70.0 52.9289) (float-vector 7.07107 -69.0 52.9289) (float-vector 10.0 -69.0 60.0) (float-vector 10.0 -70.0 60.0)))
         (instance face :init :vertices (list (float-vector 10.0 -15.0 60.0) (float-vector 10.0 -16.0 60.0) (float-vector 7.07107 -16.0 52.9289) (float-vector 7.07107 -15.0 52.9289)))
         (instance face :init :vertices (list (float-vector 10.0 -69.0 89.0) (float-vector 10.0 -69.0 60.0) (float-vector 7.07107 -69.0 52.9289) (float-vector 1.073222e-14 -69.0 50.0) (float-vector -7.07107 -69.0 52.9289) (float-vector -10.0 -69.0 60.0) (float-vector -10.0 -69.0 89.0)))
         (instance face :init :vertices (list (float-vector 10.0 -16.0 89.0) (float-vector 10.0 -69.0 89.0) (float-vector -10.0 -69.0 89.0) (float-vector -10.0 -16.0 89.0)))
         (instance face :init :vertices (list (float-vector -10.0 -16.0 89.0) (float-vector -10.0 -16.0 60.0) (float-vector -7.07107 -16.0 52.9289) (float-vector 6.571477e-15 -16.0 50.0) (float-vector 7.07107 -16.0 52.9289) (float-vector 10.0 -16.0 60.0) (float-vector 10.0 -16.0 89.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -67.0 185.15) (float-vector 11.5 -67.0 142.85) (float-vector 11.5 -22.0 142.85) (float-vector 11.5 -22.0 185.15)))
         (instance face :init :vertices (list (float-vector 11.5 -22.0 142.85) (float-vector -11.5 -22.0 142.85) (float-vector -11.5 -22.0 185.15) (float-vector 11.5 -22.0 185.15)))
         (instance face :init :vertices (list (float-vector -11.5 -22.0 142.85) (float-vector -11.5 -67.0 142.85) (float-vector -11.5 -67.0 185.15) (float-vector -11.5 -22.0 185.15)))
         (instance face :init :vertices (list (float-vector -11.5 -67.0 185.15) (float-vector 11.5 -67.0 185.15) (float-vector 11.5 -22.0 185.15) (float-vector -11.5 -22.0 185.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -60.25 185.15) (float-vector 5.25 -64.0933 185.15) (float-vector -5.551115e-15 -65.5 185.15) (float-vector -5.25 -64.0933 185.15) (float-vector -9.09327 -60.25 185.15) (float-vector -10.5 -55.0 185.15) (float-vector -9.09327 -49.75 185.15) (float-vector -5.25 -45.9067 185.15) (float-vector 1.842970e-14 -44.5 185.15) (float-vector 5.25 -45.9067 185.15) (float-vector 9.09327 -49.75 185.15) (float-vector 10.5 -55.0 185.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -67.0 142.85) (float-vector 11.5 -67.0 142.85) (float-vector 11.5 -67.0 185.15) (float-vector -11.5 -67.0 185.15)))
         (instance face :init :vertices (list (float-vector 11.5 -67.0 142.85) (float-vector -11.5 -67.0 142.85) (float-vector -11.5 -22.0 142.85) (float-vector 11.5 -22.0 142.85))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -64.0933 142.85) (float-vector 9.09327 -60.25 142.85) (float-vector 10.5 -55.0 142.85) (float-vector 9.09327 -49.75 142.85) (float-vector 5.25 -45.9067 142.85) (float-vector 1.842970e-14 -44.5 142.85) (float-vector -5.25 -45.9067 142.85) (float-vector -9.09327 -49.75 142.85) (float-vector -10.5 -55.0 142.85) (float-vector -9.09327 -60.25 142.85) (float-vector -5.25 -64.0933 142.85) (float-vector -5.551115e-15 -65.5 142.85)))
))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 187.15) (float-vector 10.5 -55.0 185.15) (float-vector 9.09327 -49.75 185.15) (float-vector 9.09327 -49.75 187.15)))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 142.85) (float-vector 10.5 -55.0 140.85) (float-vector 9.09327 -49.75 140.85) (float-vector 9.09327 -49.75 142.85)))
         (instance face :init :vertices (list (float-vector 5.25 -45.9067 185.15) (float-vector 5.25 -45.9067 187.15) (float-vector 9.09327 -49.75 187.15) (float-vector 9.09327 -49.75 185.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -49.75 140.85) (float-vector 5.25 -45.9067 140.85) (float-vector 5.25 -45.9067 142.85) (float-vector 9.09327 -49.75 142.85)))
         (instance face :init :vertices (list (float-vector 1.842970e-14 -44.5 185.15) (float-vector 1.842970e-14 -44.5 187.15) (float-vector 5.25 -45.9067 187.15) (float-vector 5.25 -45.9067 185.15)))
         (instance face :init :vertices (list (float-vector 5.25 -45.9067 140.85) (float-vector 1.842970e-14 -44.5 140.85) (float-vector 1.842970e-14 -44.5 142.85) (float-vector 5.25 -45.9067 142.85)))
         (instance face :init :vertices (list (float-vector -5.25 -45.9067 185.15) (float-vector -5.25 -45.9067 187.15) (float-vector 1.842970e-14 -44.5 187.15) (float-vector 1.842970e-14 -44.5 185.15)))
         (instance face :init :vertices (list (float-vector 1.842970e-14 -44.5 140.85) (float-vector -5.25 -45.9067 140.85) (float-vector -5.25 -45.9067 142.85) (float-vector 1.842970e-14 -44.5 142.85)))
         (instance face :init :vertices (list (float-vector -9.09327 -49.75 185.15) (float-vector -9.09327 -49.75 187.15) (float-vector -5.25 -45.9067 187.15) (float-vector -5.25 -45.9067 185.15)))
         (instance face :init :vertices (list (float-vector -5.25 -45.9067 140.85) (float-vector -9.09327 -49.75 140.85) (float-vector -9.09327 -49.75 142.85) (float-vector -5.25 -45.9067 142.85)))
         (instance face :init :vertices (list (float-vector -10.5 -55.0 185.15) (float-vector -10.5 -55.0 187.15) (float-vector -9.09327 -49.75 187.15) (float-vector -9.09327 -49.75 185.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -49.75 140.85) (float-vector -10.5 -55.0 140.85) (float-vector -10.5 -55.0 142.85) (float-vector -9.09327 -49.75 142.85)))
         (instance face :init :vertices (list (float-vector -9.09327 -60.25 185.15) (float-vector -9.09327 -60.25 187.15) (float-vector -10.5 -55.0 187.15) (float-vector -10.5 -55.0 185.15)))
         (instance face :init :vertices (list (float-vector -10.5 -55.0 140.85) (float-vector -9.09327 -60.25 140.85) (float-vector -9.09327 -60.25 142.85) (float-vector -10.5 -55.0 142.85)))
         (instance face :init :vertices (list (float-vector -5.25 -64.0933 185.15) (float-vector -5.25 -64.0933 187.15) (float-vector -9.09327 -60.25 187.15) (float-vector -9.09327 -60.25 185.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -60.25 140.85) (float-vector -5.25 -64.0933 140.85) (float-vector -5.25 -64.0933 142.85) (float-vector -9.09327 -60.25 142.85)))
         (instance face :init :vertices (list (float-vector -5.551115e-15 -65.5 185.15) (float-vector -5.551115e-15 -65.5 187.15) (float-vector -5.25 -64.0933 187.15) (float-vector -5.25 -64.0933 185.15)))
         (instance face :init :vertices (list (float-vector -5.25 -64.0933 140.85) (float-vector -5.551115e-15 -65.5 140.85) (float-vector -5.551115e-15 -65.5 142.85) (float-vector -5.25 -64.0933 142.85)))
         (instance face :init :vertices (list (float-vector 5.25 -64.0933 185.15) (float-vector 5.25 -64.0933 187.15) (float-vector -5.551115e-15 -65.5 187.15) (float-vector -5.551115e-15 -65.5 185.15)))
         (instance face :init :vertices (list (float-vector -5.551115e-15 -65.5 140.85) (float-vector 5.25 -64.0933 140.85) (float-vector 5.25 -64.0933 142.85) (float-vector -5.551115e-15 -65.5 142.85)))
         (instance face :init :vertices (list (float-vector 9.09327 -60.25 185.15) (float-vector 9.09327 -60.25 187.15) (float-vector 5.25 -64.0933 187.15) (float-vector 5.25 -64.0933 185.15)))
         (instance face :init :vertices (list (float-vector 5.25 -64.0933 140.85) (float-vector 9.09327 -60.25 140.85) (float-vector 9.09327 -60.25 142.85) (float-vector 5.25 -64.0933 142.85)))
         (instance face :init :vertices (list (float-vector 9.09327 -60.25 187.15) (float-vector 10.5 -55.0 187.15) (float-vector 9.09327 -49.75 187.15) (float-vector 5.25 -45.9067 187.15) (float-vector 1.842970e-14 -44.5 187.15) (float-vector -5.25 -45.9067 187.15) (float-vector -9.09327 -49.75 187.15) (float-vector -10.5 -55.0 187.15) (float-vector -9.09327 -60.25 187.15) (float-vector -5.25 -64.0933 187.15) (float-vector -5.551115e-15 -65.5 187.15) (float-vector 5.25 -64.0933 187.15)))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 187.15) (float-vector 9.09327 -60.25 187.15) (float-vector 9.09327 -60.25 185.15) (float-vector 10.5 -55.0 185.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -60.25 140.85) (float-vector 10.5 -55.0 140.85) (float-vector 10.5 -55.0 142.85) (float-vector 9.09327 -60.25 142.85)))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 140.85) (float-vector 9.09327 -60.25 140.85) (float-vector 5.25 -64.0933 140.85) (float-vector -5.551115e-15 -65.5 140.85) (float-vector -5.25 -64.0933 140.85) (float-vector -9.09327 -60.25 140.85) (float-vector -10.5 -55.0 140.85) (float-vector -9.09327 -49.75 140.85) (float-vector -5.25 -45.9067 140.85) (float-vector 1.842970e-14 -44.5 140.85) (float-vector 5.25 -45.9067 140.85) (float-vector 9.09327 -49.75 140.85)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 70.0 60.0) (float-vector 10.0 70.0 90.0) (float-vector 10.0 15.0 90.0) (float-vector 10.0 15.0 60.0) (float-vector 10.0 16.0 60.0) (float-vector 10.0 16.0 89.0) (float-vector 10.0 69.0 89.0) (float-vector 10.0 69.0 60.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 90.0) (float-vector -10.0 15.0 90.0) (float-vector 10.0 15.0 90.0) (float-vector 10.0 70.0 90.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 60.0) (float-vector -10.0 69.0 60.0) (float-vector -10.0 69.0 89.0) (float-vector -10.0 16.0 89.0) (float-vector -10.0 16.0 60.0) (float-vector -10.0 15.0 60.0) (float-vector -10.0 15.0 90.0) (float-vector -10.0 70.0 90.0)))
         (instance face :init :vertices (list (float-vector -7.07107 15.0 52.9289) (float-vector -10.0 15.0 60.0) (float-vector -10.0 16.0 60.0) (float-vector -7.07107 16.0 52.9289)))
         (instance face :init :vertices (list (float-vector -7.07107 70.0 52.9289) (float-vector -7.07107 69.0 52.9289) (float-vector -10.0 69.0 60.0) (float-vector -10.0 70.0 60.0)))
         (instance face :init :vertices (list (float-vector -8.063065e-15 15.0 50.0) (float-vector -7.07107 15.0 52.9289) (float-vector -7.07107 16.0 52.9289) (float-vector -8.141569e-15 16.0 50.0)))
         (instance face :init :vertices (list (float-vector -1.238082e-14 70.0 50.0) (float-vector -1.230231e-14 69.0 50.0) (float-vector -7.07107 69.0 52.9289) (float-vector -7.07107 70.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07107 15.0 52.9289) (float-vector -8.063065e-15 15.0 50.0) (float-vector -8.141569e-15 16.0 50.0) (float-vector 7.07107 16.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07107 70.0 52.9289) (float-vector 7.07107 69.0 52.9289) (float-vector -1.230231e-14 69.0 50.0) (float-vector -1.238082e-14 70.0 50.0)))
         (instance face :init :vertices (list (float-vector 10.0 15.0 60.0) (float-vector 10.0 15.0 90.0) (float-vector -10.0 15.0 90.0) (float-vector -10.0 15.0 60.0) (float-vector -7.07107 15.0 52.9289) (float-vector -8.063065e-15 15.0 50.0) (float-vector 7.07107 15.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07107 70.0 52.9289) (float-vector -1.238082e-14 70.0 50.0) (float-vector -7.07107 70.0 52.9289) (float-vector -10.0 70.0 60.0) (float-vector -10.0 70.0 90.0) (float-vector 10.0 70.0 90.0) (float-vector 10.0 70.0 60.0)))
         (instance face :init :vertices (list (float-vector 7.07107 15.0 52.9289) (float-vector 7.07107 16.0 52.9289) (float-vector 10.0 16.0 60.0) (float-vector 10.0 15.0 60.0)))
         (instance face :init :vertices (list (float-vector 10.0 70.0 60.0) (float-vector 10.0 69.0 60.0) (float-vector 7.07107 69.0 52.9289) (float-vector 7.07107 70.0 52.9289)))
         (instance face :init :vertices (list (float-vector 10.0 16.0 89.0) (float-vector 10.0 16.0 60.0) (float-vector 7.07107 16.0 52.9289) (float-vector -8.141569e-15 16.0 50.0) (float-vector -7.07107 16.0 52.9289) (float-vector -10.0 16.0 60.0) (float-vector -10.0 16.0 89.0)))
         (instance face :init :vertices (list (float-vector 10.0 69.0 89.0) (float-vector 10.0 16.0 89.0) (float-vector -10.0 16.0 89.0) (float-vector -10.0 69.0 89.0)))
         (instance face :init :vertices (list (float-vector -10.0 69.0 89.0) (float-vector -10.0 69.0 60.0) (float-vector -7.07107 69.0 52.9289) (float-vector -1.230231e-14 69.0 50.0) (float-vector 7.07107 69.0 52.9289) (float-vector 10.0 69.0 60.0) (float-vector 10.0 69.0 89.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 67.0 142.85) (float-vector 11.5 67.0 185.15) (float-vector 11.5 22.0 185.15) (float-vector 11.5 22.0 142.85)))
         (instance face :init :vertices (list (float-vector 11.5 22.0 185.15) (float-vector -11.5 22.0 185.15) (float-vector -11.5 22.0 142.85) (float-vector 11.5 22.0 142.85)))
         (instance face :init :vertices (list (float-vector -11.5 22.0 185.15) (float-vector -11.5 67.0 185.15) (float-vector -11.5 67.0 142.85) (float-vector -11.5 22.0 142.85)))
         (instance face :init :vertices (list (float-vector -11.5 67.0 142.85) (float-vector 11.5 67.0 142.85) (float-vector 11.5 22.0 142.85) (float-vector -11.5 22.0 142.85))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 60.25 142.85) (float-vector 5.25 64.0933 142.85) (float-vector -3.722909e-14 65.5 142.85) (float-vector -5.25 64.0933 142.85) (float-vector -9.09327 60.25 142.85) (float-vector -10.5 55.0 142.85) (float-vector -9.09327 49.75 142.85) (float-vector -5.25 45.9067 142.85) (float-vector -3.922396e-15 44.5 142.85) (float-vector 5.25 45.9067 142.85) (float-vector 9.09327 49.75 142.85) (float-vector 10.5 55.0 142.85)))
))
         (instance face :init :vertices (list (float-vector -11.5 67.0 185.15) (float-vector 11.5 67.0 185.15) (float-vector 11.5 67.0 142.85) (float-vector -11.5 67.0 142.85)))
         (instance face :init :vertices (list (float-vector 11.5 67.0 185.15) (float-vector -11.5 67.0 185.15) (float-vector -11.5 22.0 185.15) (float-vector 11.5 22.0 185.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 64.0933 185.15) (float-vector 9.09327 60.25 185.15) (float-vector 10.5 55.0 185.15) (float-vector 9.09327 49.75 185.15) (float-vector 5.25 45.9067 185.15) (float-vector 1.257860e-15 44.5 185.15) (float-vector -5.25 45.9067 185.15) (float-vector -9.09327 49.75 185.15) (float-vector -10.5 55.0 185.15) (float-vector -9.09327 60.25 185.15) (float-vector -5.25 64.0933 185.15) (float-vector -3.204883e-14 65.5 185.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 55.0 140.85) (float-vector 10.5 55.0 142.85) (float-vector 9.09327 49.75 142.85) (float-vector 9.09327 49.75 140.85)))
         (instance face :init :vertices (list (float-vector 10.5 55.0 185.15) (float-vector 10.5 55.0 187.15) (float-vector 9.09327 49.75 187.15) (float-vector 9.09327 49.75 185.15)))
         (instance face :init :vertices (list (float-vector 5.25 45.9067 142.85) (float-vector 5.25 45.9067 140.85) (float-vector 9.09327 49.75 140.85) (float-vector 9.09327 49.75 142.85)))
         (instance face :init :vertices (list (float-vector 9.09327 49.75 187.15) (float-vector 5.25 45.9067 187.15) (float-vector 5.25 45.9067 185.15) (float-vector 9.09327 49.75 185.15)))
         (instance face :init :vertices (list (float-vector -3.922396e-15 44.5 142.85) (float-vector -4.167325e-15 44.5 140.85) (float-vector 5.25 45.9067 140.85) (float-vector 5.25 45.9067 142.85)))
         (instance face :init :vertices (list (float-vector 5.25 45.9067 187.15) (float-vector 1.502790e-15 44.5 187.15) (float-vector 1.257860e-15 44.5 185.15) (float-vector 5.25 45.9067 185.15)))
         (instance face :init :vertices (list (float-vector -5.25 45.9067 142.85) (float-vector -5.25 45.9067 140.85) (float-vector -4.167325e-15 44.5 140.85) (float-vector -3.922396e-15 44.5 142.85)))
         (instance face :init :vertices (list (float-vector 1.502790e-15 44.5 187.15) (float-vector -5.25 45.9067 187.15) (float-vector -5.25 45.9067 185.15) (float-vector 1.257860e-15 44.5 185.15)))
         (instance face :init :vertices (list (float-vector -9.09327 49.75 142.85) (float-vector -9.09327 49.75 140.85) (float-vector -5.25 45.9067 140.85) (float-vector -5.25 45.9067 142.85)))
         (instance face :init :vertices (list (float-vector -5.25 45.9067 187.15) (float-vector -9.09327 49.75 187.15) (float-vector -9.09327 49.75 185.15) (float-vector -5.25 45.9067 185.15)))
         (instance face :init :vertices (list (float-vector -10.5 55.0 142.85) (float-vector -10.5 55.0 140.85) (float-vector -9.09327 49.75 140.85) (float-vector -9.09327 49.75 142.85)))
         (instance face :init :vertices (list (float-vector -9.09327 49.75 187.15) (float-vector -10.5 55.0 187.15) (float-vector -10.5 55.0 185.15) (float-vector -9.09327 49.75 185.15)))
         (instance face :init :vertices (list (float-vector -9.09327 60.25 142.85) (float-vector -9.09327 60.25 140.85) (float-vector -10.5 55.0 140.85) (float-vector -10.5 55.0 142.85)))
         (instance face :init :vertices (list (float-vector -10.5 55.0 187.15) (float-vector -9.09327 60.25 187.15) (float-vector -9.09327 60.25 185.15) (float-vector -10.5 55.0 185.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.0933 142.85) (float-vector -5.25 64.0933 140.85) (float-vector -9.09327 60.25 140.85) (float-vector -9.09327 60.25 142.85)))
         (instance face :init :vertices (list (float-vector -9.09327 60.25 187.15) (float-vector -5.25 64.0933 187.15) (float-vector -5.25 64.0933 185.15) (float-vector -9.09327 60.25 185.15)))
         (instance face :init :vertices (list (float-vector -3.722909e-14 65.5 142.85) (float-vector -3.747402e-14 65.5 140.85) (float-vector -5.25 64.0933 140.85) (float-vector -5.25 64.0933 142.85)))
         (instance face :init :vertices (list (float-vector -5.25 64.0933 187.15) (float-vector -3.180390e-14 65.5 187.15) (float-vector -3.204883e-14 65.5 185.15) (float-vector -5.25 64.0933 185.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.0933 142.85) (float-vector 5.25 64.0933 140.85) (float-vector -3.747402e-14 65.5 140.85) (float-vector -3.722909e-14 65.5 142.85)))
         (instance face :init :vertices (list (float-vector -3.180390e-14 65.5 187.15) (float-vector 5.25 64.0933 187.15) (float-vector 5.25 64.0933 185.15) (float-vector -3.204883e-14 65.5 185.15)))
         (instance face :init :vertices (list (float-vector 9.09327 60.25 142.85) (float-vector 9.09327 60.25 140.85) (float-vector 5.25 64.0933 140.85) (float-vector 5.25 64.0933 142.85)))
         (instance face :init :vertices (list (float-vector 5.25 64.0933 187.15) (float-vector 9.09327 60.25 187.15) (float-vector 9.09327 60.25 185.15) (float-vector 5.25 64.0933 185.15)))
         (instance face :init :vertices (list (float-vector 9.09327 60.25 140.85) (float-vector 10.5 55.0 140.85) (float-vector 9.09327 49.75 140.85) (float-vector 5.25 45.9067 140.85) (float-vector -4.167325e-15 44.5 140.85) (float-vector -5.25 45.9067 140.85) (float-vector -9.09327 49.75 140.85) (float-vector -10.5 55.0 140.85) (float-vector -9.09327 60.25 140.85) (float-vector -5.25 64.0933 140.85) (float-vector -3.747402e-14 65.5 140.85) (float-vector 5.25 64.0933 140.85)))
         (instance face :init :vertices (list (float-vector 10.5 55.0 140.85) (float-vector 9.09327 60.25 140.85) (float-vector 9.09327 60.25 142.85) (float-vector 10.5 55.0 142.85)))
         (instance face :init :vertices (list (float-vector 9.09327 60.25 187.15) (float-vector 10.5 55.0 187.15) (float-vector 10.5 55.0 185.15) (float-vector 9.09327 60.25 185.15)))
         (instance face :init :vertices (list (float-vector 10.5 55.0 187.15) (float-vector 9.09327 60.25 187.15) (float-vector 5.25 64.0933 187.15) (float-vector -3.180390e-14 65.5 187.15) (float-vector -5.25 64.0933 187.15) (float-vector -9.09327 60.25 187.15) (float-vector -10.5 55.0 187.15) (float-vector -9.09327 49.75 187.15) (float-vector -5.25 45.9067 187.15) (float-vector 1.502790e-15 44.5 187.15) (float-vector 5.25 45.9067 187.15) (float-vector 9.09327 49.75 187.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -7.0 -6.5 184.5) (float-vector -7.0 -6.5 155.5) (float-vector 21.0 -6.5 155.5) (float-vector 21.0 -6.5 184.5)))
         (instance face :init :vertices (list (float-vector 21.0 -6.5 155.5) (float-vector 21.0 6.5 155.5) (float-vector 21.0 6.5 184.5) (float-vector 21.0 -6.5 184.5)))
         (instance face :init :vertices (list (float-vector 21.0 6.5 155.5) (float-vector -7.0 6.5 155.5) (float-vector -7.0 6.5 184.5) (float-vector 21.0 6.5 184.5)))
         (instance face :init :vertices (list (float-vector -7.0 6.5 184.5) (float-vector -7.0 -6.5 184.5) (float-vector 21.0 -6.5 184.5) (float-vector 21.0 6.5 184.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -2.75 -4.76314 184.5) (float-vector -4.76314 -2.75 184.5) (float-vector -5.5 8.104628e-15 184.5) (float-vector -4.76314 2.75 184.5) (float-vector -2.75 4.76314 184.5) (float-vector 5.440093e-15 5.5 184.5) (float-vector 2.75 4.76314 184.5) (float-vector 4.76314 2.75 184.5) (float-vector 5.5 -1.887379e-15 184.5) (float-vector 4.76314 -2.75 184.5) (float-vector 2.75 -4.76314 184.5) (float-vector 1.221245e-15 -5.5 184.5)))
))
         (instance face :init :vertices (list (float-vector -7.0 6.5 155.5) (float-vector -7.0 -6.5 155.5) (float-vector -7.0 -6.5 184.5) (float-vector -7.0 6.5 184.5)))
         (instance face :init :vertices (list (float-vector -7.0 -6.5 155.5) (float-vector -7.0 6.5 155.5) (float-vector 21.0 6.5 155.5) (float-vector 21.0 -6.5 155.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.76314 -2.75 155.5) (float-vector -2.75 -4.76314 155.5) (float-vector 1.221245e-15 -5.5 155.5) (float-vector 2.75 -4.76314 155.5) (float-vector 4.76314 -2.75 155.5) (float-vector 5.5 -1.887379e-15 155.5) (float-vector 4.76314 2.75 155.5) (float-vector 2.75 4.76314 155.5) (float-vector 5.440093e-15 5.5 155.5) (float-vector -2.75 4.76314 155.5) (float-vector -4.76314 2.75 155.5) (float-vector -5.5 8.104628e-15 155.5)))
))
         (instance face :init :vertices (list (float-vector 1.221245e-15 -5.5 186.5) (float-vector 1.221245e-15 -5.5 184.5) (float-vector 2.75 -4.76314 184.5) (float-vector 2.75 -4.76314 186.5)))
         (instance face :init :vertices (list (float-vector 1.221245e-15 -5.5 155.5) (float-vector 1.221245e-15 -5.5 153.5) (float-vector 2.75 -4.76314 153.5) (float-vector 2.75 -4.76314 155.5)))
         (instance face :init :vertices (list (float-vector 4.76314 -2.75 184.5) (float-vector 4.76314 -2.75 186.5) (float-vector 2.75 -4.76314 186.5) (float-vector 2.75 -4.76314 184.5)))
         (instance face :init :vertices (list (float-vector 2.75 -4.76314 153.5) (float-vector 4.76314 -2.75 153.5) (float-vector 4.76314 -2.75 155.5) (float-vector 2.75 -4.76314 155.5)))
         (instance face :init :vertices (list (float-vector 5.5 -1.887379e-15 184.5) (float-vector 5.5 -1.887379e-15 186.5) (float-vector 4.76314 -2.75 186.5) (float-vector 4.76314 -2.75 184.5)))
         (instance face :init :vertices (list (float-vector 4.76314 -2.75 153.5) (float-vector 5.5 -1.887379e-15 153.5) (float-vector 5.5 -1.887379e-15 155.5) (float-vector 4.76314 -2.75 155.5)))
         (instance face :init :vertices (list (float-vector 4.76314 2.75 184.5) (float-vector 4.76314 2.75 186.5) (float-vector 5.5 -1.887379e-15 186.5) (float-vector 5.5 -1.887379e-15 184.5)))
         (instance face :init :vertices (list (float-vector 5.5 -1.887379e-15 153.5) (float-vector 4.76314 2.75 153.5) (float-vector 4.76314 2.75 155.5) (float-vector 5.5 -1.887379e-15 155.5)))
         (instance face :init :vertices (list (float-vector 2.75 4.76314 184.5) (float-vector 2.75 4.76314 186.5) (float-vector 4.76314 2.75 186.5) (float-vector 4.76314 2.75 184.5)))
         (instance face :init :vertices (list (float-vector 4.76314 2.75 153.5) (float-vector 2.75 4.76314 153.5) (float-vector 2.75 4.76314 155.5) (float-vector 4.76314 2.75 155.5)))
         (instance face :init :vertices (list (float-vector 5.440093e-15 5.5 184.5) (float-vector 5.440093e-15 5.5 186.5) (float-vector 2.75 4.76314 186.5) (float-vector 2.75 4.76314 184.5)))
         (instance face :init :vertices (list (float-vector 2.75 4.76314 153.5) (float-vector 5.440093e-15 5.5 153.5) (float-vector 5.440093e-15 5.5 155.5) (float-vector 2.75 4.76314 155.5)))
         (instance face :init :vertices (list (float-vector -2.75 4.76314 184.5) (float-vector -2.75 4.76314 186.5) (float-vector 5.440093e-15 5.5 186.5) (float-vector 5.440093e-15 5.5 184.5)))
         (instance face :init :vertices (list (float-vector 5.440093e-15 5.5 153.5) (float-vector -2.75 4.76314 153.5) (float-vector -2.75 4.76314 155.5) (float-vector 5.440093e-15 5.5 155.5)))
         (instance face :init :vertices (list (float-vector -4.76314 2.75 184.5) (float-vector -4.76314 2.75 186.5) (float-vector -2.75 4.76314 186.5) (float-vector -2.75 4.76314 184.5)))
         (instance face :init :vertices (list (float-vector -2.75 4.76314 153.5) (float-vector -4.76314 2.75 153.5) (float-vector -4.76314 2.75 155.5) (float-vector -2.75 4.76314 155.5)))
         (instance face :init :vertices (list (float-vector -5.5 8.104628e-15 184.5) (float-vector -5.5 8.104628e-15 186.5) (float-vector -4.76314 2.75 186.5) (float-vector -4.76314 2.75 184.5)))
         (instance face :init :vertices (list (float-vector -4.76314 2.75 153.5) (float-vector -5.5 8.104628e-15 153.5) (float-vector -5.5 8.104628e-15 155.5) (float-vector -4.76314 2.75 155.5)))
         (instance face :init :vertices (list (float-vector -4.76314 -2.75 184.5) (float-vector -4.76314 -2.75 186.5) (float-vector -5.5 8.104628e-15 186.5) (float-vector -5.5 8.104628e-15 184.5)))
         (instance face :init :vertices (list (float-vector -5.5 8.104628e-15 153.5) (float-vector -4.76314 -2.75 153.5) (float-vector -4.76314 -2.75 155.5) (float-vector -5.5 8.104628e-15 155.5)))
         (instance face :init :vertices (list (float-vector -2.75 -4.76314 184.5) (float-vector -2.75 -4.76314 186.5) (float-vector -4.76314 -2.75 186.5) (float-vector -4.76314 -2.75 184.5)))
         (instance face :init :vertices (list (float-vector -4.76314 -2.75 153.5) (float-vector -2.75 -4.76314 153.5) (float-vector -2.75 -4.76314 155.5) (float-vector -4.76314 -2.75 155.5)))
         (instance face :init :vertices (list (float-vector -2.75 -4.76314 186.5) (float-vector 1.221245e-15 -5.5 186.5) (float-vector 2.75 -4.76314 186.5) (float-vector 4.76314 -2.75 186.5) (float-vector 5.5 -1.887379e-15 186.5) (float-vector 4.76314 2.75 186.5) (float-vector 2.75 4.76314 186.5) (float-vector 5.440093e-15 5.5 186.5) (float-vector -2.75 4.76314 186.5) (float-vector -4.76314 2.75 186.5) (float-vector -5.5 8.104628e-15 186.5) (float-vector -4.76314 -2.75 186.5)))
         (instance face :init :vertices (list (float-vector 1.221245e-15 -5.5 186.5) (float-vector -2.75 -4.76314 186.5) (float-vector -2.75 -4.76314 184.5) (float-vector 1.221245e-15 -5.5 184.5)))
         (instance face :init :vertices (list (float-vector -2.75 -4.76314 153.5) (float-vector 1.221245e-15 -5.5 153.5) (float-vector 1.221245e-15 -5.5 155.5) (float-vector -2.75 -4.76314 155.5)))
         (instance face :init :vertices (list (float-vector 1.221245e-15 -5.5 153.5) (float-vector -2.75 -4.76314 153.5) (float-vector -4.76314 -2.75 153.5) (float-vector -5.5 8.104628e-15 153.5) (float-vector -4.76314 2.75 153.5) (float-vector -2.75 4.76314 153.5) (float-vector 5.440093e-15 5.5 153.5) (float-vector 2.75 4.76314 153.5) (float-vector 4.76314 2.75 153.5) (float-vector 5.5 -1.887379e-15 153.5) (float-vector 4.76314 -2.75 153.5) (float-vector 2.75 -4.76314 153.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 70.0 90.0) (float-vector -10.0 -70.0 90.0) (float-vector -10.0 -70.0 130.0) (float-vector -10.0 70.0 130.0)))
         (instance face :init :vertices (list (float-vector 10.0 -70.0 90.0) (float-vector 10.0 70.0 90.0) (float-vector 10.0 70.0 130.0) (float-vector 10.0 -70.0 130.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 90.0) (float-vector 10.0 70.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector -10.0 -70.0 90.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 130.0) (float-vector 10.0 70.0 130.0) (float-vector 10.0 70.0 90.0) (float-vector -10.0 70.0 90.0)))
         (instance face :init :vertices (list (float-vector -10.0 -70.0 130.0) (float-vector 10.0 -70.0 130.0) (float-vector 10.0 70.0 130.0) (float-vector -10.0 70.0 130.0)))
         (instance face :init :vertices (list (float-vector -10.0 -70.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector 10.0 -70.0 130.0) (float-vector -10.0 -70.0 130.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray90)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 385.731 :centroid (float-vector 0.385969 -6.998597e-15 130.515) :inertia-tensor #2f((5.550872e+05 6.654370e-11 -4136.51) (6.654370e-11 2.483946e+05 -8.012693e-11) (-4136.51 -8.012693e-11 3.237790e+05))))

     ;; definition of :rleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 2.842171e-14 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 2.842171e-14 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 2.842171e-14 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 2.842171e-14 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 2.842171e-14 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 2.842171e-14 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 2.842171e-14 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -5.25 83.0933 21.15) (float-vector 1.904945e-14 84.5 21.15) (float-vector 5.25 83.0933 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09327 68.75 21.15) (float-vector 5.25 64.9067 21.15) (float-vector -7.503128e-15 63.5 21.15) (float-vector -5.25 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.25 83.0933 -21.15) (float-vector -9.09327 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector 5.25 64.9067 -21.15) (float-vector 9.09327 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 21.15) (float-vector -5.25 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -5.25 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 21.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector -5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 21.15) (float-vector 5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -7.503128e-15 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector 5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 21.15) (float-vector 9.09327 68.75 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 9.09327 68.75 -21.15) (float-vector 5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 21.15) (float-vector 5.25 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 5.25 83.0933 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 21.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 1.904945e-14 84.5 -21.15) (float-vector 5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 21.15) (float-vector -5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 1.904945e-14 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector -5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -9.09327 79.25 23.15) (float-vector -5.25 83.0933 23.15) (float-vector -5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -9.09327 79.25 -21.15) (float-vector -5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector -5.25 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09327 79.25 23.15) (float-vector -9.09327 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-p :weight 130 :centroid (float-vector -8.620680e-15 37.0 1.290535e-14) :inertia-tensor #2f((1.347484e+05 2.270074e-11 7.579016e-13) (2.270074e-11 25114.8 -2.271667e-11) (7.579016e-13 -2.271667e-11 1.210952e+05))))

     ;; definition of :rleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 1.262177e-29 -10.0 -27.5) (float-vector 1.262177e-29 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 1.262177e-29 -10.0 -26.5) (float-vector 1.262177e-29 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 1.262177e-29 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 1.262177e-29 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 80.0 30.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 31.0 29.0) (float-vector -10.0 31.0 -29.0) (float-vector -10.0 80.0 -29.0)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -30.0) (float-vector 10.0 30.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -30.0) (float-vector 10.0 80.0 -29.0) (float-vector 10.0 31.0 -29.0) (float-vector 10.0 31.0 29.0) (float-vector 10.0 80.0 29.0) (float-vector 10.0 80.0 30.0) (float-vector 10.0 30.0 30.0) (float-vector 10.0 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 30.0) (float-vector 10.0 80.0 30.0) (float-vector 10.0 80.0 29.0) (float-vector 7.07107 87.0711 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 -30.0) (float-vector 7.07107 87.0711 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 90.0 30.0) (float-vector 7.07107 87.0711 30.0) (float-vector 7.07107 87.0711 29.0) (float-vector 1.224647e-15 90.0 29.0)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 90.0 -30.0) (float-vector 1.224647e-15 90.0 -29.0) (float-vector 7.07107 87.0711 -29.0) (float-vector 7.07107 87.0711 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 30.0) (float-vector 1.224647e-15 90.0 30.0) (float-vector 1.224647e-15 90.0 29.0) (float-vector -7.07107 87.0711 29.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -30.0) (float-vector -7.07107 87.0711 -29.0) (float-vector 1.224647e-15 90.0 -29.0) (float-vector 1.224647e-15 90.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector 10.0 30.0 30.0) (float-vector 10.0 80.0 30.0) (float-vector 7.07107 87.0711 30.0) (float-vector 1.224647e-15 90.0 30.0) (float-vector -7.07107 87.0711 30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -30.0) (float-vector 1.224647e-15 90.0 -30.0) (float-vector 7.07107 87.0711 -30.0) (float-vector 10.0 80.0 -30.0) (float-vector 10.0 30.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 30.0) (float-vector -7.07107 87.0711 29.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 80.0 -29.0) (float-vector -7.07107 87.0711 -29.0) (float-vector -7.07107 87.0711 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 29.0) (float-vector -10.0 80.0 29.0) (float-vector -7.07107 87.0711 29.0) (float-vector 1.224647e-15 90.0 29.0) (float-vector 7.07107 87.0711 29.0) (float-vector 10.0 80.0 29.0) (float-vector 10.0 31.0 29.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -29.0) (float-vector -10.0 31.0 29.0) (float-vector 10.0 31.0 29.0) (float-vector 10.0 31.0 -29.0)))
         (instance face :init :vertices (list (float-vector 10.0 31.0 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 7.07107 87.0711 -29.0) (float-vector 1.224647e-15 90.0 -29.0) (float-vector -7.07107 87.0711 -29.0) (float-vector -10.0 80.0 -29.0) (float-vector -10.0 31.0 -29.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-knee-p :weight 16.1614 :centroid (float-vector 1.220980e-14 36.2995 8.650789e-14) :inertia-tensor #2f((18252.5 -1.363788e-12 6.586509e-13) (-1.363788e-12 10370.1 -4.873326e-14) (6.586509e-13 -4.873326e-14 8959.81))))

     ;; definition of :rleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 -14.0 24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 45.0 -24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 45.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector -14.4 45.0 24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 45.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 -14.0 24.9) (float-vector -14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 24.9) (float-vector 14.4 -14.0 24.9) (float-vector 14.4 45.0 24.9) (float-vector -14.4 45.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 6.7 -11.6047 24.9) (float-vector -2.309264e-14 -13.4 24.9) (float-vector -6.7 -11.6047 24.9) (float-vector -11.6047 -6.7 24.9) (float-vector -13.4 1.421085e-14 24.9) (float-vector -11.6047 6.7 24.9) (float-vector -6.7 11.6047 24.9) (float-vector 7.993606e-15 13.4 24.9) (float-vector 6.7 11.6047 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 13.4 -3.552714e-15 24.9)))
))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 -24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 -14.0 24.9) (float-vector -14.4 -14.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 -14.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector 14.4 45.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.7 -11.6047 -24.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 6.7 -24.9) (float-vector 6.7 11.6047 -24.9) (float-vector 7.993606e-15 13.4 -24.9) (float-vector -6.7 11.6047 -24.9) (float-vector -11.6047 6.7 -24.9) (float-vector -13.4 1.421085e-14 -24.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -2.309264e-14 -13.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 13.4 -3.552714e-15 26.9) (float-vector 13.4 -3.552714e-15 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 11.6047 6.7 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -24.9) (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 6.7 -26.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 24.9) (float-vector 6.7 11.6047 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 6.7 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 6.7 11.6047 -24.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 7.993606e-15 13.4 24.9) (float-vector 7.993606e-15 13.4 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 -26.9) (float-vector 7.993606e-15 13.4 -26.9) (float-vector 7.993606e-15 13.4 -24.9) (float-vector 6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 24.9) (float-vector -6.7 11.6047 26.9) (float-vector 7.993606e-15 13.4 26.9) (float-vector 7.993606e-15 13.4 24.9)))
         (instance face :init :vertices (list (float-vector 7.993606e-15 13.4 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector -6.7 11.6047 -24.9) (float-vector 7.993606e-15 13.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 24.9) (float-vector -11.6047 6.7 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -11.6047 6.7 -24.9) (float-vector -6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 1.421085e-14 24.9) (float-vector -13.4 1.421085e-14 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 -26.9) (float-vector -13.4 1.421085e-14 -26.9) (float-vector -13.4 1.421085e-14 -24.9) (float-vector -11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 24.9) (float-vector -11.6047 -6.7 26.9) (float-vector -13.4 1.421085e-14 26.9) (float-vector -13.4 1.421085e-14 24.9)))
         (instance face :init :vertices (list (float-vector -13.4 1.421085e-14 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -13.4 1.421085e-14 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 24.9) (float-vector -6.7 -11.6047 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -11.6047 -6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -2.309264e-14 -13.4 24.9) (float-vector -2.309264e-14 -13.4 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 -26.9) (float-vector -2.309264e-14 -13.4 -26.9) (float-vector -2.309264e-14 -13.4 -24.9) (float-vector -6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 24.9) (float-vector 6.7 -11.6047 26.9) (float-vector -2.309264e-14 -13.4 26.9) (float-vector -2.309264e-14 -13.4 24.9)))
         (instance face :init :vertices (list (float-vector -2.309264e-14 -13.4 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector 6.7 -11.6047 -24.9) (float-vector -2.309264e-14 -13.4 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 11.6047 -6.7 26.9) (float-vector 6.7 -11.6047 26.9) (float-vector 6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 26.9) (float-vector 13.4 -3.552714e-15 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 7.993606e-15 13.4 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -13.4 1.421085e-14 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -2.309264e-14 -13.4 26.9) (float-vector 6.7 -11.6047 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 -3.552714e-15 26.9) (float-vector 11.6047 -6.7 26.9) (float-vector 11.6047 -6.7 24.9) (float-vector 13.4 -3.552714e-15 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 -26.9) (float-vector 13.4 0.0 -26.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector -2.309264e-14 -13.4 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -13.4 1.421085e-14 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector 7.993606e-15 13.4 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 11.6047 6.7 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -20.0 25.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 27.5 -20.0 25.0) (float-vector 27.5 10.0 15.0) (float-vector 27.5 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 72.5 -20.0 25.0) (float-vector 72.5 -20.0 -25.0) (float-vector 72.5 10.0 -15.0) (float-vector 72.5 10.0 15.0)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 72.5 -20.0 -25.0) (float-vector 72.5 -20.0 25.0) (float-vector 27.5 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 27.5 10.0 -15.0) (float-vector 72.5 10.0 -15.0) (float-vector 72.5 -20.0 -25.0) (float-vector 27.5 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 27.5 10.0 15.0) (float-vector 72.5 10.0 15.0) (float-vector 72.5 10.0 -15.0) (float-vector 27.5 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 25.0) (float-vector 72.5 -20.0 25.0) (float-vector 72.5 10.0 15.0) (float-vector 27.5 10.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-p :weight 272.0 :centroid (float-vector 28.6765 0.959807 -4.192930e-16) :inertia-tensor #2f((1.384287e+05 65174.0 -6.505705e-12) (65174.0 2.573435e+05 2.815271e-12) (-6.505705e-12 2.815271e-12 2.827948e+05))))

     ;; definition of :rarm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.0 94.9 29.4) (float-vector -14.0 45.1 29.4) (float-vector 45.0 45.1 29.4) (float-vector 45.0 94.9 29.4)))
         (instance face :init :vertices (list (float-vector 45.0 45.1 29.4) (float-vector 45.0 45.1 0.6) (float-vector 45.0 94.9 0.6) (float-vector 45.0 94.9 29.4)))
         (instance face :init :vertices (list (float-vector 45.0 45.1 0.6) (float-vector -14.0 45.1 0.6) (float-vector -14.0 94.9 0.6) (float-vector 45.0 94.9 0.6)))
         (instance face :init :vertices (list (float-vector -14.0 94.9 0.6) (float-vector -14.0 94.9 29.4) (float-vector 45.0 94.9 29.4) (float-vector 45.0 94.9 0.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.7 94.9 26.6047) (float-vector -11.6047 94.9 21.7) (float-vector -13.4 94.9 15.0) (float-vector -11.6047 94.9 8.3) (float-vector -6.7 94.9 3.39526) (float-vector -1.752093e-14 94.9 1.6) (float-vector 6.7 94.9 3.39526) (float-vector 11.6047 94.9 8.3) (float-vector 13.4 94.9 15.0) (float-vector 11.6047 94.9 21.7) (float-vector 6.7 94.9 26.6047) (float-vector -2.666916e-14 94.9 28.4)))
))
         (instance face :init :vertices (list (float-vector -14.0 45.1 0.6) (float-vector -14.0 45.1 29.4) (float-vector -14.0 94.9 29.4) (float-vector -14.0 94.9 0.6)))
         (instance face :init :vertices (list (float-vector -14.0 45.1 29.4) (float-vector -14.0 45.1 0.6) (float-vector 45.0 45.1 0.6) (float-vector 45.0 45.1 29.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 45.1 21.7) (float-vector -6.7 45.1 26.6047) (float-vector -1.561134e-14 45.1 28.4) (float-vector 6.7 45.1 26.6047) (float-vector 11.6047 45.1 21.7) (float-vector 13.4 45.1 15.0) (float-vector 11.6047 45.1 8.3) (float-vector 6.7 45.1 3.39526) (float-vector -6.463104e-15 45.1 1.6) (float-vector -6.7 45.1 3.39526) (float-vector -11.6047 45.1 8.3) (float-vector -13.4 45.1 15.0)))
))
         (instance face :init :vertices (list (float-vector -2.711325e-14 96.9 28.4) (float-vector -2.666916e-14 94.9 28.4) (float-vector 6.7 94.9 26.6047) (float-vector 6.7 96.9 26.6047)))
         (instance face :init :vertices (list (float-vector -1.561134e-14 45.1 28.4) (float-vector -1.516725e-14 43.1 28.4) (float-vector 6.7 43.1 26.6047) (float-vector 6.7 45.1 26.6047)))
         (instance face :init :vertices (list (float-vector 11.6047 94.9 21.7) (float-vector 11.6047 96.9 21.7) (float-vector 6.7 96.9 26.6047) (float-vector 6.7 94.9 26.6047)))
         (instance face :init :vertices (list (float-vector 6.7 43.1 26.6047) (float-vector 11.6047 43.1 21.7) (float-vector 11.6047 45.1 21.7) (float-vector 6.7 45.1 26.6047)))
         (instance face :init :vertices (list (float-vector 13.4 94.9 15.0) (float-vector 13.4 96.9 15.0) (float-vector 11.6047 96.9 21.7) (float-vector 11.6047 94.9 21.7)))
         (instance face :init :vertices (list (float-vector 11.6047 43.1 21.7) (float-vector 13.4 43.1 15.0) (float-vector 13.4 45.1 15.0) (float-vector 11.6047 45.1 21.7)))
         (instance face :init :vertices (list (float-vector 11.6047 94.9 8.3) (float-vector 11.6047 96.9 8.3) (float-vector 13.4 96.9 15.0) (float-vector 13.4 94.9 15.0)))
         (instance face :init :vertices (list (float-vector 13.4 43.1 15.0) (float-vector 11.6047 43.1 8.3) (float-vector 11.6047 45.1 8.3) (float-vector 13.4 45.1 15.0)))
         (instance face :init :vertices (list (float-vector 6.7 94.9 3.39526) (float-vector 6.7 96.9 3.39526) (float-vector 11.6047 96.9 8.3) (float-vector 11.6047 94.9 8.3)))
         (instance face :init :vertices (list (float-vector 11.6047 43.1 8.3) (float-vector 6.7 43.1 3.39526) (float-vector 6.7 45.1 3.39526) (float-vector 11.6047 45.1 8.3)))
         (instance face :init :vertices (list (float-vector -1.752093e-14 94.9 1.6) (float-vector -1.796501e-14 96.9 1.6) (float-vector 6.7 96.9 3.39526) (float-vector 6.7 94.9 3.39526)))
         (instance face :init :vertices (list (float-vector 6.7 43.1 3.39526) (float-vector -6.019015e-15 43.1 1.6) (float-vector -6.463104e-15 45.1 1.6) (float-vector 6.7 45.1 3.39526)))
         (instance face :init :vertices (list (float-vector -6.7 94.9 3.39526) (float-vector -6.7 96.9 3.39526) (float-vector -1.796501e-14 96.9 1.6) (float-vector -1.752093e-14 94.9 1.6)))
         (instance face :init :vertices (list (float-vector -6.019015e-15 43.1 1.6) (float-vector -6.7 43.1 3.39526) (float-vector -6.7 45.1 3.39526) (float-vector -6.463104e-15 45.1 1.6)))
         (instance face :init :vertices (list (float-vector -11.6047 94.9 8.3) (float-vector -11.6047 96.9 8.3) (float-vector -6.7 96.9 3.39526) (float-vector -6.7 94.9 3.39526)))
         (instance face :init :vertices (list (float-vector -6.7 43.1 3.39526) (float-vector -11.6047 43.1 8.3) (float-vector -11.6047 45.1 8.3) (float-vector -6.7 45.1 3.39526)))
         (instance face :init :vertices (list (float-vector -13.4 94.9 15.0) (float-vector -13.4 96.9 15.0) (float-vector -11.6047 96.9 8.3) (float-vector -11.6047 94.9 8.3)))
         (instance face :init :vertices (list (float-vector -11.6047 43.1 8.3) (float-vector -13.4 43.1 15.0) (float-vector -13.4 45.1 15.0) (float-vector -11.6047 45.1 8.3)))
         (instance face :init :vertices (list (float-vector -11.6047 94.9 21.7) (float-vector -11.6047 96.9 21.7) (float-vector -13.4 96.9 15.0) (float-vector -13.4 94.9 15.0)))
         (instance face :init :vertices (list (float-vector -13.4 43.1 15.0) (float-vector -11.6047 43.1 21.7) (float-vector -11.6047 45.1 21.7) (float-vector -13.4 45.1 15.0)))
         (instance face :init :vertices (list (float-vector -6.7 94.9 26.6047) (float-vector -6.7 96.9 26.6047) (float-vector -11.6047 96.9 21.7) (float-vector -11.6047 94.9 21.7)))
         (instance face :init :vertices (list (float-vector -11.6047 43.1 21.7) (float-vector -6.7 43.1 26.6047) (float-vector -6.7 45.1 26.6047) (float-vector -11.6047 45.1 21.7)))
         (instance face :init :vertices (list (float-vector -6.7 96.9 26.6047) (float-vector -2.711325e-14 96.9 28.4) (float-vector 6.7 96.9 26.6047) (float-vector 11.6047 96.9 21.7) (float-vector 13.4 96.9 15.0) (float-vector 11.6047 96.9 8.3) (float-vector 6.7 96.9 3.39526) (float-vector -1.796501e-14 96.9 1.6) (float-vector -6.7 96.9 3.39526) (float-vector -11.6047 96.9 8.3) (float-vector -13.4 96.9 15.0) (float-vector -11.6047 96.9 21.7)))
         (instance face :init :vertices (list (float-vector -2.711325e-14 96.9 28.4) (float-vector -6.7 96.9 26.6047) (float-vector -6.7 94.9 26.6047) (float-vector -2.666916e-14 94.9 28.4)))
         (instance face :init :vertices (list (float-vector -6.7 43.1 26.6047) (float-vector -1.516725e-14 43.1 28.4) (float-vector -1.561134e-14 45.1 28.4) (float-vector -6.7 45.1 26.6047)))
         (instance face :init :vertices (list (float-vector -1.516725e-14 43.1 28.4) (float-vector -6.7 43.1 26.6047) (float-vector -11.6047 43.1 21.7) (float-vector -13.4 43.1 15.0) (float-vector -11.6047 43.1 8.3) (float-vector -6.7 43.1 3.39526) (float-vector -6.019015e-15 43.1 1.6) (float-vector 6.7 43.1 3.39526) (float-vector 11.6047 43.1 8.3) (float-vector 13.4 43.1 15.0) (float-vector 11.6047 43.1 21.7) (float-vector 6.7 43.1 26.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-y :weight 114.946 :centroid (float-vector 14.0703 66.8696 13.9631) :inertia-tensor #2f((52874.0 -5062.78 -1676.97) (-5062.78 46430.0 -5024.22) (-1676.97 -5024.22 72431.2))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 -5.684342e-14 30.0) (float-vector 10.0 -5.684342e-14 29.0) (float-vector 10.0 49.0 29.0) (float-vector 10.0 49.0 -29.0) (float-vector 10.0 0.0 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -30.0) (float-vector -10.0 50.0 30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -30.0) (float-vector -10.0 0.0 -29.0) (float-vector -10.0 49.0 -29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 -5.684342e-14 29.0) (float-vector -10.0 -5.684342e-14 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 30.0) (float-vector -10.0 -5.684342e-14 30.0) (float-vector -10.0 -5.684342e-14 29.0) (float-vector -7.07107 -7.07107 29.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -30.0) (float-vector -7.07107 -7.07107 -29.0) (float-vector -10.0 0.0 -29.0) (float-vector -10.0 0.0 -30.0)))
         (instance face :init :vertices (list (float-vector -6.310887e-30 -10.0 30.0) (float-vector -7.07107 -7.07107 30.0) (float-vector -7.07107 -7.07107 29.0) (float-vector -1.262177e-29 -10.0 29.0)))
         (instance face :init :vertices (list (float-vector -3.155444e-30 -10.0 -30.0) (float-vector -6.310887e-30 -10.0 -29.0) (float-vector -7.07107 -7.07107 -29.0) (float-vector -7.07107 -7.07107 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 30.0) (float-vector -6.310887e-30 -10.0 30.0) (float-vector -1.262177e-29 -10.0 29.0) (float-vector 7.07107 -7.07107 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -30.0) (float-vector 7.07107 -7.07107 -29.0) (float-vector -6.310887e-30 -10.0 -29.0) (float-vector -3.155444e-30 -10.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -5.684342e-14 30.0) (float-vector 10.0 50.0 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 -5.684342e-14 30.0) (float-vector -7.07107 -7.07107 30.0) (float-vector -6.310887e-30 -10.0 30.0) (float-vector 7.07107 -7.07107 30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -30.0) (float-vector -3.155444e-30 -10.0 -30.0) (float-vector -7.07107 -7.07107 -30.0) (float-vector -10.0 0.0 -30.0) (float-vector -10.0 50.0 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 0.0 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 30.0) (float-vector 7.07107 -7.07107 29.0) (float-vector 10.0 -5.684342e-14 29.0) (float-vector 10.0 -5.684342e-14 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -30.0) (float-vector 10.0 0.0 -29.0) (float-vector 7.07107 -7.07107 -29.0) (float-vector 7.07107 -7.07107 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 29.0) (float-vector 10.0 -5.684342e-14 29.0) (float-vector 7.07107 -7.07107 29.0) (float-vector -1.262177e-29 -10.0 29.0) (float-vector -7.07107 -7.07107 29.0) (float-vector -10.0 -5.684342e-14 29.0) (float-vector -10.0 49.0 29.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 -29.0) (float-vector 10.0 49.0 29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 49.0 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 49.0 -29.0) (float-vector -10.0 0.0 -29.0) (float-vector -7.07107 -7.07107 -29.0) (float-vector -6.310887e-30 -10.0 -29.0) (float-vector 7.07107 -7.07107 -29.0) (float-vector 10.0 0.0 -29.0) (float-vector 10.0 49.0 -29.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 90.0 27.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 51.0 26.5) (float-vector -10.0 51.0 -26.5) (float-vector -10.0 90.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 50.0 -27.5) (float-vector 10.0 50.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 90.0 -27.5) (float-vector 10.0 90.0 -26.5) (float-vector 10.0 51.0 -26.5) (float-vector 10.0 51.0 26.5) (float-vector 10.0 90.0 26.5) (float-vector 10.0 90.0 27.5) (float-vector 10.0 50.0 27.5) (float-vector 10.0 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.0711 27.5) (float-vector 10.0 90.0 27.5) (float-vector 10.0 90.0 26.5) (float-vector 7.07107 97.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.0711 -27.5) (float-vector 7.07107 97.0711 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 100.0 27.5) (float-vector 7.07107 97.0711 27.5) (float-vector 7.07107 97.0711 26.5) (float-vector 1.224647e-15 100.0 26.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 100.0 -27.5) (float-vector 1.224647e-15 100.0 -26.5) (float-vector 7.07107 97.0711 -26.5) (float-vector 7.07107 97.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 27.5) (float-vector 1.224647e-15 100.0 27.5) (float-vector 1.224647e-15 100.0 26.5) (float-vector -7.07107 97.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 -27.5) (float-vector -7.07107 97.0711 -26.5) (float-vector 1.224647e-15 100.0 -26.5) (float-vector 1.224647e-15 100.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector 10.0 50.0 27.5) (float-vector 10.0 90.0 27.5) (float-vector 7.07107 97.0711 27.5) (float-vector 1.224647e-15 100.0 27.5) (float-vector -7.07107 97.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 -27.5) (float-vector 1.224647e-15 100.0 -27.5) (float-vector 7.07107 97.0711 -27.5) (float-vector 10.0 90.0 -27.5) (float-vector 10.0 50.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 27.5) (float-vector -7.07107 97.0711 26.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 90.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 90.0 -26.5) (float-vector -7.07107 97.0711 -26.5) (float-vector -7.07107 97.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 26.5) (float-vector -10.0 90.0 26.5) (float-vector -7.07107 97.0711 26.5) (float-vector 1.224647e-15 100.0 26.5) (float-vector 7.07107 97.0711 26.5) (float-vector 10.0 90.0 26.5) (float-vector 10.0 51.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 -26.5) (float-vector -10.0 51.0 26.5) (float-vector 10.0 51.0 26.5) (float-vector 10.0 51.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 51.0 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 7.07107 97.0711 -26.5) (float-vector 1.224647e-15 100.0 -26.5) (float-vector -7.07107 97.0711 -26.5) (float-vector -10.0 90.0 -26.5) (float-vector -10.0 51.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 17.2414 :centroid (float-vector -1.001578e-14 46.7304 0.0) :inertia-tensor #2f((21505.3 4.679996e-13 1.317302e-12) (4.679996e-13 11193.5 -5.740808e-13) (1.317302e-12 -5.740808e-13 11461.2))))

     ;; definition of :rarm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 2.842171e-14 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 2.842171e-14 21.15) (float-vector -10.5 2.842171e-14 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 2.842171e-14 23.15) (float-vector -10.5 2.842171e-14 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 2.842171e-14 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 6.5 56.0 14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 84.0 -14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 84.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector -6.5 84.0 14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 84.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 56.0 14.5) (float-vector -6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 56.0 14.5) (float-vector 6.5 56.0 14.5) (float-vector 6.5 84.0 14.5) (float-vector -6.5 84.0 14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.76314 60.25 14.5) (float-vector 2.75 58.2369 14.5) (float-vector -9.325873e-15 57.5 14.5) (float-vector -2.75 58.2369 14.5) (float-vector -4.76314 60.25 14.5) (float-vector -5.5 63.0 14.5) (float-vector -4.76314 65.75 14.5) (float-vector -2.75 67.7631 14.5) (float-vector 3.108624e-15 68.5 14.5) (float-vector 2.75 67.7631 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 5.5 63.0 14.5)))
))
         (instance face :init :vertices (list (float-vector -6.5 56.0 -14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 56.0 14.5) (float-vector -6.5 56.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 56.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector 6.5 84.0 -14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 2.75 58.2369 -14.5) (float-vector 4.76314 60.25 -14.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 65.75 -14.5) (float-vector 2.75 67.7631 -14.5) (float-vector 3.108624e-15 68.5 -14.5) (float-vector -2.75 67.7631 -14.5) (float-vector -4.76314 65.75 -14.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 60.25 -14.5) (float-vector -2.75 58.2369 -14.5) (float-vector -9.325873e-15 57.5 -14.5)))
))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 5.5 63.0 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 4.76314 65.75 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -14.5) (float-vector 5.5 63.0 -16.5) (float-vector 4.76314 65.75 -16.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 14.5) (float-vector 2.75 67.7631 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 65.75 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 2.75 67.7631 -14.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 3.108624e-15 68.5 14.5) (float-vector 3.108624e-15 68.5 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 -16.5) (float-vector 3.108624e-15 68.5 -16.5) (float-vector 3.108624e-15 68.5 -14.5) (float-vector 2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 14.5) (float-vector -2.75 67.7631 16.5) (float-vector 3.108624e-15 68.5 16.5) (float-vector 3.108624e-15 68.5 14.5)))
         (instance face :init :vertices (list (float-vector 3.108624e-15 68.5 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector -2.75 67.7631 -14.5) (float-vector 3.108624e-15 68.5 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 14.5) (float-vector -4.76314 65.75 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -4.76314 65.75 -14.5) (float-vector -2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 14.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 14.5) (float-vector -4.76314 60.25 16.5) (float-vector -5.5 63.0 16.5) (float-vector -5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -4.76314 60.25 -14.5) (float-vector -5.5 63.0 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 14.5) (float-vector -2.75 58.2369 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -4.76314 60.25 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -2.75 58.2369 -14.5) (float-vector -4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector -9.325873e-15 57.5 14.5) (float-vector -9.325873e-15 57.5 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -2.75 58.2369 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 -16.5) (float-vector -9.325873e-15 57.5 -16.5) (float-vector -9.325873e-15 57.5 -14.5) (float-vector -2.75 58.2369 -14.5)))
         (instance face :init :vertices (list (float-vector 2.75 58.2369 14.5) (float-vector 2.75 58.2369 16.5) (float-vector -9.325873e-15 57.5 16.5) (float-vector -9.325873e-15 57.5 14.5)))
         (instance face :init :vertices (list (float-vector -9.325873e-15 57.5 -16.5) (float-vector 2.75 58.2369 -16.5) (float-vector 2.75 58.2369 -14.5) (float-vector -9.325873e-15 57.5 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 14.5) (float-vector 4.76314 60.25 16.5) (float-vector 2.75 58.2369 16.5) (float-vector 2.75 58.2369 14.5)))
         (instance face :init :vertices (list (float-vector 2.75 58.2369 -16.5) (float-vector 4.76314 60.25 -16.5) (float-vector 4.76314 60.25 -14.5) (float-vector 2.75 58.2369 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 16.5) (float-vector 5.5 63.0 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 3.108624e-15 68.5 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -9.325873e-15 57.5 16.5) (float-vector 2.75 58.2369 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 4.76314 60.25 16.5) (float-vector 4.76314 60.25 14.5) (float-vector 5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 -16.5) (float-vector 5.5 63.0 -16.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -16.5) (float-vector 4.76314 60.25 -16.5) (float-vector 2.75 58.2369 -16.5) (float-vector -9.325873e-15 57.5 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector 3.108624e-15 68.5 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 4.76314 65.75 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-p :weight 87 :centroid (float-vector 5.751366e-15 25.257 -1.136868e-13) :inertia-tensor #2f((81977.6 -3.033902e-12 4.127699e-26) (-3.033902e-12 14409.1 -5.040632e-25) (4.127699e-26 -5.040632e-25 73919.0))))

     ;; definition of :rarm-gripper
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 0.0 17.5) (float-vector 10.0 0.0 16.5) (float-vector 10.0 39.0 16.5) (float-vector 10.0 39.0 -16.5) (float-vector 10.0 0.0 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -17.5) (float-vector -10.0 40.0 17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -17.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 39.0 -16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 17.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 0.0 16.5) (float-vector -7.07107 -7.07107 16.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -17.5) (float-vector -7.07107 -7.07107 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 0.0 -17.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 17.5) (float-vector -7.07107 -7.07107 17.5) (float-vector -7.07107 -7.07107 16.5) (float-vector 0.0 -10.0 16.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -17.5) (float-vector -6.310887e-30 -10.0 -16.5) (float-vector -7.07107 -7.07107 -16.5) (float-vector -7.07107 -7.07107 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 17.5) (float-vector 0.0 -10.0 17.5) (float-vector 0.0 -10.0 16.5) (float-vector 7.07107 -7.07107 16.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -17.5) (float-vector 7.07107 -7.07107 -16.5) (float-vector -6.310887e-30 -10.0 -16.5) (float-vector 0.0 -10.0 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 17.5) (float-vector 10.0 40.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 0.0 17.5) (float-vector -7.07107 -7.07107 17.5) (float-vector 0.0 -10.0 17.5) (float-vector 7.07107 -7.07107 17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -17.5) (float-vector 0.0 -10.0 -17.5) (float-vector -7.07107 -7.07107 -17.5) (float-vector -10.0 0.0 -17.5) (float-vector -10.0 40.0 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 0.0 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 17.5) (float-vector 7.07107 -7.07107 16.5) (float-vector 10.0 0.0 16.5) (float-vector 10.0 0.0 17.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -17.5) (float-vector 10.0 0.0 -16.5) (float-vector 7.07107 -7.07107 -16.5) (float-vector 7.07107 -7.07107 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 16.5) (float-vector 10.0 0.0 16.5) (float-vector 7.07107 -7.07107 16.5) (float-vector 0.0 -10.0 16.5) (float-vector -7.07107 -7.07107 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 39.0 16.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -16.5) (float-vector 10.0 39.0 16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 39.0 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -7.07107 -7.07107 -16.5) (float-vector -6.310887e-30 -10.0 -16.5) (float-vector 7.07107 -7.07107 -16.5) (float-vector 10.0 0.0 -16.5) (float-vector 10.0 39.0 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-gripper :weight 6.86568 :centroid (float-vector -2.952607e-14 22.3891 4.263256e-13) :inertia-tensor #2f((3493.1 -2.354196e-14 1.014617e-25) (-2.354196e-14 1860.18 -5.684342e-14) (1.014617e-25 -5.684342e-14 2090.64))))

     ;; definition of :lleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 -2.842171e-14 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 2.842171e-14 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 2.842171e-14 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 -2.842171e-14 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 -2.842171e-14 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -5.25 83.0933 21.15) (float-vector 1.904945e-14 84.5 21.15) (float-vector 5.25 83.0933 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09327 68.75 21.15) (float-vector 5.25 64.9067 21.15) (float-vector -7.503128e-15 63.5 21.15) (float-vector -5.25 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.25 83.0933 -21.15) (float-vector -9.09327 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector 5.25 64.9067 -21.15) (float-vector 9.09327 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 21.15) (float-vector -5.25 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -5.25 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 21.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -7.503128e-15 63.5 -21.15) (float-vector -5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 21.15) (float-vector 5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector -7.503128e-15 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -7.503128e-15 63.5 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector 5.25 64.9067 -21.15) (float-vector -7.503128e-15 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 21.15) (float-vector 9.09327 68.75 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 5.25 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 64.9067 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 9.09327 68.75 -21.15) (float-vector 5.25 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 21.15) (float-vector 5.25 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 5.25 83.0933 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 21.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 1.904945e-14 84.5 -21.15) (float-vector 5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 21.15) (float-vector -5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector 1.904945e-14 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.904945e-14 84.5 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector -5.25 83.0933 -21.15) (float-vector 1.904945e-14 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 21.15) (float-vector -9.09327 79.25 23.15) (float-vector -5.25 83.0933 23.15) (float-vector -5.25 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 83.0933 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -9.09327 79.25 -21.15) (float-vector -5.25 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25 64.9067 23.15) (float-vector -7.503128e-15 63.5 23.15) (float-vector 5.25 64.9067 23.15) (float-vector 9.09327 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25 83.0933 23.15) (float-vector 1.904945e-14 84.5 23.15) (float-vector -5.25 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09327 79.25 23.15) (float-vector -9.09327 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 79.25 -23.15) (float-vector -5.25 83.0933 -23.15) (float-vector 1.904945e-14 84.5 -23.15) (float-vector 5.25 83.0933 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 68.75 -23.15) (float-vector 5.25 64.9067 -23.15) (float-vector -7.503128e-15 63.5 -23.15) (float-vector -5.25 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-p :weight 130 :centroid (float-vector -8.620680e-15 37.0 1.290535e-14) :inertia-tensor #2f((1.347484e+05 2.270074e-11 7.579016e-13) (2.270074e-11 25114.8 -2.271667e-11) (7.579016e-13 -2.271667e-11 1.210952e+05))))

     ;; definition of :lleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 80.0 30.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 31.0 29.0) (float-vector -10.0 31.0 -29.0) (float-vector -10.0 80.0 -29.0)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -30.0) (float-vector 10.0 30.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -30.0) (float-vector 10.0 80.0 -29.0) (float-vector 10.0 31.0 -29.0) (float-vector 10.0 31.0 29.0) (float-vector 10.0 80.0 29.0) (float-vector 10.0 80.0 30.0) (float-vector 10.0 30.0 30.0) (float-vector 10.0 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 30.0) (float-vector 10.0 80.0 30.0) (float-vector 10.0 80.0 29.0) (float-vector 7.07107 87.0711 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.0711 -30.0) (float-vector 7.07107 87.0711 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 90.0 30.0) (float-vector 7.07107 87.0711 30.0) (float-vector 7.07107 87.0711 29.0) (float-vector 1.224647e-15 90.0 29.0)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 90.0 -30.0) (float-vector 1.224647e-15 90.0 -29.0) (float-vector 7.07107 87.0711 -29.0) (float-vector 7.07107 87.0711 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 30.0) (float-vector 1.224647e-15 90.0 30.0) (float-vector 1.224647e-15 90.0 29.0) (float-vector -7.07107 87.0711 29.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -30.0) (float-vector -7.07107 87.0711 -29.0) (float-vector 1.224647e-15 90.0 -29.0) (float-vector 1.224647e-15 90.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector 10.0 30.0 30.0) (float-vector 10.0 80.0 30.0) (float-vector 7.07107 87.0711 30.0) (float-vector 1.224647e-15 90.0 30.0) (float-vector -7.07107 87.0711 30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 -30.0) (float-vector 1.224647e-15 90.0 -30.0) (float-vector 7.07107 87.0711 -30.0) (float-vector 10.0 80.0 -30.0) (float-vector 10.0 30.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 30.0) (float-vector -7.07107 87.0711 29.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 80.0 -29.0) (float-vector -7.07107 87.0711 -29.0) (float-vector -7.07107 87.0711 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 29.0) (float-vector -10.0 80.0 29.0) (float-vector -7.07107 87.0711 29.0) (float-vector 1.224647e-15 90.0 29.0) (float-vector 7.07107 87.0711 29.0) (float-vector 10.0 80.0 29.0) (float-vector 10.0 31.0 29.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -29.0) (float-vector -10.0 31.0 29.0) (float-vector 10.0 31.0 29.0) (float-vector 10.0 31.0 -29.0)))
         (instance face :init :vertices (list (float-vector 10.0 31.0 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 7.07107 87.0711 -29.0) (float-vector 1.224647e-15 90.0 -29.0) (float-vector -7.07107 87.0711 -29.0) (float-vector -10.0 80.0 -29.0) (float-vector -10.0 31.0 -29.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-knee-p :weight 16.1614 :centroid (float-vector 1.220980e-14 36.2995 8.650789e-14) :inertia-tensor #2f((18252.5 -1.363788e-12 6.586509e-13) (-1.363788e-12 10370.1 -4.873326e-14) (6.586509e-13 -4.873326e-14 8959.81))))

     ;; definition of :lleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 -14.0 24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 45.0 -24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 45.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector -14.4 45.0 24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 45.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 -14.0 24.9) (float-vector -14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 24.9) (float-vector 14.4 -14.0 24.9) (float-vector 14.4 45.0 24.9) (float-vector -14.4 45.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 6.7 -11.6047 24.9) (float-vector -2.309264e-14 -13.4 24.9) (float-vector -6.7 -11.6047 24.9) (float-vector -11.6047 -6.7 24.9) (float-vector -13.4 1.776357e-14 24.9) (float-vector -11.6047 6.7 24.9) (float-vector -6.7 11.6047 24.9) (float-vector 7.993606e-15 13.4 24.9) (float-vector 6.7 11.6047 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 13.4 0.0 24.9)))
))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 -24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 -14.0 24.9) (float-vector -14.4 -14.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 -14.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector 14.4 45.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.7 -11.6047 -24.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 13.4 3.552714e-15 -24.9) (float-vector 11.6047 6.7 -24.9) (float-vector 6.7 11.6047 -24.9) (float-vector 7.993606e-15 13.4 -24.9) (float-vector -6.7 11.6047 -24.9) (float-vector -11.6047 6.7 -24.9) (float-vector -13.4 1.776357e-14 -24.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -2.309264e-14 -13.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 13.4 0.0 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 11.6047 6.7 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 3.552714e-15 -24.9) (float-vector 13.4 3.552714e-15 -26.9) (float-vector 11.6047 6.7 -26.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 24.9) (float-vector 6.7 11.6047 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 6.7 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 6.7 11.6047 -24.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 7.993606e-15 13.4 24.9) (float-vector 7.993606e-15 13.4 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 -26.9) (float-vector 7.993606e-15 13.4 -26.9) (float-vector 7.993606e-15 13.4 -24.9) (float-vector 6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 24.9) (float-vector -6.7 11.6047 26.9) (float-vector 7.993606e-15 13.4 26.9) (float-vector 7.993606e-15 13.4 24.9)))
         (instance face :init :vertices (list (float-vector 7.993606e-15 13.4 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector -6.7 11.6047 -24.9) (float-vector 7.993606e-15 13.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 24.9) (float-vector -11.6047 6.7 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 11.6047 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -11.6047 6.7 -24.9) (float-vector -6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 1.776357e-14 24.9) (float-vector -13.4 1.776357e-14 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 -26.9) (float-vector -13.4 1.776357e-14 -26.9) (float-vector -13.4 1.776357e-14 -24.9) (float-vector -11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 24.9) (float-vector -11.6047 -6.7 26.9) (float-vector -13.4 1.776357e-14 26.9) (float-vector -13.4 1.776357e-14 24.9)))
         (instance face :init :vertices (list (float-vector -13.4 1.776357e-14 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -11.6047 -6.7 -24.9) (float-vector -13.4 1.776357e-14 -24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 24.9) (float-vector -6.7 -11.6047 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -11.6047 -6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.7 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -6.7 -11.6047 -24.9) (float-vector -11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -2.309264e-14 -13.4 24.9) (float-vector -2.309264e-14 -13.4 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.7 -11.6047 -26.9) (float-vector -2.309264e-14 -13.4 -26.9) (float-vector -2.309264e-14 -13.4 -24.9) (float-vector -6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 24.9) (float-vector 6.7 -11.6047 26.9) (float-vector -2.309264e-14 -13.4 26.9) (float-vector -2.309264e-14 -13.4 24.9)))
         (instance face :init :vertices (list (float-vector -2.309264e-14 -13.4 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector 6.7 -11.6047 -24.9) (float-vector -2.309264e-14 -13.4 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 24.9) (float-vector 11.6047 -6.7 26.9) (float-vector 6.7 -11.6047 26.9) (float-vector 6.7 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 -11.6047 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 11.6047 -6.7 -24.9) (float-vector 6.7 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 26.9) (float-vector 13.4 0.0 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 7.993606e-15 13.4 26.9) (float-vector -6.7 11.6047 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -13.4 1.776357e-14 26.9) (float-vector -11.6047 -6.7 26.9) (float-vector -6.7 -11.6047 26.9) (float-vector -2.309264e-14 -13.4 26.9) (float-vector 6.7 -11.6047 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 11.6047 -6.7 26.9) (float-vector 11.6047 -6.7 24.9) (float-vector 13.4 0.0 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.7 -26.9) (float-vector 13.4 3.552714e-15 -26.9) (float-vector 13.4 3.552714e-15 -24.9) (float-vector 11.6047 -6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 3.552714e-15 -26.9) (float-vector 11.6047 -6.7 -26.9) (float-vector 6.7 -11.6047 -26.9) (float-vector -2.309264e-14 -13.4 -26.9) (float-vector -6.7 -11.6047 -26.9) (float-vector -11.6047 -6.7 -26.9) (float-vector -13.4 1.776357e-14 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -6.7 11.6047 -26.9) (float-vector 7.993606e-15 13.4 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 11.6047 6.7 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -20.0 25.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 27.5 -20.0 25.0) (float-vector 27.5 10.0 15.0) (float-vector 27.5 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 72.5 -20.0 25.0) (float-vector 72.5 -20.0 -25.0) (float-vector 72.5 10.0 -15.0) (float-vector 72.5 10.0 15.0)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 72.5 -20.0 -25.0) (float-vector 72.5 -20.0 25.0) (float-vector 27.5 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 27.5 10.0 -15.0) (float-vector 72.5 10.0 -15.0) (float-vector 72.5 -20.0 -25.0) (float-vector 27.5 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 27.5 10.0 15.0) (float-vector 72.5 10.0 15.0) (float-vector 72.5 10.0 -15.0) (float-vector 27.5 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 25.0) (float-vector 72.5 -20.0 25.0) (float-vector 72.5 10.0 15.0) (float-vector 27.5 10.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-p :weight 272.0 :centroid (float-vector 28.6765 0.959807 -4.192930e-16) :inertia-tensor #2f((1.384287e+05 65174.0 -6.505705e-12) (65174.0 2.573435e+05 2.815271e-12) (-6.505705e-12 2.815271e-12 2.827948e+05))))

     ;; definition of :larm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector -3.155444e-30 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -6.310887e-30 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector -3.155444e-30 -10.0 -27.5) (float-vector -3.155444e-30 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector -3.155444e-30 -10.0 27.5) (float-vector -6.310887e-30 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector -3.155444e-30 -10.0 -26.5) (float-vector -3.155444e-30 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -3.155444e-30 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector -3.155444e-30 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector -6.310887e-30 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -3.155444e-30 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.0 45.1 -29.4) (float-vector -14.0 94.9 -29.4) (float-vector 45.0 94.9 -29.4) (float-vector 45.0 45.1 -29.4)))
         (instance face :init :vertices (list (float-vector 45.0 94.9 -29.4) (float-vector 45.0 94.9 -0.6) (float-vector 45.0 45.1 -0.6) (float-vector 45.0 45.1 -29.4)))
         (instance face :init :vertices (list (float-vector 45.0 94.9 -0.6) (float-vector -14.0 94.9 -0.6) (float-vector -14.0 45.1 -0.6) (float-vector 45.0 45.1 -0.6)))
         (instance face :init :vertices (list (float-vector -14.0 45.1 -0.6) (float-vector -14.0 45.1 -29.4) (float-vector 45.0 45.1 -29.4) (float-vector 45.0 45.1 -0.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.7 45.1 -26.6047) (float-vector -11.6047 45.1 -21.7) (float-vector -13.4 45.1 -15.0) (float-vector -11.6047 45.1 -8.3) (float-vector -6.7 45.1 -3.39526) (float-vector 2.219546e-14 45.1 -1.6) (float-vector 6.7 45.1 -3.39526) (float-vector 11.6047 45.1 -8.3) (float-vector 13.4 45.1 -15.0) (float-vector 11.6047 45.1 -21.7) (float-vector 6.7 45.1 -26.6047) (float-vector 7.403084e-15 45.1 -28.4)))
))
         (instance face :init :vertices (list (float-vector -14.0 94.9 -0.6) (float-vector -14.0 94.9 -29.4) (float-vector -14.0 45.1 -29.4) (float-vector -14.0 45.1 -0.6)))
         (instance face :init :vertices (list (float-vector -14.0 94.9 -29.4) (float-vector -14.0 94.9 -0.6) (float-vector 45.0 94.9 -0.6) (float-vector 45.0 94.9 -29.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 94.9 -21.7) (float-vector -6.7 94.9 -26.6047) (float-vector 2.398982e-14 94.9 -28.4) (float-vector 6.7 94.9 -26.6047) (float-vector 11.6047 94.9 -21.7) (float-vector 13.4 94.9 -15.0) (float-vector 11.6047 94.9 -8.3) (float-vector 6.7 94.9 -3.39526) (float-vector 3.878219e-14 94.9 -1.6) (float-vector -6.7 94.9 -3.39526) (float-vector -11.6047 94.9 -8.3) (float-vector -13.4 94.9 -15.0)))
))
         (instance face :init :vertices (list (float-vector 6.736950e-15 43.1 -28.4) (float-vector 7.403084e-15 45.1 -28.4) (float-vector 6.7 45.1 -26.6047) (float-vector 6.7 43.1 -26.6047)))
         (instance face :init :vertices (list (float-vector 2.398982e-14 94.9 -28.4) (float-vector 2.465595e-14 96.9 -28.4) (float-vector 6.7 96.9 -26.6047) (float-vector 6.7 94.9 -26.6047)))
         (instance face :init :vertices (list (float-vector 11.6047 45.1 -21.7) (float-vector 11.6047 43.1 -21.7) (float-vector 6.7 43.1 -26.6047) (float-vector 6.7 45.1 -26.6047)))
         (instance face :init :vertices (list (float-vector 6.7 96.9 -26.6047) (float-vector 11.6047 96.9 -21.7) (float-vector 11.6047 94.9 -21.7) (float-vector 6.7 94.9 -26.6047)))
         (instance face :init :vertices (list (float-vector 13.4 45.1 -15.0) (float-vector 13.4 43.1 -15.0) (float-vector 11.6047 43.1 -21.7) (float-vector 11.6047 45.1 -21.7)))
         (instance face :init :vertices (list (float-vector 11.6047 96.9 -21.7) (float-vector 13.4 96.9 -15.0) (float-vector 13.4 94.9 -15.0) (float-vector 11.6047 94.9 -21.7)))
         (instance face :init :vertices (list (float-vector 11.6047 45.1 -8.3) (float-vector 11.6047 43.1 -8.3) (float-vector 13.4 43.1 -15.0) (float-vector 13.4 45.1 -15.0)))
         (instance face :init :vertices (list (float-vector 13.4 96.9 -15.0) (float-vector 11.6047 96.9 -8.3) (float-vector 11.6047 94.9 -8.3) (float-vector 13.4 94.9 -15.0)))
         (instance face :init :vertices (list (float-vector 6.7 45.1 -3.39526) (float-vector 6.7 43.1 -3.39526) (float-vector 11.6047 43.1 -8.3) (float-vector 11.6047 45.1 -8.3)))
         (instance face :init :vertices (list (float-vector 11.6047 96.9 -8.3) (float-vector 6.7 96.9 -3.39526) (float-vector 6.7 94.9 -3.39526) (float-vector 11.6047 94.9 -8.3)))
         (instance face :init :vertices (list (float-vector 2.219546e-14 45.1 -1.6) (float-vector 2.152933e-14 43.1 -1.6) (float-vector 6.7 43.1 -3.39526) (float-vector 6.7 45.1 -3.39526)))
         (instance face :init :vertices (list (float-vector 6.7 96.9 -3.39526) (float-vector 3.944833e-14 96.9 -1.6) (float-vector 3.878219e-14 94.9 -1.6) (float-vector 6.7 94.9 -3.39526)))
         (instance face :init :vertices (list (float-vector -6.7 45.1 -3.39526) (float-vector -6.7 43.1 -3.39526) (float-vector 2.152933e-14 43.1 -1.6) (float-vector 2.219546e-14 45.1 -1.6)))
         (instance face :init :vertices (list (float-vector 3.944833e-14 96.9 -1.6) (float-vector -6.7 96.9 -3.39526) (float-vector -6.7 94.9 -3.39526) (float-vector 3.878219e-14 94.9 -1.6)))
         (instance face :init :vertices (list (float-vector -11.6047 45.1 -8.3) (float-vector -11.6047 43.1 -8.3) (float-vector -6.7 43.1 -3.39526) (float-vector -6.7 45.1 -3.39526)))
         (instance face :init :vertices (list (float-vector -6.7 96.9 -3.39526) (float-vector -11.6047 96.9 -8.3) (float-vector -11.6047 94.9 -8.3) (float-vector -6.7 94.9 -3.39526)))
         (instance face :init :vertices (list (float-vector -13.4 45.1 -15.0) (float-vector -13.4 43.1 -15.0) (float-vector -11.6047 43.1 -8.3) (float-vector -11.6047 45.1 -8.3)))
         (instance face :init :vertices (list (float-vector -11.6047 96.9 -8.3) (float-vector -13.4 96.9 -15.0) (float-vector -13.4 94.9 -15.0) (float-vector -11.6047 94.9 -8.3)))
         (instance face :init :vertices (list (float-vector -11.6047 45.1 -21.7) (float-vector -11.6047 43.1 -21.7) (float-vector -13.4 43.1 -15.0) (float-vector -13.4 45.1 -15.0)))
         (instance face :init :vertices (list (float-vector -13.4 96.9 -15.0) (float-vector -11.6047 96.9 -21.7) (float-vector -11.6047 94.9 -21.7) (float-vector -13.4 94.9 -15.0)))
         (instance face :init :vertices (list (float-vector -6.7 45.1 -26.6047) (float-vector -6.7 43.1 -26.6047) (float-vector -11.6047 43.1 -21.7) (float-vector -11.6047 45.1 -21.7)))
         (instance face :init :vertices (list (float-vector -11.6047 96.9 -21.7) (float-vector -6.7 96.9 -26.6047) (float-vector -6.7 94.9 -26.6047) (float-vector -11.6047 94.9 -21.7)))
         (instance face :init :vertices (list (float-vector -6.7 43.1 -26.6047) (float-vector 6.736950e-15 43.1 -28.4) (float-vector 6.7 43.1 -26.6047) (float-vector 11.6047 43.1 -21.7) (float-vector 13.4 43.1 -15.0) (float-vector 11.6047 43.1 -8.3) (float-vector 6.7 43.1 -3.39526) (float-vector 2.152933e-14 43.1 -1.6) (float-vector -6.7 43.1 -3.39526) (float-vector -11.6047 43.1 -8.3) (float-vector -13.4 43.1 -15.0) (float-vector -11.6047 43.1 -21.7)))
         (instance face :init :vertices (list (float-vector 6.736950e-15 43.1 -28.4) (float-vector -6.7 43.1 -26.6047) (float-vector -6.7 45.1 -26.6047) (float-vector 7.403084e-15 45.1 -28.4)))
         (instance face :init :vertices (list (float-vector -6.7 96.9 -26.6047) (float-vector 2.465595e-14 96.9 -28.4) (float-vector 2.398982e-14 94.9 -28.4) (float-vector -6.7 94.9 -26.6047)))
         (instance face :init :vertices (list (float-vector 2.465595e-14 96.9 -28.4) (float-vector -6.7 96.9 -26.6047) (float-vector -11.6047 96.9 -21.7) (float-vector -13.4 96.9 -15.0) (float-vector -11.6047 96.9 -8.3) (float-vector -6.7 96.9 -3.39526) (float-vector 3.944833e-14 96.9 -1.6) (float-vector 6.7 96.9 -3.39526) (float-vector 11.6047 96.9 -8.3) (float-vector 13.4 96.9 -15.0) (float-vector 11.6047 96.9 -21.7) (float-vector 6.7 96.9 -26.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-y :weight 114.946 :centroid (float-vector 14.0703 66.8696 -13.9631) :inertia-tensor #2f((52874.0 -5062.78 1676.97) (-5062.78 46430.0 5024.22) (1676.97 5024.22 72431.2))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 5.684342e-14 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 0.0 30.0) (float-vector 10.0 0.0 29.0) (float-vector 10.0 49.0 29.0) (float-vector 10.0 49.0 -29.0) (float-vector 10.0 5.684342e-14 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -30.0) (float-vector -10.0 50.0 30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 5.684342e-14 -30.0) (float-vector -10.0 5.684342e-14 -29.0) (float-vector -10.0 49.0 -29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 0.0 29.0) (float-vector -10.0 0.0 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 30.0) (float-vector -10.0 0.0 30.0) (float-vector -10.0 0.0 29.0) (float-vector -7.07107 -7.07107 29.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -30.0) (float-vector -7.07107 -7.07107 -29.0) (float-vector -10.0 5.684342e-14 -29.0) (float-vector -10.0 5.684342e-14 -30.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 30.0) (float-vector -7.07107 -7.07107 30.0) (float-vector -7.07107 -7.07107 29.0) (float-vector 1.262177e-29 -10.0 29.0)))
         (instance face :init :vertices (list (float-vector 1.262177e-29 -10.0 -30.0) (float-vector 1.262177e-29 -10.0 -29.0) (float-vector -7.07107 -7.07107 -29.0) (float-vector -7.07107 -7.07107 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 30.0) (float-vector 0.0 -10.0 30.0) (float-vector 1.262177e-29 -10.0 29.0) (float-vector 7.07107 -7.07107 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -30.0) (float-vector 7.07107 -7.07107 -29.0) (float-vector 1.262177e-29 -10.0 -29.0) (float-vector 1.262177e-29 -10.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 30.0) (float-vector 10.0 50.0 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 0.0 30.0) (float-vector -7.07107 -7.07107 30.0) (float-vector 0.0 -10.0 30.0) (float-vector 7.07107 -7.07107 30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -30.0) (float-vector 1.262177e-29 -10.0 -30.0) (float-vector -7.07107 -7.07107 -30.0) (float-vector -10.0 5.684342e-14 -30.0) (float-vector -10.0 50.0 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 5.684342e-14 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 30.0) (float-vector 7.07107 -7.07107 29.0) (float-vector 10.0 0.0 29.0) (float-vector 10.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 5.684342e-14 -30.0) (float-vector 10.0 5.684342e-14 -29.0) (float-vector 7.07107 -7.07107 -29.0) (float-vector 7.07107 -7.07107 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 29.0) (float-vector 10.0 0.0 29.0) (float-vector 7.07107 -7.07107 29.0) (float-vector 1.262177e-29 -10.0 29.0) (float-vector -7.07107 -7.07107 29.0) (float-vector -10.0 0.0 29.0) (float-vector -10.0 49.0 29.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 -29.0) (float-vector 10.0 49.0 29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 49.0 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 49.0 -29.0) (float-vector -10.0 5.684342e-14 -29.0) (float-vector -7.07107 -7.07107 -29.0) (float-vector 1.262177e-29 -10.0 -29.0) (float-vector 7.07107 -7.07107 -29.0) (float-vector 10.0 5.684342e-14 -29.0) (float-vector 10.0 49.0 -29.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 90.0 27.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 51.0 26.5) (float-vector -10.0 51.0 -26.5) (float-vector -10.0 90.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 50.0 -27.5) (float-vector 10.0 50.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 90.0 -27.5) (float-vector 10.0 90.0 -26.5) (float-vector 10.0 51.0 -26.5) (float-vector 10.0 51.0 26.5) (float-vector 10.0 90.0 26.5) (float-vector 10.0 90.0 27.5) (float-vector 10.0 50.0 27.5) (float-vector 10.0 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.0711 27.5) (float-vector 10.0 90.0 27.5) (float-vector 10.0 90.0 26.5) (float-vector 7.07107 97.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.0711 -27.5) (float-vector 7.07107 97.0711 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 100.0 27.5) (float-vector 7.07107 97.0711 27.5) (float-vector 7.07107 97.0711 26.5) (float-vector 1.224647e-15 100.0 26.5)))
         (instance face :init :vertices (list (float-vector 1.224647e-15 100.0 -27.5) (float-vector 1.224647e-15 100.0 -26.5) (float-vector 7.07107 97.0711 -26.5) (float-vector 7.07107 97.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 27.5) (float-vector 1.224647e-15 100.0 27.5) (float-vector 1.224647e-15 100.0 26.5) (float-vector -7.07107 97.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 -27.5) (float-vector -7.07107 97.0711 -26.5) (float-vector 1.224647e-15 100.0 -26.5) (float-vector 1.224647e-15 100.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector 10.0 50.0 27.5) (float-vector 10.0 90.0 27.5) (float-vector 7.07107 97.0711 27.5) (float-vector 1.224647e-15 100.0 27.5) (float-vector -7.07107 97.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 -27.5) (float-vector 1.224647e-15 100.0 -27.5) (float-vector 7.07107 97.0711 -27.5) (float-vector 10.0 90.0 -27.5) (float-vector 10.0 50.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 97.0711 27.5) (float-vector -7.07107 97.0711 26.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 90.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 90.0 -26.5) (float-vector -7.07107 97.0711 -26.5) (float-vector -7.07107 97.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 26.5) (float-vector -10.0 90.0 26.5) (float-vector -7.07107 97.0711 26.5) (float-vector 1.224647e-15 100.0 26.5) (float-vector 7.07107 97.0711 26.5) (float-vector 10.0 90.0 26.5) (float-vector 10.0 51.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 -26.5) (float-vector -10.0 51.0 26.5) (float-vector 10.0 51.0 26.5) (float-vector 10.0 51.0 -26.5)))
         (instance face :init :vertices (list (float-vector 10.0 51.0 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 7.07107 97.0711 -26.5) (float-vector 1.224647e-15 100.0 -26.5) (float-vector -7.07107 97.0711 -26.5) (float-vector -10.0 90.0 -26.5) (float-vector -10.0 51.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 17.2414 :centroid (float-vector -8.769790e-15 46.7304 2.842171e-13) :inertia-tensor #2f((21505.3 -3.381467e-13 1.115121e-12) (-3.381467e-13 11193.5 -5.335858e-13) (1.115121e-12 -5.335858e-13 11461.2))))

     ;; definition of :larm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 5.25 -9.09327 21.15) (float-vector -1.776357e-14 -10.5 21.15) (float-vector -5.25 -9.09327 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 6.217249e-15 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25 -9.09327 -21.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 21.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 6.217249e-15 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector 6.217249e-15 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 6.217249e-15 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 6.217249e-15 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 21.15) (float-vector -5.25 -9.09327 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -5.25 -9.09327 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 21.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -1.776357e-14 -10.5 -21.15) (float-vector -5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 21.15) (float-vector 5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector -1.776357e-14 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.776357e-14 -10.5 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector 5.25 -9.09327 -21.15) (float-vector -1.776357e-14 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 21.15) (float-vector 9.09327 -5.25 23.15) (float-vector 5.25 -9.09327 23.15) (float-vector 5.25 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 -9.09327 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 9.09327 -5.25 -21.15) (float-vector 5.25 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 6.217249e-15 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25 -9.09327 23.15) (float-vector -1.776357e-14 -10.5 23.15) (float-vector 5.25 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09327 -5.25 23.15) (float-vector 9.09327 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 -5.25 -23.15) (float-vector 5.25 -9.09327 -23.15) (float-vector -1.776357e-14 -10.5 -23.15) (float-vector -5.25 -9.09327 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 6.217249e-15 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 6.5 56.0 14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 84.0 -14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 84.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector -6.5 84.0 14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 84.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 56.0 14.5) (float-vector -6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 56.0 14.5) (float-vector 6.5 56.0 14.5) (float-vector 6.5 84.0 14.5) (float-vector -6.5 84.0 14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.76314 60.25 14.5) (float-vector 2.75 58.2369 14.5) (float-vector -9.325873e-15 57.5 14.5) (float-vector -2.75 58.2369 14.5) (float-vector -4.76314 60.25 14.5) (float-vector -5.5 63.0 14.5) (float-vector -4.76314 65.75 14.5) (float-vector -2.75 67.7631 14.5) (float-vector 3.108624e-15 68.5 14.5) (float-vector 2.75 67.7631 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 5.5 63.0 14.5)))
))
         (instance face :init :vertices (list (float-vector -6.5 56.0 -14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 56.0 14.5) (float-vector -6.5 56.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 56.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector 6.5 84.0 -14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 2.75 58.2369 -14.5) (float-vector 4.76314 60.25 -14.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 65.75 -14.5) (float-vector 2.75 67.7631 -14.5) (float-vector 3.108624e-15 68.5 -14.5) (float-vector -2.75 67.7631 -14.5) (float-vector -4.76314 65.75 -14.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 60.25 -14.5) (float-vector -2.75 58.2369 -14.5) (float-vector -9.325873e-15 57.5 -14.5)))
))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 5.5 63.0 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 4.76314 65.75 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -14.5) (float-vector 5.5 63.0 -16.5) (float-vector 4.76314 65.75 -16.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 14.5) (float-vector 2.75 67.7631 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 65.75 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 2.75 67.7631 -14.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 3.108624e-15 68.5 14.5) (float-vector 3.108624e-15 68.5 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 -16.5) (float-vector 3.108624e-15 68.5 -16.5) (float-vector 3.108624e-15 68.5 -14.5) (float-vector 2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 14.5) (float-vector -2.75 67.7631 16.5) (float-vector 3.108624e-15 68.5 16.5) (float-vector 3.108624e-15 68.5 14.5)))
         (instance face :init :vertices (list (float-vector 3.108624e-15 68.5 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector -2.75 67.7631 -14.5) (float-vector 3.108624e-15 68.5 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 14.5) (float-vector -4.76314 65.75 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -4.76314 65.75 -14.5) (float-vector -2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 14.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 14.5) (float-vector -4.76314 60.25 16.5) (float-vector -5.5 63.0 16.5) (float-vector -5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -4.76314 60.25 -14.5) (float-vector -5.5 63.0 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 14.5) (float-vector -2.75 58.2369 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -4.76314 60.25 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -2.75 58.2369 -14.5) (float-vector -4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector -9.325873e-15 57.5 14.5) (float-vector -9.325873e-15 57.5 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -2.75 58.2369 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 -16.5) (float-vector -9.325873e-15 57.5 -16.5) (float-vector -9.325873e-15 57.5 -14.5) (float-vector -2.75 58.2369 -14.5)))
         (instance face :init :vertices (list (float-vector 2.75 58.2369 14.5) (float-vector 2.75 58.2369 16.5) (float-vector -9.325873e-15 57.5 16.5) (float-vector -9.325873e-15 57.5 14.5)))
         (instance face :init :vertices (list (float-vector -9.325873e-15 57.5 -16.5) (float-vector 2.75 58.2369 -16.5) (float-vector 2.75 58.2369 -14.5) (float-vector -9.325873e-15 57.5 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 14.5) (float-vector 4.76314 60.25 16.5) (float-vector 2.75 58.2369 16.5) (float-vector 2.75 58.2369 14.5)))
         (instance face :init :vertices (list (float-vector 2.75 58.2369 -16.5) (float-vector 4.76314 60.25 -16.5) (float-vector 4.76314 60.25 -14.5) (float-vector 2.75 58.2369 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 16.5) (float-vector 5.5 63.0 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 3.108624e-15 68.5 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -9.325873e-15 57.5 16.5) (float-vector 2.75 58.2369 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 4.76314 60.25 16.5) (float-vector 4.76314 60.25 14.5) (float-vector 5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 -16.5) (float-vector 5.5 63.0 -16.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -16.5) (float-vector 4.76314 60.25 -16.5) (float-vector 2.75 58.2369 -16.5) (float-vector -9.325873e-15 57.5 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector 3.108624e-15 68.5 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 4.76314 65.75 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-p :weight 87 :centroid (float-vector 2.454723e-15 25.257 1.421085e-14) :inertia-tensor #2f((81977.6 2.044884e-13 0.0) (2.044884e-13 14409.1 0.0) (0.0 0.0 73919.0))))

     ;; definition of :larm-gripper
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 0.0 17.5) (float-vector 10.0 0.0 16.5) (float-vector 10.0 39.0 16.5) (float-vector 10.0 39.0 -16.5) (float-vector 10.0 0.0 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -17.5) (float-vector -10.0 40.0 17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -17.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 39.0 -16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 17.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 0.0 16.5) (float-vector -7.07107 -7.07107 16.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -17.5) (float-vector -7.07107 -7.07107 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 0.0 -17.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 17.5) (float-vector -7.07107 -7.07107 17.5) (float-vector -7.07107 -7.07107 16.5) (float-vector 0.0 -10.0 16.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -17.5) (float-vector -5.048710e-29 -10.0 -16.5) (float-vector -7.07107 -7.07107 -16.5) (float-vector -7.07107 -7.07107 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 17.5) (float-vector 0.0 -10.0 17.5) (float-vector 0.0 -10.0 16.5) (float-vector 7.07107 -7.07107 16.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -17.5) (float-vector 7.07107 -7.07107 -16.5) (float-vector -5.048710e-29 -10.0 -16.5) (float-vector 0.0 -10.0 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 17.5) (float-vector 10.0 40.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 0.0 17.5) (float-vector -7.07107 -7.07107 17.5) (float-vector 0.0 -10.0 17.5) (float-vector 7.07107 -7.07107 17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -17.5) (float-vector 0.0 -10.0 -17.5) (float-vector -7.07107 -7.07107 -17.5) (float-vector -10.0 0.0 -17.5) (float-vector -10.0 40.0 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 0.0 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 17.5) (float-vector 7.07107 -7.07107 16.5) (float-vector 10.0 0.0 16.5) (float-vector 10.0 0.0 17.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -17.5) (float-vector 10.0 0.0 -16.5) (float-vector 7.07107 -7.07107 -16.5) (float-vector 7.07107 -7.07107 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 16.5) (float-vector 10.0 0.0 16.5) (float-vector 7.07107 -7.07107 16.5) (float-vector 0.0 -10.0 16.5) (float-vector -7.07107 -7.07107 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 39.0 16.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -16.5) (float-vector 10.0 39.0 16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 39.0 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -7.07107 -7.07107 -16.5) (float-vector -5.048710e-29 -10.0 -16.5) (float-vector 7.07107 -7.07107 -16.5) (float-vector 10.0 0.0 -16.5) (float-vector 10.0 39.0 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-gripper :weight 6.86568 :centroid (float-vector 3.632720e-14 22.3891 4.121148e-13) :inertia-tensor #2f((3493.1 -2.354196e-14 -8.524098e-26) (-2.354196e-14 1860.18 -5.684342e-14) (-8.524098e-26 -5.684342e-14 2090.64))))

     ;; definition of :head-neck-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -20.0) (float-vector 10.0 20.0 -20.0) (float-vector 10.0 20.0 20.0) (float-vector 10.0 0.0 20.0) (float-vector 10.0 0.0 19.0) (float-vector 10.0 19.0 19.0) (float-vector 10.0 19.0 -19.0) (float-vector 10.0 0.0 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 20.0 -20.0) (float-vector -10.0 20.0 20.0) (float-vector 10.0 20.0 20.0) (float-vector 10.0 20.0 -20.0)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -20.0) (float-vector -10.0 0.0 -19.0) (float-vector -10.0 19.0 -19.0) (float-vector -10.0 19.0 19.0) (float-vector -10.0 0.0 19.0) (float-vector -10.0 0.0 20.0) (float-vector -10.0 20.0 20.0) (float-vector -10.0 20.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 20.0) (float-vector -10.0 0.0 20.0) (float-vector -10.0 0.0 19.0) (float-vector -7.07107 -7.07107 19.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -20.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector -10.0 0.0 -19.0) (float-vector -10.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 20.0) (float-vector -7.07107 -7.07107 20.0) (float-vector -7.07107 -7.07107 19.0) (float-vector 0.0 -10.0 19.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -20.0) (float-vector 0.0 -10.0 -19.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector -7.07107 -7.07107 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 20.0) (float-vector 0.0 -10.0 20.0) (float-vector 0.0 -10.0 19.0) (float-vector 7.07107 -7.07107 19.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -20.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 0.0 -10.0 -19.0) (float-vector 0.0 -10.0 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 20.0) (float-vector 10.0 20.0 20.0) (float-vector -10.0 20.0 20.0) (float-vector -10.0 0.0 20.0) (float-vector -7.07107 -7.07107 20.0) (float-vector 0.0 -10.0 20.0) (float-vector 7.07107 -7.07107 20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -20.0) (float-vector 0.0 -10.0 -20.0) (float-vector -7.07107 -7.07107 -20.0) (float-vector -10.0 0.0 -20.0) (float-vector -10.0 20.0 -20.0) (float-vector 10.0 20.0 -20.0) (float-vector 10.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 20.0) (float-vector 7.07107 -7.07107 19.0) (float-vector 10.0 0.0 19.0) (float-vector 10.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -20.0) (float-vector 10.0 0.0 -19.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 7.07107 -7.07107 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 19.0 19.0) (float-vector 10.0 0.0 19.0) (float-vector 7.07107 -7.07107 19.0) (float-vector 0.0 -10.0 19.0) (float-vector -7.07107 -7.07107 19.0) (float-vector -10.0 0.0 19.0) (float-vector -10.0 19.0 19.0)))
         (instance face :init :vertices (list (float-vector 10.0 19.0 -19.0) (float-vector 10.0 19.0 19.0) (float-vector -10.0 19.0 19.0) (float-vector -10.0 19.0 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 19.0 -19.0) (float-vector -10.0 0.0 -19.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector 0.0 -10.0 -19.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 10.0 0.0 -19.0) (float-vector 10.0 19.0 -19.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.5 7.0 20.5) (float-vector 14.5 7.0 20.5) (float-vector 14.5 -21.0 20.5) (float-vector -14.5 -21.0 20.5)))
         (instance face :init :vertices (list (float-vector 14.5 -21.0 20.5) (float-vector 14.5 -21.0 33.5) (float-vector -14.5 -21.0 33.5) (float-vector -14.5 -21.0 20.5)))
         (instance face :init :vertices (list (float-vector 14.5 -21.0 33.5) (float-vector 14.5 7.0 33.5) (float-vector -14.5 7.0 33.5) (float-vector -14.5 -21.0 33.5)))
         (instance face :init :vertices (list (float-vector -14.5 7.0 33.5) (float-vector -14.5 7.0 20.5) (float-vector -14.5 -21.0 20.5) (float-vector -14.5 -21.0 33.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -14.5 2.75 22.2369) (float-vector -14.5 4.76314 24.25) (float-vector -14.5 5.5 27.0) (float-vector -14.5 4.76314 29.75) (float-vector -14.5 2.75 31.7631) (float-vector -14.5 -9.880985e-15 32.5) (float-vector -14.5 -2.75 31.7631) (float-vector -14.5 -4.76314 29.75) (float-vector -14.5 -5.5 27.0) (float-vector -14.5 -4.76314 24.25) (float-vector -14.5 -2.75 22.2369) (float-vector -14.5 -3.219647e-15 21.5)))
))
         (instance face :init :vertices (list (float-vector 14.5 7.0 33.5) (float-vector 14.5 7.0 20.5) (float-vector -14.5 7.0 20.5) (float-vector -14.5 7.0 33.5)))
         (instance face :init :vertices (list (float-vector 14.5 7.0 20.5) (float-vector 14.5 7.0 33.5) (float-vector 14.5 -21.0 33.5) (float-vector 14.5 -21.0 20.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 14.5 4.76314 24.25) (float-vector 14.5 2.75 22.2369) (float-vector 14.5 3.219647e-15 21.5) (float-vector 14.5 -2.75 22.2369) (float-vector 14.5 -4.76314 24.25) (float-vector 14.5 -5.5 27.0) (float-vector 14.5 -4.76314 29.75) (float-vector 14.5 -2.75 31.7631) (float-vector 14.5 -3.441691e-15 32.5) (float-vector 14.5 2.75 31.7631) (float-vector 14.5 4.76314 29.75) (float-vector 14.5 5.5 27.0)))
))
         (instance face :init :vertices (list (float-vector -16.5 -3.663736e-15 21.5) (float-vector -14.5 -3.219647e-15 21.5) (float-vector -14.5 -2.75 22.2369) (float-vector -16.5 -2.75 22.2369)))
         (instance face :init :vertices (list (float-vector 14.5 3.219647e-15 21.5) (float-vector 16.5 3.663736e-15 21.5) (float-vector 16.5 -2.75 22.2369) (float-vector 14.5 -2.75 22.2369)))
         (instance face :init :vertices (list (float-vector -14.5 -4.76314 24.25) (float-vector -16.5 -4.76314 24.25) (float-vector -16.5 -2.75 22.2369) (float-vector -14.5 -2.75 22.2369)))
         (instance face :init :vertices (list (float-vector 16.5 -2.75 22.2369) (float-vector 16.5 -4.76314 24.25) (float-vector 14.5 -4.76314 24.25) (float-vector 14.5 -2.75 22.2369)))
         (instance face :init :vertices (list (float-vector -14.5 -5.5 27.0) (float-vector -16.5 -5.5 27.0) (float-vector -16.5 -4.76314 24.25) (float-vector -14.5 -4.76314 24.25)))
         (instance face :init :vertices (list (float-vector 16.5 -4.76314 24.25) (float-vector 16.5 -5.5 27.0) (float-vector 14.5 -5.5 27.0) (float-vector 14.5 -4.76314 24.25)))
         (instance face :init :vertices (list (float-vector -14.5 -4.76314 29.75) (float-vector -16.5 -4.76314 29.75) (float-vector -16.5 -5.5 27.0) (float-vector -14.5 -5.5 27.0)))
         (instance face :init :vertices (list (float-vector 16.5 -5.5 27.0) (float-vector 16.5 -4.76314 29.75) (float-vector 14.5 -4.76314 29.75) (float-vector 14.5 -5.5 27.0)))
         (instance face :init :vertices (list (float-vector -14.5 -2.75 31.7631) (float-vector -16.5 -2.75 31.7631) (float-vector -16.5 -4.76314 29.75) (float-vector -14.5 -4.76314 29.75)))
         (instance face :init :vertices (list (float-vector 16.5 -4.76314 29.75) (float-vector 16.5 -2.75 31.7631) (float-vector 14.5 -2.75 31.7631) (float-vector 14.5 -4.76314 29.75)))
         (instance face :init :vertices (list (float-vector -14.5 -9.880985e-15 32.5) (float-vector -16.5 -1.032507e-14 32.5) (float-vector -16.5 -2.75 31.7631) (float-vector -14.5 -2.75 31.7631)))
         (instance face :init :vertices (list (float-vector 16.5 -2.75 31.7631) (float-vector 16.5 -2.997602e-15 32.5) (float-vector 14.5 -3.441691e-15 32.5) (float-vector 14.5 -2.75 31.7631)))
         (instance face :init :vertices (list (float-vector -14.5 2.75 31.7631) (float-vector -16.5 2.75 31.7631) (float-vector -16.5 -1.032507e-14 32.5) (float-vector -14.5 -9.880985e-15 32.5)))
         (instance face :init :vertices (list (float-vector 16.5 -2.997602e-15 32.5) (float-vector 16.5 2.75 31.7631) (float-vector 14.5 2.75 31.7631) (float-vector 14.5 -3.441691e-15 32.5)))
         (instance face :init :vertices (list (float-vector -14.5 4.76314 29.75) (float-vector -16.5 4.76314 29.75) (float-vector -16.5 2.75 31.7631) (float-vector -14.5 2.75 31.7631)))
         (instance face :init :vertices (list (float-vector 16.5 2.75 31.7631) (float-vector 16.5 4.76314 29.75) (float-vector 14.5 4.76314 29.75) (float-vector 14.5 2.75 31.7631)))
         (instance face :init :vertices (list (float-vector -14.5 5.5 27.0) (float-vector -16.5 5.5 27.0) (float-vector -16.5 4.76314 29.75) (float-vector -14.5 4.76314 29.75)))
         (instance face :init :vertices (list (float-vector 16.5 4.76314 29.75) (float-vector 16.5 5.5 27.0) (float-vector 14.5 5.5 27.0) (float-vector 14.5 4.76314 29.75)))
         (instance face :init :vertices (list (float-vector -14.5 4.76314 24.25) (float-vector -16.5 4.76314 24.25) (float-vector -16.5 5.5 27.0) (float-vector -14.5 5.5 27.0)))
         (instance face :init :vertices (list (float-vector 16.5 5.5 27.0) (float-vector 16.5 4.76314 24.25) (float-vector 14.5 4.76314 24.25) (float-vector 14.5 5.5 27.0)))
         (instance face :init :vertices (list (float-vector -14.5 2.75 22.2369) (float-vector -16.5 2.75 22.2369) (float-vector -16.5 4.76314 24.25) (float-vector -14.5 4.76314 24.25)))
         (instance face :init :vertices (list (float-vector 16.5 4.76314 24.25) (float-vector 16.5 2.75 22.2369) (float-vector 14.5 2.75 22.2369) (float-vector 14.5 4.76314 24.25)))
         (instance face :init :vertices (list (float-vector -16.5 2.75 22.2369) (float-vector -16.5 -3.663736e-15 21.5) (float-vector -16.5 -2.75 22.2369) (float-vector -16.5 -4.76314 24.25) (float-vector -16.5 -5.5 27.0) (float-vector -16.5 -4.76314 29.75) (float-vector -16.5 -2.75 31.7631) (float-vector -16.5 -1.032507e-14 32.5) (float-vector -16.5 2.75 31.7631) (float-vector -16.5 4.76314 29.75) (float-vector -16.5 5.5 27.0) (float-vector -16.5 4.76314 24.25)))
         (instance face :init :vertices (list (float-vector -16.5 -3.663736e-15 21.5) (float-vector -16.5 2.75 22.2369) (float-vector -14.5 2.75 22.2369) (float-vector -14.5 -3.219647e-15 21.5)))
         (instance face :init :vertices (list (float-vector 16.5 2.75 22.2369) (float-vector 16.5 3.663736e-15 21.5) (float-vector 14.5 3.219647e-15 21.5) (float-vector 14.5 2.75 22.2369)))
         (instance face :init :vertices (list (float-vector 16.5 3.663736e-15 21.5) (float-vector 16.5 2.75 22.2369) (float-vector 16.5 4.76314 24.25) (float-vector 16.5 5.5 27.0) (float-vector 16.5 4.76314 29.75) (float-vector 16.5 2.75 31.7631) (float-vector 16.5 -2.997602e-15 32.5) (float-vector 16.5 -2.75 31.7631) (float-vector 16.5 -4.76314 29.75) (float-vector 16.5 -5.5 27.0) (float-vector 16.5 -4.76314 24.25) (float-vector 16.5 -2.75 22.2369)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-y :weight 26.9757 :centroid (float-vector 1.792148e-16 -3.34891 22.0198) :inertia-tensor #2f((7927.47 -2.862852e-13 1.139170e-13) (-2.862852e-13 6334.63 2030.52) (1.139170e-13 2030.52 5008.22))))

     ;; definition of :head-neck-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 30.0 20.0) (float-vector 10.0 0.0 20.0) (float-vector 10.0 0.0 19.0) (float-vector 10.0 29.0 19.0) (float-vector 10.0 29.0 -19.0) (float-vector 10.0 0.0 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -20.0) (float-vector -10.0 30.0 20.0) (float-vector 10.0 30.0 20.0) (float-vector 10.0 30.0 -20.0)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -20.0) (float-vector -10.0 0.0 -19.0) (float-vector -10.0 29.0 -19.0) (float-vector -10.0 29.0 19.0) (float-vector -10.0 0.0 19.0) (float-vector -10.0 0.0 20.0) (float-vector -10.0 30.0 20.0) (float-vector -10.0 30.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 20.0) (float-vector -10.0 0.0 20.0) (float-vector -10.0 0.0 19.0) (float-vector -7.07107 -7.07107 19.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -20.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector -10.0 0.0 -19.0) (float-vector -10.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 20.0) (float-vector -7.07107 -7.07107 20.0) (float-vector -7.07107 -7.07107 19.0) (float-vector 0.0 -10.0 19.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -20.0) (float-vector 0.0 -10.0 -19.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector -7.07107 -7.07107 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 20.0) (float-vector 0.0 -10.0 20.0) (float-vector 0.0 -10.0 19.0) (float-vector 7.07107 -7.07107 19.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -20.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 0.0 -10.0 -19.0) (float-vector 0.0 -10.0 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 20.0) (float-vector 10.0 30.0 20.0) (float-vector -10.0 30.0 20.0) (float-vector -10.0 0.0 20.0) (float-vector -7.07107 -7.07107 20.0) (float-vector 0.0 -10.0 20.0) (float-vector 7.07107 -7.07107 20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -20.0) (float-vector 0.0 -10.0 -20.0) (float-vector -7.07107 -7.07107 -20.0) (float-vector -10.0 0.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 20.0) (float-vector 7.07107 -7.07107 19.0) (float-vector 10.0 0.0 19.0) (float-vector 10.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -20.0) (float-vector 10.0 0.0 -19.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 7.07107 -7.07107 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 19.0) (float-vector 10.0 0.0 19.0) (float-vector 7.07107 -7.07107 19.0) (float-vector 0.0 -10.0 19.0) (float-vector -7.07107 -7.07107 19.0) (float-vector -10.0 0.0 19.0) (float-vector -10.0 29.0 19.0)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -19.0) (float-vector 10.0 29.0 19.0) (float-vector -10.0 29.0 19.0) (float-vector -10.0 29.0 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -19.0) (float-vector -10.0 0.0 -19.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector 0.0 -10.0 -19.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 10.0 0.0 -19.0) (float-vector 10.0 29.0 -19.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 45.0 54.0 13.0) (float-vector 45.0 60.5 11.2583) (float-vector 39.0 60.5 11.2583) (float-vector 39.0 54.0 13.0)))
         (instance face :init :vertices (list (float-vector 45.0 54.0 13.0) (float-vector 45.0 47.5 11.2583) (float-vector 45.0 42.7417 6.5) (float-vector 45.0 41.0 1.309940e-14) (float-vector 45.0 42.7417 -6.5) (float-vector 45.0 47.5 -11.2583) (float-vector 45.0 54.0 -13.0) (float-vector 45.0 60.5 -11.2583) (float-vector 45.0 65.2583 -6.5) (float-vector 45.0 67.0 -8.549944e-15) (float-vector 45.0 65.2583 6.5) (float-vector 45.0 60.5 11.2583)))
         (instance face :init :vertices (list (float-vector 45.0 65.2583 6.5) (float-vector 39.0 65.2583 6.5) (float-vector 39.0 60.5 11.2583) (float-vector 45.0 60.5 11.2583)))
         (instance face :init :vertices (list (float-vector 45.0 67.0 -8.549944e-15) (float-vector 39.0 67.0 -7.436453e-15) (float-vector 39.0 65.2583 6.5) (float-vector 45.0 65.2583 6.5)))
         (instance face :init :vertices (list (float-vector 45.0 65.2583 -6.5) (float-vector 39.0 65.2583 -6.5) (float-vector 39.0 67.0 -7.436453e-15) (float-vector 45.0 67.0 -8.549944e-15)))
         (instance face :init :vertices (list (float-vector 45.0 60.5 -11.2583) (float-vector 39.0 60.5 -11.2583) (float-vector 39.0 65.2583 -6.5) (float-vector 45.0 65.2583 -6.5)))
         (instance face :init :vertices (list (float-vector 45.0 54.0 -13.0) (float-vector 39.0 54.0 -13.0) (float-vector 39.0 60.5 -11.2583) (float-vector 45.0 60.5 -11.2583)))
         (instance face :init :vertices (list (float-vector 45.0 47.5 -11.2583) (float-vector 39.0 47.5 -11.2583) (float-vector 39.0 54.0 -13.0) (float-vector 45.0 54.0 -13.0)))
         (instance face :init :vertices (list (float-vector 45.0 42.7417 -6.5) (float-vector 39.0 42.7417 -6.5) (float-vector 39.0 47.5 -11.2583) (float-vector 45.0 47.5 -11.2583)))
         (instance face :init :vertices (list (float-vector 45.0 41.0 1.309940e-14) (float-vector 39.0 41.0 1.421290e-14) (float-vector 39.0 42.7417 -6.5) (float-vector 45.0 42.7417 -6.5)))
         (instance face :init :vertices (list (float-vector 45.0 42.7417 6.5) (float-vector 39.0 42.7417 6.5) (float-vector 39.0 41.0 1.421290e-14) (float-vector 45.0 41.0 1.309940e-14)))
         (instance face :init :vertices (list (float-vector 45.0 47.5 11.2583) (float-vector 39.0 47.5 11.2583) (float-vector 39.0 42.7417 6.5) (float-vector 45.0 42.7417 6.5)))
         (instance face :init :vertices (list (float-vector 39.0 54.0 13.0) (float-vector 39.0 47.5 11.2583) (float-vector 45.0 47.5 11.2583) (float-vector 45.0 54.0 13.0)))
         (instance face :init :vertices (list (float-vector -19.0 74.0 -19.0) (float-vector -19.0 32.0 -19.0) (float-vector -19.0 32.0 19.0) (float-vector -19.0 74.0 19.0)))
         (instance face :init :vertices (list (float-vector -19.0 74.0 -19.0) (float-vector 39.0 74.0 -19.0) (float-vector 39.0 32.0 -19.0) (float-vector -19.0 32.0 -19.0)))
         (instance face :init :vertices (list (float-vector 39.0 74.0 -19.0) (float-vector 39.0 74.0 19.0) (float-vector 39.0 32.0 19.0) (float-vector 39.0 32.0 -19.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 39.0 47.5 11.2583) (float-vector 39.0 54.0 13.0) (float-vector 39.0 60.5 11.2583) (float-vector 39.0 65.2583 6.5) (float-vector 39.0 67.0 -7.436453e-15) (float-vector 39.0 65.2583 -6.5) (float-vector 39.0 60.5 -11.2583) (float-vector 39.0 54.0 -13.0) (float-vector 39.0 47.5 -11.2583) (float-vector 39.0 42.7417 -6.5) (float-vector 39.0 41.0 1.421290e-14) (float-vector 39.0 42.7417 6.5)))
))
         (instance face :init :vertices (list (float-vector 39.0 32.0 19.0) (float-vector -19.0 32.0 19.0) (float-vector -19.0 32.0 -19.0) (float-vector 39.0 32.0 -19.0)))
         (instance face :init :vertices (list (float-vector 39.0 74.0 19.0) (float-vector -19.0 74.0 19.0) (float-vector -19.0 32.0 19.0) (float-vector 39.0 32.0 19.0)))
         (instance face :init :vertices (list (float-vector -19.0 74.0 19.0) (float-vector 39.0 74.0 19.0) (float-vector 39.0 74.0 -19.0) (float-vector -19.0 74.0 -19.0)))
         (instance face :init :vertices (list (float-vector 63.75 79.0 19.5) (float-vector -53.0 79.0 19.5) (float-vector -53.0 79.0 -19.5) (float-vector 63.75 79.0 -19.5)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 19.5) (float-vector -53.0 79.0 19.5) (float-vector 63.75 79.0 19.5) (float-vector 40.0 60.0 19.5)))
         (instance face :init :vertices (list (float-vector 40.0 60.0 -19.5) (float-vector 63.75 79.0 -19.5) (float-vector -53.0 79.0 -19.5) (float-vector -15.0 60.0 -19.5)))
         (instance face :init :vertices (list (float-vector 40.0 60.0 -20.5) (float-vector 65.0 80.0 -20.5) (float-vector 65.0 80.0 20.5) (float-vector 40.0 60.0 20.5) (float-vector 40.0 60.0 19.5) (float-vector 63.75 79.0 19.5) (float-vector 63.75 79.0 -19.5) (float-vector 40.0 60.0 -19.5)))
         (instance face :init :vertices (list (float-vector -55.0 80.0 -20.5) (float-vector 65.0 80.0 -20.5) (float-vector 40.0 60.0 -20.5) (float-vector -15.0 60.0 -20.5)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 20.5) (float-vector 40.0 60.0 20.5) (float-vector 65.0 80.0 20.5) (float-vector -55.0 80.0 20.5)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 -19.5) (float-vector -15.0 60.0 -20.5) (float-vector 40.0 60.0 -20.5) (float-vector 40.0 60.0 -19.5)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 20.5) (float-vector -15.0 60.0 19.5) (float-vector 40.0 60.0 19.5) (float-vector 40.0 60.0 20.5)))
         (instance face :init :vertices (list (float-vector -55.0 80.0 20.5) (float-vector -55.0 80.0 -20.5) (float-vector -15.0 60.0 -20.5) (float-vector -15.0 60.0 -19.5) (float-vector -53.0 79.0 -19.5) (float-vector -53.0 79.0 19.5) (float-vector -15.0 60.0 19.5) (float-vector -15.0 60.0 20.5)))
         (instance face :init :vertices (list (float-vector -55.0 80.0 -20.5) (float-vector -55.0 80.0 20.5) (float-vector 65.0 80.0 20.5) (float-vector 65.0 80.0 -20.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-p :weight 206.056 :centroid (float-vector 10.3529 53.7278 1.091049e-15) :inertia-tensor #2f((10761.0 -2270.36 1.965438e-12) (-2270.36 2620.58 6.761212e-12) (1.965438e-12 6.761212e-12 9842.29))))

     ;; definition of assoc
     (send blink3 :newcoords (make-coords :pos (float-vector 1.332268e-14 80.0 7.105427e-15) :rot #2f((-1.0 -5.551115e-16 -2.220446e-16) (5.551115e-16 -1.0 4.440892e-16) (-2.220446e-16 4.440892e-16 1.0))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector -1.643130e-14 74.0 1.421085e-14) :rot #2f((1.0 7.771561e-16 -2.220446e-16) (-7.771561e-16 1.0 8.628166e-32) (2.220446e-16 8.628166e-32 1.0))))
     (send blink1 :assoc blink2)
     (send blink7 :newcoords (make-coords :pos (float-vector 0.0 63.0 0.0) :rot #2f((1.0 3.081488e-33 0.0) (-3.081488e-33 1.0 0.0) (0.0 0.0 1.0))))
     (send blink6 :assoc blink7)
     (send blink6 :newcoords (make-coords :pos (float-vector -1.998401e-14 90.0 4.263256e-14) :rot #2f((1.0 3.330669e-16 1.110223e-16) (-3.330669e-16 1.0 -1.848893e-32) (-1.110223e-16 -1.848893e-32 1.0))))
     (send blink5 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector -2.411565e-14 70.0 15.0) :rot #2f((1.0 -7.850462e-17 -3.925231e-16) (3.925231e-16 -2.220446e-16 1.0) (-7.850462e-17 -1.0 -2.220446e-16))))
     (send blink4 :assoc blink5)
     (send blink11 :newcoords (make-coords :pos (float-vector 1.332268e-14 80.0 7.105427e-15) :rot #2f((-1.0 -5.551115e-16 -2.220446e-16) (5.551115e-16 -1.0 4.440892e-16) (-2.220446e-16 4.440892e-16 1.0))))
     (send blink10 :assoc blink11)
     (send blink10 :newcoords (make-coords :pos (float-vector -1.643130e-14 74.0 1.421085e-14) :rot #2f((1.0 7.771561e-16 -2.220446e-16) (-7.771561e-16 1.0 8.628166e-32) (2.220446e-16 8.628166e-32 1.0))))
     (send blink9 :assoc blink10)
     (send blink15 :newcoords (make-coords :pos (float-vector -5.495604e-15 63.0 1.421085e-14) :rot #2f((1.0 -2.220446e-16 1.110223e-16) (2.220446e-16 1.0 1.232595e-32) (-1.110223e-16 1.232595e-32 1.0))))
     (send blink14 :assoc blink15)
     (send blink14 :newcoords (make-coords :pos (float-vector 1.498801e-14 90.0 -1.421085e-14) :rot #2f((1.0 8.881784e-16 -3.330669e-16) (-8.881784e-16 1.0 5.551115e-16) (3.330669e-16 -5.551115e-16 1.0))))
     (send blink13 :assoc blink14)
     (send blink13 :newcoords (make-coords :pos (float-vector 1.554312e-14 70.0 -15.0) :rot #2f((1.0 2.527862e-16 -1.570092e-16) (-1.570092e-16 2.220446e-16 -1.0) (-2.527862e-16 1.0 2.220446e-16))))
     (send blink12 :assoc blink13)
     (send blink8 :newcoords (make-coords :pos (float-vector -1.653273e-15 0.0 27.0) :rot #2f((1.110223e-16 -1.110223e-16 -1.0) (-1.0 -3.330669e-16 -1.110223e-16) (-3.330669e-16 1.0 -1.110223e-16))))
     (send blink16 :assoc blink8)
     (send blink16 :newcoords (make-coords :pos (float-vector 0.0 0.0 170.0) :rot #2f((-2.220446e-16 -1.0 0.0) (1.0 -2.220446e-16 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink16)
     (send blink12 :newcoords (make-coords :pos (float-vector -1.221245e-14 55.0 164.0) :rot #2f((-1.0 -4.440892e-16 -1.224647e-16) (-4.440892e-16 1.0 -3.951857e-32) (1.224647e-16 1.486667e-32 -1.0))))
     (send blink0 :assoc blink12)
     (send blink9 :newcoords (make-coords :pos (float-vector -9.436896e-15 42.5 60.0) :rot #2f((-1.0 0.0 0.0) (0.0 -2.220446e-16 -1.0) (0.0 -1.0 2.220446e-16))))
     (send blink0 :assoc blink9)
     (send blink4 :newcoords (make-coords :pos (float-vector 1.221245e-14 -55.0 164.0) :rot #2f((-1.0 0.0 0.0) (0.0 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink1 :newcoords (make-coords :pos (float-vector 9.436896e-15 -42.5 60.0) :rot #2f((-1.0 0.0 0.0) (0.0 -2.220446e-16 -1.0) (0.0 -1.0 2.220446e-16))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink8 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 70.0 6.089219e-15) :rot #2f((2.220446e-16 -3.925231e-16 1.0) (2.355139e-16 -1.0 -3.925231e-16) (1.0 2.355139e-16 -2.220446e-16))))))
     (send blink8 :assoc head-end-coords)

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink15 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -2.220446e-15 40.0 0.0) :rot #2f((1.0 -2.220446e-16 2.220446e-16) (2.220446e-16 1.0 -4.440892e-16) (-2.220446e-16 4.440892e-16 1.0))))))
     (send blink15 :assoc larm-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink11 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 0.0) :rot #2f((5.551115e-17 1.0 5.551115e-17) (-5.551115e-17 -5.551115e-17 1.0) (1.0 -5.551115e-17 5.551115e-17))))))
     (send blink11 :assoc lleg-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -3.155444e-30 40.0 -1.421085e-14) :rot #2f((1.0 3.081488e-33 0.0) (-3.081488e-33 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink7 :assoc rarm-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink3 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 0.0) :rot #2f((5.551115e-17 1.0 5.551115e-17) (-5.551115e-17 -5.551115e-17 1.0) (1.0 -5.551115e-17 5.551115e-17))))))
     (send blink3 :assoc rleg-end-coords)

     ;; definition of joint

     ;; definition of :head-neck-y
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink16 :name :head-neck-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :head-neck-p
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink16 :child-link blink8 :name :head-neck-p :axis :-z
			     :min    0.0 :max  180.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-y
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink12 :name :larm-shoulder-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-shoulder-p
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink12 :child-link blink13 :name :larm-shoulder-p :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-elbow-p
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink14 :name :larm-elbow-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :larm-gripper
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink15 :name :larm-gripper :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-crotch-p
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink9 :name :lleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-knee-p
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink9 :child-link blink10 :name :lleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :lleg-ankle-p
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink11 :name :lleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-y
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :rarm-shoulder-y :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-shoulder-p
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :rarm-shoulder-p :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-elbow-p
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink6 :name :rarm-elbow-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rarm-gripper
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink7 :name :rarm-gripper :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-crotch-p
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :rleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-knee-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :rleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :rleg-ankle-p
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :rleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     (setq head-root-link blink16)
     (setq head (list blink16 blink8))
     (setq larm-root-link blink12)
     (setq larm (list blink12 blink13 blink14 blink15))
     (setq lleg-root-link blink9)
     (setq lleg (list blink9 blink10 blink11))
     (setq rarm-root-link blink4)
     (setq rarm (list blink4 blink5 blink6 blink7))
     (setq rleg-root-link blink1)
     (setq rleg (list blink1 blink2 blink3))

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:head-neck-y (&rest args) (forward-message-to joint15 args))
  (:head-neck-p (&rest args) (forward-message-to joint7 args))
  (:larm-shoulder-y (&rest args) (forward-message-to joint11 args))
  (:larm-shoulder-p (&rest args) (forward-message-to joint12 args))
  (:larm-elbow-p (&rest args) (forward-message-to joint13 args))
  (:larm-gripper (&rest args) (forward-message-to joint14 args))
  (:lleg-crotch-p (&rest args) (forward-message-to joint8 args))
  (:lleg-knee-p (&rest args) (forward-message-to joint9 args))
  (:lleg-ankle-p (&rest args) (forward-message-to joint10 args))
  (:rarm-shoulder-y (&rest args) (forward-message-to joint3 args))
  (:rarm-shoulder-p (&rest args) (forward-message-to joint4 args))
  (:rarm-elbow-p (&rest args) (forward-message-to joint5 args))
  (:rarm-gripper (&rest args) (forward-message-to joint6 args))
  (:rleg-crotch-p (&rest args) (forward-message-to joint0 args))
  (:rleg-knee-p (&rest args) (forward-message-to joint1 args))
  (:rleg-ankle-p (&rest args) (forward-message-to joint2 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun ape3 (&rest args) (instance* ape3-robot :init args))
;; (format *error-output* "(instance ape3-robot :init) for generating model~%")
