;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73a3-officeprinter-object
  :super cascaded-link
  :slots (sensors
         joint0 ))
(defmethod room73a3-officeprinter-object
  (:init
   (&rest args &key (name "room73a3-officeprinter") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of 'printer
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 160.0 292.0 70.0) (float-vector 160.0 292.0 843.0) (float-vector 160.0 272.0 843.0) (float-vector 160.0 272.0 70.0)))
         (instance face :init :vertices (list (float-vector 0.0 272.0 843.0) (float-vector 0.0 272.0 70.0) (float-vector 160.0 272.0 70.0) (float-vector 160.0 272.0 843.0)))
         (instance face :init :vertices (list (float-vector 550.0 292.0 50.0) (float-vector 550.0 292.0 70.0) (float-vector 550.0 -292.0 70.0) (float-vector 550.0 -292.0 50.0)))
         (instance face :init :vertices (list (float-vector 550.0 292.0 50.0) (float-vector 0.0 292.0 50.0) (float-vector 0.0 292.0 843.0) (float-vector 160.0 292.0 843.0) (float-vector 160.0 292.0 70.0) (float-vector 550.0 292.0 70.0)))
         (instance face :init :vertices (list (float-vector 0.0 292.0 50.0) (float-vector 0.0 -292.0 50.0) (float-vector 0.0 -292.0 843.0) (float-vector 0.0 -296.0 843.0) (float-vector 0.0 -296.0 863.0) (float-vector 0.0 296.0 863.0) (float-vector 0.0 296.0 843.0) (float-vector 0.0 292.0 843.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 0.0 -272.0 843.0) (float-vector 0.0 -272.0 70.0) (float-vector 0.0 272.0 70.0) (float-vector 0.0 272.0 843.0)))
))
         (instance face :init :vertices (list (float-vector 0.0 -272.0 70.0) (float-vector 160.0 -272.0 70.0) (float-vector 160.0 -292.0 70.0) (float-vector 550.0 -292.0 70.0) (float-vector 550.0 292.0 70.0) (float-vector 160.0 292.0 70.0) (float-vector 160.0 272.0 70.0) (float-vector 0.0 272.0 70.0)))
         (instance face :init :vertices (list (float-vector 550.0 -292.0 50.0) (float-vector 0.0 -292.0 50.0) (float-vector 0.0 292.0 50.0) (float-vector 550.0 292.0 50.0)))
         (instance face :init :vertices (list (float-vector 160.0 -292.0 70.0) (float-vector 160.0 -292.0 843.0) (float-vector 0.0 -292.0 843.0) (float-vector 0.0 -292.0 50.0) (float-vector 550.0 -292.0 50.0) (float-vector 550.0 -292.0 70.0)))
         (instance face :init :vertices (list (float-vector 160.0 -272.0 843.0) (float-vector 160.0 -272.0 70.0) (float-vector 0.0 -272.0 70.0) (float-vector 0.0 -272.0 843.0)))
         (instance face :init :vertices (list (float-vector 0.0 296.0 863.0) (float-vector 0.0 -296.0 863.0) (float-vector 450.0 -296.0 863.0) (float-vector 450.0 296.0 863.0)))
         (instance face :init :vertices (list (float-vector 160.0 -272.0 70.0) (float-vector 160.0 -272.0 843.0) (float-vector 160.0 -292.0 843.0) (float-vector 160.0 -292.0 70.0)))
         (instance face :init :vertices (list (float-vector 450.0 -296.0 863.0) (float-vector 450.0 -296.0 843.0) (float-vector 450.0 296.0 843.0) (float-vector 450.0 296.0 863.0)))
         (instance face :init :vertices (list (float-vector 450.0 296.0 843.0) (float-vector 0.0 296.0 843.0) (float-vector 0.0 296.0 863.0) (float-vector 450.0 296.0 863.0)))
         (instance face :init :vertices (list (float-vector 0.0 -296.0 843.0) (float-vector 450.0 -296.0 843.0) (float-vector 450.0 -296.0 863.0) (float-vector 0.0 -296.0 863.0)))
         (instance face :init :vertices (list (float-vector 450.0 -296.0 843.0) (float-vector 0.0 -296.0 843.0) (float-vector 0.0 -292.0 843.0) (float-vector 160.0 -292.0 843.0) (float-vector 160.0 -272.0 843.0) (float-vector 0.0 -272.0 843.0) (float-vector 0.0 272.0 843.0) (float-vector 160.0 272.0 843.0) (float-vector 160.0 292.0 843.0) (float-vector 0.0 292.0 843.0) (float-vector 0.0 296.0 843.0) (float-vector 450.0 296.0 843.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 71.6506 242.0 37.5) (float-vector 75.0 242.0 25.0) (float-vector 71.6506 242.0 12.5) (float-vector 62.5 242.0 3.34936) (float-vector 50.0 242.0 1.065814e-14) (float-vector 37.5 242.0 3.34936) (float-vector 28.3494 242.0 12.5) (float-vector 25.0 242.0 25.0) (float-vector 28.3494 242.0 37.5) (float-vector 37.5 242.0 46.6506) (float-vector 50.0 242.0 50.0) (float-vector 62.5 242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 75.0 192.0 25.0) (float-vector 71.6506 192.0 37.5) (float-vector 62.5 192.0 46.6506) (float-vector 50.0 192.0 50.0) (float-vector 37.5 192.0 46.6506) (float-vector 28.3494 192.0 37.5) (float-vector 25.0 192.0 25.0) (float-vector 28.3494 192.0 12.5) (float-vector 37.5 192.0 3.34936) (float-vector 50.0 192.0 0.0) (float-vector 62.5 192.0 3.34936) (float-vector 71.6506 192.0 12.5)))
         (instance face :init :vertices (list (float-vector 71.6506 242.0 37.5) (float-vector 71.6506 192.0 37.5) (float-vector 75.0 192.0 25.0) (float-vector 75.0 242.0 25.0)))
         (instance face :init :vertices (list (float-vector 62.5 242.0 46.6506) (float-vector 62.5 192.0 46.6506) (float-vector 71.6506 192.0 37.5) (float-vector 71.6506 242.0 37.5)))
         (instance face :init :vertices (list (float-vector 50.0 242.0 50.0) (float-vector 50.0 192.0 50.0) (float-vector 62.5 192.0 46.6506) (float-vector 62.5 242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 37.5 242.0 46.6506) (float-vector 37.5 192.0 46.6506) (float-vector 50.0 192.0 50.0) (float-vector 50.0 242.0 50.0)))
         (instance face :init :vertices (list (float-vector 28.3494 242.0 37.5) (float-vector 28.3494 192.0 37.5) (float-vector 37.5 192.0 46.6506) (float-vector 37.5 242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 25.0 242.0 25.0) (float-vector 25.0 192.0 25.0) (float-vector 28.3494 192.0 37.5) (float-vector 28.3494 242.0 37.5)))
         (instance face :init :vertices (list (float-vector 28.3494 242.0 12.5) (float-vector 28.3494 192.0 12.5) (float-vector 25.0 192.0 25.0) (float-vector 25.0 242.0 25.0)))
         (instance face :init :vertices (list (float-vector 37.5 242.0 3.34936) (float-vector 37.5 192.0 3.34936) (float-vector 28.3494 192.0 12.5) (float-vector 28.3494 242.0 12.5)))
         (instance face :init :vertices (list (float-vector 50.0 242.0 1.065814e-14) (float-vector 50.0 192.0 0.0) (float-vector 37.5 192.0 3.34936) (float-vector 37.5 242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 62.5 242.0 3.34936) (float-vector 62.5 192.0 3.34936) (float-vector 50.0 192.0 0.0) (float-vector 50.0 242.0 1.065814e-14)))
         (instance face :init :vertices (list (float-vector 71.6506 242.0 12.5) (float-vector 71.6506 192.0 12.5) (float-vector 62.5 192.0 3.34936) (float-vector 62.5 242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 75.0 242.0 25.0) (float-vector 75.0 192.0 25.0) (float-vector 71.6506 192.0 12.5) (float-vector 71.6506 242.0 12.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 521.651 242.0 37.5) (float-vector 525.0 242.0 25.0) (float-vector 521.651 242.0 12.5) (float-vector 512.5 242.0 3.34936) (float-vector 500.0 242.0 1.065814e-14) (float-vector 487.5 242.0 3.34936) (float-vector 478.349 242.0 12.5) (float-vector 475.0 242.0 25.0) (float-vector 478.349 242.0 37.5) (float-vector 487.5 242.0 46.6506) (float-vector 500.0 242.0 50.0) (float-vector 512.5 242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 525.0 192.0 25.0) (float-vector 521.651 192.0 37.5) (float-vector 512.5 192.0 46.6506) (float-vector 500.0 192.0 50.0) (float-vector 487.5 192.0 46.6506) (float-vector 478.349 192.0 37.5) (float-vector 475.0 192.0 25.0) (float-vector 478.349 192.0 12.5) (float-vector 487.5 192.0 3.34936) (float-vector 500.0 192.0 0.0) (float-vector 512.5 192.0 3.34936) (float-vector 521.651 192.0 12.5)))
         (instance face :init :vertices (list (float-vector 521.651 242.0 37.5) (float-vector 521.651 192.0 37.5) (float-vector 525.0 192.0 25.0) (float-vector 525.0 242.0 25.0)))
         (instance face :init :vertices (list (float-vector 512.5 242.0 46.6506) (float-vector 512.5 192.0 46.6506) (float-vector 521.651 192.0 37.5) (float-vector 521.651 242.0 37.5)))
         (instance face :init :vertices (list (float-vector 500.0 242.0 50.0) (float-vector 500.0 192.0 50.0) (float-vector 512.5 192.0 46.6506) (float-vector 512.5 242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 487.5 242.0 46.6506) (float-vector 487.5 192.0 46.6506) (float-vector 500.0 192.0 50.0) (float-vector 500.0 242.0 50.0)))
         (instance face :init :vertices (list (float-vector 478.349 242.0 37.5) (float-vector 478.349 192.0 37.5) (float-vector 487.5 192.0 46.6506) (float-vector 487.5 242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 475.0 242.0 25.0) (float-vector 475.0 192.0 25.0) (float-vector 478.349 192.0 37.5) (float-vector 478.349 242.0 37.5)))
         (instance face :init :vertices (list (float-vector 478.349 242.0 12.5) (float-vector 478.349 192.0 12.5) (float-vector 475.0 192.0 25.0) (float-vector 475.0 242.0 25.0)))
         (instance face :init :vertices (list (float-vector 487.5 242.0 3.34936) (float-vector 487.5 192.0 3.34936) (float-vector 478.349 192.0 12.5) (float-vector 478.349 242.0 12.5)))
         (instance face :init :vertices (list (float-vector 500.0 242.0 1.065814e-14) (float-vector 500.0 192.0 0.0) (float-vector 487.5 192.0 3.34936) (float-vector 487.5 242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 512.5 242.0 3.34936) (float-vector 512.5 192.0 3.34936) (float-vector 500.0 192.0 0.0) (float-vector 500.0 242.0 1.065814e-14)))
         (instance face :init :vertices (list (float-vector 521.651 242.0 12.5) (float-vector 521.651 192.0 12.5) (float-vector 512.5 192.0 3.34936) (float-vector 512.5 242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 525.0 242.0 25.0) (float-vector 525.0 192.0 25.0) (float-vector 521.651 192.0 12.5) (float-vector 521.651 242.0 12.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 71.6506 -242.0 12.5) (float-vector 75.0 -242.0 25.0) (float-vector 71.6506 -242.0 37.5) (float-vector 62.5 -242.0 46.6506) (float-vector 50.0 -242.0 50.0) (float-vector 37.5 -242.0 46.6506) (float-vector 28.3494 -242.0 37.5) (float-vector 25.0 -242.0 25.0) (float-vector 28.3494 -242.0 12.5) (float-vector 37.5 -242.0 3.34936) (float-vector 50.0 -242.0 1.065814e-14) (float-vector 62.5 -242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 75.0 -192.0 25.0) (float-vector 71.6506 -192.0 12.5) (float-vector 62.5 -192.0 3.34936) (float-vector 50.0 -192.0 0.0) (float-vector 37.5 -192.0 3.34936) (float-vector 28.3494 -192.0 12.5) (float-vector 25.0 -192.0 25.0) (float-vector 28.3494 -192.0 37.5) (float-vector 37.5 -192.0 46.6506) (float-vector 50.0 -192.0 50.0) (float-vector 62.5 -192.0 46.6506) (float-vector 71.6506 -192.0 37.5)))
         (instance face :init :vertices (list (float-vector 71.6506 -242.0 12.5) (float-vector 71.6506 -192.0 12.5) (float-vector 75.0 -192.0 25.0) (float-vector 75.0 -242.0 25.0)))
         (instance face :init :vertices (list (float-vector 62.5 -242.0 3.34936) (float-vector 62.5 -192.0 3.34936) (float-vector 71.6506 -192.0 12.5) (float-vector 71.6506 -242.0 12.5)))
         (instance face :init :vertices (list (float-vector 50.0 -242.0 1.065814e-14) (float-vector 50.0 -192.0 0.0) (float-vector 62.5 -192.0 3.34936) (float-vector 62.5 -242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 37.5 -242.0 3.34936) (float-vector 37.5 -192.0 3.34936) (float-vector 50.0 -192.0 0.0) (float-vector 50.0 -242.0 1.065814e-14)))
         (instance face :init :vertices (list (float-vector 28.3494 -242.0 12.5) (float-vector 28.3494 -192.0 12.5) (float-vector 37.5 -192.0 3.34936) (float-vector 37.5 -242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 25.0 -242.0 25.0) (float-vector 25.0 -192.0 25.0) (float-vector 28.3494 -192.0 12.5) (float-vector 28.3494 -242.0 12.5)))
         (instance face :init :vertices (list (float-vector 28.3494 -242.0 37.5) (float-vector 28.3494 -192.0 37.5) (float-vector 25.0 -192.0 25.0) (float-vector 25.0 -242.0 25.0)))
         (instance face :init :vertices (list (float-vector 37.5 -242.0 46.6506) (float-vector 37.5 -192.0 46.6506) (float-vector 28.3494 -192.0 37.5) (float-vector 28.3494 -242.0 37.5)))
         (instance face :init :vertices (list (float-vector 50.0 -242.0 50.0) (float-vector 50.0 -192.0 50.0) (float-vector 37.5 -192.0 46.6506) (float-vector 37.5 -242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 62.5 -242.0 46.6506) (float-vector 62.5 -192.0 46.6506) (float-vector 50.0 -192.0 50.0) (float-vector 50.0 -242.0 50.0)))
         (instance face :init :vertices (list (float-vector 71.6506 -242.0 37.5) (float-vector 71.6506 -192.0 37.5) (float-vector 62.5 -192.0 46.6506) (float-vector 62.5 -242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 75.0 -242.0 25.0) (float-vector 75.0 -192.0 25.0) (float-vector 71.6506 -192.0 37.5) (float-vector 71.6506 -242.0 37.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 521.651 -242.0 12.5) (float-vector 525.0 -242.0 25.0) (float-vector 521.651 -242.0 37.5) (float-vector 512.5 -242.0 46.6506) (float-vector 500.0 -242.0 50.0) (float-vector 487.5 -242.0 46.6506) (float-vector 478.349 -242.0 37.5) (float-vector 475.0 -242.0 25.0) (float-vector 478.349 -242.0 12.5) (float-vector 487.5 -242.0 3.34936) (float-vector 500.0 -242.0 1.065814e-14) (float-vector 512.5 -242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 525.0 -192.0 25.0) (float-vector 521.651 -192.0 12.5) (float-vector 512.5 -192.0 3.34936) (float-vector 500.0 -192.0 0.0) (float-vector 487.5 -192.0 3.34936) (float-vector 478.349 -192.0 12.5) (float-vector 475.0 -192.0 25.0) (float-vector 478.349 -192.0 37.5) (float-vector 487.5 -192.0 46.6506) (float-vector 500.0 -192.0 50.0) (float-vector 512.5 -192.0 46.6506) (float-vector 521.651 -192.0 37.5)))
         (instance face :init :vertices (list (float-vector 521.651 -242.0 12.5) (float-vector 521.651 -192.0 12.5) (float-vector 525.0 -192.0 25.0) (float-vector 525.0 -242.0 25.0)))
         (instance face :init :vertices (list (float-vector 512.5 -242.0 3.34936) (float-vector 512.5 -192.0 3.34936) (float-vector 521.651 -192.0 12.5) (float-vector 521.651 -242.0 12.5)))
         (instance face :init :vertices (list (float-vector 500.0 -242.0 1.065814e-14) (float-vector 500.0 -192.0 0.0) (float-vector 512.5 -192.0 3.34936) (float-vector 512.5 -242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 487.5 -242.0 3.34936) (float-vector 487.5 -192.0 3.34936) (float-vector 500.0 -192.0 0.0) (float-vector 500.0 -242.0 1.065814e-14)))
         (instance face :init :vertices (list (float-vector 478.349 -242.0 12.5) (float-vector 478.349 -192.0 12.5) (float-vector 487.5 -192.0 3.34936) (float-vector 487.5 -242.0 3.34936)))
         (instance face :init :vertices (list (float-vector 475.0 -242.0 25.0) (float-vector 475.0 -192.0 25.0) (float-vector 478.349 -192.0 12.5) (float-vector 478.349 -242.0 12.5)))
         (instance face :init :vertices (list (float-vector 478.349 -242.0 37.5) (float-vector 478.349 -192.0 37.5) (float-vector 475.0 -192.0 25.0) (float-vector 475.0 -242.0 25.0)))
         (instance face :init :vertices (list (float-vector 487.5 -242.0 46.6506) (float-vector 487.5 -192.0 46.6506) (float-vector 478.349 -192.0 37.5) (float-vector 478.349 -242.0 37.5)))
         (instance face :init :vertices (list (float-vector 500.0 -242.0 50.0) (float-vector 500.0 -192.0 50.0) (float-vector 487.5 -192.0 46.6506) (float-vector 487.5 -242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 512.5 -242.0 46.6506) (float-vector 512.5 -192.0 46.6506) (float-vector 500.0 -192.0 50.0) (float-vector 500.0 -242.0 50.0)))
         (instance face :init :vertices (list (float-vector 521.651 -242.0 37.5) (float-vector 521.651 -192.0 37.5) (float-vector 512.5 -192.0 46.6506) (float-vector 512.5 -242.0 46.6506)))
         (instance face :init :vertices (list (float-vector 525.0 -242.0 25.0) (float-vector 525.0 -192.0 25.0) (float-vector 521.651 -192.0 37.5) (float-vector 521.651 -242.0 37.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 530.0 258.0 200.0) (float-vector 180.0 258.0 200.0) (float-vector 180.0 -292.0 200.0) (float-vector 530.0 -292.0 200.0)))
         (instance face :init :vertices (list (float-vector 180.0 258.0 70.0) (float-vector 530.0 258.0 70.0) (float-vector 530.0 -292.0 70.0) (float-vector 180.0 -292.0 70.0)))
         (instance face :init :vertices (list (float-vector 530.0 258.0 200.0) (float-vector 530.0 258.0 70.0) (float-vector 180.0 258.0 70.0) (float-vector 180.0 258.0 200.0)))
         (instance face :init :vertices (list (float-vector 530.0 -292.0 200.0) (float-vector 530.0 -292.0 70.0) (float-vector 530.0 258.0 70.0) (float-vector 530.0 258.0 200.0)))
         (instance face :init :vertices (list (float-vector 180.0 -292.0 200.0) (float-vector 180.0 -292.0 70.0) (float-vector 530.0 -292.0 70.0) (float-vector 530.0 -292.0 200.0)))
         (instance face :init :vertices (list (float-vector 180.0 258.0 200.0) (float-vector 180.0 258.0 70.0) (float-vector 180.0 -292.0 70.0) (float-vector 180.0 -292.0 200.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 180.0 -292.0 667.0) (float-vector 645.0 -292.0 667.0) (float-vector 645.0 292.0 667.0) (float-vector 180.0 292.0 667.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 190.0 -282.0 667.0) (float-vector 190.0 282.0 667.0) (float-vector 635.0 282.0 667.0) (float-vector 635.0 -282.0 667.0)))
))
         (instance face :init :vertices (list (float-vector 652.0 -292.0 664.0) (float-vector 652.0 292.0 664.0) (float-vector 645.0 292.0 667.0) (float-vector 645.0 -292.0 667.0)))
         (instance face :init :vertices (list (float-vector 655.0 -292.0 657.0) (float-vector 655.0 292.0 657.0) (float-vector 652.0 292.0 664.0) (float-vector 652.0 -292.0 664.0)))
         (instance face :init :vertices (list (float-vector 655.0 -292.0 300.0) (float-vector 655.0 292.0 300.0) (float-vector 655.0 292.0 657.0) (float-vector 655.0 -292.0 657.0)))
         (instance face :init :vertices (list (float-vector 530.0 -292.0 200.0) (float-vector 530.0 292.0 200.0) (float-vector 655.0 292.0 300.0) (float-vector 655.0 -292.0 300.0)))
         (instance face :init :vertices (list (float-vector 180.0 -292.0 200.0) (float-vector 180.0 292.0 200.0) (float-vector 530.0 292.0 200.0) (float-vector 530.0 -292.0 200.0)))
         (instance face :init :vertices (list (float-vector 180.0 292.0 667.0) (float-vector 645.0 292.0 667.0) (float-vector 652.0 292.0 664.0) (float-vector 655.0 292.0 657.0) (float-vector 655.0 292.0 300.0) (float-vector 530.0 292.0 200.0) (float-vector 180.0 292.0 200.0)))
         (instance face :init :vertices (list (float-vector 180.0 -292.0 200.0) (float-vector 530.0 -292.0 200.0) (float-vector 655.0 -292.0 300.0) (float-vector 655.0 -292.0 657.0) (float-vector 652.0 -292.0 664.0) (float-vector 645.0 -292.0 667.0) (float-vector 180.0 -292.0 667.0)))
         (instance face :init :vertices (list (float-vector 180.0 -292.0 667.0) (float-vector 180.0 292.0 667.0) (float-vector 180.0 292.0 200.0) (float-vector 180.0 -292.0 200.0)))
         (instance face :init :vertices (list (float-vector 635.0 -282.0 667.0) (float-vector 635.0 282.0 667.0) (float-vector 635.0 282.0 600.0) (float-vector 635.0 -282.0 600.0)))
         (instance face :init :vertices (list (float-vector 635.0 -282.0 600.0) (float-vector 635.0 282.0 600.0) (float-vector 190.0 282.0 600.0) (float-vector 190.0 -282.0 600.0)))
         (instance face :init :vertices (list (float-vector 190.0 282.0 600.0) (float-vector 635.0 282.0 600.0) (float-vector 635.0 282.0 667.0) (float-vector 190.0 282.0 667.0)))
         (instance face :init :vertices (list (float-vector 190.0 -282.0 600.0) (float-vector 190.0 282.0 600.0) (float-vector 190.0 282.0 667.0) (float-vector 190.0 -282.0 667.0)))
         (instance face :init :vertices (list (float-vector 190.0 -282.0 667.0) (float-vector 635.0 -282.0 667.0) (float-vector 635.0 -282.0 600.0) (float-vector 190.0 -282.0 600.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 435.0 -282.0 667.0) (float-vector 435.0 -282.0 677.0) (float-vector 435.0 282.0 677.0) (float-vector 435.0 282.0 667.0)))
         (instance face :init :vertices (list (float-vector 435.0 -282.0 667.0) (float-vector 435.0 282.0 667.0) (float-vector 190.0 282.0 667.0) (float-vector 190.0 -282.0 667.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 208.333 -212.0 667.0) (float-vector 208.333 172.0 667.0) (float-vector 430.0 172.0 667.0) (float-vector 430.0 -212.0 667.0)))
))
         (instance face :init :vertices (list (float-vector 190.0 -282.0 667.0) (float-vector 190.0 282.0 667.0) (float-vector 190.0 282.0 600.0) (float-vector 190.0 -282.0 600.0)))
         (instance face :init :vertices (list (float-vector 435.0 -282.0 677.0) (float-vector 435.0 -282.0 667.0) (float-vector 190.0 -282.0 667.0) (float-vector 190.0 -282.0 600.0) (float-vector 635.0 -282.0 600.0) (float-vector 635.0 -282.0 677.0)))
         (instance face :init :vertices (list (float-vector 190.0 282.0 600.0) (float-vector 190.0 282.0 667.0) (float-vector 435.0 282.0 667.0) (float-vector 435.0 282.0 677.0) (float-vector 635.0 282.0 677.0) (float-vector 635.0 282.0 600.0)))
         (instance face :init :vertices (list (float-vector 635.0 -282.0 600.0) (float-vector 190.0 -282.0 600.0) (float-vector 190.0 282.0 600.0) (float-vector 635.0 282.0 600.0)))
         (instance face :init :vertices (list (float-vector 635.0 282.0 677.0) (float-vector 435.0 282.0 677.0) (float-vector 435.0 -282.0 677.0) (float-vector 635.0 -282.0 677.0)))
         (instance face :init :vertices (list (float-vector 635.0 -282.0 677.0) (float-vector 635.0 -282.0 600.0) (float-vector 635.0 282.0 600.0) (float-vector 635.0 282.0 677.0)))
         (instance face :init :vertices (list (float-vector 430.0 -212.0 667.0) (float-vector 430.0 172.0 667.0) (float-vector 430.0 172.0 610.0) (float-vector 430.0 -212.0 610.0)))
         (instance face :init :vertices (list (float-vector 430.0 172.0 610.0) (float-vector 430.0 172.0 667.0) (float-vector 208.333 172.0 667.0)))
         (instance face :init :vertices (list (float-vector 430.0 -212.0 610.0) (float-vector 430.0 172.0 610.0) (float-vector 208.333 172.0 667.0) (float-vector 208.333 -212.0 667.0)))
         (instance face :init :vertices (list (float-vector 208.333 -212.0 667.0) (float-vector 430.0 -212.0 667.0) (float-vector 430.0 -212.0 610.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 -328.0 863.0) (float-vector 478.0 -328.0 863.0) (float-vector 478.0 -328.0 963.0) (float-vector 0.0 -328.0 963.0)))
         (instance face :init :vertices (list (float-vector 486.0 -323.0 863.0) (float-vector 486.0 -323.0 963.0) (float-vector 478.0 -328.0 963.0) (float-vector 478.0 -328.0 863.0)))
         (instance face :init :vertices (list (float-vector 491.0 -318.0 863.0) (float-vector 491.0 -318.0 963.0) (float-vector 486.0 -323.0 963.0) (float-vector 486.0 -323.0 863.0)))
         (instance face :init :vertices (list (float-vector 493.0 -313.0 863.0) (float-vector 493.0 -313.0 963.0) (float-vector 491.0 -318.0 963.0) (float-vector 491.0 -318.0 863.0)))
         (instance face :init :vertices (list (float-vector 493.0 -248.0 863.0) (float-vector 493.0 -248.0 963.0) (float-vector 493.0 -313.0 963.0) (float-vector 493.0 -313.0 863.0)))
         (instance face :init :vertices (list (float-vector 506.536 -235.695 863.0) (float-vector 548.0 -198.0 923.5) (float-vector 548.0 -198.0 963.0) (float-vector 493.0 -248.0 963.0) (float-vector 493.0 -248.0 863.0)))
         (instance face :init :vertices (list (float-vector 555.0 -188.0 963.0) (float-vector 548.0 -198.0 963.0) (float-vector 548.0 -198.0 923.5) (float-vector 555.0 -188.0 933.714)))
         (instance face :init :vertices (list (float-vector 558.0 -178.0 963.0) (float-vector 555.0 -188.0 963.0) (float-vector 555.0 -188.0 933.714) (float-vector 558.0 -178.0 938.091)))
         (instance face :init :vertices (list (float-vector 558.0 178.0 963.0) (float-vector 558.0 -178.0 963.0) (float-vector 558.0 -178.0 938.091) (float-vector 558.0 178.0 938.091)))
         (instance face :init :vertices (list (float-vector 555.0 188.0 963.0) (float-vector 558.0 178.0 963.0) (float-vector 558.0 178.0 938.091) (float-vector 555.0 188.0 933.714)))
         (instance face :init :vertices (list (float-vector 548.0 198.0 963.0) (float-vector 555.0 188.0 963.0) (float-vector 555.0 188.0 933.714) (float-vector 548.0 198.0 923.5)))
         (instance face :init :vertices (list (float-vector 493.0 248.0 863.0) (float-vector 493.0 248.0 963.0) (float-vector 548.0 198.0 963.0) (float-vector 548.0 198.0 923.5) (float-vector 506.536 235.695 863.0)))
         (instance face :init :vertices (list (float-vector 493.0 313.0 863.0) (float-vector 493.0 313.0 963.0) (float-vector 493.0 248.0 963.0) (float-vector 493.0 248.0 863.0)))
         (instance face :init :vertices (list (float-vector 491.0 318.0 863.0) (float-vector 491.0 318.0 963.0) (float-vector 493.0 313.0 963.0) (float-vector 493.0 313.0 863.0)))
         (instance face :init :vertices (list (float-vector 486.0 323.0 863.0) (float-vector 486.0 323.0 963.0) (float-vector 491.0 318.0 963.0) (float-vector 491.0 318.0 863.0)))
         (instance face :init :vertices (list (float-vector 478.0 328.0 863.0) (float-vector 478.0 328.0 963.0) (float-vector 486.0 323.0 963.0) (float-vector 486.0 323.0 863.0)))
         (instance face :init :vertices (list (float-vector 0.0 328.0 863.0) (float-vector 0.0 328.0 963.0) (float-vector 478.0 328.0 963.0) (float-vector 478.0 328.0 863.0)))
         (instance face :init :vertices (list (float-vector 0.0 -328.0 963.0) (float-vector 478.0 -328.0 963.0) (float-vector 486.0 -323.0 963.0) (float-vector 491.0 -318.0 963.0) (float-vector 493.0 -313.0 963.0) (float-vector 493.0 -248.0 963.0) (float-vector 548.0 -198.0 963.0) (float-vector 555.0 -188.0 963.0) (float-vector 558.0 -178.0 963.0) (float-vector 558.0 178.0 963.0) (float-vector 555.0 188.0 963.0) (float-vector 548.0 198.0 963.0) (float-vector 493.0 248.0 963.0) (float-vector 493.0 313.0 963.0) (float-vector 491.0 318.0 963.0) (float-vector 486.0 323.0 963.0) (float-vector 478.0 328.0 963.0) (float-vector 0.0 328.0 963.0)))
         (instance face :init :vertices (list (float-vector 0.0 328.0 863.0) (float-vector 478.0 328.0 863.0) (float-vector 486.0 323.0 863.0) (float-vector 491.0 318.0 863.0) (float-vector 493.0 313.0 863.0) (float-vector 493.0 248.0 863.0) (float-vector 506.536 235.695 863.0) (float-vector 506.536 -235.695 863.0) (float-vector 493.0 -248.0 863.0) (float-vector 493.0 -313.0 863.0) (float-vector 491.0 -318.0 863.0) (float-vector 486.0 -323.0 863.0) (float-vector 478.0 -328.0 863.0) (float-vector 0.0 -328.0 863.0)))
         (instance face :init :vertices (list (float-vector 0.0 -328.0 863.0) (float-vector 0.0 -328.0 963.0) (float-vector 0.0 328.0 963.0) (float-vector 0.0 328.0 863.0)))
         (instance face :init :vertices (list (float-vector 548.0 198.0 923.5) (float-vector 555.0 188.0 933.714) (float-vector 558.0 178.0 938.091) (float-vector 558.0 -178.0 938.091) (float-vector 555.0 -188.0 933.714) (float-vector 548.0 -198.0 923.5) (float-vector 506.536 -235.695 863.0) (float-vector 506.536 235.695 863.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 -328.0 963.0) (float-vector 478.0 -328.0 963.0) (float-vector 478.0 -328.0 984.0) (float-vector 0.0 -328.0 984.0)))
         (instance face :init :vertices (list (float-vector 486.0 -323.0 963.0) (float-vector 486.0 -323.0 984.0) (float-vector 478.0 -328.0 984.0) (float-vector 478.0 -328.0 963.0)))
         (instance face :init :vertices (list (float-vector 491.0 -318.0 963.0) (float-vector 491.0 -318.0 984.0) (float-vector 486.0 -323.0 984.0) (float-vector 486.0 -323.0 963.0)))
         (instance face :init :vertices (list (float-vector 493.0 -313.0 963.0) (float-vector 493.0 -313.0 984.0) (float-vector 491.0 -318.0 984.0) (float-vector 491.0 -318.0 963.0)))
         (instance face :init :vertices (list (float-vector 493.0 -248.0 963.0) (float-vector 493.0 -248.0 984.0) (float-vector 493.0 -313.0 984.0) (float-vector 493.0 -313.0 963.0)))
         (instance face :init :vertices (list (float-vector 548.0 -198.0 963.0) (float-vector 548.0 -198.0 984.0) (float-vector 493.0 -248.0 984.0) (float-vector 493.0 -248.0 963.0)))
         (instance face :init :vertices (list (float-vector 555.0 -188.0 963.0) (float-vector 555.0 -188.0 984.0) (float-vector 548.0 -198.0 984.0) (float-vector 548.0 -198.0 963.0)))
         (instance face :init :vertices (list (float-vector 558.0 -178.0 963.0) (float-vector 558.0 -178.0 984.0) (float-vector 555.0 -188.0 984.0) (float-vector 555.0 -188.0 963.0)))
         (instance face :init :vertices (list (float-vector 558.0 178.0 963.0) (float-vector 558.0 178.0 984.0) (float-vector 558.0 -178.0 984.0) (float-vector 558.0 -178.0 963.0)))
         (instance face :init :vertices (list (float-vector 555.0 188.0 963.0) (float-vector 555.0 188.0 984.0) (float-vector 558.0 178.0 984.0) (float-vector 558.0 178.0 963.0)))
         (instance face :init :vertices (list (float-vector 548.0 198.0 963.0) (float-vector 548.0 198.0 984.0) (float-vector 555.0 188.0 984.0) (float-vector 555.0 188.0 963.0)))
         (instance face :init :vertices (list (float-vector 493.0 248.0 963.0) (float-vector 493.0 248.0 984.0) (float-vector 548.0 198.0 984.0) (float-vector 548.0 198.0 963.0)))
         (instance face :init :vertices (list (float-vector 493.0 313.0 963.0) (float-vector 493.0 313.0 984.0) (float-vector 493.0 248.0 984.0) (float-vector 493.0 248.0 963.0)))
         (instance face :init :vertices (list (float-vector 491.0 318.0 963.0) (float-vector 491.0 318.0 984.0) (float-vector 493.0 313.0 984.0) (float-vector 493.0 313.0 963.0)))
         (instance face :init :vertices (list (float-vector 486.0 323.0 963.0) (float-vector 486.0 323.0 984.0) (float-vector 491.0 318.0 984.0) (float-vector 491.0 318.0 963.0)))
         (instance face :init :vertices (list (float-vector 478.0 328.0 963.0) (float-vector 478.0 328.0 984.0) (float-vector 486.0 323.0 984.0) (float-vector 486.0 323.0 963.0)))
         (instance face :init :vertices (list (float-vector 0.0 328.0 963.0) (float-vector 0.0 328.0 984.0) (float-vector 478.0 328.0 984.0) (float-vector 478.0 328.0 963.0)))
         (instance face :init :vertices (list (float-vector 0.0 -328.0 984.0) (float-vector 478.0 -328.0 984.0) (float-vector 486.0 -323.0 984.0) (float-vector 491.0 -318.0 984.0) (float-vector 493.0 -313.0 984.0) (float-vector 493.0 -248.0 984.0) (float-vector 548.0 -198.0 984.0) (float-vector 555.0 -188.0 984.0) (float-vector 558.0 -178.0 984.0) (float-vector 558.0 178.0 984.0) (float-vector 555.0 188.0 984.0) (float-vector 548.0 198.0 984.0) (float-vector 493.0 248.0 984.0) (float-vector 493.0 313.0 984.0) (float-vector 491.0 318.0 984.0) (float-vector 486.0 323.0 984.0) (float-vector 478.0 328.0 984.0) (float-vector 0.0 328.0 984.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 443.0 -278.0 984.0) (float-vector 50.0 -278.0 984.0) (float-vector 50.0 278.0 984.0) (float-vector 443.0 278.0 984.0)))
))
         (instance face :init :vertices (list (float-vector 0.0 328.0 963.0) (float-vector 478.0 328.0 963.0) (float-vector 486.0 323.0 963.0) (float-vector 491.0 318.0 963.0) (float-vector 493.0 313.0 963.0) (float-vector 493.0 248.0 963.0) (float-vector 548.0 198.0 963.0) (float-vector 555.0 188.0 963.0) (float-vector 558.0 178.0 963.0) (float-vector 558.0 -178.0 963.0) (float-vector 555.0 -188.0 963.0) (float-vector 548.0 -198.0 963.0) (float-vector 493.0 -248.0 963.0) (float-vector 493.0 -313.0 963.0) (float-vector 491.0 -318.0 963.0) (float-vector 486.0 -323.0 963.0) (float-vector 478.0 -328.0 963.0) (float-vector 0.0 -328.0 963.0)))
         (instance face :init :vertices (list (float-vector 0.0 -328.0 963.0) (float-vector 0.0 -328.0 984.0) (float-vector 0.0 328.0 984.0) (float-vector 0.0 328.0 963.0)))
         (instance face :init :vertices (list (float-vector 50.0 278.0 984.0) (float-vector 50.0 -278.0 984.0) (float-vector 50.0 -278.0 973.0) (float-vector 50.0 278.0 973.0)))
         (instance face :init :vertices (list (float-vector 50.0 -278.0 973.0) (float-vector 50.0 -278.0 984.0) (float-vector 443.0 -278.0 984.0) (float-vector 443.0 -278.0 973.0)))
         (instance face :init :vertices (list (float-vector 443.0 -278.0 973.0) (float-vector 443.0 -278.0 984.0) (float-vector 443.0 278.0 984.0) (float-vector 443.0 278.0 973.0)))
         (instance face :init :vertices (list (float-vector 443.0 278.0 973.0) (float-vector 443.0 278.0 984.0) (float-vector 50.0 278.0 984.0) (float-vector 50.0 278.0 973.0)))
         (instance face :init :vertices (list (float-vector 50.0 278.0 973.0) (float-vector 50.0 -278.0 973.0) (float-vector 443.0 -278.0 973.0) (float-vector 443.0 278.0 973.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :ivory)
     (send (elt bc 1) :set-color :gray10)
     (send (elt bc 2) :set-color :gray10)
     (send (elt bc 3) :set-color :gray10)
     (send (elt bc 4) :set-color :gray10)
     (send (elt bc 5) :set-color :cornsilk)
     (send (elt bc 6) :set-color :cornsilk)
     (send (elt bc 7) :set-color :gray60)
     (send (elt bc 8) :set-color :cornsilk)
     (send (elt bc 9) :set-color :gray70)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name 'printer :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of 'scanner
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 463.0 318.0 80.0) (float-vector 0.0 318.0 80.0) (float-vector 0.0 268.0 80.0) (float-vector 463.0 268.0 80.0)))
         (instance face :init :vertices (list (float-vector 0.0 268.0 80.0) (float-vector 0.0 268.0 20.0) (float-vector 5.0 268.0 20.0) (float-vector 5.0 268.0 70.0) (float-vector 75.0 268.0 70.0) (float-vector 75.0 268.0 20.0) (float-vector 463.0 268.0 20.0) (float-vector 463.0 268.0 80.0)))
         (instance face :init :vertices (list (float-vector 75.0 -148.0 20.0) (float-vector 463.0 -148.0 20.0) (float-vector 463.0 268.0 20.0) (float-vector 75.0 268.0 20.0)))
         (instance face :init :vertices (list (float-vector 0.0 268.0 20.0) (float-vector 0.0 -148.0 20.0) (float-vector 5.0 -148.0 20.0) (float-vector 5.0 268.0 20.0)))
         (instance face :init :vertices (list (float-vector 0.0 -148.0 20.0) (float-vector 0.0 -178.0 100.0) (float-vector 463.0 -178.0 100.0) (float-vector 463.0 -148.0 20.0) (float-vector 75.0 -148.0 20.0) (float-vector 75.0 -166.75 70.0) (float-vector 5.0 -166.75 70.0) (float-vector 5.0 -148.0 20.0)))
         (instance face :init :vertices (list (float-vector 0.0 -178.0 100.0) (float-vector 0.0 -268.0 100.0) (float-vector 463.0 -268.0 100.0) (float-vector 463.0 -178.0 100.0)))
         (instance face :init :vertices (list (float-vector 0.0 -268.0 100.0) (float-vector 0.0 -278.0 0.0) (float-vector 463.0 -278.0 0.0) (float-vector 463.0 -268.0 100.0)))
         (instance face :init :vertices (list (float-vector 0.0 -278.0 0.0) (float-vector 0.0 328.0 0.0) (float-vector 463.0 328.0 0.0) (float-vector 463.0 -278.0 0.0)))
         (instance face :init :vertices (list (float-vector 463.0 328.0 0.0) (float-vector 463.0 318.0 80.0) (float-vector 463.0 268.0 80.0) (float-vector 463.0 268.0 20.0) (float-vector 463.0 -148.0 20.0) (float-vector 463.0 -178.0 100.0) (float-vector 463.0 -268.0 100.0) (float-vector 463.0 -278.0 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 328.0 0.0) (float-vector 0.0 318.0 80.0) (float-vector 463.0 318.0 80.0) (float-vector 463.0 328.0 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 318.0 80.0) (float-vector 0.0 328.0 0.0) (float-vector 0.0 -278.0 0.0) (float-vector 0.0 -268.0 100.0) (float-vector 0.0 -178.0 100.0) (float-vector 0.0 -148.0 20.0) (float-vector 0.0 268.0 20.0) (float-vector 0.0 268.0 80.0)))
         (instance face :init :vertices (list (float-vector 75.0 268.0 70.0) (float-vector 75.0 -166.75 70.0) (float-vector 75.0 -148.0 20.0) (float-vector 75.0 268.0 20.0)))
         (instance face :init :vertices (list (float-vector 5.0 268.0 70.0) (float-vector 5.0 -166.75 70.0) (float-vector 75.0 -166.75 70.0) (float-vector 75.0 268.0 70.0)))
         (instance face :init :vertices (list (float-vector 5.0 -166.75 70.0) (float-vector 5.0 268.0 70.0) (float-vector 5.0 268.0 20.0) (float-vector 5.0 -148.0 20.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :cornsilk)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name 'scanner :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 0.0 0.0 984.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :joint0
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :joint0    :axis :-y
			     :min    0.0 :max  180.0 :max-joint-velocity 5 :max-joint-torque 100))


     ;; init-ending 
     (setq links (list blink0 blink1))
     (setq joint-list (list joint0))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:joint0 (&rest args) (forward-message-to joint0 args))
  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73a3-officeprinter (&rest args) (instance* room73a3-officeprinter-object :init args))
;; (format *error-output* "(instance room73a3-officeprinter-object :init) for generating model~%")
