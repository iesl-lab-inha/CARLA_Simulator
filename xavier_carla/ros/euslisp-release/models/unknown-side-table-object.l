;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass unknown-side-table-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1 handle2 handle3
         joint0 joint1 joint2 ))
(defmethod unknown-side-table-object
  (:init
   (&rest args &key (name "unknown-side-table") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 285.5 210.0 600.0) (float-vector -299.5 210.0 600.0) (float-vector -299.5 -210.0 600.0) (float-vector 285.5 -210.0 600.0)))
         (instance face :init :vertices (list (float-vector -299.5 210.0 585.0) (float-vector 285.5 210.0 585.0) (float-vector 285.5 -210.0 585.0) (float-vector -299.5 -210.0 585.0)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 600.0) (float-vector 285.5 210.0 585.0) (float-vector -299.5 210.0 585.0) (float-vector -299.5 210.0 600.0)))
         (instance face :init :vertices (list (float-vector 285.5 -210.0 600.0) (float-vector 285.5 -210.0 585.0) (float-vector 285.5 210.0 585.0) (float-vector 285.5 210.0 600.0)))
         (instance face :init :vertices (list (float-vector -299.5 -210.0 600.0) (float-vector -299.5 -210.0 585.0) (float-vector 285.5 -210.0 585.0) (float-vector 285.5 -210.0 600.0)))
         (instance face :init :vertices (list (float-vector -299.5 210.0 600.0) (float-vector -299.5 210.0 585.0) (float-vector -299.5 -210.0 585.0) (float-vector -299.5 -210.0 600.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 285.5 210.0 44.5) (float-vector -299.5 210.0 44.5) (float-vector -299.5 -210.0 44.5) (float-vector 285.5 -210.0 44.5)))
         (instance face :init :vertices (list (float-vector -299.5 210.0 -0.5) (float-vector 285.5 210.0 -0.5) (float-vector 285.5 -210.0 -0.5) (float-vector -299.5 -210.0 -0.5)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 44.5) (float-vector 285.5 210.0 -0.5) (float-vector -299.5 210.0 -0.5) (float-vector -299.5 210.0 44.5)))
         (instance face :init :vertices (list (float-vector 285.5 -210.0 44.5) (float-vector 285.5 -210.0 -0.5) (float-vector 285.5 210.0 -0.5) (float-vector 285.5 210.0 44.5)))
         (instance face :init :vertices (list (float-vector -299.5 -210.0 44.5) (float-vector -299.5 -210.0 -0.5) (float-vector 285.5 -210.0 -0.5) (float-vector 285.5 -210.0 44.5)))
         (instance face :init :vertices (list (float-vector -299.5 210.0 44.5) (float-vector -299.5 210.0 -0.5) (float-vector -299.5 -210.0 -0.5) (float-vector -299.5 -210.0 44.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -285.5 195.0 585.0) (float-vector -300.5 195.0 585.0) (float-vector -300.5 -195.0 585.0) (float-vector -285.5 -195.0 585.0)))
         (instance face :init :vertices (list (float-vector -300.5 195.0 45.0) (float-vector -285.5 195.0 45.0) (float-vector -285.5 -195.0 45.0) (float-vector -300.5 -195.0 45.0)))
         (instance face :init :vertices (list (float-vector -285.5 195.0 585.0) (float-vector -285.5 195.0 45.0) (float-vector -300.5 195.0 45.0) (float-vector -300.5 195.0 585.0)))
         (instance face :init :vertices (list (float-vector -285.5 -195.0 585.0) (float-vector -285.5 -195.0 45.0) (float-vector -285.5 195.0 45.0) (float-vector -285.5 195.0 585.0)))
         (instance face :init :vertices (list (float-vector -300.5 -195.0 585.0) (float-vector -300.5 -195.0 45.0) (float-vector -285.5 -195.0 45.0) (float-vector -285.5 -195.0 585.0)))
         (instance face :init :vertices (list (float-vector -300.5 195.0 585.0) (float-vector -300.5 195.0 45.0) (float-vector -300.5 -195.0 45.0) (float-vector -300.5 -195.0 585.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 285.5 210.5 585.0) (float-vector -299.5 210.5 585.0) (float-vector -299.5 195.5 585.0) (float-vector 285.5 195.5 585.0)))
         (instance face :init :vertices (list (float-vector -299.5 210.5 45.0) (float-vector 285.5 210.5 45.0) (float-vector 285.5 195.5 45.0) (float-vector -299.5 195.5 45.0)))
         (instance face :init :vertices (list (float-vector 285.5 210.5 585.0) (float-vector 285.5 210.5 45.0) (float-vector -299.5 210.5 45.0) (float-vector -299.5 210.5 585.0)))
         (instance face :init :vertices (list (float-vector 285.5 195.5 585.0) (float-vector 285.5 195.5 45.0) (float-vector 285.5 210.5 45.0) (float-vector 285.5 210.5 585.0)))
         (instance face :init :vertices (list (float-vector -299.5 195.5 585.0) (float-vector -299.5 195.5 45.0) (float-vector 285.5 195.5 45.0) (float-vector 285.5 195.5 585.0)))
         (instance face :init :vertices (list (float-vector -299.5 210.5 585.0) (float-vector -299.5 210.5 45.0) (float-vector -299.5 195.5 45.0) (float-vector -299.5 195.5 585.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 285.5 -195.5 585.0) (float-vector -299.5 -195.5 585.0) (float-vector -299.5 -210.5 585.0) (float-vector 285.5 -210.5 585.0)))
         (instance face :init :vertices (list (float-vector -299.5 -195.5 45.0) (float-vector 285.5 -195.5 45.0) (float-vector 285.5 -210.5 45.0) (float-vector -299.5 -210.5 45.0)))
         (instance face :init :vertices (list (float-vector 285.5 -195.5 585.0) (float-vector 285.5 -195.5 45.0) (float-vector -299.5 -195.5 45.0) (float-vector -299.5 -195.5 585.0)))
         (instance face :init :vertices (list (float-vector 285.5 -210.5 585.0) (float-vector 285.5 -210.5 45.0) (float-vector 285.5 -195.5 45.0) (float-vector 285.5 -195.5 585.0)))
         (instance face :init :vertices (list (float-vector -299.5 -210.5 585.0) (float-vector -299.5 -210.5 45.0) (float-vector 285.5 -210.5 45.0) (float-vector 285.5 -210.5 585.0)))
         (instance face :init :vertices (list (float-vector -299.5 -195.5 585.0) (float-vector -299.5 -195.5 45.0) (float-vector -299.5 -210.5 45.0) (float-vector -299.5 -210.5 585.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 285.0 195.0 364.5) (float-vector -285.0 195.0 364.5) (float-vector -285.0 -195.0 364.5) (float-vector 285.0 -195.0 364.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 349.5) (float-vector 285.0 195.0 349.5) (float-vector 285.0 -195.0 349.5) (float-vector -285.0 -195.0 349.5)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 364.5) (float-vector 285.0 195.0 349.5) (float-vector -285.0 195.0 349.5) (float-vector -285.0 195.0 364.5)))
         (instance face :init :vertices (list (float-vector 285.0 -195.0 364.5) (float-vector 285.0 -195.0 349.5) (float-vector 285.0 195.0 349.5) (float-vector 285.0 195.0 364.5)))
         (instance face :init :vertices (list (float-vector -285.0 -195.0 364.5) (float-vector -285.0 -195.0 349.5) (float-vector 285.0 -195.0 349.5) (float-vector 285.0 -195.0 364.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 364.5) (float-vector -285.0 195.0 349.5) (float-vector -285.0 -195.0 349.5) (float-vector -285.0 -195.0 364.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 285.0 195.0 479.5) (float-vector -285.0 195.0 479.5) (float-vector -285.0 -195.0 479.5) (float-vector 285.0 -195.0 479.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 464.5) (float-vector 285.0 195.0 464.5) (float-vector 285.0 -195.0 464.5) (float-vector -285.0 -195.0 464.5)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 479.5) (float-vector 285.0 195.0 464.5) (float-vector -285.0 195.0 464.5) (float-vector -285.0 195.0 479.5)))
         (instance face :init :vertices (list (float-vector 285.0 -195.0 479.5) (float-vector 285.0 -195.0 464.5) (float-vector 285.0 195.0 464.5) (float-vector 285.0 195.0 479.5)))
         (instance face :init :vertices (list (float-vector -285.0 -195.0 479.5) (float-vector -285.0 -195.0 464.5) (float-vector 285.0 -195.0 464.5) (float-vector 285.0 -195.0 479.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 479.5) (float-vector -285.0 195.0 464.5) (float-vector -285.0 -195.0 464.5) (float-vector -285.0 -195.0 479.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :seashell)
     (send (elt bc 1) :set-color :seashell)
     (send (elt bc 2) :set-color :seashell)
     (send (elt bc 3) :set-color :seashell)
     (send (elt bc 4) :set-color :seashell)
     (send (elt bc 5) :set-color :seashell)
     (send (elt bc 6) :set-color :seashell)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :unknown-side-table-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -285.0 195.0 -47.5) (float-vector -285.0 -195.0 -47.5) (float-vector -285.0 -195.0 47.5) (float-vector -285.0 195.0 47.5)))
         (instance face :init :vertices (list (float-vector 285.0 -195.0 -47.5) (float-vector 285.0 -195.0 47.5) (float-vector -285.0 -195.0 47.5) (float-vector -285.0 -195.0 -47.5)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 -47.5) (float-vector 285.0 195.0 47.5) (float-vector 285.0 180.0 47.5) (float-vector 285.0 180.0 -32.5) (float-vector 285.0 -180.0 -32.5) (float-vector 285.0 -180.0 47.5) (float-vector 285.0 -195.0 47.5) (float-vector 285.0 -195.0 -47.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 47.5) (float-vector -285.0 -195.0 47.5) (float-vector 285.0 -195.0 47.5) (float-vector 285.0 -180.0 47.5) (float-vector -270.0 -180.0 47.5) (float-vector -270.0 180.0 47.5) (float-vector 285.0 180.0 47.5) (float-vector 285.0 195.0 47.5)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 -47.5) (float-vector 285.0 -195.0 -47.5) (float-vector -285.0 -195.0 -47.5) (float-vector -285.0 195.0 -47.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 -47.5) (float-vector -285.0 195.0 47.5) (float-vector 285.0 195.0 47.5) (float-vector 285.0 195.0 -47.5)))
         (instance face :init :vertices (list (float-vector -270.0 180.0 47.5) (float-vector -270.0 -180.0 47.5) (float-vector -270.0 -180.0 -32.5) (float-vector -270.0 180.0 -32.5)))
         (instance face :init :vertices (list (float-vector -270.0 -180.0 -32.5) (float-vector -270.0 -180.0 47.5) (float-vector 285.0 -180.0 47.5) (float-vector 285.0 -180.0 -32.5)))
         (instance face :init :vertices (list (float-vector 285.0 180.0 -32.5) (float-vector 285.0 180.0 47.5) (float-vector -270.0 180.0 47.5) (float-vector -270.0 180.0 -32.5)))
         (instance face :init :vertices (list (float-vector -270.0 180.0 -32.5) (float-vector -270.0 -180.0 -32.5) (float-vector 285.0 -180.0 -32.5) (float-vector 285.0 180.0 -32.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 300.5 210.0 63.0) (float-vector 285.5 210.0 63.0) (float-vector 285.5 -210.0 63.0) (float-vector 300.5 -210.0 63.0)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 -47.0) (float-vector 300.5 210.0 -47.0) (float-vector 300.5 -210.0 -47.0) (float-vector 285.5 -210.0 -47.0)))
         (instance face :init :vertices (list (float-vector 300.5 210.0 63.0) (float-vector 300.5 210.0 -47.0) (float-vector 285.5 210.0 -47.0) (float-vector 285.5 210.0 63.0)))
         (instance face :init :vertices (list (float-vector 300.5 -210.0 63.0) (float-vector 300.5 -210.0 -47.0) (float-vector 300.5 210.0 -47.0) (float-vector 300.5 210.0 63.0)))
         (instance face :init :vertices (list (float-vector 285.5 -210.0 63.0) (float-vector 285.5 -210.0 -47.0) (float-vector 300.5 -210.0 -47.0) (float-vector 300.5 -210.0 63.0)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 63.0) (float-vector 285.5 210.0 -47.0) (float-vector 285.5 -210.0 -47.0) (float-vector 285.5 -210.0 63.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 327.33 -120.0 5.5) (float-vector 328.0 -120.0 8.0) (float-vector 327.33 -120.0 10.5) (float-vector 325.5 -120.0 12.3301) (float-vector 323.0 -120.0 13.0) (float-vector 320.5 -120.0 12.3301) (float-vector 318.67 -120.0 10.5) (float-vector 318.0 -120.0 8.0) (float-vector 318.67 -120.0 5.5) (float-vector 320.5 -120.0 3.66987) (float-vector 323.0 -120.0 3.0) (float-vector 325.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 328.0 120.0 8.0) (float-vector 327.33 120.0 5.5) (float-vector 325.5 120.0 3.66987) (float-vector 323.0 120.0 3.0) (float-vector 320.5 120.0 3.66987) (float-vector 318.67 120.0 5.5) (float-vector 318.0 120.0 8.0) (float-vector 318.67 120.0 10.5) (float-vector 320.5 120.0 12.3301) (float-vector 323.0 120.0 13.0) (float-vector 325.5 120.0 12.3301) (float-vector 327.33 120.0 10.5)))
         (instance face :init :vertices (list (float-vector 327.33 -120.0 5.5) (float-vector 327.33 120.0 5.5) (float-vector 328.0 120.0 8.0) (float-vector 328.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 325.5 -120.0 3.66987) (float-vector 325.5 120.0 3.66987) (float-vector 327.33 120.0 5.5) (float-vector 327.33 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 3.0) (float-vector 323.0 120.0 3.0) (float-vector 325.5 120.0 3.66987) (float-vector 325.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 320.5 -120.0 3.66987) (float-vector 320.5 120.0 3.66987) (float-vector 323.0 120.0 3.0) (float-vector 323.0 -120.0 3.0)))
         (instance face :init :vertices (list (float-vector 318.67 -120.0 5.5) (float-vector 318.67 120.0 5.5) (float-vector 320.5 120.0 3.66987) (float-vector 320.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 318.0 -120.0 8.0) (float-vector 318.0 120.0 8.0) (float-vector 318.67 120.0 5.5) (float-vector 318.67 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 318.67 -120.0 10.5) (float-vector 318.67 120.0 10.5) (float-vector 318.0 120.0 8.0) (float-vector 318.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 320.5 -120.0 12.3301) (float-vector 320.5 120.0 12.3301) (float-vector 318.67 120.0 10.5) (float-vector 318.67 -120.0 10.5)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 13.0) (float-vector 323.0 120.0 13.0) (float-vector 320.5 120.0 12.3301) (float-vector 320.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 325.5 -120.0 12.3301) (float-vector 325.5 120.0 12.3301) (float-vector 323.0 120.0 13.0) (float-vector 323.0 -120.0 13.0)))
         (instance face :init :vertices (list (float-vector 327.33 -120.0 10.5) (float-vector 327.33 120.0 10.5) (float-vector 325.5 120.0 12.3301) (float-vector 325.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 328.0 -120.0 8.0) (float-vector 328.0 120.0 8.0) (float-vector 327.33 120.0 10.5) (float-vector 327.33 -120.0 10.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 323.0 120.0 12.0) (float-vector 293.0 120.0 12.0) (float-vector 293.0 105.0 12.0) (float-vector 323.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 120.0 4.0) (float-vector 323.0 120.0 4.0) (float-vector 323.0 105.0 4.0) (float-vector 293.0 105.0 4.0)))
         (instance face :init :vertices (list (float-vector 323.0 120.0 12.0) (float-vector 323.0 120.0 4.0) (float-vector 293.0 120.0 4.0) (float-vector 293.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 323.0 105.0 12.0) (float-vector 323.0 105.0 4.0) (float-vector 323.0 120.0 4.0) (float-vector 323.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 105.0 12.0) (float-vector 293.0 105.0 4.0) (float-vector 323.0 105.0 4.0) (float-vector 323.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 120.0 12.0) (float-vector 293.0 120.0 4.0) (float-vector 293.0 105.0 4.0) (float-vector 293.0 105.0 12.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 323.0 -105.0 12.0) (float-vector 293.0 -105.0 12.0) (float-vector 293.0 -120.0 12.0) (float-vector 323.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 -105.0 4.0) (float-vector 323.0 -105.0 4.0) (float-vector 323.0 -120.0 4.0) (float-vector 293.0 -120.0 4.0)))
         (instance face :init :vertices (list (float-vector 323.0 -105.0 12.0) (float-vector 323.0 -105.0 4.0) (float-vector 293.0 -105.0 4.0) (float-vector 293.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 12.0) (float-vector 323.0 -120.0 4.0) (float-vector 323.0 -105.0 4.0) (float-vector 323.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 -120.0 12.0) (float-vector 293.0 -120.0 4.0) (float-vector 323.0 -120.0 4.0) (float-vector 323.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 -105.0 12.0) (float-vector 293.0 -105.0 4.0) (float-vector 293.0 -120.0 4.0) (float-vector 293.0 -120.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :seashell)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :unknown-side-table-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :unknown-side-table-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -285.0 195.0 -47.5) (float-vector -285.0 -195.0 -47.5) (float-vector -285.0 -195.0 47.5) (float-vector -285.0 195.0 47.5)))
         (instance face :init :vertices (list (float-vector 285.0 -195.0 -47.5) (float-vector 285.0 -195.0 47.5) (float-vector -285.0 -195.0 47.5) (float-vector -285.0 -195.0 -47.5)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 -47.5) (float-vector 285.0 195.0 47.5) (float-vector 285.0 180.0 47.5) (float-vector 285.0 180.0 -32.5) (float-vector 285.0 -180.0 -32.5) (float-vector 285.0 -180.0 47.5) (float-vector 285.0 -195.0 47.5) (float-vector 285.0 -195.0 -47.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 47.5) (float-vector -285.0 -195.0 47.5) (float-vector 285.0 -195.0 47.5) (float-vector 285.0 -180.0 47.5) (float-vector -270.0 -180.0 47.5) (float-vector -270.0 180.0 47.5) (float-vector 285.0 180.0 47.5) (float-vector 285.0 195.0 47.5)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 -47.5) (float-vector 285.0 -195.0 -47.5) (float-vector -285.0 -195.0 -47.5) (float-vector -285.0 195.0 -47.5)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 -47.5) (float-vector -285.0 195.0 47.5) (float-vector 285.0 195.0 47.5) (float-vector 285.0 195.0 -47.5)))
         (instance face :init :vertices (list (float-vector -270.0 180.0 47.5) (float-vector -270.0 -180.0 47.5) (float-vector -270.0 -180.0 -32.5) (float-vector -270.0 180.0 -32.5)))
         (instance face :init :vertices (list (float-vector -270.0 -180.0 -32.5) (float-vector -270.0 -180.0 47.5) (float-vector 285.0 -180.0 47.5) (float-vector 285.0 -180.0 -32.5)))
         (instance face :init :vertices (list (float-vector 285.0 180.0 -32.5) (float-vector 285.0 180.0 47.5) (float-vector -270.0 180.0 47.5) (float-vector -270.0 180.0 -32.5)))
         (instance face :init :vertices (list (float-vector -270.0 180.0 -32.5) (float-vector -270.0 -180.0 -32.5) (float-vector 285.0 -180.0 -32.5) (float-vector 285.0 180.0 -32.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 300.5 210.0 63.0) (float-vector 285.5 210.0 63.0) (float-vector 285.5 -210.0 63.0) (float-vector 300.5 -210.0 63.0)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 -47.0) (float-vector 300.5 210.0 -47.0) (float-vector 300.5 -210.0 -47.0) (float-vector 285.5 -210.0 -47.0)))
         (instance face :init :vertices (list (float-vector 300.5 210.0 63.0) (float-vector 300.5 210.0 -47.0) (float-vector 285.5 210.0 -47.0) (float-vector 285.5 210.0 63.0)))
         (instance face :init :vertices (list (float-vector 300.5 -210.0 63.0) (float-vector 300.5 -210.0 -47.0) (float-vector 300.5 210.0 -47.0) (float-vector 300.5 210.0 63.0)))
         (instance face :init :vertices (list (float-vector 285.5 -210.0 63.0) (float-vector 285.5 -210.0 -47.0) (float-vector 300.5 -210.0 -47.0) (float-vector 300.5 -210.0 63.0)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 63.0) (float-vector 285.5 210.0 -47.0) (float-vector 285.5 -210.0 -47.0) (float-vector 285.5 -210.0 63.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 327.33 -120.0 5.5) (float-vector 328.0 -120.0 8.0) (float-vector 327.33 -120.0 10.5) (float-vector 325.5 -120.0 12.3301) (float-vector 323.0 -120.0 13.0) (float-vector 320.5 -120.0 12.3301) (float-vector 318.67 -120.0 10.5) (float-vector 318.0 -120.0 8.0) (float-vector 318.67 -120.0 5.5) (float-vector 320.5 -120.0 3.66987) (float-vector 323.0 -120.0 3.0) (float-vector 325.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 328.0 120.0 8.0) (float-vector 327.33 120.0 5.5) (float-vector 325.5 120.0 3.66987) (float-vector 323.0 120.0 3.0) (float-vector 320.5 120.0 3.66987) (float-vector 318.67 120.0 5.5) (float-vector 318.0 120.0 8.0) (float-vector 318.67 120.0 10.5) (float-vector 320.5 120.0 12.3301) (float-vector 323.0 120.0 13.0) (float-vector 325.5 120.0 12.3301) (float-vector 327.33 120.0 10.5)))
         (instance face :init :vertices (list (float-vector 327.33 -120.0 5.5) (float-vector 327.33 120.0 5.5) (float-vector 328.0 120.0 8.0) (float-vector 328.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 325.5 -120.0 3.66987) (float-vector 325.5 120.0 3.66987) (float-vector 327.33 120.0 5.5) (float-vector 327.33 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 3.0) (float-vector 323.0 120.0 3.0) (float-vector 325.5 120.0 3.66987) (float-vector 325.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 320.5 -120.0 3.66987) (float-vector 320.5 120.0 3.66987) (float-vector 323.0 120.0 3.0) (float-vector 323.0 -120.0 3.0)))
         (instance face :init :vertices (list (float-vector 318.67 -120.0 5.5) (float-vector 318.67 120.0 5.5) (float-vector 320.5 120.0 3.66987) (float-vector 320.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 318.0 -120.0 8.0) (float-vector 318.0 120.0 8.0) (float-vector 318.67 120.0 5.5) (float-vector 318.67 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 318.67 -120.0 10.5) (float-vector 318.67 120.0 10.5) (float-vector 318.0 120.0 8.0) (float-vector 318.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 320.5 -120.0 12.3301) (float-vector 320.5 120.0 12.3301) (float-vector 318.67 120.0 10.5) (float-vector 318.67 -120.0 10.5)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 13.0) (float-vector 323.0 120.0 13.0) (float-vector 320.5 120.0 12.3301) (float-vector 320.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 325.5 -120.0 12.3301) (float-vector 325.5 120.0 12.3301) (float-vector 323.0 120.0 13.0) (float-vector 323.0 -120.0 13.0)))
         (instance face :init :vertices (list (float-vector 327.33 -120.0 10.5) (float-vector 327.33 120.0 10.5) (float-vector 325.5 120.0 12.3301) (float-vector 325.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 328.0 -120.0 8.0) (float-vector 328.0 120.0 8.0) (float-vector 327.33 120.0 10.5) (float-vector 327.33 -120.0 10.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 323.0 120.0 12.0) (float-vector 293.0 120.0 12.0) (float-vector 293.0 105.0 12.0) (float-vector 323.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 120.0 4.0) (float-vector 323.0 120.0 4.0) (float-vector 323.0 105.0 4.0) (float-vector 293.0 105.0 4.0)))
         (instance face :init :vertices (list (float-vector 323.0 120.0 12.0) (float-vector 323.0 120.0 4.0) (float-vector 293.0 120.0 4.0) (float-vector 293.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 323.0 105.0 12.0) (float-vector 323.0 105.0 4.0) (float-vector 323.0 120.0 4.0) (float-vector 323.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 105.0 12.0) (float-vector 293.0 105.0 4.0) (float-vector 323.0 105.0 4.0) (float-vector 323.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 120.0 12.0) (float-vector 293.0 120.0 4.0) (float-vector 293.0 105.0 4.0) (float-vector 293.0 105.0 12.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 323.0 -105.0 12.0) (float-vector 293.0 -105.0 12.0) (float-vector 293.0 -120.0 12.0) (float-vector 323.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 -105.0 4.0) (float-vector 323.0 -105.0 4.0) (float-vector 323.0 -120.0 4.0) (float-vector 293.0 -120.0 4.0)))
         (instance face :init :vertices (list (float-vector 323.0 -105.0 12.0) (float-vector 323.0 -105.0 4.0) (float-vector 293.0 -105.0 4.0) (float-vector 293.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 12.0) (float-vector 323.0 -120.0 4.0) (float-vector 323.0 -105.0 4.0) (float-vector 323.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 -120.0 12.0) (float-vector 293.0 -120.0 4.0) (float-vector 323.0 -120.0 4.0) (float-vector 323.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 293.0 -105.0 12.0) (float-vector 293.0 -105.0 4.0) (float-vector 293.0 -120.0 4.0) (float-vector 293.0 -120.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :seashell)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :unknown-side-table-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :unknown-side-table-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -285.0 195.0 -150.0) (float-vector -285.0 -195.0 -150.0) (float-vector -285.0 -195.0 150.0) (float-vector -285.0 195.0 150.0)))
         (instance face :init :vertices (list (float-vector 285.0 -195.0 -150.0) (float-vector 285.0 -195.0 150.0) (float-vector -285.0 -195.0 150.0) (float-vector -285.0 -195.0 -150.0)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 -150.0) (float-vector 285.0 195.0 150.0) (float-vector 285.0 180.0 150.0) (float-vector 285.0 180.0 -135.0) (float-vector 285.0 -180.0 -135.0) (float-vector 285.0 -180.0 150.0) (float-vector 285.0 -195.0 150.0) (float-vector 285.0 -195.0 -150.0)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 150.0) (float-vector -285.0 -195.0 150.0) (float-vector 285.0 -195.0 150.0) (float-vector 285.0 -180.0 150.0) (float-vector -270.0 -180.0 150.0) (float-vector -270.0 180.0 150.0) (float-vector 285.0 180.0 150.0) (float-vector 285.0 195.0 150.0)))
         (instance face :init :vertices (list (float-vector 285.0 195.0 -150.0) (float-vector 285.0 -195.0 -150.0) (float-vector -285.0 -195.0 -150.0) (float-vector -285.0 195.0 -150.0)))
         (instance face :init :vertices (list (float-vector -285.0 195.0 -150.0) (float-vector -285.0 195.0 150.0) (float-vector 285.0 195.0 150.0) (float-vector 285.0 195.0 -150.0)))
         (instance face :init :vertices (list (float-vector -270.0 180.0 150.0) (float-vector -270.0 -180.0 150.0) (float-vector -270.0 -180.0 -135.0) (float-vector -270.0 180.0 -135.0)))
         (instance face :init :vertices (list (float-vector -270.0 -180.0 -135.0) (float-vector -270.0 -180.0 150.0) (float-vector 285.0 -180.0 150.0) (float-vector 285.0 -180.0 -135.0)))
         (instance face :init :vertices (list (float-vector 285.0 180.0 -135.0) (float-vector 285.0 180.0 150.0) (float-vector -270.0 180.0 150.0) (float-vector -270.0 180.0 -135.0)))
         (instance face :init :vertices (list (float-vector -270.0 180.0 -135.0) (float-vector -270.0 -180.0 -135.0) (float-vector 285.0 -180.0 -135.0) (float-vector 285.0 180.0 -135.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 300.5 210.0 164.5) (float-vector 285.5 210.0 164.5) (float-vector 285.5 -210.0 164.5) (float-vector 300.5 -210.0 164.5)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 -150.5) (float-vector 300.5 210.0 -150.5) (float-vector 300.5 -210.0 -150.5) (float-vector 285.5 -210.0 -150.5)))
         (instance face :init :vertices (list (float-vector 300.5 210.0 164.5) (float-vector 300.5 210.0 -150.5) (float-vector 285.5 210.0 -150.5) (float-vector 285.5 210.0 164.5)))
         (instance face :init :vertices (list (float-vector 300.5 -210.0 164.5) (float-vector 300.5 -210.0 -150.5) (float-vector 300.5 210.0 -150.5) (float-vector 300.5 210.0 164.5)))
         (instance face :init :vertices (list (float-vector 285.5 -210.0 164.5) (float-vector 285.5 -210.0 -150.5) (float-vector 300.5 -210.0 -150.5) (float-vector 300.5 -210.0 164.5)))
         (instance face :init :vertices (list (float-vector 285.5 210.0 164.5) (float-vector 285.5 210.0 -150.5) (float-vector 285.5 -210.0 -150.5) (float-vector 285.5 -210.0 164.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 327.33 -120.0 119.5) (float-vector 328.0 -120.0 122.0) (float-vector 327.33 -120.0 124.5) (float-vector 325.5 -120.0 126.33) (float-vector 323.0 -120.0 127.0) (float-vector 320.5 -120.0 126.33) (float-vector 318.67 -120.0 124.5) (float-vector 318.0 -120.0 122.0) (float-vector 318.67 -120.0 119.5) (float-vector 320.5 -120.0 117.67) (float-vector 323.0 -120.0 117.0) (float-vector 325.5 -120.0 117.67)))
         (instance face :init :vertices (list (float-vector 328.0 120.0 122.0) (float-vector 327.33 120.0 119.5) (float-vector 325.5 120.0 117.67) (float-vector 323.0 120.0 117.0) (float-vector 320.5 120.0 117.67) (float-vector 318.67 120.0 119.5) (float-vector 318.0 120.0 122.0) (float-vector 318.67 120.0 124.5) (float-vector 320.5 120.0 126.33) (float-vector 323.0 120.0 127.0) (float-vector 325.5 120.0 126.33) (float-vector 327.33 120.0 124.5)))
         (instance face :init :vertices (list (float-vector 327.33 -120.0 119.5) (float-vector 327.33 120.0 119.5) (float-vector 328.0 120.0 122.0) (float-vector 328.0 -120.0 122.0)))
         (instance face :init :vertices (list (float-vector 325.5 -120.0 117.67) (float-vector 325.5 120.0 117.67) (float-vector 327.33 120.0 119.5) (float-vector 327.33 -120.0 119.5)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 117.0) (float-vector 323.0 120.0 117.0) (float-vector 325.5 120.0 117.67) (float-vector 325.5 -120.0 117.67)))
         (instance face :init :vertices (list (float-vector 320.5 -120.0 117.67) (float-vector 320.5 120.0 117.67) (float-vector 323.0 120.0 117.0) (float-vector 323.0 -120.0 117.0)))
         (instance face :init :vertices (list (float-vector 318.67 -120.0 119.5) (float-vector 318.67 120.0 119.5) (float-vector 320.5 120.0 117.67) (float-vector 320.5 -120.0 117.67)))
         (instance face :init :vertices (list (float-vector 318.0 -120.0 122.0) (float-vector 318.0 120.0 122.0) (float-vector 318.67 120.0 119.5) (float-vector 318.67 -120.0 119.5)))
         (instance face :init :vertices (list (float-vector 318.67 -120.0 124.5) (float-vector 318.67 120.0 124.5) (float-vector 318.0 120.0 122.0) (float-vector 318.0 -120.0 122.0)))
         (instance face :init :vertices (list (float-vector 320.5 -120.0 126.33) (float-vector 320.5 120.0 126.33) (float-vector 318.67 120.0 124.5) (float-vector 318.67 -120.0 124.5)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 127.0) (float-vector 323.0 120.0 127.0) (float-vector 320.5 120.0 126.33) (float-vector 320.5 -120.0 126.33)))
         (instance face :init :vertices (list (float-vector 325.5 -120.0 126.33) (float-vector 325.5 120.0 126.33) (float-vector 323.0 120.0 127.0) (float-vector 323.0 -120.0 127.0)))
         (instance face :init :vertices (list (float-vector 327.33 -120.0 124.5) (float-vector 327.33 120.0 124.5) (float-vector 325.5 120.0 126.33) (float-vector 325.5 -120.0 126.33)))
         (instance face :init :vertices (list (float-vector 328.0 -120.0 122.0) (float-vector 328.0 120.0 122.0) (float-vector 327.33 120.0 124.5) (float-vector 327.33 -120.0 124.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 323.0 120.0 126.0) (float-vector 293.0 120.0 126.0) (float-vector 293.0 105.0 126.0) (float-vector 323.0 105.0 126.0)))
         (instance face :init :vertices (list (float-vector 293.0 120.0 118.0) (float-vector 323.0 120.0 118.0) (float-vector 323.0 105.0 118.0) (float-vector 293.0 105.0 118.0)))
         (instance face :init :vertices (list (float-vector 323.0 120.0 126.0) (float-vector 323.0 120.0 118.0) (float-vector 293.0 120.0 118.0) (float-vector 293.0 120.0 126.0)))
         (instance face :init :vertices (list (float-vector 323.0 105.0 126.0) (float-vector 323.0 105.0 118.0) (float-vector 323.0 120.0 118.0) (float-vector 323.0 120.0 126.0)))
         (instance face :init :vertices (list (float-vector 293.0 105.0 126.0) (float-vector 293.0 105.0 118.0) (float-vector 323.0 105.0 118.0) (float-vector 323.0 105.0 126.0)))
         (instance face :init :vertices (list (float-vector 293.0 120.0 126.0) (float-vector 293.0 120.0 118.0) (float-vector 293.0 105.0 118.0) (float-vector 293.0 105.0 126.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 323.0 -105.0 126.0) (float-vector 293.0 -105.0 126.0) (float-vector 293.0 -120.0 126.0) (float-vector 323.0 -120.0 126.0)))
         (instance face :init :vertices (list (float-vector 293.0 -105.0 118.0) (float-vector 323.0 -105.0 118.0) (float-vector 323.0 -120.0 118.0) (float-vector 293.0 -120.0 118.0)))
         (instance face :init :vertices (list (float-vector 323.0 -105.0 126.0) (float-vector 323.0 -105.0 118.0) (float-vector 293.0 -105.0 118.0) (float-vector 293.0 -105.0 126.0)))
         (instance face :init :vertices (list (float-vector 323.0 -120.0 126.0) (float-vector 323.0 -120.0 118.0) (float-vector 323.0 -105.0 118.0) (float-vector 323.0 -105.0 126.0)))
         (instance face :init :vertices (list (float-vector 293.0 -120.0 126.0) (float-vector 293.0 -120.0 118.0) (float-vector 323.0 -120.0 118.0) (float-vector 323.0 -120.0 126.0)))
         (instance face :init :vertices (list (float-vector 293.0 -105.0 126.0) (float-vector 293.0 -105.0 118.0) (float-vector 293.0 -120.0 118.0) (float-vector 293.0 -120.0 126.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :seashell)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :unknown-side-table-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 0.0 0.0 195.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 0.0 0.0 412.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 0.0 527.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :drawer2
     (setq joint0 (instance linear-joint :init
			     :parent-link blink0 :child-link blink1 :name :drawer2   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  600.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer1
     (setq joint1 (instance linear-joint :init
			     :parent-link blink0 :child-link blink2 :name :drawer1   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  600.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer0
     (setq joint2 (instance linear-joint :init
			     :parent-link blink0 :child-link blink3 :name :drawer0   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  600.0 :max-joint-velocity 0.785398 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector 323.0 -5.813557e-13 317.0) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle2"))
     (send blink1 :assoc handle1)
     (setq handle2 (make-cascoords :pos (float-vector 323.0 -7.942652e-13 420.0) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle1"))
     (send blink2 :assoc handle2)
     (setq handle3 (make-cascoords :pos (float-vector 323.0 -1.837781e-14 535.0) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle0"))
     (send blink3 :assoc handle3)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3))
     (setq joint-list (list joint0 joint1 joint2))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:drawer2 (&rest args) (forward-message-to joint0 args))
  (:drawer1 (&rest args) (forward-message-to joint1 args))
  (:drawer0 (&rest args) (forward-message-to joint2 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1 handle2 handle3) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:handle-drawer-handle2 (&rest args) (forward-message-to handle1 args))
  (:handle-drawer-handle1 (&rest args) (forward-message-to handle2 args))
  (:handle-drawer-handle0 (&rest args) (forward-message-to handle3 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun unknown-side-table (&rest args) (instance* unknown-side-table-object :init args))
;; (format *error-output* "(instance unknown-side-table-object :init) for generating model~%")
