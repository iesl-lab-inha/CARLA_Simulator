;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73b2-dish-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1 handle2 handle3 handle4 handle5 handle6 handle7
         attention0
         ))
(defmethod room73b2-dish-object
  (:init
   (&rest args &key (name "room73b2-dish") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room73b2-dish-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 75.5 0.0 0.0) (float-vector 69.7529 -28.8926 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.7529 -28.8926 0.0) (float-vector 53.3866 -53.3866 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 53.3866 -53.3866 0.0) (float-vector 28.8926 -69.7529 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 28.8926 -69.7529 0.0) (float-vector -6.821210e-13 -75.5 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -6.821210e-13 -75.5 0.0) (float-vector -28.8926 -69.7529 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -28.8926 -69.7529 0.0) (float-vector -53.3866 -53.3866 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -53.3866 -53.3866 0.0) (float-vector -69.7529 -28.8926 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -69.7529 -28.8926 0.0) (float-vector -75.5 4.547474e-13 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -75.5 4.547474e-13 0.0) (float-vector -69.7529 28.8926 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -69.7529 28.8926 0.0) (float-vector -53.3866 53.3866 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -53.3866 53.3866 0.0) (float-vector -28.8926 69.7529 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -28.8926 69.7529 0.0) (float-vector 5.684342e-14 75.5 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 75.5 0.0) (float-vector 28.8926 69.7529 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 28.8926 69.7529 0.0) (float-vector 53.3866 53.3866 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 53.3866 53.3866 0.0) (float-vector 69.7529 28.8926 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.7529 28.8926 0.0) (float-vector 75.5 0.0 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.7529 -28.8926 0.0) (float-vector 69.7529 -28.8926 0.0) (float-vector 75.5 0.0 0.0) (float-vector 75.5 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 53.3866 -53.3866 0.0) (float-vector 53.3866 -53.3866 0.0) (float-vector 69.7529 -28.8926 0.0) (float-vector 69.7529 -28.8926 0.0)))
         (instance face :init :vertices (list (float-vector 28.8926 -69.7529 0.0) (float-vector 28.8926 -69.7529 0.0) (float-vector 53.3866 -53.3866 0.0) (float-vector 53.3866 -53.3866 0.0)))
         (instance face :init :vertices (list (float-vector -6.821210e-13 -75.5 0.0) (float-vector -6.821210e-13 -75.5 0.0) (float-vector 28.8926 -69.7529 0.0) (float-vector 28.8926 -69.7529 0.0)))
         (instance face :init :vertices (list (float-vector -28.8926 -69.7529 0.0) (float-vector -28.8926 -69.7529 0.0) (float-vector -6.821210e-13 -75.5 0.0) (float-vector -6.821210e-13 -75.5 0.0)))
         (instance face :init :vertices (list (float-vector -53.3866 -53.3866 0.0) (float-vector -53.3866 -53.3866 0.0) (float-vector -28.8926 -69.7529 0.0) (float-vector -28.8926 -69.7529 0.0)))
         (instance face :init :vertices (list (float-vector -69.7529 -28.8926 0.0) (float-vector -69.7529 -28.8926 0.0) (float-vector -53.3866 -53.3866 0.0) (float-vector -53.3866 -53.3866 0.0)))
         (instance face :init :vertices (list (float-vector -75.5 4.547474e-13 0.0) (float-vector -75.5 4.547474e-13 0.0) (float-vector -69.7529 -28.8926 0.0) (float-vector -69.7529 -28.8926 0.0)))
         (instance face :init :vertices (list (float-vector -69.7529 28.8926 0.0) (float-vector -69.7529 28.8926 0.0) (float-vector -75.5 4.547474e-13 0.0) (float-vector -75.5 4.547474e-13 0.0)))
         (instance face :init :vertices (list (float-vector -53.3866 53.3866 0.0) (float-vector -53.3866 53.3866 0.0) (float-vector -69.7529 28.8926 0.0) (float-vector -69.7529 28.8926 0.0)))
         (instance face :init :vertices (list (float-vector -28.8926 69.7529 0.0) (float-vector -28.8926 69.7529 0.0) (float-vector -53.3866 53.3866 0.0) (float-vector -53.3866 53.3866 0.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 75.5 0.0) (float-vector 5.684342e-14 75.5 0.0) (float-vector -28.8926 69.7529 0.0) (float-vector -28.8926 69.7529 0.0)))
         (instance face :init :vertices (list (float-vector 28.8926 69.7529 0.0) (float-vector 28.8926 69.7529 0.0) (float-vector 5.684342e-14 75.5 0.0) (float-vector 5.684342e-14 75.5 0.0)))
         (instance face :init :vertices (list (float-vector 53.3866 53.3866 0.0) (float-vector 53.3866 53.3866 0.0) (float-vector 28.8926 69.7529 0.0) (float-vector 28.8926 69.7529 0.0)))
         (instance face :init :vertices (list (float-vector 69.7529 28.8926 0.0) (float-vector 69.7529 28.8926 0.0) (float-vector 53.3866 53.3866 0.0) (float-vector 53.3866 53.3866 0.0)))
         (instance face :init :vertices (list (float-vector 75.5 0.0 0.0) (float-vector 75.5 0.0 0.0) (float-vector 69.7529 28.8926 0.0) (float-vector 69.7529 28.8926 0.0)))
         (instance face :init :vertices (list (float-vector 74.3723 -30.806 0.0) (float-vector 69.7529 -28.8926 0.0) (float-vector 75.5 0.0 0.0) (float-vector 80.5 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 56.9221 -56.9221 0.0) (float-vector 53.3866 -53.3866 0.0) (float-vector 69.7529 -28.8926 0.0) (float-vector 74.3723 -30.806 0.0)))
         (instance face :init :vertices (list (float-vector 30.806 -74.3723 0.0) (float-vector 28.8926 -69.7529 0.0) (float-vector 53.3866 -53.3866 0.0) (float-vector 56.9221 -56.9221 0.0)))
         (instance face :init :vertices (list (float-vector -7.389644e-13 -80.5 0.0) (float-vector -6.821210e-13 -75.5 0.0) (float-vector 28.8926 -69.7529 0.0) (float-vector 30.806 -74.3723 0.0)))
         (instance face :init :vertices (list (float-vector -30.806 -74.3723 0.0) (float-vector -28.8926 -69.7529 0.0) (float-vector -6.821210e-13 -75.5 0.0) (float-vector -7.389644e-13 -80.5 0.0)))
         (instance face :init :vertices (list (float-vector -56.9221 -56.9221 0.0) (float-vector -53.3866 -53.3866 0.0) (float-vector -28.8926 -69.7529 0.0) (float-vector -30.806 -74.3723 0.0)))
         (instance face :init :vertices (list (float-vector -74.3723 -30.806 0.0) (float-vector -69.7529 -28.8926 0.0) (float-vector -53.3866 -53.3866 0.0) (float-vector -56.9221 -56.9221 0.0)))
         (instance face :init :vertices (list (float-vector -80.5 4.547474e-13 0.0) (float-vector -75.5 4.547474e-13 0.0) (float-vector -69.7529 -28.8926 0.0) (float-vector -74.3723 -30.806 0.0)))
         (instance face :init :vertices (list (float-vector -74.3723 30.806 0.0) (float-vector -69.7529 28.8926 0.0) (float-vector -75.5 4.547474e-13 0.0) (float-vector -80.5 4.547474e-13 0.0)))
         (instance face :init :vertices (list (float-vector -56.9221 56.9221 0.0) (float-vector -53.3866 53.3866 0.0) (float-vector -69.7529 28.8926 0.0) (float-vector -74.3723 30.806 0.0)))
         (instance face :init :vertices (list (float-vector -30.806 74.3723 0.0) (float-vector -28.8926 69.7529 0.0) (float-vector -53.3866 53.3866 0.0) (float-vector -56.9221 56.9221 0.0)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 80.5 0.0) (float-vector 5.684342e-14 75.5 0.0) (float-vector -28.8926 69.7529 0.0) (float-vector -30.806 74.3723 0.0)))
         (instance face :init :vertices (list (float-vector 30.806 74.3723 0.0) (float-vector 28.8926 69.7529 0.0) (float-vector 5.684342e-14 75.5 0.0) (float-vector 1.136868e-13 80.5 0.0)))
         (instance face :init :vertices (list (float-vector 56.9221 56.9221 0.0) (float-vector 53.3866 53.3866 0.0) (float-vector 28.8926 69.7529 0.0) (float-vector 30.806 74.3723 0.0)))
         (instance face :init :vertices (list (float-vector 74.3723 30.806 0.0) (float-vector 69.7529 28.8926 0.0) (float-vector 53.3866 53.3866 0.0) (float-vector 56.9221 56.9221 0.0)))
         (instance face :init :vertices (list (float-vector 80.5 0.0 0.0) (float-vector 75.5 0.0 0.0) (float-vector 69.7529 28.8926 0.0) (float-vector 74.3723 30.806 0.0)))
         (instance face :init :vertices (list (float-vector 74.3723 -30.806 0.0) (float-vector 74.3723 -30.806 0.0) (float-vector 80.5 0.0 0.0) (float-vector 80.5 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 56.9221 -56.9221 0.0) (float-vector 56.9221 -56.9221 0.0) (float-vector 74.3723 -30.806 0.0) (float-vector 74.3723 -30.806 0.0)))
         (instance face :init :vertices (list (float-vector 30.806 -74.3723 0.0) (float-vector 30.806 -74.3723 0.0) (float-vector 56.9221 -56.9221 0.0) (float-vector 56.9221 -56.9221 0.0)))
         (instance face :init :vertices (list (float-vector -7.389644e-13 -80.5 0.0) (float-vector -7.389644e-13 -80.5 0.0) (float-vector 30.806 -74.3723 0.0) (float-vector 30.806 -74.3723 0.0)))
         (instance face :init :vertices (list (float-vector -30.806 -74.3723 0.0) (float-vector -30.806 -74.3723 0.0) (float-vector -7.389644e-13 -80.5 0.0) (float-vector -7.389644e-13 -80.5 0.0)))
         (instance face :init :vertices (list (float-vector -56.9221 -56.9221 0.0) (float-vector -56.9221 -56.9221 0.0) (float-vector -30.806 -74.3723 0.0) (float-vector -30.806 -74.3723 0.0)))
         (instance face :init :vertices (list (float-vector -74.3723 -30.806 0.0) (float-vector -74.3723 -30.806 0.0) (float-vector -56.9221 -56.9221 0.0) (float-vector -56.9221 -56.9221 0.0)))
         (instance face :init :vertices (list (float-vector -80.5 4.547474e-13 0.0) (float-vector -80.5 4.547474e-13 0.0) (float-vector -74.3723 -30.806 0.0) (float-vector -74.3723 -30.806 0.0)))
         (instance face :init :vertices (list (float-vector -74.3723 30.806 0.0) (float-vector -74.3723 30.806 0.0) (float-vector -80.5 4.547474e-13 0.0) (float-vector -80.5 4.547474e-13 0.0)))
         (instance face :init :vertices (list (float-vector -56.9221 56.9221 0.0) (float-vector -56.9221 56.9221 0.0) (float-vector -74.3723 30.806 0.0) (float-vector -74.3723 30.806 0.0)))
         (instance face :init :vertices (list (float-vector -30.806 74.3723 0.0) (float-vector -30.806 74.3723 0.0) (float-vector -56.9221 56.9221 0.0) (float-vector -56.9221 56.9221 0.0)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 80.5 0.0) (float-vector 1.136868e-13 80.5 0.0) (float-vector -30.806 74.3723 0.0) (float-vector -30.806 74.3723 0.0)))
         (instance face :init :vertices (list (float-vector 30.806 74.3723 0.0) (float-vector 30.806 74.3723 0.0) (float-vector 1.136868e-13 80.5 0.0) (float-vector 1.136868e-13 80.5 0.0)))
         (instance face :init :vertices (list (float-vector 56.9221 56.9221 0.0) (float-vector 56.9221 56.9221 0.0) (float-vector 30.806 74.3723 0.0) (float-vector 30.806 74.3723 0.0)))
         (instance face :init :vertices (list (float-vector 74.3723 30.806 0.0) (float-vector 74.3723 30.806 0.0) (float-vector 56.9221 56.9221 0.0) (float-vector 56.9221 56.9221 0.0)))
         (instance face :init :vertices (list (float-vector 80.5 0.0 0.0) (float-vector 80.5 0.0 0.0) (float-vector 74.3723 30.806 0.0) (float-vector 74.3723 30.806 0.0)))
         (instance face :init :vertices (list (float-vector 84.2219 -34.8858 1.68855) (float-vector 74.3723 -30.806 0.0) (float-vector 80.5 0.0 0.0) (float-vector 91.1611 0.0 1.68855)))
         (instance face :init :vertices (list (float-vector 64.4606 -64.4606 1.68855) (float-vector 56.9221 -56.9221 0.0) (float-vector 74.3723 -30.806 0.0) (float-vector 84.2219 -34.8858 1.68855)))
         (instance face :init :vertices (list (float-vector 34.8858 -84.2219 1.68855) (float-vector 30.806 -74.3723 0.0) (float-vector 56.9221 -56.9221 0.0) (float-vector 64.4606 -64.4606 1.68855)))
         (instance face :init :vertices (list (float-vector -8.526513e-13 -91.1611 1.68855) (float-vector -7.389644e-13 -80.5 0.0) (float-vector 30.806 -74.3723 0.0) (float-vector 34.8858 -84.2219 1.68855)))
         (instance face :init :vertices (list (float-vector -34.8858 -84.2219 1.68855) (float-vector -30.806 -74.3723 0.0) (float-vector -7.389644e-13 -80.5 0.0) (float-vector -8.526513e-13 -91.1611 1.68855)))
         (instance face :init :vertices (list (float-vector -64.4606 -64.4606 1.68855) (float-vector -56.9221 -56.9221 0.0) (float-vector -30.806 -74.3723 0.0) (float-vector -34.8858 -84.2219 1.68855)))
         (instance face :init :vertices (list (float-vector -84.2219 -34.8858 1.68855) (float-vector -74.3723 -30.806 0.0) (float-vector -56.9221 -56.9221 0.0) (float-vector -64.4606 -64.4606 1.68855)))
         (instance face :init :vertices (list (float-vector -91.1611 4.547474e-13 1.68855) (float-vector -80.5 4.547474e-13 0.0) (float-vector -74.3723 -30.806 0.0) (float-vector -84.2219 -34.8858 1.68855)))
         (instance face :init :vertices (list (float-vector -84.2219 34.8858 1.68855) (float-vector -74.3723 30.806 0.0) (float-vector -80.5 4.547474e-13 0.0) (float-vector -91.1611 4.547474e-13 1.68855)))
         (instance face :init :vertices (list (float-vector -64.4606 64.4606 1.68855) (float-vector -56.9221 56.9221 0.0) (float-vector -74.3723 30.806 0.0) (float-vector -84.2219 34.8858 1.68855)))
         (instance face :init :vertices (list (float-vector -34.8858 84.2219 1.68855) (float-vector -30.806 74.3723 0.0) (float-vector -56.9221 56.9221 0.0) (float-vector -64.4606 64.4606 1.68855)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 91.1611 1.68855) (float-vector 1.136868e-13 80.5 0.0) (float-vector -30.806 74.3723 0.0) (float-vector -34.8858 84.2219 1.68855)))
         (instance face :init :vertices (list (float-vector 34.8858 84.2219 1.68855) (float-vector 30.806 74.3723 0.0) (float-vector 1.136868e-13 80.5 0.0) (float-vector 1.136868e-13 91.1611 1.68855)))
         (instance face :init :vertices (list (float-vector 64.4606 64.4606 1.68855) (float-vector 56.9221 56.9221 0.0) (float-vector 30.806 74.3723 0.0) (float-vector 34.8858 84.2219 1.68855)))
         (instance face :init :vertices (list (float-vector 84.2219 34.8858 1.68855) (float-vector 74.3723 30.806 0.0) (float-vector 56.9221 56.9221 0.0) (float-vector 64.4606 64.4606 1.68855)))
         (instance face :init :vertices (list (float-vector 91.1611 0.0 1.68855) (float-vector 80.5 0.0 0.0) (float-vector 74.3723 30.806 0.0) (float-vector 84.2219 34.8858 1.68855)))
         (instance face :init :vertices (list (float-vector 93.1073 -38.5663 6.58891) (float-vector 84.2219 -34.8858 1.68855) (float-vector 91.1611 0.0 1.68855) (float-vector 100.779 0.0 6.58891)))
         (instance face :init :vertices (list (float-vector 71.2612 -71.2612 6.58891) (float-vector 64.4606 -64.4606 1.68855) (float-vector 84.2219 -34.8858 1.68855) (float-vector 93.1073 -38.5663 6.58891)))
         (instance face :init :vertices (list (float-vector 38.5663 -93.1073 6.58891) (float-vector 34.8858 -84.2219 1.68855) (float-vector 64.4606 -64.4606 1.68855) (float-vector 71.2612 -71.2612 6.58891)))
         (instance face :init :vertices (list (float-vector -9.094947e-13 -100.779 6.58891) (float-vector -8.526513e-13 -91.1611 1.68855) (float-vector 34.8858 -84.2219 1.68855) (float-vector 38.5663 -93.1073 6.58891)))
         (instance face :init :vertices (list (float-vector -38.5663 -93.1073 6.58891) (float-vector -34.8858 -84.2219 1.68855) (float-vector -8.526513e-13 -91.1611 1.68855) (float-vector -9.094947e-13 -100.779 6.58891)))
         (instance face :init :vertices (list (float-vector -71.2612 -71.2612 6.58891) (float-vector -64.4606 -64.4606 1.68855) (float-vector -34.8858 -84.2219 1.68855) (float-vector -38.5663 -93.1073 6.58891)))
         (instance face :init :vertices (list (float-vector -93.1073 -38.5663 6.58891) (float-vector -84.2219 -34.8858 1.68855) (float-vector -64.4606 -64.4606 1.68855) (float-vector -71.2612 -71.2612 6.58891)))
         (instance face :init :vertices (list (float-vector -100.779 4.547474e-13 6.58891) (float-vector -91.1611 4.547474e-13 1.68855) (float-vector -84.2219 -34.8858 1.68855) (float-vector -93.1073 -38.5663 6.58891)))
         (instance face :init :vertices (list (float-vector -93.1073 38.5663 6.58891) (float-vector -84.2219 34.8858 1.68855) (float-vector -91.1611 4.547474e-13 1.68855) (float-vector -100.779 4.547474e-13 6.58891)))
         (instance face :init :vertices (list (float-vector -71.2612 71.2612 6.58891) (float-vector -64.4606 64.4606 1.68855) (float-vector -84.2219 34.8858 1.68855) (float-vector -93.1073 38.5663 6.58891)))
         (instance face :init :vertices (list (float-vector -38.5663 93.1073 6.58891) (float-vector -34.8858 84.2219 1.68855) (float-vector -64.4606 64.4606 1.68855) (float-vector -71.2612 71.2612 6.58891)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 100.779 6.58891) (float-vector 1.136868e-13 91.1611 1.68855) (float-vector -34.8858 84.2219 1.68855) (float-vector -38.5663 93.1073 6.58891)))
         (instance face :init :vertices (list (float-vector 38.5663 93.1073 6.58891) (float-vector 34.8858 84.2219 1.68855) (float-vector 1.136868e-13 91.1611 1.68855) (float-vector 1.136868e-13 100.779 6.58891)))
         (instance face :init :vertices (list (float-vector 71.2612 71.2612 6.58891) (float-vector 64.4606 64.4606 1.68855) (float-vector 34.8858 84.2219 1.68855) (float-vector 38.5663 93.1073 6.58891)))
         (instance face :init :vertices (list (float-vector 93.1073 38.5663 6.58891) (float-vector 84.2219 34.8858 1.68855) (float-vector 64.4606 64.4606 1.68855) (float-vector 71.2612 71.2612 6.58891)))
         (instance face :init :vertices (list (float-vector 100.779 0.0 6.58891) (float-vector 91.1611 0.0 1.68855) (float-vector 84.2219 34.8858 1.68855) (float-vector 93.1073 38.5663 6.58891)))
         (instance face :init :vertices (list (float-vector 100.159 -41.4871 14.2214) (float-vector 93.1073 -38.5663 6.58891) (float-vector 100.779 0.0 6.58891) (float-vector 108.411 0.0 14.2214)))
         (instance face :init :vertices (list (float-vector 76.6582 -76.6582 14.2214) (float-vector 71.2612 -71.2612 6.58891) (float-vector 93.1073 -38.5663 6.58891) (float-vector 100.159 -41.4871 14.2214)))
         (instance face :init :vertices (list (float-vector 41.4871 -100.159 14.2214) (float-vector 38.5663 -93.1073 6.58891) (float-vector 71.2612 -71.2612 6.58891) (float-vector 76.6582 -76.6582 14.2214)))
         (instance face :init :vertices (list (float-vector -1.023182e-12 -108.411 14.2214) (float-vector -9.094947e-13 -100.779 6.58891) (float-vector 38.5663 -93.1073 6.58891) (float-vector 41.4871 -100.159 14.2214)))
         (instance face :init :vertices (list (float-vector -41.4871 -100.159 14.2214) (float-vector -38.5663 -93.1073 6.58891) (float-vector -9.094947e-13 -100.779 6.58891) (float-vector -1.023182e-12 -108.411 14.2214)))
         (instance face :init :vertices (list (float-vector -76.6582 -76.6582 14.2214) (float-vector -71.2612 -71.2612 6.58891) (float-vector -38.5663 -93.1073 6.58891) (float-vector -41.4871 -100.159 14.2214)))
         (instance face :init :vertices (list (float-vector -100.159 -41.4871 14.2214) (float-vector -93.1073 -38.5663 6.58891) (float-vector -71.2612 -71.2612 6.58891) (float-vector -76.6582 -76.6582 14.2214)))
         (instance face :init :vertices (list (float-vector -108.411 4.547474e-13 14.2214) (float-vector -100.779 4.547474e-13 6.58891) (float-vector -93.1073 -38.5663 6.58891) (float-vector -100.159 -41.4871 14.2214)))
         (instance face :init :vertices (list (float-vector -100.159 41.4871 14.2214) (float-vector -93.1073 38.5663 6.58891) (float-vector -100.779 4.547474e-13 6.58891) (float-vector -108.411 4.547474e-13 14.2214)))
         (instance face :init :vertices (list (float-vector -76.6582 76.6582 14.2214) (float-vector -71.2612 71.2612 6.58891) (float-vector -93.1073 38.5663 6.58891) (float-vector -100.159 41.4871 14.2214)))
         (instance face :init :vertices (list (float-vector -41.4871 100.159 14.2214) (float-vector -38.5663 93.1073 6.58891) (float-vector -71.2612 71.2612 6.58891) (float-vector -76.6582 76.6582 14.2214)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 108.411 14.2214) (float-vector 1.136868e-13 100.779 6.58891) (float-vector -38.5663 93.1073 6.58891) (float-vector -41.4871 100.159 14.2214)))
         (instance face :init :vertices (list (float-vector 41.4871 100.159 14.2214) (float-vector 38.5663 93.1073 6.58891) (float-vector 1.136868e-13 100.779 6.58891) (float-vector 1.136868e-13 108.411 14.2214)))
         (instance face :init :vertices (list (float-vector 76.6582 76.6582 14.2214) (float-vector 71.2612 71.2612 6.58891) (float-vector 38.5663 93.1073 6.58891) (float-vector 41.4871 100.159 14.2214)))
         (instance face :init :vertices (list (float-vector 100.159 41.4871 14.2214) (float-vector 93.1073 38.5663 6.58891) (float-vector 71.2612 71.2612 6.58891) (float-vector 76.6582 76.6582 14.2214)))
         (instance face :init :vertices (list (float-vector 108.411 0.0 14.2214) (float-vector 100.779 0.0 6.58891) (float-vector 93.1073 38.5663 6.58891) (float-vector 100.159 41.4871 14.2214)))
         (instance face :init :vertices (list (float-vector 104.686 -43.3624 23.8389) (float-vector 100.159 -41.4871 14.2214) (float-vector 108.411 0.0 14.2214) (float-vector 113.311 0.0 23.8389)))
         (instance face :init :vertices (list (float-vector 80.1233 -80.1233 23.8389) (float-vector 76.6582 -76.6582 14.2214) (float-vector 100.159 -41.4871 14.2214) (float-vector 104.686 -43.3624 23.8389)))
         (instance face :init :vertices (list (float-vector 43.3624 -104.686 23.8389) (float-vector 41.4871 -100.159 14.2214) (float-vector 76.6582 -76.6582 14.2214) (float-vector 80.1233 -80.1233 23.8389)))
         (instance face :init :vertices (list (float-vector -1.023182e-12 -113.311 23.8389) (float-vector -1.023182e-12 -108.411 14.2214) (float-vector 41.4871 -100.159 14.2214) (float-vector 43.3624 -104.686 23.8389)))
         (instance face :init :vertices (list (float-vector -43.3624 -104.686 23.8389) (float-vector -41.4871 -100.159 14.2214) (float-vector -1.023182e-12 -108.411 14.2214) (float-vector -1.023182e-12 -113.311 23.8389)))
         (instance face :init :vertices (list (float-vector -80.1233 -80.1233 23.8389) (float-vector -76.6582 -76.6582 14.2214) (float-vector -41.4871 -100.159 14.2214) (float-vector -43.3624 -104.686 23.8389)))
         (instance face :init :vertices (list (float-vector -104.686 -43.3624 23.8389) (float-vector -100.159 -41.4871 14.2214) (float-vector -76.6582 -76.6582 14.2214) (float-vector -80.1233 -80.1233 23.8389)))
         (instance face :init :vertices (list (float-vector -113.311 4.547474e-13 23.8389) (float-vector -108.411 4.547474e-13 14.2214) (float-vector -100.159 -41.4871 14.2214) (float-vector -104.686 -43.3624 23.8389)))
         (instance face :init :vertices (list (float-vector -104.686 43.3624 23.8389) (float-vector -100.159 41.4871 14.2214) (float-vector -108.411 4.547474e-13 14.2214) (float-vector -113.311 4.547474e-13 23.8389)))
         (instance face :init :vertices (list (float-vector -80.1233 80.1233 23.8389) (float-vector -76.6582 76.6582 14.2214) (float-vector -100.159 41.4871 14.2214) (float-vector -104.686 43.3624 23.8389)))
         (instance face :init :vertices (list (float-vector -43.3624 104.686 23.8389) (float-vector -41.4871 100.159 14.2214) (float-vector -76.6582 76.6582 14.2214) (float-vector -80.1233 80.1233 23.8389)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 113.311 23.8389) (float-vector 1.136868e-13 108.411 14.2214) (float-vector -41.4871 100.159 14.2214) (float-vector -43.3624 104.686 23.8389)))
         (instance face :init :vertices (list (float-vector 43.3624 104.686 23.8389) (float-vector 41.4871 100.159 14.2214) (float-vector 1.136868e-13 108.411 14.2214) (float-vector 1.136868e-13 113.311 23.8389)))
         (instance face :init :vertices (list (float-vector 80.1233 80.1233 23.8389) (float-vector 76.6582 76.6582 14.2214) (float-vector 41.4871 100.159 14.2214) (float-vector 43.3624 104.686 23.8389)))
         (instance face :init :vertices (list (float-vector 104.686 43.3624 23.8389) (float-vector 100.159 41.4871 14.2214) (float-vector 76.6582 76.6582 14.2214) (float-vector 80.1233 80.1233 23.8389)))
         (instance face :init :vertices (list (float-vector 113.311 0.0 23.8389) (float-vector 108.411 0.0 14.2214) (float-vector 100.159 41.4871 14.2214) (float-vector 104.686 43.3624 23.8389)))
         (instance face :init :vertices (list (float-vector 106.246 -44.0086 34.5) (float-vector 104.686 -43.3624 23.8389) (float-vector 113.311 0.0 23.8389) (float-vector 115.0 0.0 34.5)))
         (instance face :init :vertices (list (float-vector 81.3173 -81.3173 34.5) (float-vector 80.1233 -80.1233 23.8389) (float-vector 104.686 -43.3624 23.8389) (float-vector 106.246 -44.0086 34.5)))
         (instance face :init :vertices (list (float-vector 44.0086 -106.246 34.5) (float-vector 43.3624 -104.686 23.8389) (float-vector 80.1233 -80.1233 23.8389) (float-vector 81.3173 -81.3173 34.5)))
         (instance face :init :vertices (list (float-vector -1.080025e-12 -115.0 34.5) (float-vector -1.023182e-12 -113.311 23.8389) (float-vector 43.3624 -104.686 23.8389) (float-vector 44.0086 -106.246 34.5)))
         (instance face :init :vertices (list (float-vector -44.0086 -106.246 34.5) (float-vector -43.3624 -104.686 23.8389) (float-vector -1.023182e-12 -113.311 23.8389) (float-vector -1.080025e-12 -115.0 34.5)))
         (instance face :init :vertices (list (float-vector -81.3173 -81.3173 34.5) (float-vector -80.1233 -80.1233 23.8389) (float-vector -43.3624 -104.686 23.8389) (float-vector -44.0086 -106.246 34.5)))
         (instance face :init :vertices (list (float-vector -106.246 -44.0086 34.5) (float-vector -104.686 -43.3624 23.8389) (float-vector -80.1233 -80.1233 23.8389) (float-vector -81.3173 -81.3173 34.5)))
         (instance face :init :vertices (list (float-vector -115.0 4.547474e-13 34.5) (float-vector -113.311 4.547474e-13 23.8389) (float-vector -104.686 -43.3624 23.8389) (float-vector -106.246 -44.0086 34.5)))
         (instance face :init :vertices (list (float-vector -106.246 44.0086 34.5) (float-vector -104.686 43.3624 23.8389) (float-vector -113.311 4.547474e-13 23.8389) (float-vector -115.0 4.547474e-13 34.5)))
         (instance face :init :vertices (list (float-vector -81.3173 81.3173 34.5) (float-vector -80.1233 80.1233 23.8389) (float-vector -104.686 43.3624 23.8389) (float-vector -106.246 44.0086 34.5)))
         (instance face :init :vertices (list (float-vector -44.0086 106.246 34.5) (float-vector -43.3624 104.686 23.8389) (float-vector -80.1233 80.1233 23.8389) (float-vector -81.3173 81.3173 34.5)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 115.0 34.5) (float-vector 1.136868e-13 113.311 23.8389) (float-vector -43.3624 104.686 23.8389) (float-vector -44.0086 106.246 34.5)))
         (instance face :init :vertices (list (float-vector 44.0086 106.246 34.5) (float-vector 43.3624 104.686 23.8389) (float-vector 1.136868e-13 113.311 23.8389) (float-vector 1.136868e-13 115.0 34.5)))
         (instance face :init :vertices (list (float-vector 81.3173 81.3173 34.5) (float-vector 80.1233 80.1233 23.8389) (float-vector 43.3624 104.686 23.8389) (float-vector 44.0086 106.246 34.5)))
         (instance face :init :vertices (list (float-vector 106.246 44.0086 34.5) (float-vector 104.686 43.3624 23.8389) (float-vector 80.1233 80.1233 23.8389) (float-vector 81.3173 81.3173 34.5)))
         (instance face :init :vertices (list (float-vector 115.0 0.0 34.5) (float-vector 113.311 0.0 23.8389) (float-vector 104.686 43.3624 23.8389) (float-vector 106.246 44.0086 34.5)))
         (instance face :init :vertices (list (float-vector 104.398 -43.2432 34.5) (float-vector 106.246 -44.0086 34.5) (float-vector 115.0 0.0 34.5) (float-vector 113.0 0.0 34.5)))
         (instance face :init :vertices (list (float-vector 79.9031 -79.9031 34.5) (float-vector 81.3173 -81.3173 34.5) (float-vector 106.246 -44.0086 34.5) (float-vector 104.398 -43.2432 34.5)))
         (instance face :init :vertices (list (float-vector 43.2432 -104.398 34.5) (float-vector 44.0086 -106.246 34.5) (float-vector 81.3173 -81.3173 34.5) (float-vector 79.9031 -79.9031 34.5)))
         (instance face :init :vertices (list (float-vector -1.023182e-12 -113.0 34.5) (float-vector -1.080025e-12 -115.0 34.5) (float-vector 44.0086 -106.246 34.5) (float-vector 43.2432 -104.398 34.5)))
         (instance face :init :vertices (list (float-vector -43.2432 -104.398 34.5) (float-vector -44.0086 -106.246 34.5) (float-vector -1.080025e-12 -115.0 34.5) (float-vector -1.023182e-12 -113.0 34.5)))
         (instance face :init :vertices (list (float-vector -79.9031 -79.9031 34.5) (float-vector -81.3173 -81.3173 34.5) (float-vector -44.0086 -106.246 34.5) (float-vector -43.2432 -104.398 34.5)))
         (instance face :init :vertices (list (float-vector -104.398 -43.2432 34.5) (float-vector -106.246 -44.0086 34.5) (float-vector -81.3173 -81.3173 34.5) (float-vector -79.9031 -79.9031 34.5)))
         (instance face :init :vertices (list (float-vector -113.0 4.547474e-13 34.5) (float-vector -115.0 4.547474e-13 34.5) (float-vector -106.246 -44.0086 34.5) (float-vector -104.398 -43.2432 34.5)))
         (instance face :init :vertices (list (float-vector -104.398 43.2432 34.5) (float-vector -106.246 44.0086 34.5) (float-vector -115.0 4.547474e-13 34.5) (float-vector -113.0 4.547474e-13 34.5)))
         (instance face :init :vertices (list (float-vector -79.9031 79.9031 34.5) (float-vector -81.3173 81.3173 34.5) (float-vector -106.246 44.0086 34.5) (float-vector -104.398 43.2432 34.5)))
         (instance face :init :vertices (list (float-vector -43.2432 104.398 34.5) (float-vector -44.0086 106.246 34.5) (float-vector -81.3173 81.3173 34.5) (float-vector -79.9031 79.9031 34.5)))
         (instance face :init :vertices (list (float-vector 1.136868e-13 113.0 34.5) (float-vector 1.136868e-13 115.0 34.5) (float-vector -44.0086 106.246 34.5) (float-vector -43.2432 104.398 34.5)))
         (instance face :init :vertices (list (float-vector 43.2432 104.398 34.5) (float-vector 44.0086 106.246 34.5) (float-vector 1.136868e-13 115.0 34.5) (float-vector 1.136868e-13 113.0 34.5)))
         (instance face :init :vertices (list (float-vector 79.9031 79.9031 34.5) (float-vector 81.3173 81.3173 34.5) (float-vector 44.0086 106.246 34.5) (float-vector 43.2432 104.398 34.5)))
         (instance face :init :vertices (list (float-vector 104.398 43.2432 34.5) (float-vector 106.246 44.0086 34.5) (float-vector 81.3173 81.3173 34.5) (float-vector 79.9031 79.9031 34.5)))
         (instance face :init :vertices (list (float-vector 113.0 0.0 34.5) (float-vector 115.0 0.0 34.5) (float-vector 106.246 44.0086 34.5) (float-vector 104.398 43.2432 34.5)))
         (instance face :init :vertices (list (float-vector 72.5245 -30.0406 2.0) (float-vector 104.398 -43.2432 34.5) (float-vector 113.0 0.0 34.5) (float-vector 78.5 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 55.5079 -55.5079 2.0) (float-vector 79.9031 -79.9031 34.5) (float-vector 104.398 -43.2432 34.5) (float-vector 72.5245 -30.0406 2.0)))
         (instance face :init :vertices (list (float-vector 30.0406 -72.5245 2.0) (float-vector 43.2432 -104.398 34.5) (float-vector 79.9031 -79.9031 34.5) (float-vector 55.5079 -55.5079 2.0)))
         (instance face :init :vertices (list (float-vector -7.389644e-13 -78.5 2.0) (float-vector -1.023182e-12 -113.0 34.5) (float-vector 43.2432 -104.398 34.5) (float-vector 30.0406 -72.5245 2.0)))
         (instance face :init :vertices (list (float-vector -30.0406 -72.5245 2.0) (float-vector -43.2432 -104.398 34.5) (float-vector -1.023182e-12 -113.0 34.5) (float-vector -7.389644e-13 -78.5 2.0)))
         (instance face :init :vertices (list (float-vector -55.5079 -55.5079 2.0) (float-vector -79.9031 -79.9031 34.5) (float-vector -43.2432 -104.398 34.5) (float-vector -30.0406 -72.5245 2.0)))
         (instance face :init :vertices (list (float-vector -72.5245 -30.0406 2.0) (float-vector -104.398 -43.2432 34.5) (float-vector -79.9031 -79.9031 34.5) (float-vector -55.5079 -55.5079 2.0)))
         (instance face :init :vertices (list (float-vector -78.5 4.547474e-13 2.0) (float-vector -113.0 4.547474e-13 34.5) (float-vector -104.398 -43.2432 34.5) (float-vector -72.5245 -30.0406 2.0)))
         (instance face :init :vertices (list (float-vector -72.5245 30.0406 2.0) (float-vector -104.398 43.2432 34.5) (float-vector -113.0 4.547474e-13 34.5) (float-vector -78.5 4.547474e-13 2.0)))
         (instance face :init :vertices (list (float-vector -55.5079 55.5079 2.0) (float-vector -79.9031 79.9031 34.5) (float-vector -104.398 43.2432 34.5) (float-vector -72.5245 30.0406 2.0)))
         (instance face :init :vertices (list (float-vector -30.0406 72.5245 2.0) (float-vector -43.2432 104.398 34.5) (float-vector -79.9031 79.9031 34.5) (float-vector -55.5079 55.5079 2.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 78.5 2.0) (float-vector 1.136868e-13 113.0 34.5) (float-vector -43.2432 104.398 34.5) (float-vector -30.0406 72.5245 2.0)))
         (instance face :init :vertices (list (float-vector 30.0406 72.5245 2.0) (float-vector 43.2432 104.398 34.5) (float-vector 1.136868e-13 113.0 34.5) (float-vector 5.684342e-14 78.5 2.0)))
         (instance face :init :vertices (list (float-vector 55.5079 55.5079 2.0) (float-vector 79.9031 79.9031 34.5) (float-vector 43.2432 104.398 34.5) (float-vector 30.0406 72.5245 2.0)))
         (instance face :init :vertices (list (float-vector 72.5245 30.0406 2.0) (float-vector 104.398 43.2432 34.5) (float-vector 79.9031 79.9031 34.5) (float-vector 55.5079 55.5079 2.0)))
         (instance face :init :vertices (list (float-vector 78.5 0.0 2.0) (float-vector 113.0 0.0 34.5) (float-vector 104.398 43.2432 34.5) (float-vector 72.5245 30.0406 2.0)))
         (instance face :init :vertices (list (float-vector 72.5245 -30.0406 2.0) (float-vector 78.5 0.0 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 78.5 0.0 2.0) (float-vector 72.5245 30.0406 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 72.5245 30.0406 2.0) (float-vector 55.5079 55.5079 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 55.5079 55.5079 2.0) (float-vector 30.0406 72.5245 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 30.0406 72.5245 2.0) (float-vector 5.684342e-14 78.5 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 5.684342e-14 78.5 2.0) (float-vector -30.0406 72.5245 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -30.0406 72.5245 2.0) (float-vector -55.5079 55.5079 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -55.5079 55.5079 2.0) (float-vector -72.5245 30.0406 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -72.5245 30.0406 2.0) (float-vector -78.5 4.547474e-13 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -78.5 4.547474e-13 2.0) (float-vector -72.5245 -30.0406 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -72.5245 -30.0406 2.0) (float-vector -55.5079 -55.5079 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -55.5079 -55.5079 2.0) (float-vector -30.0406 -72.5245 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -30.0406 -72.5245 2.0) (float-vector -7.389644e-13 -78.5 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -7.389644e-13 -78.5 2.0) (float-vector 30.0406 -72.5245 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 30.0406 -72.5245 2.0) (float-vector 55.5079 -55.5079 2.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 55.5079 -55.5079 2.0) (float-vector 72.5245 -30.0406 2.0) (float-vector 0.0 0.0 2.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-dish-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 70.7107 -70.7107 34.5) :rot #2f((-0.541675 0.454519 -0.707107) (0.541675 -0.454519 -0.707107) (-0.642788 -0.766044 -1.498801e-15)) :name "handle0"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector -5.684342e-13 -100.0 34.5) :rot #2f((4.440892e-15 -1.665335e-15 -1.0) (0.766044 -0.642788 4.496403e-15) (-0.642788 -0.766044 -1.554312e-15)) :name "handle1"))
     (send blink0 :assoc handle1)
     (setq handle2 (make-cascoords :pos (float-vector -70.7107 -70.7107 34.5) :rot #2f((0.541675 -0.454519 -0.707107) (0.541675 -0.454519 0.707107) (-0.642788 -0.766044 -9.714451e-16)) :name "handle2"))
     (send blink0 :assoc handle2)
     (setq handle3 (make-cascoords :pos (float-vector -100.0 0.0 34.5) :rot #2f((0.766044 -0.642788 2.386980e-15) (-2.775558e-15 3.261280e-16 1.0) (-0.642788 -0.766044 -1.547373e-15)) :name "handle3"))
     (send blink0 :assoc handle3)
     (setq handle4 (make-cascoords :pos (float-vector -70.7107 70.7107 34.5) :rot #2f((0.541675 -0.454519 0.707107) (-0.541675 0.454519 0.707107) (-0.642788 -0.766044 -1.490127e-15)) :name "handle4"))
     (send blink0 :assoc handle4)
     (setq handle5 (make-cascoords :pos (float-vector 0.0 100.0 34.5) :rot #2f((-1.235123e-15 -6.661338e-16 1.0) (-0.766044 0.642788 -4.996004e-16) (-0.642788 -0.766044 -1.318390e-15)) :name "handle5"))
     (send blink0 :assoc handle5)
     (setq handle6 (make-cascoords :pos (float-vector 70.7107 70.7107 34.5) :rot #2f((-0.541675 0.454519 0.707107) (-0.541675 0.454519 -0.707107) (-0.642788 -0.766044 -1.776357e-15)) :name "handle6"))
     (send blink0 :assoc handle6)
     (setq handle7 (make-cascoords :pos (float-vector 100.0 0.0 34.5) :rot #2f((-0.766044 0.642788 1.054712e-15) (1.665335e-16 1.942890e-15 -1.0) (-0.642788 -0.766044 -1.609823e-15)) :name "handle7"))
     (send blink0 :assoc handle7)

     ;; definition of :attention
     (setq attention0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "attention0"))
     (send blink0 :assoc attention0)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1 handle2 handle3 handle4 handle5 handle6 handle7) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:handle-handle1 (&rest args) (forward-message-to handle1 args))
  (:handle-handle2 (&rest args) (forward-message-to handle2 args))
  (:handle-handle3 (&rest args) (forward-message-to handle3 args))
  (:handle-handle4 (&rest args) (forward-message-to handle4 args))
  (:handle-handle5 (&rest args) (forward-message-to handle5 args))
  (:handle-handle6 (&rest args) (forward-message-to handle6 args))
  (:handle-handle7 (&rest args) (forward-message-to handle7 args))
  (:attention (&rest args) (forward-message-to-all (list  attention0) args))
  (:attention-attention0 (&rest args) (forward-message-to attention0 args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73b2-dish (&rest args) (instance* room73b2-dish-object :init args))
;; (format *error-output* "(instance room73b2-dish-object :init) for generating model~%")
