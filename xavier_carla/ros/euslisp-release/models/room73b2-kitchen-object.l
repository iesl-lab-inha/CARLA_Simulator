;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73b2-kitchen-object
  :super cascaded-link
  :slots (sensors
         handle0
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 ))
(defmethod room73b2-kitchen-object
  (:init
   (&rest args &key (name "room73b2-kitchen") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 -1276.0 790.0) (float-vector 300.0 -1276.0 790.0) (float-vector 300.0 1276.0 790.0) (float-vector 340.0 1276.0 790.0)))
         (instance face :init :vertices (list (float-vector 300.0 -1276.0 800.0) (float-vector 300.0 1276.0 800.0) (float-vector 300.0 1276.0 790.0) (float-vector 300.0 -1276.0 790.0)))
         (instance face :init :vertices (list (float-vector -320.0 -1276.0 800.0) (float-vector -320.0 1276.0 800.0) (float-vector 300.0 1276.0 800.0) (float-vector 300.0 -1276.0 800.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -249.0 215.5 800.0) (float-vector -232.5 199.0 800.0) (float-vector -210.0 193.0 800.0) (float-vector 220.0 193.0 800.0) (float-vector 242.5 199.0 800.0) (float-vector 259.0 215.5 800.0) (float-vector 265.0 238.0 800.0) (float-vector 265.0 923.0 800.0) (float-vector 259.0 945.5 800.0) (float-vector 242.5 952.0 800.0) (float-vector 220.0 968.0 800.0) (float-vector -210.0 968.0 800.0) (float-vector -232.5 952.0 800.0) (float-vector -249.0 945.5 800.0) (float-vector -255.0 923.0 800.0) (float-vector -255.0 238.0 800.0)))
))
         (instance face :init :vertices (list (float-vector -320.0 -1276.0 849.0) (float-vector -320.0 1276.0 849.0) (float-vector -320.0 1276.0 800.0) (float-vector -320.0 -1276.0 800.0)))
         (instance face :init :vertices (list (float-vector -295.0 -1276.0 849.0) (float-vector -295.0 1276.0 849.0) (float-vector -320.0 1276.0 849.0) (float-vector -320.0 -1276.0 849.0)))
         (instance face :init :vertices (list (float-vector -295.0 -1276.0 820.0) (float-vector -295.0 1276.0 820.0) (float-vector -295.0 1276.0 849.0) (float-vector -295.0 -1276.0 849.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1276.0 820.0) (float-vector 340.0 1276.0 820.0) (float-vector -295.0 1276.0 820.0) (float-vector -295.0 -1276.0 820.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -255.0 238.0 820.0) (float-vector -255.0 923.0 820.0) (float-vector -249.0 945.5 820.0) (float-vector -232.5 952.0 820.0) (float-vector -210.0 968.0 820.0) (float-vector 220.0 968.0 820.0) (float-vector 242.5 952.0 820.0) (float-vector 259.0 945.5 820.0) (float-vector 265.0 923.0 820.0) (float-vector 265.0 238.0 820.0) (float-vector 259.0 215.5 820.0) (float-vector 242.5 199.0 820.0) (float-vector 220.0 193.0 820.0) (float-vector -210.0 193.0 820.0) (float-vector -232.5 199.0 820.0) (float-vector -249.0 215.5 820.0)))
))
         (instance face :init :vertices (list (float-vector 340.0 1276.0 790.0) (float-vector 300.0 1276.0 790.0) (float-vector 300.0 1276.0 800.0) (float-vector -320.0 1276.0 800.0) (float-vector -320.0 1276.0 849.0) (float-vector -295.0 1276.0 849.0) (float-vector -295.0 1276.0 820.0) (float-vector 340.0 1276.0 820.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1276.0 820.0) (float-vector -295.0 -1276.0 820.0) (float-vector -295.0 -1276.0 849.0) (float-vector -320.0 -1276.0 849.0) (float-vector -320.0 -1276.0 800.0) (float-vector 300.0 -1276.0 800.0) (float-vector 300.0 -1276.0 790.0) (float-vector 340.0 -1276.0 790.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1276.0 790.0) (float-vector 340.0 1276.0 790.0) (float-vector 340.0 1276.0 820.0) (float-vector 340.0 -1276.0 820.0)))
         (instance face :init :vertices (list (float-vector -255.0 923.0 800.0) (float-vector -249.0 945.5 800.0) (float-vector -249.0 945.5 820.0) (float-vector -255.0 923.0 820.0)))
         (instance face :init :vertices (list (float-vector -232.5 952.0 820.0) (float-vector -249.0 945.5 820.0) (float-vector -249.0 945.5 800.0) (float-vector -232.5 952.0 800.0)))
         (instance face :init :vertices (list (float-vector -210.0 968.0 820.0) (float-vector -232.5 952.0 820.0) (float-vector -232.5 952.0 800.0) (float-vector -210.0 968.0 800.0)))
         (instance face :init :vertices (list (float-vector 220.0 968.0 820.0) (float-vector -210.0 968.0 820.0) (float-vector -210.0 968.0 800.0) (float-vector 220.0 968.0 800.0)))
         (instance face :init :vertices (list (float-vector 242.5 952.0 820.0) (float-vector 220.0 968.0 820.0) (float-vector 220.0 968.0 800.0) (float-vector 242.5 952.0 800.0)))
         (instance face :init :vertices (list (float-vector 259.0 945.5 820.0) (float-vector 242.5 952.0 820.0) (float-vector 242.5 952.0 800.0) (float-vector 259.0 945.5 800.0)))
         (instance face :init :vertices (list (float-vector 265.0 923.0 820.0) (float-vector 259.0 945.5 820.0) (float-vector 259.0 945.5 800.0) (float-vector 265.0 923.0 800.0)))
         (instance face :init :vertices (list (float-vector 265.0 238.0 820.0) (float-vector 265.0 923.0 820.0) (float-vector 265.0 923.0 800.0) (float-vector 265.0 238.0 800.0)))
         (instance face :init :vertices (list (float-vector 259.0 215.5 820.0) (float-vector 265.0 238.0 820.0) (float-vector 265.0 238.0 800.0) (float-vector 259.0 215.5 800.0)))
         (instance face :init :vertices (list (float-vector 242.5 199.0 820.0) (float-vector 259.0 215.5 820.0) (float-vector 259.0 215.5 800.0) (float-vector 242.5 199.0 800.0)))
         (instance face :init :vertices (list (float-vector 220.0 193.0 820.0) (float-vector 242.5 199.0 820.0) (float-vector 242.5 199.0 800.0) (float-vector 220.0 193.0 800.0)))
         (instance face :init :vertices (list (float-vector -210.0 193.0 820.0) (float-vector 220.0 193.0 820.0) (float-vector 220.0 193.0 800.0) (float-vector -210.0 193.0 800.0)))
         (instance face :init :vertices (list (float-vector -232.5 199.0 820.0) (float-vector -210.0 193.0 820.0) (float-vector -210.0 193.0 800.0) (float-vector -232.5 199.0 800.0)))
         (instance face :init :vertices (list (float-vector -249.0 215.5 820.0) (float-vector -232.5 199.0 820.0) (float-vector -232.5 199.0 800.0) (float-vector -249.0 215.5 800.0)))
         (instance face :init :vertices (list (float-vector -255.0 238.0 800.0) (float-vector -255.0 923.0 800.0) (float-vector -255.0 923.0 820.0) (float-vector -255.0 238.0 820.0)))
         (instance face :init :vertices (list (float-vector -255.0 238.0 820.0) (float-vector -249.0 215.5 820.0) (float-vector -249.0 215.5 800.0) (float-vector -255.0 238.0 800.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -206.617 391.5 970.0) (float-vector -203.0 405.0 970.0) (float-vector -206.617 418.5 970.0) (float-vector -216.5 428.383 970.0) (float-vector -230.0 432.0 970.0) (float-vector -243.5 428.383 970.0) (float-vector -253.383 418.5 970.0) (float-vector -257.0 405.0 970.0) (float-vector -253.383 391.5 970.0) (float-vector -243.5 381.617 970.0) (float-vector -230.0 378.0 970.0) (float-vector -216.5 381.617 970.0)))
         (instance face :init :vertices (list (float-vector -203.0 405.0 800.0) (float-vector -206.617 391.5 800.0) (float-vector -216.5 381.617 800.0) (float-vector -230.0 378.0 800.0) (float-vector -243.5 381.617 800.0) (float-vector -253.383 391.5 800.0) (float-vector -257.0 405.0 800.0) (float-vector -253.383 418.5 800.0) (float-vector -243.5 428.383 800.0) (float-vector -230.0 432.0 800.0) (float-vector -216.5 428.383 800.0) (float-vector -206.617 418.5 800.0)))
         (instance face :init :vertices (list (float-vector -206.617 391.5 970.0) (float-vector -206.617 391.5 800.0) (float-vector -203.0 405.0 800.0) (float-vector -203.0 405.0 970.0)))
         (instance face :init :vertices (list (float-vector -216.5 381.617 970.0) (float-vector -216.5 381.617 800.0) (float-vector -206.617 391.5 800.0) (float-vector -206.617 391.5 970.0)))
         (instance face :init :vertices (list (float-vector -230.0 378.0 970.0) (float-vector -230.0 378.0 800.0) (float-vector -216.5 381.617 800.0) (float-vector -216.5 381.617 970.0)))
         (instance face :init :vertices (list (float-vector -243.5 381.617 970.0) (float-vector -243.5 381.617 800.0) (float-vector -230.0 378.0 800.0) (float-vector -230.0 378.0 970.0)))
         (instance face :init :vertices (list (float-vector -253.383 391.5 970.0) (float-vector -253.383 391.5 800.0) (float-vector -243.5 381.617 800.0) (float-vector -243.5 381.617 970.0)))
         (instance face :init :vertices (list (float-vector -257.0 405.0 970.0) (float-vector -257.0 405.0 800.0) (float-vector -253.383 391.5 800.0) (float-vector -253.383 391.5 970.0)))
         (instance face :init :vertices (list (float-vector -253.383 418.5 970.0) (float-vector -253.383 418.5 800.0) (float-vector -257.0 405.0 800.0) (float-vector -257.0 405.0 970.0)))
         (instance face :init :vertices (list (float-vector -243.5 428.383 970.0) (float-vector -243.5 428.383 800.0) (float-vector -253.383 418.5 800.0) (float-vector -253.383 418.5 970.0)))
         (instance face :init :vertices (list (float-vector -230.0 432.0 970.0) (float-vector -230.0 432.0 800.0) (float-vector -243.5 428.383 800.0) (float-vector -243.5 428.383 970.0)))
         (instance face :init :vertices (list (float-vector -216.5 428.383 970.0) (float-vector -216.5 428.383 800.0) (float-vector -230.0 432.0 800.0) (float-vector -230.0 432.0 970.0)))
         (instance face :init :vertices (list (float-vector -206.617 418.5 970.0) (float-vector -206.617 418.5 800.0) (float-vector -216.5 428.383 800.0) (float-vector -216.5 428.383 970.0)))
         (instance face :init :vertices (list (float-vector -203.0 405.0 970.0) (float-vector -203.0 405.0 800.0) (float-vector -206.617 418.5 800.0) (float-vector -206.617 418.5 970.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -270.0 980.0 610.0) (float-vector -270.0 180.0 610.0) (float-vector -270.0 180.0 800.0) (float-vector -270.0 980.0 800.0)))
         (instance face :init :vertices (list (float-vector 270.0 180.0 610.0) (float-vector 270.0 180.0 800.0) (float-vector -270.0 180.0 800.0) (float-vector -270.0 180.0 610.0)))
         (instance face :init :vertices (list (float-vector 270.0 980.0 610.0) (float-vector 270.0 980.0 800.0) (float-vector 270.0 180.0 800.0) (float-vector 270.0 180.0 610.0)))
         (instance face :init :vertices (list (float-vector -270.0 980.0 800.0) (float-vector -270.0 180.0 800.0) (float-vector 270.0 180.0 800.0) (float-vector 270.0 980.0 800.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -207.5 695.0 800.0) (float-vector -175.0 750.0 800.0) (float-vector -175.0 870.0 800.0) (float-vector -173.6 884.9 800.0) (float-vector -169.6 899.4 800.0) (float-vector -163.0 913.1 800.0) (float-vector -154.0 925.8 800.0) (float-vector -142.8 937.2 800.0) (float-vector -129.7 946.9 800.0) (float-vector -114.9 954.6 800.0) (float-vector -99.0 960.3 800.0) (float-vector -82.2 963.8 800.0) (float-vector 115.0 965.0 800.0) (float-vector 130.0 965.0 800.0) (float-vector 147.2 963.8 800.0) (float-vector 164.0 960.3 800.0) (float-vector 179.9 954.6 800.0) (float-vector 194.7 946.9 800.0) (float-vector 207.8 937.2 800.0) (float-vector 219.0 925.8 800.0) (float-vector 228.0 913.1 800.0) (float-vector 234.6 899.4 800.0) (float-vector 238.6 884.9 800.0) (float-vector 240.0 870.0 800.0) (float-vector 240.0 750.0 800.0) (float-vector 245.0 640.0 800.0) (float-vector 245.0 580.0 800.0) (float-vector 245.0 520.0 800.0) (float-vector 240.0 410.0 800.0) (float-vector 240.0 290.0 800.0) (float-vector 238.6 275.1 800.0) (float-vector 234.6 260.6 800.0) (float-vector 228.0 246.9 800.0) (float-vector 219.0 234.2 800.0) (float-vector 207.8 222.8 800.0) (float-vector 194.7 213.1 800.0) (float-vector 179.9 205.4 800.0) (float-vector 164.0 199.7 800.0) (float-vector 147.2 196.2 800.0) (float-vector 130.0 195.0 800.0) (float-vector 115.0 195.0 800.0) (float-vector -82.2 196.2 800.0) (float-vector -99.0 199.7 800.0) (float-vector -114.9 205.4 800.0) (float-vector -129.7 213.1 800.0) (float-vector -142.8 222.8 800.0) (float-vector -154.0 234.2 800.0) (float-vector -163.0 246.9 800.0) (float-vector -169.6 260.6 800.0) (float-vector -173.6 275.1 800.0) (float-vector -175.0 290.0 800.0) (float-vector -175.0 410.0 800.0) (float-vector -207.5 465.0 800.0) (float-vector -240.0 520.0 800.0) (float-vector -240.0 640.0 800.0)))
))
         (instance face :init :vertices (list (float-vector 270.0 980.0 610.0) (float-vector 270.0 180.0 610.0) (float-vector -270.0 180.0 610.0) (float-vector -270.0 980.0 610.0)))
         (instance face :init :vertices (list (float-vector -270.0 980.0 610.0) (float-vector -270.0 980.0 800.0) (float-vector 270.0 980.0 800.0) (float-vector 270.0 980.0 610.0)))
         (instance face :init :vertices (list (float-vector -240.0 520.0 800.0) (float-vector -207.5 465.0 800.0) (float-vector -207.5 465.0 640.0) (float-vector -240.0 520.0 640.0)))
         (instance face :init :vertices (list (float-vector -207.5 465.0 640.0) (float-vector -207.5 465.0 800.0) (float-vector -175.0 410.0 800.0) (float-vector -175.0 410.0 640.0)))
         (instance face :init :vertices (list (float-vector -175.0 410.0 640.0) (float-vector -175.0 410.0 800.0) (float-vector -175.0 290.0 800.0) (float-vector -175.0 290.0 640.0)))
         (instance face :init :vertices (list (float-vector -175.0 290.0 640.0) (float-vector -175.0 290.0 800.0) (float-vector -173.6 275.1 800.0) (float-vector -173.6 275.1 640.0)))
         (instance face :init :vertices (list (float-vector -173.6 275.1 640.0) (float-vector -173.6 275.1 800.0) (float-vector -169.6 260.6 800.0) (float-vector -169.6 260.6 640.0)))
         (instance face :init :vertices (list (float-vector -169.6 260.6 640.0) (float-vector -169.6 260.6 800.0) (float-vector -163.0 246.9 800.0) (float-vector -163.0 246.9 640.0)))
         (instance face :init :vertices (list (float-vector -163.0 246.9 640.0) (float-vector -163.0 246.9 800.0) (float-vector -154.0 234.2 800.0) (float-vector -154.0 234.2 640.0)))
         (instance face :init :vertices (list (float-vector -154.0 234.2 640.0) (float-vector -154.0 234.2 800.0) (float-vector -142.8 222.8 800.0) (float-vector -142.8 222.8 640.0)))
         (instance face :init :vertices (list (float-vector -142.8 222.8 640.0) (float-vector -142.8 222.8 800.0) (float-vector -129.7 213.1 800.0) (float-vector -129.7 213.1 640.0)))
         (instance face :init :vertices (list (float-vector -129.7 213.1 640.0) (float-vector -129.7 213.1 800.0) (float-vector -114.9 205.4 800.0) (float-vector -114.9 205.4 640.0)))
         (instance face :init :vertices (list (float-vector -114.9 205.4 640.0) (float-vector -114.9 205.4 800.0) (float-vector -99.0 199.7 800.0) (float-vector -99.0 199.7 640.0)))
         (instance face :init :vertices (list (float-vector -99.0 199.7 640.0) (float-vector -99.0 199.7 800.0) (float-vector -82.2 196.2 800.0) (float-vector -82.2 196.2 640.0)))
         (instance face :init :vertices (list (float-vector -82.2 196.2 640.0) (float-vector -82.2 196.2 800.0) (float-vector 115.0 195.0 800.0) (float-vector 115.0 195.0 640.0)))
         (instance face :init :vertices (list (float-vector 115.0 195.0 640.0) (float-vector 115.0 195.0 800.0) (float-vector 130.0 195.0 800.0) (float-vector 130.0 195.0 640.0)))
         (instance face :init :vertices (list (float-vector 130.0 195.0 640.0) (float-vector 130.0 195.0 800.0) (float-vector 147.2 196.2 800.0) (float-vector 147.2 196.2 640.0)))
         (instance face :init :vertices (list (float-vector 147.2 196.2 640.0) (float-vector 147.2 196.2 800.0) (float-vector 164.0 199.7 800.0) (float-vector 164.0 199.7 640.0)))
         (instance face :init :vertices (list (float-vector 164.0 199.7 640.0) (float-vector 164.0 199.7 800.0) (float-vector 179.9 205.4 800.0) (float-vector 179.9 205.4 640.0)))
         (instance face :init :vertices (list (float-vector 179.9 205.4 640.0) (float-vector 179.9 205.4 800.0) (float-vector 194.7 213.1 800.0) (float-vector 194.7 213.1 640.0)))
         (instance face :init :vertices (list (float-vector 194.7 213.1 640.0) (float-vector 194.7 213.1 800.0) (float-vector 207.8 222.8 800.0) (float-vector 207.8 222.8 640.0)))
         (instance face :init :vertices (list (float-vector 207.8 222.8 640.0) (float-vector 207.8 222.8 800.0) (float-vector 219.0 234.2 800.0) (float-vector 219.0 234.2 640.0)))
         (instance face :init :vertices (list (float-vector 219.0 234.2 640.0) (float-vector 219.0 234.2 800.0) (float-vector 228.0 246.9 800.0) (float-vector 228.0 246.9 640.0)))
         (instance face :init :vertices (list (float-vector 228.0 246.9 640.0) (float-vector 228.0 246.9 800.0) (float-vector 234.6 260.6 800.0) (float-vector 234.6 260.6 640.0)))
         (instance face :init :vertices (list (float-vector 234.6 260.6 640.0) (float-vector 234.6 260.6 800.0) (float-vector 238.6 275.1 800.0) (float-vector 238.6 275.1 640.0)))
         (instance face :init :vertices (list (float-vector 238.6 275.1 640.0) (float-vector 238.6 275.1 800.0) (float-vector 240.0 290.0 800.0) (float-vector 240.0 290.0 640.0)))
         (instance face :init :vertices (list (float-vector 240.0 290.0 640.0) (float-vector 240.0 290.0 800.0) (float-vector 240.0 410.0 800.0) (float-vector 240.0 410.0 640.0)))
         (instance face :init :vertices (list (float-vector 240.0 410.0 640.0) (float-vector 240.0 410.0 800.0) (float-vector 245.0 520.0 800.0) (float-vector 245.0 520.0 640.0)))
         (instance face :init :vertices (list (float-vector 245.0 520.0 640.0) (float-vector 245.0 520.0 800.0) (float-vector 245.0 580.0 800.0) (float-vector 245.0 580.0 640.0)))
         (instance face :init :vertices (list (float-vector 245.0 580.0 640.0) (float-vector 245.0 580.0 800.0) (float-vector 245.0 640.0 800.0) (float-vector 245.0 640.0 640.0)))
         (instance face :init :vertices (list (float-vector 245.0 640.0 640.0) (float-vector 245.0 640.0 800.0) (float-vector 240.0 750.0 800.0) (float-vector 240.0 750.0 640.0)))
         (instance face :init :vertices (list (float-vector 240.0 750.0 640.0) (float-vector 240.0 750.0 800.0) (float-vector 240.0 870.0 800.0) (float-vector 240.0 870.0 640.0)))
         (instance face :init :vertices (list (float-vector 240.0 870.0 640.0) (float-vector 240.0 870.0 800.0) (float-vector 238.6 884.9 800.0) (float-vector 238.6 884.9 640.0)))
         (instance face :init :vertices (list (float-vector 238.6 884.9 640.0) (float-vector 238.6 884.9 800.0) (float-vector 234.6 899.4 800.0) (float-vector 234.6 899.4 640.0)))
         (instance face :init :vertices (list (float-vector 234.6 899.4 640.0) (float-vector 234.6 899.4 800.0) (float-vector 228.0 913.1 800.0) (float-vector 228.0 913.1 640.0)))
         (instance face :init :vertices (list (float-vector 228.0 913.1 640.0) (float-vector 228.0 913.1 800.0) (float-vector 219.0 925.8 800.0) (float-vector 219.0 925.8 640.0)))
         (instance face :init :vertices (list (float-vector 219.0 925.8 640.0) (float-vector 219.0 925.8 800.0) (float-vector 207.8 937.2 800.0) (float-vector 207.8 937.2 640.0)))
         (instance face :init :vertices (list (float-vector 207.8 937.2 640.0) (float-vector 207.8 937.2 800.0) (float-vector 194.7 946.9 800.0) (float-vector 194.7 946.9 640.0)))
         (instance face :init :vertices (list (float-vector 194.7 946.9 640.0) (float-vector 194.7 946.9 800.0) (float-vector 179.9 954.6 800.0) (float-vector 179.9 954.6 640.0)))
         (instance face :init :vertices (list (float-vector 179.9 954.6 640.0) (float-vector 179.9 954.6 800.0) (float-vector 164.0 960.3 800.0) (float-vector 164.0 960.3 640.0)))
         (instance face :init :vertices (list (float-vector 164.0 960.3 640.0) (float-vector 164.0 960.3 800.0) (float-vector 147.2 963.8 800.0) (float-vector 147.2 963.8 640.0)))
         (instance face :init :vertices (list (float-vector 147.2 963.8 640.0) (float-vector 147.2 963.8 800.0) (float-vector 130.0 965.0 800.0) (float-vector 130.0 965.0 640.0)))
         (instance face :init :vertices (list (float-vector 130.0 965.0 640.0) (float-vector 130.0 965.0 800.0) (float-vector 115.0 965.0 800.0) (float-vector 115.0 965.0 640.0)))
         (instance face :init :vertices (list (float-vector 115.0 965.0 640.0) (float-vector 115.0 965.0 800.0) (float-vector -82.2 963.8 800.0) (float-vector -82.2 963.8 640.0)))
         (instance face :init :vertices (list (float-vector -82.2 963.8 640.0) (float-vector -82.2 963.8 800.0) (float-vector -99.0 960.3 800.0) (float-vector -99.0 960.3 640.0)))
         (instance face :init :vertices (list (float-vector -99.0 960.3 640.0) (float-vector -99.0 960.3 800.0) (float-vector -114.9 954.6 800.0) (float-vector -114.9 954.6 640.0)))
         (instance face :init :vertices (list (float-vector -114.9 954.6 640.0) (float-vector -114.9 954.6 800.0) (float-vector -129.7 946.9 800.0) (float-vector -129.7 946.9 640.0)))
         (instance face :init :vertices (list (float-vector -129.7 946.9 640.0) (float-vector -129.7 946.9 800.0) (float-vector -142.8 937.2 800.0) (float-vector -142.8 937.2 640.0)))
         (instance face :init :vertices (list (float-vector -142.8 937.2 640.0) (float-vector -142.8 937.2 800.0) (float-vector -154.0 925.8 800.0) (float-vector -154.0 925.8 640.0)))
         (instance face :init :vertices (list (float-vector -154.0 925.8 640.0) (float-vector -154.0 925.8 800.0) (float-vector -163.0 913.1 800.0) (float-vector -163.0 913.1 640.0)))
         (instance face :init :vertices (list (float-vector -163.0 913.1 640.0) (float-vector -163.0 913.1 800.0) (float-vector -169.6 899.4 800.0) (float-vector -169.6 899.4 640.0)))
         (instance face :init :vertices (list (float-vector -169.6 899.4 640.0) (float-vector -169.6 899.4 800.0) (float-vector -173.6 884.9 800.0) (float-vector -173.6 884.9 640.0)))
         (instance face :init :vertices (list (float-vector -173.6 884.9 640.0) (float-vector -173.6 884.9 800.0) (float-vector -175.0 870.0 800.0) (float-vector -175.0 870.0 640.0)))
         (instance face :init :vertices (list (float-vector -175.0 870.0 640.0) (float-vector -175.0 870.0 800.0) (float-vector -175.0 750.0 800.0) (float-vector -175.0 750.0 640.0)))
         (instance face :init :vertices (list (float-vector -175.0 750.0 640.0) (float-vector -175.0 750.0 800.0) (float-vector -207.5 695.0 800.0) (float-vector -207.5 695.0 640.0)))
         (instance face :init :vertices (list (float-vector -207.5 695.0 640.0) (float-vector -207.5 695.0 800.0) (float-vector -240.0 640.0 800.0) (float-vector -240.0 640.0 640.0)))
         (instance face :init :vertices (list (float-vector -240.0 640.0 640.0) (float-vector -240.0 640.0 800.0) (float-vector -240.0 520.0 800.0) (float-vector -240.0 520.0 640.0)))
         (instance face :init :vertices (list (float-vector -240.0 520.0 640.0) (float-vector -207.5 465.0 640.0) (float-vector -175.0 410.0 640.0) (float-vector -175.0 290.0 640.0) (float-vector -173.6 275.1 640.0) (float-vector -169.6 260.6 640.0) (float-vector -163.0 246.9 640.0) (float-vector -154.0 234.2 640.0) (float-vector -142.8 222.8 640.0) (float-vector -129.7 213.1 640.0) (float-vector -114.9 205.4 640.0) (float-vector -99.0 199.7 640.0) (float-vector -82.2 196.2 640.0) (float-vector 115.0 195.0 640.0) (float-vector 130.0 195.0 640.0) (float-vector 147.2 196.2 640.0) (float-vector 164.0 199.7 640.0) (float-vector 179.9 205.4 640.0) (float-vector 194.7 213.1 640.0) (float-vector 207.8 222.8 640.0) (float-vector 219.0 234.2 640.0) (float-vector 228.0 246.9 640.0) (float-vector 234.6 260.6 640.0) (float-vector 238.6 275.1 640.0) (float-vector 240.0 290.0 640.0) (float-vector 240.0 410.0 640.0) (float-vector 245.0 520.0 640.0) (float-vector 245.0 580.0 640.0) (float-vector 245.0 640.0 640.0) (float-vector 240.0 750.0 640.0) (float-vector 240.0 870.0 640.0) (float-vector 238.6 884.9 640.0) (float-vector 234.6 899.4 640.0) (float-vector 228.0 913.1 640.0) (float-vector 219.0 925.8 640.0) (float-vector 207.8 937.2 640.0) (float-vector 194.7 946.9 640.0) (float-vector 179.9 954.6 640.0) (float-vector 164.0 960.3 640.0) (float-vector 147.2 963.8 640.0) (float-vector 130.0 965.0 640.0) (float-vector 115.0 965.0 640.0) (float-vector -82.2 963.8 640.0) (float-vector -99.0 960.3 640.0) (float-vector -114.9 954.6 640.0) (float-vector -129.7 946.9 640.0) (float-vector -142.8 937.2 640.0) (float-vector -154.0 925.8 640.0) (float-vector -163.0 913.1 640.0) (float-vector -169.6 899.4 640.0) (float-vector -173.6 884.9 640.0) (float-vector -175.0 870.0 640.0) (float-vector -175.0 750.0 640.0) (float-vector -207.5 695.0 640.0) (float-vector -240.0 640.0 640.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 270.0 1276.0 100.0) (float-vector -320.0 1276.0 100.0) (float-vector -320.0 -1276.0 100.0) (float-vector 270.0 -1276.0 100.0)))
         (instance face :init :vertices (list (float-vector -320.0 1276.0 0.0) (float-vector 270.0 1276.0 0.0) (float-vector 270.0 -1276.0 0.0) (float-vector -320.0 -1276.0 0.0)))
         (instance face :init :vertices (list (float-vector 270.0 1276.0 100.0) (float-vector 270.0 1276.0 0.0) (float-vector -320.0 1276.0 0.0) (float-vector -320.0 1276.0 100.0)))
         (instance face :init :vertices (list (float-vector 270.0 -1276.0 100.0) (float-vector 270.0 -1276.0 0.0) (float-vector 270.0 1276.0 0.0) (float-vector 270.0 1276.0 100.0)))
         (instance face :init :vertices (list (float-vector -320.0 -1276.0 100.0) (float-vector -320.0 -1276.0 0.0) (float-vector 270.0 -1276.0 0.0) (float-vector 270.0 -1276.0 100.0)))
         (instance face :init :vertices (list (float-vector -320.0 1276.0 100.0) (float-vector -320.0 1276.0 0.0) (float-vector -320.0 -1276.0 0.0) (float-vector -320.0 -1276.0 100.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -305.5 1261.0 820.0) (float-vector -320.5 1261.0 820.0) (float-vector -320.5 -1261.0 820.0) (float-vector -305.5 -1261.0 820.0)))
         (instance face :init :vertices (list (float-vector -320.5 1261.0 100.0) (float-vector -305.5 1261.0 100.0) (float-vector -305.5 -1261.0 100.0) (float-vector -320.5 -1261.0 100.0)))
         (instance face :init :vertices (list (float-vector -305.5 1261.0 820.0) (float-vector -305.5 1261.0 100.0) (float-vector -320.5 1261.0 100.0) (float-vector -320.5 1261.0 820.0)))
         (instance face :init :vertices (list (float-vector -305.5 -1261.0 820.0) (float-vector -305.5 -1261.0 100.0) (float-vector -305.5 1261.0 100.0) (float-vector -305.5 1261.0 820.0)))
         (instance face :init :vertices (list (float-vector -320.5 -1261.0 820.0) (float-vector -320.5 -1261.0 100.0) (float-vector -305.5 -1261.0 100.0) (float-vector -305.5 -1261.0 820.0)))
         (instance face :init :vertices (list (float-vector -320.5 1261.0 820.0) (float-vector -320.5 1261.0 100.0) (float-vector -320.5 -1261.0 100.0) (float-vector -320.5 -1261.0 820.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.5 1276.5 820.0) (float-vector -319.5 1276.5 820.0) (float-vector -319.5 1261.5 820.0) (float-vector 315.5 1261.5 820.0)))
         (instance face :init :vertices (list (float-vector -319.5 1276.5 100.0) (float-vector 315.5 1276.5 100.0) (float-vector 315.5 1261.5 100.0) (float-vector -319.5 1261.5 100.0)))
         (instance face :init :vertices (list (float-vector 315.5 1276.5 820.0) (float-vector 315.5 1276.5 100.0) (float-vector -319.5 1276.5 100.0) (float-vector -319.5 1276.5 820.0)))
         (instance face :init :vertices (list (float-vector 315.5 1261.5 820.0) (float-vector 315.5 1261.5 100.0) (float-vector 315.5 1276.5 100.0) (float-vector 315.5 1276.5 820.0)))
         (instance face :init :vertices (list (float-vector -319.5 1261.5 820.0) (float-vector -319.5 1261.5 100.0) (float-vector 315.5 1261.5 100.0) (float-vector 315.5 1261.5 820.0)))
         (instance face :init :vertices (list (float-vector -319.5 1276.5 820.0) (float-vector -319.5 1276.5 100.0) (float-vector -319.5 1261.5 100.0) (float-vector -319.5 1261.5 820.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.5 -1261.5 820.0) (float-vector -319.5 -1261.5 820.0) (float-vector -319.5 -1276.5 820.0) (float-vector 315.5 -1276.5 820.0)))
         (instance face :init :vertices (list (float-vector -319.5 -1261.5 100.0) (float-vector 315.5 -1261.5 100.0) (float-vector 315.5 -1276.5 100.0) (float-vector -319.5 -1276.5 100.0)))
         (instance face :init :vertices (list (float-vector 315.5 -1261.5 820.0) (float-vector 315.5 -1261.5 100.0) (float-vector -319.5 -1261.5 100.0) (float-vector -319.5 -1261.5 820.0)))
         (instance face :init :vertices (list (float-vector 315.5 -1276.5 820.0) (float-vector 315.5 -1276.5 100.0) (float-vector 315.5 -1261.5 100.0) (float-vector 315.5 -1261.5 820.0)))
         (instance face :init :vertices (list (float-vector -319.5 -1276.5 820.0) (float-vector -319.5 -1276.5 100.0) (float-vector 315.5 -1276.5 100.0) (float-vector 315.5 -1276.5 820.0)))
         (instance face :init :vertices (list (float-vector -319.5 -1261.5 820.0) (float-vector -319.5 -1261.5 100.0) (float-vector -319.5 -1276.5 100.0) (float-vector -319.5 -1276.5 820.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 1261.0 648.5) (float-vector -305.0 1261.0 648.5) (float-vector -305.0 -1261.0 648.5) (float-vector 315.0 -1261.0 648.5)))
         (instance face :init :vertices (list (float-vector -305.0 1261.0 633.5) (float-vector 315.0 1261.0 633.5) (float-vector 315.0 -1261.0 633.5) (float-vector -305.0 -1261.0 633.5)))
         (instance face :init :vertices (list (float-vector 315.0 1261.0 648.5) (float-vector 315.0 1261.0 633.5) (float-vector -305.0 1261.0 633.5) (float-vector -305.0 1261.0 648.5)))
         (instance face :init :vertices (list (float-vector 315.0 -1261.0 648.5) (float-vector 315.0 -1261.0 633.5) (float-vector 315.0 1261.0 633.5) (float-vector 315.0 1261.0 648.5)))
         (instance face :init :vertices (list (float-vector -305.0 -1261.0 648.5) (float-vector -305.0 -1261.0 633.5) (float-vector 315.0 -1261.0 633.5) (float-vector 315.0 -1261.0 648.5)))
         (instance face :init :vertices (list (float-vector -305.0 1261.0 648.5) (float-vector -305.0 1261.0 633.5) (float-vector -305.0 -1261.0 633.5) (float-vector -305.0 -1261.0 648.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 1261.0 465.5) (float-vector -305.0 1261.0 465.5) (float-vector -305.0 -1261.0 465.5) (float-vector 315.0 -1261.0 465.5)))
         (instance face :init :vertices (list (float-vector -305.0 1261.0 450.5) (float-vector 315.0 1261.0 450.5) (float-vector 315.0 -1261.0 450.5) (float-vector -305.0 -1261.0 450.5)))
         (instance face :init :vertices (list (float-vector 315.0 1261.0 465.5) (float-vector 315.0 1261.0 450.5) (float-vector -305.0 1261.0 450.5) (float-vector -305.0 1261.0 465.5)))
         (instance face :init :vertices (list (float-vector 315.0 -1261.0 465.5) (float-vector 315.0 -1261.0 450.5) (float-vector 315.0 1261.0 450.5) (float-vector 315.0 1261.0 465.5)))
         (instance face :init :vertices (list (float-vector -305.0 -1261.0 465.5) (float-vector -305.0 -1261.0 450.5) (float-vector 315.0 -1261.0 450.5) (float-vector 315.0 -1261.0 465.5)))
         (instance face :init :vertices (list (float-vector -305.0 1261.0 465.5) (float-vector -305.0 1261.0 450.5) (float-vector -305.0 -1261.0 450.5) (float-vector -305.0 -1261.0 465.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 1261.0 282.5) (float-vector -305.0 1261.0 282.5) (float-vector -305.0 -1261.0 282.5) (float-vector 315.0 -1261.0 282.5)))
         (instance face :init :vertices (list (float-vector -305.0 1261.0 267.5) (float-vector 315.0 1261.0 267.5) (float-vector 315.0 -1261.0 267.5) (float-vector -305.0 -1261.0 267.5)))
         (instance face :init :vertices (list (float-vector 315.0 1261.0 282.5) (float-vector 315.0 1261.0 267.5) (float-vector -305.0 1261.0 267.5) (float-vector -305.0 1261.0 282.5)))
         (instance face :init :vertices (list (float-vector 315.0 -1261.0 282.5) (float-vector 315.0 -1261.0 267.5) (float-vector 315.0 1261.0 267.5) (float-vector 315.0 1261.0 282.5)))
         (instance face :init :vertices (list (float-vector -305.0 -1261.0 282.5) (float-vector -305.0 -1261.0 267.5) (float-vector 315.0 -1261.0 267.5) (float-vector 315.0 -1261.0 282.5)))
         (instance face :init :vertices (list (float-vector -305.0 1261.0 282.5) (float-vector -305.0 1261.0 267.5) (float-vector -305.0 -1261.0 267.5) (float-vector -305.0 -1261.0 282.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 350.0 -616.25 682.345) (float-vector 350.0 -607.5 680.0) (float-vector 350.0 -598.75 682.345) (float-vector 350.0 -592.345 688.75) (float-vector 350.0 -590.0 697.5) (float-vector 350.0 -592.345 706.25) (float-vector 350.0 -598.75 712.655) (float-vector 350.0 -607.5 715.0) (float-vector 350.0 -616.25 712.655) (float-vector 350.0 -622.655 706.25) (float-vector 350.0 -625.0 697.5) (float-vector 350.0 -622.655 688.75)))
         (instance face :init :vertices (list (float-vector 335.0 -607.5 680.0) (float-vector 335.0 -616.25 682.345) (float-vector 335.0 -622.655 688.75) (float-vector 335.0 -625.0 697.5) (float-vector 335.0 -622.655 706.25) (float-vector 335.0 -616.25 712.655) (float-vector 335.0 -607.5 715.0) (float-vector 335.0 -598.75 712.655) (float-vector 335.0 -592.345 706.25) (float-vector 335.0 -590.0 697.5) (float-vector 335.0 -592.345 688.75) (float-vector 335.0 -598.75 682.345)))
         (instance face :init :vertices (list (float-vector 350.0 -616.25 682.345) (float-vector 335.0 -616.25 682.345) (float-vector 335.0 -607.5 680.0) (float-vector 350.0 -607.5 680.0)))
         (instance face :init :vertices (list (float-vector 350.0 -622.655 688.75) (float-vector 335.0 -622.655 688.75) (float-vector 335.0 -616.25 682.345) (float-vector 350.0 -616.25 682.345)))
         (instance face :init :vertices (list (float-vector 350.0 -625.0 697.5) (float-vector 335.0 -625.0 697.5) (float-vector 335.0 -622.655 688.75) (float-vector 350.0 -622.655 688.75)))
         (instance face :init :vertices (list (float-vector 350.0 -622.655 706.25) (float-vector 335.0 -622.655 706.25) (float-vector 335.0 -625.0 697.5) (float-vector 350.0 -625.0 697.5)))
         (instance face :init :vertices (list (float-vector 350.0 -616.25 712.655) (float-vector 335.0 -616.25 712.655) (float-vector 335.0 -622.655 706.25) (float-vector 350.0 -622.655 706.25)))
         (instance face :init :vertices (list (float-vector 350.0 -607.5 715.0) (float-vector 335.0 -607.5 715.0) (float-vector 335.0 -616.25 712.655) (float-vector 350.0 -616.25 712.655)))
         (instance face :init :vertices (list (float-vector 350.0 -598.75 712.655) (float-vector 335.0 -598.75 712.655) (float-vector 335.0 -607.5 715.0) (float-vector 350.0 -607.5 715.0)))
         (instance face :init :vertices (list (float-vector 350.0 -592.345 706.25) (float-vector 335.0 -592.345 706.25) (float-vector 335.0 -598.75 712.655) (float-vector 350.0 -598.75 712.655)))
         (instance face :init :vertices (list (float-vector 350.0 -590.0 697.5) (float-vector 335.0 -590.0 697.5) (float-vector 335.0 -592.345 706.25) (float-vector 350.0 -592.345 706.25)))
         (instance face :init :vertices (list (float-vector 350.0 -592.345 688.75) (float-vector 335.0 -592.345 688.75) (float-vector 335.0 -590.0 697.5) (float-vector 350.0 -590.0 697.5)))
         (instance face :init :vertices (list (float-vector 350.0 -598.75 682.345) (float-vector 335.0 -598.75 682.345) (float-vector 335.0 -592.345 688.75) (float-vector 350.0 -592.345 688.75)))
         (instance face :init :vertices (list (float-vector 350.0 -607.5 680.0) (float-vector 335.0 -607.5 680.0) (float-vector 335.0 -598.75 682.345) (float-vector 350.0 -598.75 682.345)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 350.0 -681.25 697.345) (float-vector 350.0 -672.5 695.0) (float-vector 350.0 -663.75 697.345) (float-vector 350.0 -657.345 703.75) (float-vector 350.0 -655.0 712.5) (float-vector 350.0 -657.345 721.25) (float-vector 350.0 -663.75 727.655) (float-vector 350.0 -672.5 730.0) (float-vector 350.0 -681.25 727.655) (float-vector 350.0 -687.655 721.25) (float-vector 350.0 -690.0 712.5) (float-vector 350.0 -687.655 703.75)))
         (instance face :init :vertices (list (float-vector 335.0 -672.5 695.0) (float-vector 335.0 -681.25 697.345) (float-vector 335.0 -687.655 703.75) (float-vector 335.0 -690.0 712.5) (float-vector 335.0 -687.655 721.25) (float-vector 335.0 -681.25 727.655) (float-vector 335.0 -672.5 730.0) (float-vector 335.0 -663.75 727.655) (float-vector 335.0 -657.345 721.25) (float-vector 335.0 -655.0 712.5) (float-vector 335.0 -657.345 703.75) (float-vector 335.0 -663.75 697.345)))
         (instance face :init :vertices (list (float-vector 350.0 -681.25 697.345) (float-vector 335.0 -681.25 697.345) (float-vector 335.0 -672.5 695.0) (float-vector 350.0 -672.5 695.0)))
         (instance face :init :vertices (list (float-vector 350.0 -687.655 703.75) (float-vector 335.0 -687.655 703.75) (float-vector 335.0 -681.25 697.345) (float-vector 350.0 -681.25 697.345)))
         (instance face :init :vertices (list (float-vector 350.0 -690.0 712.5) (float-vector 335.0 -690.0 712.5) (float-vector 335.0 -687.655 703.75) (float-vector 350.0 -687.655 703.75)))
         (instance face :init :vertices (list (float-vector 350.0 -687.655 721.25) (float-vector 335.0 -687.655 721.25) (float-vector 335.0 -690.0 712.5) (float-vector 350.0 -690.0 712.5)))
         (instance face :init :vertices (list (float-vector 350.0 -681.25 727.655) (float-vector 335.0 -681.25 727.655) (float-vector 335.0 -687.655 721.25) (float-vector 350.0 -687.655 721.25)))
         (instance face :init :vertices (list (float-vector 350.0 -672.5 730.0) (float-vector 335.0 -672.5 730.0) (float-vector 335.0 -681.25 727.655) (float-vector 350.0 -681.25 727.655)))
         (instance face :init :vertices (list (float-vector 350.0 -663.75 727.655) (float-vector 335.0 -663.75 727.655) (float-vector 335.0 -672.5 730.0) (float-vector 350.0 -672.5 730.0)))
         (instance face :init :vertices (list (float-vector 350.0 -657.345 721.25) (float-vector 335.0 -657.345 721.25) (float-vector 335.0 -663.75 727.655) (float-vector 350.0 -663.75 727.655)))
         (instance face :init :vertices (list (float-vector 350.0 -655.0 712.5) (float-vector 335.0 -655.0 712.5) (float-vector 335.0 -657.345 721.25) (float-vector 350.0 -657.345 721.25)))
         (instance face :init :vertices (list (float-vector 350.0 -657.345 703.75) (float-vector 335.0 -657.345 703.75) (float-vector 335.0 -655.0 712.5) (float-vector 350.0 -655.0 712.5)))
         (instance face :init :vertices (list (float-vector 350.0 -663.75 697.345) (float-vector 335.0 -663.75 697.345) (float-vector 335.0 -657.345 703.75) (float-vector 350.0 -657.345 703.75)))
         (instance face :init :vertices (list (float-vector 350.0 -672.5 695.0) (float-vector 335.0 -672.5 695.0) (float-vector 335.0 -663.75 697.345) (float-vector 350.0 -663.75 697.345)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 350.0 -746.25 682.345) (float-vector 350.0 -737.5 680.0) (float-vector 350.0 -728.75 682.345) (float-vector 350.0 -722.345 688.75) (float-vector 350.0 -720.0 697.5) (float-vector 350.0 -722.345 706.25) (float-vector 350.0 -728.75 712.655) (float-vector 350.0 -737.5 715.0) (float-vector 350.0 -746.25 712.655) (float-vector 350.0 -752.655 706.25) (float-vector 350.0 -755.0 697.5) (float-vector 350.0 -752.655 688.75)))
         (instance face :init :vertices (list (float-vector 335.0 -737.5 680.0) (float-vector 335.0 -746.25 682.345) (float-vector 335.0 -752.655 688.75) (float-vector 335.0 -755.0 697.5) (float-vector 335.0 -752.655 706.25) (float-vector 335.0 -746.25 712.655) (float-vector 335.0 -737.5 715.0) (float-vector 335.0 -728.75 712.655) (float-vector 335.0 -722.345 706.25) (float-vector 335.0 -720.0 697.5) (float-vector 335.0 -722.345 688.75) (float-vector 335.0 -728.75 682.345)))
         (instance face :init :vertices (list (float-vector 350.0 -746.25 682.345) (float-vector 335.0 -746.25 682.345) (float-vector 335.0 -737.5 680.0) (float-vector 350.0 -737.5 680.0)))
         (instance face :init :vertices (list (float-vector 350.0 -752.655 688.75) (float-vector 335.0 -752.655 688.75) (float-vector 335.0 -746.25 682.345) (float-vector 350.0 -746.25 682.345)))
         (instance face :init :vertices (list (float-vector 350.0 -755.0 697.5) (float-vector 335.0 -755.0 697.5) (float-vector 335.0 -752.655 688.75) (float-vector 350.0 -752.655 688.75)))
         (instance face :init :vertices (list (float-vector 350.0 -752.655 706.25) (float-vector 335.0 -752.655 706.25) (float-vector 335.0 -755.0 697.5) (float-vector 350.0 -755.0 697.5)))
         (instance face :init :vertices (list (float-vector 350.0 -746.25 712.655) (float-vector 335.0 -746.25 712.655) (float-vector 335.0 -752.655 706.25) (float-vector 350.0 -752.655 706.25)))
         (instance face :init :vertices (list (float-vector 350.0 -737.5 715.0) (float-vector 335.0 -737.5 715.0) (float-vector 335.0 -746.25 712.655) (float-vector 350.0 -746.25 712.655)))
         (instance face :init :vertices (list (float-vector 350.0 -728.75 712.655) (float-vector 335.0 -728.75 712.655) (float-vector 335.0 -737.5 715.0) (float-vector 350.0 -737.5 715.0)))
         (instance face :init :vertices (list (float-vector 350.0 -722.345 706.25) (float-vector 335.0 -722.345 706.25) (float-vector 335.0 -728.75 712.655) (float-vector 350.0 -728.75 712.655)))
         (instance face :init :vertices (list (float-vector 350.0 -720.0 697.5) (float-vector 335.0 -720.0 697.5) (float-vector 335.0 -722.345 706.25) (float-vector 350.0 -722.345 706.25)))
         (instance face :init :vertices (list (float-vector 350.0 -722.345 688.75) (float-vector 335.0 -722.345 688.75) (float-vector 335.0 -720.0 697.5) (float-vector 350.0 -720.0 697.5)))
         (instance face :init :vertices (list (float-vector 350.0 -728.75 682.345) (float-vector 335.0 -728.75 682.345) (float-vector 335.0 -722.345 688.75) (float-vector 350.0 -722.345 688.75)))
         (instance face :init :vertices (list (float-vector 350.0 -737.5 680.0) (float-vector 335.0 -737.5 680.0) (float-vector 335.0 -728.75 682.345) (float-vector 350.0 -728.75 682.345)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 280.0 -525.0 834.0) (float-vector -220.0 -525.0 834.0) (float-vector -220.0 -1125.0 834.0) (float-vector 280.0 -1125.0 834.0)))
         (instance face :init :vertices (list (float-vector -220.0 -525.0 819.0) (float-vector 280.0 -525.0 819.0) (float-vector 280.0 -1125.0 819.0) (float-vector -220.0 -1125.0 819.0)))
         (instance face :init :vertices (list (float-vector 280.0 -525.0 834.0) (float-vector 280.0 -525.0 819.0) (float-vector -220.0 -525.0 819.0) (float-vector -220.0 -525.0 834.0)))
         (instance face :init :vertices (list (float-vector 280.0 -1125.0 834.0) (float-vector 280.0 -1125.0 819.0) (float-vector 280.0 -525.0 819.0) (float-vector 280.0 -525.0 834.0)))
         (instance face :init :vertices (list (float-vector -220.0 -1125.0 834.0) (float-vector -220.0 -1125.0 819.0) (float-vector 280.0 -1125.0 819.0) (float-vector 280.0 -1125.0 834.0)))
         (instance face :init :vertices (list (float-vector -220.0 -525.0 834.0) (float-vector -220.0 -525.0 819.0) (float-vector -220.0 -1125.0 819.0) (float-vector -220.0 -1125.0 834.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 -525.0 789.0) (float-vector 310.0 -525.0 789.0) (float-vector 310.0 -1125.0 789.0) (float-vector 340.0 -1125.0 789.0)))
         (instance face :init :vertices (list (float-vector 310.0 -525.0 589.0) (float-vector 340.0 -525.0 589.0) (float-vector 340.0 -1125.0 589.0) (float-vector 310.0 -1125.0 589.0)))
         (instance face :init :vertices (list (float-vector 340.0 -525.0 789.0) (float-vector 340.0 -525.0 589.0) (float-vector 310.0 -525.0 589.0) (float-vector 310.0 -525.0 789.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1125.0 789.0) (float-vector 340.0 -1125.0 589.0) (float-vector 340.0 -525.0 589.0) (float-vector 340.0 -525.0 789.0)))
         (instance face :init :vertices (list (float-vector 310.0 -1125.0 789.0) (float-vector 310.0 -1125.0 589.0) (float-vector 340.0 -1125.0 589.0) (float-vector 340.0 -1125.0 789.0)))
         (instance face :init :vertices (list (float-vector 310.0 -525.0 789.0) (float-vector 310.0 -525.0 589.0) (float-vector 310.0 -1125.0 589.0) (float-vector 310.0 -1125.0 789.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 1270.0 739.0) (float-vector 310.0 1270.0 739.0) (float-vector 310.0 670.0 739.0) (float-vector 340.0 670.0 739.0)))
         (instance face :init :vertices (list (float-vector 310.0 1270.0 639.0) (float-vector 340.0 1270.0 639.0) (float-vector 340.0 670.0 639.0) (float-vector 310.0 670.0 639.0)))
         (instance face :init :vertices (list (float-vector 340.0 1270.0 739.0) (float-vector 340.0 1270.0 639.0) (float-vector 310.0 1270.0 639.0) (float-vector 310.0 1270.0 739.0)))
         (instance face :init :vertices (list (float-vector 340.0 670.0 739.0) (float-vector 340.0 670.0 639.0) (float-vector 340.0 1270.0 639.0) (float-vector 340.0 1270.0 739.0)))
         (instance face :init :vertices (list (float-vector 310.0 670.0 739.0) (float-vector 310.0 670.0 639.0) (float-vector 340.0 670.0 639.0) (float-vector 340.0 670.0 739.0)))
         (instance face :init :vertices (list (float-vector 310.0 1270.0 739.0) (float-vector 310.0 1270.0 639.0) (float-vector 310.0 670.0 639.0) (float-vector 310.0 670.0 739.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 1270.0 639.0) (float-vector 310.0 1270.0 639.0) (float-vector 310.0 670.0 639.0) (float-vector 340.0 670.0 639.0)))
         (instance face :init :vertices (list (float-vector 310.0 1270.0 100.0) (float-vector 340.0 1270.0 100.0) (float-vector 340.0 670.0 100.0) (float-vector 310.0 670.0 100.0)))
         (instance face :init :vertices (list (float-vector 340.0 1270.0 639.0) (float-vector 340.0 1270.0 100.0) (float-vector 310.0 1270.0 100.0) (float-vector 310.0 1270.0 639.0)))
         (instance face :init :vertices (list (float-vector 340.0 670.0 639.0) (float-vector 340.0 670.0 100.0) (float-vector 340.0 1270.0 100.0) (float-vector 340.0 1270.0 639.0)))
         (instance face :init :vertices (list (float-vector 310.0 670.0 639.0) (float-vector 310.0 670.0 100.0) (float-vector 340.0 670.0 100.0) (float-vector 340.0 670.0 639.0)))
         (instance face :init :vertices (list (float-vector 310.0 1270.0 639.0) (float-vector 310.0 1270.0 100.0) (float-vector 310.0 670.0 100.0) (float-vector 310.0 670.0 639.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 1270.0 790.0) (float-vector 310.0 1270.0 790.0) (float-vector 310.0 -530.0 790.0) (float-vector 340.0 -530.0 790.0)))
         (instance face :init :vertices (list (float-vector 310.0 1270.0 740.0) (float-vector 340.0 1270.0 740.0) (float-vector 340.0 -530.0 740.0) (float-vector 310.0 -530.0 740.0)))
         (instance face :init :vertices (list (float-vector 340.0 1270.0 790.0) (float-vector 340.0 1270.0 740.0) (float-vector 310.0 1270.0 740.0) (float-vector 310.0 1270.0 790.0)))
         (instance face :init :vertices (list (float-vector 340.0 -530.0 790.0) (float-vector 340.0 -530.0 740.0) (float-vector 340.0 1270.0 740.0) (float-vector 340.0 1270.0 790.0)))
         (instance face :init :vertices (list (float-vector 310.0 -530.0 790.0) (float-vector 310.0 -530.0 740.0) (float-vector 340.0 -530.0 740.0) (float-vector 340.0 -530.0 790.0)))
         (instance face :init :vertices (list (float-vector 310.0 1270.0 790.0) (float-vector 310.0 1270.0 740.0) (float-vector 310.0 -530.0 740.0) (float-vector 310.0 -530.0 790.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 340.0 -1125.0 790.0) (float-vector 310.0 -1125.0 790.0) (float-vector 310.0 -1275.0 790.0) (float-vector 340.0 -1275.0 790.0)))
         (instance face :init :vertices (list (float-vector 310.0 -1125.0 740.0) (float-vector 340.0 -1125.0 740.0) (float-vector 340.0 -1275.0 740.0) (float-vector 310.0 -1275.0 740.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1125.0 790.0) (float-vector 340.0 -1125.0 740.0) (float-vector 310.0 -1125.0 740.0) (float-vector 310.0 -1125.0 790.0)))
         (instance face :init :vertices (list (float-vector 340.0 -1275.0 790.0) (float-vector 340.0 -1275.0 740.0) (float-vector 340.0 -1125.0 740.0) (float-vector 340.0 -1125.0 790.0)))
         (instance face :init :vertices (list (float-vector 310.0 -1275.0 790.0) (float-vector 310.0 -1275.0 740.0) (float-vector 340.0 -1275.0 740.0) (float-vector 340.0 -1275.0 790.0)))
         (instance face :init :vertices (list (float-vector 310.0 -1125.0 790.0) (float-vector 310.0 -1125.0 740.0) (float-vector 310.0 -1275.0 740.0) (float-vector 310.0 -1275.0 790.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :dimgray)
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color :gray50)
     (send (elt bc 4) :set-color :gray50)
     (send (elt bc 5) :set-color :gray50)
     (send (elt bc 6) :set-color :gray50)
     (send (elt bc 7) :set-color :gray50)
     (send (elt bc 8) :set-color :gray50)
     (send (elt bc 9) :set-color :gray50)
     (send (elt bc 10) :set-color :gray10)
     (send (elt bc 11) :set-color :gray10)
     (send (elt bc 12) :set-color :gray10)
     (send (elt bc 13) :set-color :black)
     (send (elt bc 14) :set-color :black)
     (send (elt bc 15) :set-color :mediumspringgreen)
     (send (elt bc 16) :set-color :black)
     (send (elt bc 17) :set-color :mediumspringgreen)
     (send (elt bc 18) :set-color :mediumspringgreen)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 15.0 640.0) (float-vector -15.0 15.0 640.0) (float-vector -15.0 -435.0 640.0) (float-vector 15.0 -435.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 15.0 0.0) (float-vector 15.0 15.0 0.0) (float-vector 15.0 -435.0 0.0) (float-vector -15.0 -435.0 0.0)))
         (instance face :init :vertices (list (float-vector 15.0 15.0 640.0) (float-vector 15.0 15.0 0.0) (float-vector -15.0 15.0 0.0) (float-vector -15.0 15.0 640.0)))
         (instance face :init :vertices (list (float-vector 15.0 -435.0 640.0) (float-vector 15.0 -435.0 0.0) (float-vector 15.0 15.0 0.0) (float-vector 15.0 15.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 -435.0 640.0) (float-vector -15.0 -435.0 0.0) (float-vector 15.0 -435.0 0.0) (float-vector 15.0 -435.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 15.0 640.0) (float-vector -15.0 15.0 0.0) (float-vector -15.0 -435.0 0.0) (float-vector -15.0 -435.0 640.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :mediumspringgreen)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 285.0 640.0) (float-vector -15.0 285.0 640.0) (float-vector -15.0 -15.0 640.0) (float-vector 15.0 -15.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 285.0 0.0) (float-vector 15.0 285.0 0.0) (float-vector 15.0 -15.0 0.0) (float-vector -15.0 -15.0 0.0)))
         (instance face :init :vertices (list (float-vector 15.0 285.0 640.0) (float-vector 15.0 285.0 0.0) (float-vector -15.0 285.0 0.0) (float-vector -15.0 285.0 640.0)))
         (instance face :init :vertices (list (float-vector 15.0 -15.0 640.0) (float-vector 15.0 -15.0 0.0) (float-vector 15.0 285.0 0.0) (float-vector 15.0 285.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 -15.0 640.0) (float-vector -15.0 -15.0 0.0) (float-vector 15.0 -15.0 0.0) (float-vector 15.0 -15.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 285.0 640.0) (float-vector -15.0 285.0 0.0) (float-vector -15.0 -15.0 0.0) (float-vector -15.0 -15.0 640.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :mediumspringgreen)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -280.0 195.0 -86.0) (float-vector -280.0 -195.0 -86.0) (float-vector -280.0 -195.0 86.0) (float-vector -280.0 195.0 86.0)))
         (instance face :init :vertices (list (float-vector 280.0 -195.0 -86.0) (float-vector 280.0 -195.0 86.0) (float-vector -280.0 -195.0 86.0) (float-vector -280.0 -195.0 -86.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -86.0) (float-vector 280.0 195.0 86.0) (float-vector 280.0 185.0 86.0) (float-vector 280.0 185.0 -76.0) (float-vector 280.0 -185.0 -76.0) (float-vector 280.0 -185.0 86.0) (float-vector 280.0 -195.0 86.0) (float-vector 280.0 -195.0 -86.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 86.0) (float-vector -280.0 -195.0 86.0) (float-vector 280.0 -195.0 86.0) (float-vector 280.0 -185.0 86.0) (float-vector -270.0 -185.0 86.0) (float-vector -270.0 185.0 86.0) (float-vector 280.0 185.0 86.0) (float-vector 280.0 195.0 86.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -86.0) (float-vector 280.0 -195.0 -86.0) (float-vector -280.0 -195.0 -86.0) (float-vector -280.0 195.0 -86.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 -86.0) (float-vector -280.0 195.0 86.0) (float-vector 280.0 195.0 86.0) (float-vector 280.0 195.0 -86.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 86.0) (float-vector -270.0 -185.0 86.0) (float-vector -270.0 -185.0 -76.0) (float-vector -270.0 185.0 -76.0)))
         (instance face :init :vertices (list (float-vector -270.0 -185.0 -76.0) (float-vector -270.0 -185.0 86.0) (float-vector 280.0 -185.0 86.0) (float-vector 280.0 -185.0 -76.0)))
         (instance face :init :vertices (list (float-vector 280.0 185.0 -76.0) (float-vector 280.0 185.0 86.0) (float-vector -270.0 185.0 86.0) (float-vector -270.0 185.0 -76.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 -76.0) (float-vector -270.0 -185.0 -76.0) (float-vector 280.0 -185.0 -76.0) (float-vector 280.0 185.0 -76.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 225.0 116.0) (float-vector 280.0 225.0 116.0) (float-vector 280.0 -225.0 116.0) (float-vector 310.0 -225.0 116.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 -86.0) (float-vector 310.0 225.0 -86.0) (float-vector 310.0 -225.0 -86.0) (float-vector 280.0 -225.0 -86.0)))
         (instance face :init :vertices (list (float-vector 310.0 225.0 116.0) (float-vector 310.0 225.0 -86.0) (float-vector 280.0 225.0 -86.0) (float-vector 280.0 225.0 116.0)))
         (instance face :init :vertices (list (float-vector 310.0 -225.0 116.0) (float-vector 310.0 -225.0 -86.0) (float-vector 310.0 225.0 -86.0) (float-vector 310.0 225.0 116.0)))
         (instance face :init :vertices (list (float-vector 280.0 -225.0 116.0) (float-vector 280.0 -225.0 -86.0) (float-vector 310.0 -225.0 -86.0) (float-vector 310.0 -225.0 116.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 116.0) (float-vector 280.0 225.0 -86.0) (float-vector 280.0 -225.0 -86.0) (float-vector 280.0 -225.0 116.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :mediumspringgreen)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -280.0 195.0 -58.0) (float-vector -280.0 -195.0 -58.0) (float-vector -280.0 -195.0 58.0) (float-vector -280.0 195.0 58.0)))
         (instance face :init :vertices (list (float-vector 280.0 -195.0 -58.0) (float-vector 280.0 -195.0 58.0) (float-vector -280.0 -195.0 58.0) (float-vector -280.0 -195.0 -58.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -58.0) (float-vector 280.0 195.0 58.0) (float-vector 280.0 185.0 58.0) (float-vector 280.0 185.0 -48.0) (float-vector 280.0 -185.0 -48.0) (float-vector 280.0 -185.0 58.0) (float-vector 280.0 -195.0 58.0) (float-vector 280.0 -195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 58.0) (float-vector -280.0 -195.0 58.0) (float-vector 280.0 -195.0 58.0) (float-vector 280.0 -185.0 58.0) (float-vector -270.0 -185.0 58.0) (float-vector -270.0 185.0 58.0) (float-vector 280.0 185.0 58.0) (float-vector 280.0 195.0 58.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -58.0) (float-vector 280.0 -195.0 -58.0) (float-vector -280.0 -195.0 -58.0) (float-vector -280.0 195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 -58.0) (float-vector -280.0 195.0 58.0) (float-vector 280.0 195.0 58.0) (float-vector 280.0 195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 58.0) (float-vector -270.0 -185.0 58.0) (float-vector -270.0 -185.0 -48.0) (float-vector -270.0 185.0 -48.0)))
         (instance face :init :vertices (list (float-vector -270.0 -185.0 -48.0) (float-vector -270.0 -185.0 58.0) (float-vector 280.0 -185.0 58.0) (float-vector 280.0 -185.0 -48.0)))
         (instance face :init :vertices (list (float-vector 280.0 185.0 -48.0) (float-vector 280.0 185.0 58.0) (float-vector -270.0 185.0 58.0) (float-vector -270.0 185.0 -48.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 -48.0) (float-vector -270.0 -185.0 -48.0) (float-vector 280.0 -185.0 -48.0) (float-vector 280.0 185.0 -48.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 225.0 88.0) (float-vector 280.0 225.0 88.0) (float-vector 280.0 -225.0 88.0) (float-vector 310.0 -225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 -58.0) (float-vector 310.0 225.0 -58.0) (float-vector 310.0 -225.0 -58.0) (float-vector 280.0 -225.0 -58.0)))
         (instance face :init :vertices (list (float-vector 310.0 225.0 88.0) (float-vector 310.0 225.0 -58.0) (float-vector 280.0 225.0 -58.0) (float-vector 280.0 225.0 88.0)))
         (instance face :init :vertices (list (float-vector 310.0 -225.0 88.0) (float-vector 310.0 -225.0 -58.0) (float-vector 310.0 225.0 -58.0) (float-vector 310.0 225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 -225.0 88.0) (float-vector 280.0 -225.0 -58.0) (float-vector 310.0 -225.0 -58.0) (float-vector 310.0 -225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 88.0) (float-vector 280.0 225.0 -58.0) (float-vector 280.0 -225.0 -58.0) (float-vector 280.0 -225.0 88.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :mediumspringgreen)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset6
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -280.0 195.0 -58.0) (float-vector -280.0 -195.0 -58.0) (float-vector -280.0 -195.0 58.0) (float-vector -280.0 195.0 58.0)))
         (instance face :init :vertices (list (float-vector 280.0 -195.0 -58.0) (float-vector 280.0 -195.0 58.0) (float-vector -280.0 -195.0 58.0) (float-vector -280.0 -195.0 -58.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -58.0) (float-vector 280.0 195.0 58.0) (float-vector 280.0 185.0 58.0) (float-vector 280.0 185.0 -48.0) (float-vector 280.0 -185.0 -48.0) (float-vector 280.0 -185.0 58.0) (float-vector 280.0 -195.0 58.0) (float-vector 280.0 -195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 58.0) (float-vector -280.0 -195.0 58.0) (float-vector 280.0 -195.0 58.0) (float-vector 280.0 -185.0 58.0) (float-vector -270.0 -185.0 58.0) (float-vector -270.0 185.0 58.0) (float-vector 280.0 185.0 58.0) (float-vector 280.0 195.0 58.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -58.0) (float-vector 280.0 -195.0 -58.0) (float-vector -280.0 -195.0 -58.0) (float-vector -280.0 195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 -58.0) (float-vector -280.0 195.0 58.0) (float-vector 280.0 195.0 58.0) (float-vector 280.0 195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 58.0) (float-vector -270.0 -185.0 58.0) (float-vector -270.0 -185.0 -48.0) (float-vector -270.0 185.0 -48.0)))
         (instance face :init :vertices (list (float-vector -270.0 -185.0 -48.0) (float-vector -270.0 -185.0 58.0) (float-vector 280.0 -185.0 58.0) (float-vector 280.0 -185.0 -48.0)))
         (instance face :init :vertices (list (float-vector 280.0 185.0 -48.0) (float-vector 280.0 185.0 58.0) (float-vector -270.0 185.0 58.0) (float-vector -270.0 185.0 -48.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 -48.0) (float-vector -270.0 -185.0 -48.0) (float-vector 280.0 -185.0 -48.0) (float-vector 280.0 185.0 -48.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 225.0 88.0) (float-vector 280.0 225.0 88.0) (float-vector 280.0 -225.0 88.0) (float-vector 310.0 -225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 -58.0) (float-vector 310.0 225.0 -58.0) (float-vector 310.0 -225.0 -58.0) (float-vector 280.0 -225.0 -58.0)))
         (instance face :init :vertices (list (float-vector 310.0 225.0 88.0) (float-vector 310.0 225.0 -58.0) (float-vector 280.0 225.0 -58.0) (float-vector 280.0 225.0 88.0)))
         (instance face :init :vertices (list (float-vector 310.0 -225.0 88.0) (float-vector 310.0 -225.0 -58.0) (float-vector 310.0 225.0 -58.0) (float-vector 310.0 225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 -225.0 88.0) (float-vector 280.0 -225.0 -58.0) (float-vector 310.0 -225.0 -58.0) (float-vector 310.0 -225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 88.0) (float-vector 280.0 225.0 -58.0) (float-vector 280.0 -225.0 -58.0) (float-vector 280.0 -225.0 88.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :mediumspringgreen)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset6 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset7
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -280.0 195.0 -58.0) (float-vector -280.0 -195.0 -58.0) (float-vector -280.0 -195.0 58.0) (float-vector -280.0 195.0 58.0)))
         (instance face :init :vertices (list (float-vector 280.0 -195.0 -58.0) (float-vector 280.0 -195.0 58.0) (float-vector -280.0 -195.0 58.0) (float-vector -280.0 -195.0 -58.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -58.0) (float-vector 280.0 195.0 58.0) (float-vector 280.0 185.0 58.0) (float-vector 280.0 185.0 -48.0) (float-vector 280.0 -185.0 -48.0) (float-vector 280.0 -185.0 58.0) (float-vector 280.0 -195.0 58.0) (float-vector 280.0 -195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 58.0) (float-vector -280.0 -195.0 58.0) (float-vector 280.0 -195.0 58.0) (float-vector 280.0 -185.0 58.0) (float-vector -270.0 -185.0 58.0) (float-vector -270.0 185.0 58.0) (float-vector 280.0 185.0 58.0) (float-vector 280.0 195.0 58.0)))
         (instance face :init :vertices (list (float-vector 280.0 195.0 -58.0) (float-vector 280.0 -195.0 -58.0) (float-vector -280.0 -195.0 -58.0) (float-vector -280.0 195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -280.0 195.0 -58.0) (float-vector -280.0 195.0 58.0) (float-vector 280.0 195.0 58.0) (float-vector 280.0 195.0 -58.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 58.0) (float-vector -270.0 -185.0 58.0) (float-vector -270.0 -185.0 -48.0) (float-vector -270.0 185.0 -48.0)))
         (instance face :init :vertices (list (float-vector -270.0 -185.0 -48.0) (float-vector -270.0 -185.0 58.0) (float-vector 280.0 -185.0 58.0) (float-vector 280.0 -185.0 -48.0)))
         (instance face :init :vertices (list (float-vector 280.0 185.0 -48.0) (float-vector 280.0 185.0 58.0) (float-vector -270.0 185.0 58.0) (float-vector -270.0 185.0 -48.0)))
         (instance face :init :vertices (list (float-vector -270.0 185.0 -48.0) (float-vector -270.0 -185.0 -48.0) (float-vector 280.0 -185.0 -48.0) (float-vector 280.0 185.0 -48.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 225.0 88.0) (float-vector 280.0 225.0 88.0) (float-vector 280.0 -225.0 88.0) (float-vector 310.0 -225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 -58.0) (float-vector 310.0 225.0 -58.0) (float-vector 310.0 -225.0 -58.0) (float-vector 280.0 -225.0 -58.0)))
         (instance face :init :vertices (list (float-vector 310.0 225.0 88.0) (float-vector 310.0 225.0 -58.0) (float-vector 280.0 225.0 -58.0) (float-vector 280.0 225.0 88.0)))
         (instance face :init :vertices (list (float-vector 310.0 -225.0 88.0) (float-vector 310.0 -225.0 -58.0) (float-vector 310.0 225.0 -58.0) (float-vector 310.0 225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 -225.0 88.0) (float-vector 280.0 -225.0 -58.0) (float-vector 310.0 -225.0 -58.0) (float-vector 310.0 -225.0 88.0)))
         (instance face :init :vertices (list (float-vector 280.0 225.0 88.0) (float-vector 280.0 225.0 -58.0) (float-vector 280.0 -225.0 -58.0) (float-vector 280.0 -225.0 88.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :mediumspringgreen)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset7 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset8
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 15.0 488.5) (float-vector -15.0 15.0 488.5) (float-vector -15.0 -285.0 488.5) (float-vector 15.0 -285.0 488.5)))
         (instance face :init :vertices (list (float-vector -15.0 15.0 -0.5) (float-vector 15.0 15.0 -0.5) (float-vector 15.0 -285.0 -0.5) (float-vector -15.0 -285.0 -0.5)))
         (instance face :init :vertices (list (float-vector 15.0 15.0 488.5) (float-vector 15.0 15.0 -0.5) (float-vector -15.0 15.0 -0.5) (float-vector -15.0 15.0 488.5)))
         (instance face :init :vertices (list (float-vector 15.0 -285.0 488.5) (float-vector 15.0 -285.0 -0.5) (float-vector 15.0 15.0 -0.5) (float-vector 15.0 15.0 488.5)))
         (instance face :init :vertices (list (float-vector -15.0 -285.0 488.5) (float-vector -15.0 -285.0 -0.5) (float-vector 15.0 -285.0 -0.5) (float-vector 15.0 -285.0 488.5)))
         (instance face :init :vertices (list (float-vector -15.0 15.0 488.5) (float-vector -15.0 15.0 -0.5) (float-vector -15.0 -285.0 -0.5) (float-vector -15.0 -285.0 488.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :mediumspringgreen)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset8 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset9
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 285.0 480.0) (float-vector -15.0 285.0 480.0) (float-vector -15.0 -15.0 480.0) (float-vector 15.0 -15.0 480.0)))
         (instance face :init :vertices (list (float-vector -15.0 285.0 0.0) (float-vector 15.0 285.0 0.0) (float-vector 15.0 -15.0 0.0) (float-vector -15.0 -15.0 0.0)))
         (instance face :init :vertices (list (float-vector 15.0 285.0 480.0) (float-vector 15.0 285.0 0.0) (float-vector -15.0 285.0 0.0) (float-vector -15.0 285.0 480.0)))
         (instance face :init :vertices (list (float-vector 15.0 -15.0 480.0) (float-vector 15.0 -15.0 0.0) (float-vector 15.0 285.0 0.0) (float-vector 15.0 285.0 480.0)))
         (instance face :init :vertices (list (float-vector -15.0 -15.0 480.0) (float-vector -15.0 -15.0 0.0) (float-vector 15.0 -15.0 0.0) (float-vector 15.0 -15.0 480.0)))
         (instance face :init :vertices (list (float-vector -15.0 285.0 480.0) (float-vector -15.0 285.0 0.0) (float-vector -15.0 -15.0 0.0) (float-vector -15.0 -15.0 480.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :mediumspringgreen)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset9 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset10
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 135.0 640.0) (float-vector -15.0 135.0 640.0) (float-vector -15.0 -15.0 640.0) (float-vector 15.0 -15.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 135.0 0.0) (float-vector 15.0 135.0 0.0) (float-vector 15.0 -15.0 0.0) (float-vector -15.0 -15.0 0.0)))
         (instance face :init :vertices (list (float-vector 15.0 135.0 640.0) (float-vector 15.0 135.0 0.0) (float-vector -15.0 135.0 0.0) (float-vector -15.0 135.0 640.0)))
         (instance face :init :vertices (list (float-vector 15.0 -15.0 640.0) (float-vector 15.0 -15.0 0.0) (float-vector 15.0 135.0 0.0) (float-vector 15.0 135.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 -15.0 640.0) (float-vector -15.0 -15.0 0.0) (float-vector 15.0 -15.0 0.0) (float-vector 15.0 -15.0 640.0)))
         (instance face :init :vertices (list (float-vector -15.0 135.0 640.0) (float-vector -15.0 135.0 0.0) (float-vector -15.0 -15.0 0.0) (float-vector -15.0 -15.0 640.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :mediumspringgreen)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset10 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset11
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 287.667 -8.5 146.396) (float-vector 288.429 0.0 144.249) (float-vector 287.667 8.5 146.396) (float-vector 285.588 14.7224 152.26) (float-vector 282.747 17.0 160.271) (float-vector 279.906 14.7224 168.282) (float-vector 277.826 8.5 174.147) (float-vector 277.065 0.0 176.294) (float-vector 277.826 -8.5 174.147) (float-vector 279.906 -14.7224 168.282) (float-vector 282.747 -17.0 160.271) (float-vector 285.588 -14.7224 152.26)))
         (instance face :init :vertices (list (float-vector 5.68204 0.0 43.9777) (float-vector 4.92079 -8.5 46.1243) (float-vector 2.84102 -14.7224 51.9888) (float-vector -1.421085e-14 -17.0 60.0) (float-vector -2.84102 -14.7224 68.0112) (float-vector -4.92079 -8.5 73.8757) (float-vector -5.68204 0.0 76.0223) (float-vector -4.92079 8.5 73.8757) (float-vector -2.84102 14.7224 68.0112) (float-vector 0.0 17.0 60.0) (float-vector 2.84102 14.7224 51.9888) (float-vector 4.92079 8.5 46.1243)))
         (instance face :init :vertices (list (float-vector 287.667 -8.5 146.396) (float-vector 4.92079 -8.5 46.1243) (float-vector 5.68204 0.0 43.9777) (float-vector 288.429 0.0 144.249)))
         (instance face :init :vertices (list (float-vector 285.588 -14.7224 152.26) (float-vector 2.84102 -14.7224 51.9888) (float-vector 4.92079 -8.5 46.1243) (float-vector 287.667 -8.5 146.396)))
         (instance face :init :vertices (list (float-vector 282.747 -17.0 160.271) (float-vector -1.421085e-14 -17.0 60.0) (float-vector 2.84102 -14.7224 51.9888) (float-vector 285.588 -14.7224 152.26)))
         (instance face :init :vertices (list (float-vector 279.906 -14.7224 168.282) (float-vector -2.84102 -14.7224 68.0112) (float-vector -1.421085e-14 -17.0 60.0) (float-vector 282.747 -17.0 160.271)))
         (instance face :init :vertices (list (float-vector 277.826 -8.5 174.147) (float-vector -4.92079 -8.5 73.8757) (float-vector -2.84102 -14.7224 68.0112) (float-vector 279.906 -14.7224 168.282)))
         (instance face :init :vertices (list (float-vector 277.065 0.0 176.294) (float-vector -5.68204 0.0 76.0223) (float-vector -4.92079 -8.5 73.8757) (float-vector 277.826 -8.5 174.147)))
         (instance face :init :vertices (list (float-vector 277.826 8.5 174.147) (float-vector -4.92079 8.5 73.8757) (float-vector -5.68204 0.0 76.0223) (float-vector 277.065 0.0 176.294)))
         (instance face :init :vertices (list (float-vector 279.906 14.7224 168.282) (float-vector -2.84102 14.7224 68.0112) (float-vector -4.92079 8.5 73.8757) (float-vector 277.826 8.5 174.147)))
         (instance face :init :vertices (list (float-vector 282.747 17.0 160.271) (float-vector 0.0 17.0 60.0) (float-vector -2.84102 14.7224 68.0112) (float-vector 279.906 14.7224 168.282)))
         (instance face :init :vertices (list (float-vector 285.588 14.7224 152.26) (float-vector 2.84102 14.7224 51.9888) (float-vector 0.0 17.0 60.0) (float-vector 282.747 17.0 160.271)))
         (instance face :init :vertices (list (float-vector 287.667 8.5 146.396) (float-vector 4.92079 8.5 46.1243) (float-vector 2.84102 14.7224 51.9888) (float-vector 285.588 14.7224 152.26)))
         (instance face :init :vertices (list (float-vector 288.429 0.0 144.249) (float-vector 5.68204 0.0 43.9777) (float-vector 4.92079 8.5 46.1243) (float-vector 287.667 8.5 146.396)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 285.981 -15.0 175.0) (float-vector 290.0 0.0 175.0) (float-vector 285.981 15.0 175.0) (float-vector 275.0 25.9808 175.0) (float-vector 260.0 30.0 175.0) (float-vector 245.0 25.9808 175.0) (float-vector 234.019 15.0 175.0) (float-vector 230.0 0.0 175.0) (float-vector 234.019 -15.0 175.0) (float-vector 245.0 -25.9808 175.0) (float-vector 260.0 -30.0 175.0) (float-vector 275.0 -25.9808 175.0)))
         (instance face :init :vertices (list (float-vector 290.0 0.0 120.0) (float-vector 285.981 -15.0 120.0) (float-vector 275.0 -25.9808 120.0) (float-vector 260.0 -30.0 120.0) (float-vector 245.0 -25.9808 120.0) (float-vector 234.019 -15.0 120.0) (float-vector 230.0 0.0 120.0) (float-vector 234.019 15.0 120.0) (float-vector 245.0 25.9808 120.0) (float-vector 260.0 30.0 120.0) (float-vector 275.0 25.9808 120.0) (float-vector 285.981 15.0 120.0)))
         (instance face :init :vertices (list (float-vector 285.981 -15.0 175.0) (float-vector 285.981 -15.0 120.0) (float-vector 290.0 0.0 120.0) (float-vector 290.0 0.0 175.0)))
         (instance face :init :vertices (list (float-vector 275.0 -25.9808 175.0) (float-vector 275.0 -25.9808 120.0) (float-vector 285.981 -15.0 120.0) (float-vector 285.981 -15.0 175.0)))
         (instance face :init :vertices (list (float-vector 260.0 -30.0 175.0) (float-vector 260.0 -30.0 120.0) (float-vector 275.0 -25.9808 120.0) (float-vector 275.0 -25.9808 175.0)))
         (instance face :init :vertices (list (float-vector 245.0 -25.9808 175.0) (float-vector 245.0 -25.9808 120.0) (float-vector 260.0 -30.0 120.0) (float-vector 260.0 -30.0 175.0)))
         (instance face :init :vertices (list (float-vector 234.019 -15.0 175.0) (float-vector 234.019 -15.0 120.0) (float-vector 245.0 -25.9808 120.0) (float-vector 245.0 -25.9808 175.0)))
         (instance face :init :vertices (list (float-vector 230.0 0.0 175.0) (float-vector 230.0 0.0 120.0) (float-vector 234.019 -15.0 120.0) (float-vector 234.019 -15.0 175.0)))
         (instance face :init :vertices (list (float-vector 234.019 15.0 175.0) (float-vector 234.019 15.0 120.0) (float-vector 230.0 0.0 120.0) (float-vector 230.0 0.0 175.0)))
         (instance face :init :vertices (list (float-vector 245.0 25.9808 175.0) (float-vector 245.0 25.9808 120.0) (float-vector 234.019 15.0 120.0) (float-vector 234.019 15.0 175.0)))
         (instance face :init :vertices (list (float-vector 260.0 30.0 175.0) (float-vector 260.0 30.0 120.0) (float-vector 245.0 25.9808 120.0) (float-vector 245.0 25.9808 175.0)))
         (instance face :init :vertices (list (float-vector 275.0 25.9808 175.0) (float-vector 275.0 25.9808 120.0) (float-vector 260.0 30.0 120.0) (float-vector 260.0 30.0 175.0)))
         (instance face :init :vertices (list (float-vector 285.981 15.0 175.0) (float-vector 285.981 15.0 120.0) (float-vector 275.0 25.9808 120.0) (float-vector 275.0 25.9808 175.0)))
         (instance face :init :vertices (list (float-vector 290.0 0.0 175.0) (float-vector 290.0 0.0 120.0) (float-vector 285.981 15.0 120.0) (float-vector 285.981 15.0 175.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset11 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-kitchen-bodyset12
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 125.0 25.0 5.0) (float-vector -1.421085e-14 25.0 5.0) (float-vector 0.0 -25.0 5.0) (float-vector 125.0 -25.0 5.0)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 25.0 -5.0) (float-vector 125.0 25.0 -5.0) (float-vector 125.0 -25.0 -5.0) (float-vector 0.0 -25.0 -5.0)))
         (instance face :init :vertices (list (float-vector 125.0 25.0 5.0) (float-vector 125.0 25.0 -5.0) (float-vector -1.421085e-14 25.0 -5.0) (float-vector -1.421085e-14 25.0 5.0)))
         (instance face :init :vertices (list (float-vector 125.0 -25.0 5.0) (float-vector 125.0 -25.0 -5.0) (float-vector 125.0 25.0 -5.0) (float-vector 125.0 25.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -25.0 5.0) (float-vector 0.0 -25.0 -5.0) (float-vector 125.0 -25.0 -5.0) (float-vector 125.0 -25.0 5.0)))
         (instance face :init :vertices (list (float-vector -1.421085e-14 25.0 5.0) (float-vector -1.421085e-14 25.0 -5.0) (float-vector 0.0 -25.0 -5.0) (float-vector 0.0 -25.0 5.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-kitchen-bodyset12 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink11 :newcoords (make-coords :pos (float-vector -230.5 405.0 970.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink11)
     (send blink10 :newcoords (make-coords :pos (float-vector -230.0 405.0 800.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink10)
     (send blink9 :newcoords (make-coords :pos (float-vector 325.0 -1260.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink9)
     (send blink8 :newcoords (make-coords :pos (float-vector 325.0 -1110.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink8)
     (send blink7 :newcoords (make-coords :pos (float-vector 325.0 -540.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink7)
     (send blink6 :newcoords (make-coords :pos (float-vector 30.0 -300.0 652.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector 30.0 -300.0 506.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink5)
     (send blink4 :newcoords (make-coords :pos (float-vector 30.0 -300.0 360.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink3 :newcoords (make-coords :pos (float-vector 30.0 -300.0 186.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector 325.0 -65.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink1 :newcoords (make-coords :pos (float-vector 325.0 655.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :door-2
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :door-2    :axis :z 
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :door-1
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink2 :name :door-1    :axis :-z
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :drawer-0
     (setq joint2 (instance linear-joint :init
			     :parent-link blink0 :child-link blink3 :name :drawer-0  :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  620.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-1
     (setq joint3 (instance linear-joint :init
			     :parent-link blink0 :child-link blink4 :name :drawer-1  :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  620.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-2
     (setq joint4 (instance linear-joint :init
			     :parent-link blink0 :child-link blink5 :name :drawer-2  :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  620.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-3
     (setq joint5 (instance linear-joint :init
			     :parent-link blink0 :child-link blink6 :name :drawer-3  :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  620.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :door-3
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink7 :name :door-3    :axis :z 
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :door-4
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink8 :name :door-4    :axis :-z
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :door-5
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink9 :name :door-5    :axis :-z
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :tap-tube-joint
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink10 :name :tap-tube-joint :axis :z 
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :tap-handle-joint
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink11 :name :tap-handle-joint :axis :y 
			     :min  -90.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send blink0 :assoc handle0)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:door-2 (&rest args) (forward-message-to joint0 args))
  (:door-1 (&rest args) (forward-message-to joint1 args))
  (:drawer-0 (&rest args) (forward-message-to joint2 args))
  (:drawer-1 (&rest args) (forward-message-to joint3 args))
  (:drawer-2 (&rest args) (forward-message-to joint4 args))
  (:drawer-3 (&rest args) (forward-message-to joint5 args))
  (:door-3 (&rest args) (forward-message-to joint6 args))
  (:door-4 (&rest args) (forward-message-to joint7 args))
  (:door-5 (&rest args) (forward-message-to joint8 args))
  (:tap-tube-joint (&rest args) (forward-message-to joint9 args))
  (:tap-handle-joint (&rest args) (forward-message-to joint10 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73b2-kitchen (&rest args) (instance* room73b2-kitchen-object :init args))
;; (format *error-output* "(instance room73b2-kitchen-object :init) for generating model~%")
