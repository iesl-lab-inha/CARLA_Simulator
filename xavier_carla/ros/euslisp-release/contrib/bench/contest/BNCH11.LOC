(make-code 'diff 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 123 208 172 248 80 209 80 139 19 3 49 10

0 208 143 1 0 0 144 123 49 100 1 208 172 252 123 221

107 208 91 159 220 38 1 0 22 159 call 1 1 1 208 80

107 209 139 143 4 53 1 128 18 3 49 10 0 208 143 0

0 0 144 123 49 53 1 208 172 252 80 22 159 carx 208 80

123 221 107 208 91 159 220 38 1 0 22 159 call 1 1 1

208 80 107 209 139 143 4 53 1 128 18 3 49 0 1 208

172 252 80 22 159 carx 208 80 123 208 201 8 0 123 221 107

221 171 4 208 91 159 220 38 1 0 22 159 call 3 2 2

192 8 91 208 80 123 208 90 123 208 91 90 208 170 4 123

209 107 143 4 53 1 128 18 3 49 71 0 192 4 91 208

172 252 123 221 107 208 91 159 220 38 1 0 22 159 call 4

1 1 208 80 107 208 143 3 0 0 144 123 221 2 208 91

159 220 38 1 0 22 159 call 5 2 1 192 8 91 208 80

123 209 107 143 4 53 1 128 18 3 49 0 0 209 139 143

4 53 1 128 18 3 49 75 0 208 170 4 123 208 172 252

80 22 159 cdrx 208 80 123 208 172 248 123 221 2 208 91 159

220 38 1 0 22 159 call 6 2 1 192 8 91 208 80 123

221 107 221 171 4 208 91 159 220 38 1 0 22 159 call 7

2 2 192 8 91 208 80 123 49 15 0 208 201 32 0 123

49 7 0 208 143 4 53 1 128 123 208 139 80 193 8 90

91 208 106 90 208 80 123 49 7 0 208 143 4 53 1 128

123 208 139 80 208 91 159 220 38 1 0 4 )

'(diff atom diff-fn get length 

= list apply error ))



(make-code 'plus-diff 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 80 22 159 carx 208 80 123 208 172 248 123 221

2 208 91 159 220 38 1 0 22 159 call 1 2 1 192 8

91 208 80 123 208 172 252 80 22 159 cdrx 22 159 carx 208 80

123 208 172 248 123 221 2 208 91 159 220 38 1 0 22 159

call 1 2 1 192 8 91 208 80 123 221 2 208 91 159 220

38 1 0 22 159 call 2 2 1 192 8 91 208 91 159 220

38 1 0 4 )

'(plus-diff diff simp-plus ))



(make-code 'simp-plus 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 123 221 107 208 91 159 220 38 1 0 22 159

call 1 1 1 208 80 107 209 107 143 4 53 1 128 18 3

49 40 0 192 4 91 208 172 248 123 221 107 208 91 159 220

38 1 0 22 159 call 1 1 1 208 80 107 209 107 143 4

53 1 128 18 3 49 0 0 209 139 143 4 53 1 128 18

3 49 35 0 208 172 252 123 208 172 248 123 221 2 208 91

159 220 38 1 0 22 159 call 2 2 1 192 8 91 208 80

123 49 99 0 208 172 252 123 208 143 0 0 0 144 80 209

80 139 19 3 49 7 0 208 172 248 123 49 73 0 208 172

248 123 208 143 0 0 0 144 80 209 80 139 19 3 49 7

0 208 172 252 123 49 47 0 208 201 12 0 123 208 172 252

123 208 172 248 123 221 3 208 91 159 220 38 1 0 22 159

call 4 3 1 192 12 91 208 80 123 49 7 0 208 143 4

53 1 128 123 208 139 80 208 91 159 220 38 1 0 4 )

'(simp-plus numberp plus + list 

))



(make-code 'difference-diff 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 80 22 159 carx 208 80 123 208 172 248 123 221

2 208 91 159 220 38 1 0 22 159 call 1 2 1 192 8

91 208 80 123 208 172 252 80 22 159 cdrx 22 159 carx 208 80

123 208 172 248 123 221 2 208 91 159 220 38 1 0 22 159

call 1 2 1 192 8 91 208 80 123 221 2 208 91 159 220

38 1 0 22 159 call 2 2 1 192 8 91 208 91 159 220

38 1 0 4 )

'(difference-diff diff simp-difference ))



(make-code 'simp-difference 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 123 221 107 208 91 159 220 38 1 0 22 159

call 1 1 1 208 80 107 209 107 143 4 53 1 128 18 3

49 40 0 192 4 91 208 172 248 123 221 107 208 91 159 220

38 1 0 22 159 call 1 1 1 208 80 107 209 107 143 4

53 1 128 18 3 49 0 0 209 139 143 4 53 1 128 18

3 49 35 0 208 172 252 123 208 172 248 123 221 2 208 91

159 220 38 1 0 22 159 call 2 2 1 192 8 91 208 80

123 49 243 0 208 172 252 123 208 143 0 0 0 144 80 209

80 139 19 3 49 43 0 208 201 12 0 123 208 172 248 123

208 143 255 255 255 144 123 221 3 208 91 159 220 38 1 0

22 159 call 4 3 1 192 12 91 208 80 123 49 181 0 208

172 248 123 208 143 0 0 0 144 80 209 80 139 19 3 49

7 0 208 172 252 123 49 155 0 208 172 248 123 221 107 208

91 159 220 38 1 0 22 159 call 1 1 1 208 80 107 209

139 143 4 53 1 128 18 3 49 71 0 208 201 20 0 123

208 172 252 123 208 172 248 123 208 143 255 255 255 144 123 221

2 208 91 159 220 38 1 0 22 159 call 6 2 1 192 8

91 208 80 123 221 3 208 91 159 220 38 1 0 22 159 call

4 3 1 192 12 91 208 80 123 49 47 0 208 201 28 0

123 208 172 252 123 208 172 248 123 221 3 208 91 159 220 38

1 0 22 159 call 4 3 1 192 12 91 208 80 123 49 7

0 208 143 4 53 1 128 123 208 139 80 208 91 159 220 38

1 0 4 )

'(simp-difference numberp difference * list 

+ times - ))



(make-code 'times-diff 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 80 22 159 carx 208 80 123 208 172 248 123 221

2 208 91 159 220 38 1 0 22 159 call 1 2 1 192 8

91 208 80 123 208 172 252 80 22 159 cdrx 22 159 carx 208 80

123 221 2 208 91 159 220 38 1 0 22 159 call 2 2 1

192 8 91 208 80 123 208 172 252 80 22 159 carx 208 80 123

208 172 252 80 22 159 cdrx 22 159 carx 208 80 123 208 172 248

123 221 2 208 91 159 220 38 1 0 22 159 call 1 2 1

192 8 91 208 80 123 221 2 208 91 159 220 38 1 0 22

159 call 2 2 1 192 8 91 208 80 123 221 2 208 91 159

220 38 1 0 22 159 call 3 2 1 192 8 91 208 91 159

220 38 1 0 4 )

'(times-diff diff simp-times simp-plus ))



(make-code 'simp-times 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 123 221 107 208 91 159 220 38 1 0 22 159

call 1 1 1 208 80 107 209 107 143 4 53 1 128 18 3

49 40 0 192 4 91 208 172 248 123 221 107 208 91 159 220

38 1 0 22 159 call 1 1 1 208 80 107 209 107 143 4

53 1 128 18 3 49 0 0 209 139 143 4 53 1 128 18

3 49 35 0 208 172 252 123 208 172 248 123 221 2 208 91

159 220 38 1 0 22 159 call 2 2 1 192 8 91 208 80

123 49 224 0 208 172 252 123 208 143 0 0 0 144 80 208

143 4 53 1 128 81 209 80 139 18 7 208 143 180 51 1

128 81 208 81 123 209 107 143 4 53 1 128 19 3 49 58

0 192 4 91 208 172 248 123 208 143 0 0 0 144 80 208

143 4 53 1 128 81 209 80 139 18 7 208 143 180 51 1

128 81 208 81 123 209 107 143 4 53 1 128 19 3 49 10

0 192 4 91 208 143 4 53 1 128 123 209 139 143 4 53

1 128 18 3 49 10 0 208 143 0 0 0 144 123 49 99

0 208 172 252 123 208 143 1 0 0 144 80 209 80 139 19

3 49 7 0 208 172 248 123 49 73 0 208 172 248 123 208

143 1 0 0 144 80 209 80 139 19 3 49 7 0 208 172

252 123 49 47 0 208 201 12 0 123 208 172 252 123 208 172

248 123 221 3 208 91 159 220 38 1 0 22 159 call 4 3

1 192 12 91 208 80 123 49 7 0 208 143 4 53 1 128

123 208 139 80 208 91 159 220 38 1 0 4 )

'(simp-times numberp times * list 

))



(make-code 'quotient 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 201 4 0 123 208 172 252 80 22 159 carx 208 80 123

208 201 8 0 123 208 172 252 80 22 159 cdrx 22 159 carx 208

80 123 208 143 255 255 255 144 123 221 3 208 91 159 220 38

1 0 22 159 call 3 3 1 192 12 91 208 80 123 221 3

208 91 159 220 38 1 0 22 159 call 3 3 1 192 12 91

208 80 123 208 172 248 123 221 2 208 91 159 220 38 1 0

22 159 call 4 2 1 192 8 91 208 91 159 220 38 1 0

4 )

'(quotient * ** list diff 

))



(make-code 'expt-diff 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 252 80 22 159 cdrx 22 159 carx 208 80 123 208 143

0 0 0 144 123 221 2 208 91 159 220 38 1 0 22 159

call 1 2 1 192 8 91 209 80 143 4 53 1 128 18 3

49 10 0 208 143 0 0 0 144 123 49 4 1 208 172 252

80 22 159 cdrx 22 159 carx 208 80 123 208 143 1 0 0 144

123 221 2 208 91 159 220 38 1 0 22 159 call 1 2 1

192 8 91 209 80 143 4 53 1 128 18 3 49 44 0 208

172 252 80 22 159 carx 208 80 123 208 172 248 123 221 2 208

91 159 220 38 1 0 22 159 call 2 2 1 192 8 91 208

80 123 49 157 0 208 201 12 0 123 208 172 252 80 22 159

carx 208 80 123 208 172 252 80 22 159 carx 208 80 123 208 172

252 80 22 159 cdrx 22 159 carx 208 80 123 221 107 208 91 159

220 38 1 0 22 159 call 4 1 1 208 80 107 221 2 208

91 159 220 38 1 0 22 159 call 5 2 1 192 8 91 208

80 123 221 3 208 91 159 220 38 1 0 22 159 call 6 3

1 192 12 91 208 80 123 208 172 248 123 221 2 208 91 159

220 38 1 0 22 159 call 2 2 1 192 8 91 208 80 123

49 7 0 208 143 4 53 1 128 123 208 139 80 208 91 159

220 38 1 0 4 )

'(expt-diff = diff * sub1 

simp-expt list ))



(make-code 'simp-expt 'expr 2 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 8

92 208 172 248 123 221 107 208 91 159 220 38 1 0 22 159

call 1 1 1 208 80 107 209 139 143 4 53 1 128 18 3

49 10 0 208 143 1 0 0 144 123 49 98 0 208 172 248

123 208 143 1 0 0 144 123 221 2 208 91 159 220 38 1

0 22 159 call 2 2 1 192 8 91 209 80 143 4 53 1

128 18 3 49 7 0 208 172 252 123 49 47 0 208 201 12

0 123 208 172 252 123 208 172 248 123 221 3 208 91 159 220

38 1 0 22 159 call 4 3 1 192 12 91 208 80 123 49

7 0 208 143 4 53 1 128 123 208 139 80 208 91 159 220

38 1 0 4 )

'(simp-expt zerop = ** list 

))



(defmacro benchmark (n &rest body)

   (cons

      'let

      (cons

         (cons

            (cons 'time1 (list 'nil))

            (cons

               (cons 'time2 (list 'nil))

               (cons

                  (cons 'time3 (list 'nil))

                  (cons

                     (cons 'gc (list 'nil))

                     (list (cons 'run (list 'nil)))))))

         (cons

            (cons 'print (list (cons 'quote (list body))))

            (cons

               (list 'gc)

               (cons

                  (cons 'sstatus (cons 'gctime (list '0)))

                  (cons

                     (cons 'setq (cons 'time1 (list (list 'runtime))))

                     (cons

                        (cons

                           'do

                           (cons

                              (list

                                 (cons

                                    'i

                                    (cons '1 (list (cons '1+ (list 'i))))))

                              (cons

                                 (list (cons '> (cons 'i (list n))))

                                 (append body nil))))

                        (cons

                           (cons

                              'setq

                              (cons 'time2 (list (list 'runtime))))

                           (cons

                              (cons

                                 'do

                                 (cons

                                    (list

                                       (cons

                                          'i

                                          (cons

                                             '1

                                             (list (cons '1+ (list 'i))))))

                                    (list

                                       (list (cons '> (cons 'i (list n)))))))

                              (cons

                                 (cons

                                    'setq

                                    (cons 'time3 (list (list 'runtime))))

                                 (cons

                                    (cons

                                       'setq

                                       (cons

                                          'gc

                                          (list

                                             (cons 'status (list 'gctime)))))

                                    (cons

                                       (cons

                                          'setq

                                          (cons

                                             'run

                                             (list

                                                (cons

                                                   'difference

                                                   (cons

                                                      (cons

                                                         'plus

                                                         (cons

                                                            'time2

                                                            (list 'time2)))

                                                      (cons

                                                         'time1

                                                         (list 'time3)))))))

                                       (cons

                                          (list 'terpri)

                                          (cons

                                             (cons

                                                'princ1

                                                (list '"Total = "))

                                             (cons

                                                (cons 'princ1 (list 'run))

                                                (cons

                                                   (cons

                                                      'princ1

                                                      (list

                                                         '"us,  Runtime = "))

                                                   (cons

                                                      (cons

                                                         'princ1

                                                         (list

                                                            (cons

                                                               'difference

                                                               (cons

                                                                  'run

                                                                  (list

                                                                     'gc)))))

                                                      (cons

                                                         (cons

                                                            'princ1

                                                            (list

                                                               '"us, GC = "))

                                                         (cons

                                                            (cons

                                                               'princ1

                                                               (list 'gc))

                                                            (cons

                                                               (cons

                                                                  'princ1

                                                                  (list

                                                                     '"us, for "))

                                                               (cons

                                                                  (cons

                                                                     'princ1

                                                                     (list

                                                                        n))

                                                                  (cons

                                                                     (cons

                                                                        'princ1

                                                                        (list

                                                                           '" iterations."))

                                                                     (list

                                                                        (list

                                                                           'terpri)))))))))))))))))))))))))

(make-code 'bench111 'expr 1 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 4

92 208 172 252 123 208 201 4 0 123 208 201 8 0 123 221

2 208 91 159 220 38 1 0 22 159 call 3 2 1 192 8

91 208 80 123 208 201 8 0 123 221 2 208 91 159 220 38

1 0 22 159 call 3 2 1 192 8 91 208 80 123 221 2

208 91 159 220 38 1 0 22 159 call 4 2 1 192 8 91

208 91 159 220 38 1 0 4 )

'(bench111 (+ (+ (+ (** x 3) (* 3 (** x 2))) (* 3 x)) 1) x diff benchmark 

))



(make-code 'bench112 'expr 1 

'(192 14 208 175 243 89 208 159 220 38 1 0 91 158 171 4

92 208 172 252 123 208 201 4 0 123 208 201 8 0 123 221

2 208 91 159 220 38 1 0 22 159 call 3 2 1 192 8

91 208 80 123 208 201 8 0 123 221 2 208 91 159 220 38

1 0 22 159 call 3 2 1 192 8 91 208 80 123 208 201

8 0 123 221 2 208 91 159 220 38 1 0 22 159 call 3

2 1 192 8 91 208 80 123 208 201 8 0 123 221 2 208

91 159 220 38 1 0 22 159 call 3 2 1 192 8 91 208

80 123 208 201 8 0 123 221 2 208 91 159 220 38 1 0

22 159 call 3 2 1 192 8 91 208 80 123 208 201 8 0

123 221 2 208 91 159 220 38 1 0 22 159 call 3 2 1

192 8 91 208 80 123 221 2 208 91 159 220 38 1 0 22

159 call 4 2 1 192 8 91 208 91 159 220 38 1 0 4

)

'(bench112 (** (- x 1) 6) x diff benchmark 

))



