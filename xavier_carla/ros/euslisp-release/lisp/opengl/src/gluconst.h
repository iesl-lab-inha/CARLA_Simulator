static pointer (*ftab[1])();

#define QUOTE_STRINGS_SIZE 85
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    ":gluconst",
    "provide",
    "\"GL\"",
    "\"GL\"",
    "*package*",
    "\"no such package\"",
    "(glu_invalid_enum glu_invalid_value glu_out_of_memory glu_true glu_false glu_smooth glu_flat glu_none glu_point glu_line glu_fill glu_silhouette glu_outside glu_inside glu_begin glu_vertex glu_end glu_error glu_edge_flag glu_cw glu_ccw glu_interior glu_exterior glu_unknown glu_tess_error1 glu_tess_error2 glu_tess_error3 glu_tess_error4 glu_tess_error5 glu_tess_error6 glu_tess_error7 glu_tess_error8 glu_auto_load_matrix glu_culling glu_sampling_tolerance glu_display_mode glu_map1_trim_2 glu_map1_trim_3 glu_outline_polygon glu_outline_patch glu_nurbs_error1 glu_nurbs_error2 glu_nurbs_error3 glu_nurbs_error4 glu_nurbs_error5 glu_nurbs_error6 glu_nurbs_error7 glu_nurbs_error8 glu_nurbs_error9 glu_nurbs_error10 glu_nurbs_error11 glu_nurbs_error12 glu_nurbs_error13 glu_nurbs_error14 glu_nurbs_error15 glu_nurbs_error16 glu_nurbs_error17 glu_nurbs_error18 glu_nurbs_error19 glu_nurbs_error20 glu_nurbs_error21 glu_nurbs_error22 glu_nurbs_error23 glu_nurbs_error24 glu_nurbs_error25 glu_nurbs_error26 glu_nurbs_error27 glu_nurbs_error28 glu_nurbs_error29 glu_nurbs_error30 glu_nurbs_error31 glu_nurbs_error32 glu_nurbs_error33 glu_nurbs_error34 glu_nurbs_error35 glu_nurbs_error36 glu_nurbs_error37)",
    "glu_invalid_enum",
    ":constant",
    "glu_invalid_value",
    "glu_out_of_memory",
    "glu_true",
    "glu_false",
    "glu_smooth",
    "glu_flat",
    "glu_none",
    "glu_point",
    "glu_line",
    "glu_fill",
    "glu_silhouette",
    "glu_outside",
    "glu_inside",
    "glu_begin",
    "glu_vertex",
    "glu_end",
    "glu_error",
    "glu_edge_flag",
    "glu_cw",
    "glu_ccw",
    "glu_interior",
    "glu_exterior",
    "glu_unknown",
    "glu_tess_error1",
    "glu_tess_error2",
    "glu_tess_error3",
    "glu_tess_error4",
    "glu_tess_error5",
    "glu_tess_error6",
    "glu_tess_error7",
    "glu_tess_error8",
    "glu_auto_load_matrix",
    "glu_culling",
    "glu_sampling_tolerance",
    "glu_display_mode",
    "glu_map1_trim_2",
    "glu_map1_trim_3",
    "glu_outline_polygon",
    "glu_outline_patch",
    "glu_nurbs_error1",
    "glu_nurbs_error2",
    "glu_nurbs_error3",
    "glu_nurbs_error4",
    "glu_nurbs_error5",
    "glu_nurbs_error6",
    "glu_nurbs_error7",
    "glu_nurbs_error8",
    "glu_nurbs_error9",
    "glu_nurbs_error10",
    "glu_nurbs_error11",
    "glu_nurbs_error12",
    "glu_nurbs_error13",
    "glu_nurbs_error14",
    "glu_nurbs_error15",
    "glu_nurbs_error16",
    "glu_nurbs_error17",
    "glu_nurbs_error18",
    "glu_nurbs_error19",
    "glu_nurbs_error20",
    "glu_nurbs_error21",
    "glu_nurbs_error22",
    "glu_nurbs_error23",
    "glu_nurbs_error24",
    "glu_nurbs_error25",
    "glu_nurbs_error26",
    "glu_nurbs_error27",
    "glu_nurbs_error28",
    "glu_nurbs_error29",
    "glu_nurbs_error30",
    "glu_nurbs_error31",
    "glu_nurbs_error32",
    "glu_nurbs_error33",
    "glu_nurbs_error34",
    "glu_nurbs_error35",
    "glu_nurbs_error36",
    "glu_nurbs_error37",
  };
