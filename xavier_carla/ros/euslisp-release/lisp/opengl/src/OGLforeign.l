;
;
;  OGLforeign.l OpenGL function declarations for SunOS4 with bug on .so
;

; glforeign.l

(defforeign glAccum GL "glAccum" (:integer :float) :integer)
(defforeign glAlphaFunc GL "glAlphaFunc" (:integer :float) :integer)
(defforeign glBegin GL "glBegin" (:integer) :integer)
(defforeign glBitmap GL "glBitmap" (:integer :integer :float :float :float :float :string) :integer)
(defforeign glBlendFunc GL "glBlendFunc" (:integer :integer) :integer)
(defforeign glCallList GL "glCallList" (:integer) :integer)
(defforeign glCallLists GL "glCallLists" (:integer :integer :string) :integer)
(defforeign glClear GL "glClear" (:integer) :integer)
(defforeign glClearAccum GL "glClearAccum" (:float :float :float :float) :integer)
(defforeign glClearColor GL "glClearColor" (:float :float :float :float) :integer)
(defforeign glClearDepth GL "glClearDepth" (:float) :integer)
(defforeign glClearIndex GL "glClearIndex" (:float) :integer)
(defforeign glClearStencil GL "glClearStencil" (:integer) :integer)
(defforeign glClipPlane GL "glClipPlane" (:integer :string) :integer)
(defforeign glColor3b GL "glColor3b" (:integer :integer :integer) :integer)
(defforeign glColor3bv GL "glColor3bv" (:string) :integer)
(defforeign glColor3d GL "glColor3d" (:float :float :float) :integer)
(defforeign glColor3dv GL "glColor3dv" (:string) :integer)
(defforeign glColor3f GL "glColor3f" (:float :float :float) :integer)
(defforeign glColor3fv GL "glColor3fv" (:string) :integer)
(defforeign glColor3i GL "glColor3i" (:integer :integer :integer) :integer)
(defforeign glColor3iv GL "glColor3iv" (:string) :integer)
(defforeign glColor3s GL "glColor3s" (:integer :integer :integer) :integer)
(defforeign glColor3sv GL "glColor3sv" (:string) :integer)
(defforeign glColor3ub GL "glColor3ub" (:integer :integer :integer) :integer)
(defforeign glColor3ubv GL "glColor3ubv" (:string) :integer)
(defforeign glColor3ui GL "glColor3ui" (:integer :integer :integer) :integer)
(defforeign glColor3uiv GL "glColor3uiv" (:string) :integer)
(defforeign glColor3us GL "glColor3us" (:integer :integer :integer) :integer)
(defforeign glColor3usv GL "glColor3usv" (:string) :integer)
(defforeign glColor4b GL "glColor4b" (:integer :integer :integer :integer) :integer)
(defforeign glColor4bv GL "glColor4bv" (:string) :integer)
(defforeign glColor4d GL "glColor4d" (:float :float :float :float) :integer)
(defforeign glColor4dv GL "glColor4dv" (:string) :integer)
(defforeign glColor4f GL "glColor4f" (:float :float :float :float) :integer)
(defforeign glColor4fv GL "glColor4fv" (:string) :integer)
(defforeign glColor4i GL "glColor4i" (:integer :integer :integer :integer) :integer)
(defforeign glColor4iv GL "glColor4iv" (:string) :integer)
(defforeign glColor4s GL "glColor4s" (:integer :integer :integer) :integer)
(defforeign glColor4sv GL "glColor4sv" (:string) :integer)
(defforeign glColor4ub GL "glColor4ub" (:integer :integer :integer) :integer)
(defforeign glColor4ubv GL "glColor4ubv" (:string) :integer)
(defforeign glColor4ui GL "glColor4ui" (:integer :integer :integer :integer) :integer)
(defforeign glColor4uiv GL "glColor4uiv" (:string) :integer)
(defforeign glColor4us GL "glColor4us" (:integer :integer :integer :integer) :integer)
(defforeign glColor4usv GL "glColor4usv" (:string) :integer)
(defforeign glColorMask GL "glColorMask" (:integer :integer :integer :integer) :integer)
(defforeign glColorMaterial GL "glColorMaterial" (:integer :integer) :integer)
(defforeign glCopyPixels GL "glCopyPixels" (:integer :integer :integer :integer) :integer)
(defforeign glCullFace GL "glCullFace" (:integer) :integer)
(defforeign glDeleteLists GL "glDeleteLists" (:integer :integer) :integer)
(defforeign glDepthFunc GL "glDepthFunc" (:integer) :integer)
(defforeign glDepthMask GL "glDepthMask" (:integer) :integer)
(defforeign glDepthRange GL "glDepthRange" (:float :float) :integer)
(defforeign glDisable GL "glDisable" (:integer) :integer)
(defforeign glDrawBuffer GL "glDrawBuffer" (:integer) :integer)
(defforeign glDrawPixels GL "glDrawPixels" (:integer :integer :integer :integer :string) :integer)
(defforeign glEdgeFlag GL "glEdgeFlag" (:integer) :integer)
(defforeign glEdgeFlagv GL "glEdgeFlagv" (:string) :integer)
(defforeign glEnable GL "glEnable" (:integer) :integer)
(defforeign glEnd GL "glEnd" () :integer)
(defforeign glEndList GL "glEndList" () :integer)
(defforeign glEvalCoord1d GL "glEvalCoord1d" (:float) :integer)
(defforeign glEvalCoord1dv GL "glEvalCoord1dv" (:string) :integer)
(defforeign glEvalCoord1f GL "glEvalCoord1f" (:float) :integer)
(defforeign glEvalCoord1fv GL "glEvalCoord1fv" (:string) :integer)
(defforeign glEvalCoord2d GL "glEvalCoord2d" (:float :float) :integer)
(defforeign glEvalCoord2dv GL "glEvalCoord2dv" (:string) :integer)
(defforeign glEvalCoord2f GL "glEvalCoord2f" (:float :float) :integer)
(defforeign glEvalCoord2fv GL "glEvalCoord2fv" (:string) :integer)
(defforeign glEvalMesh1 GL "glEvalMesh1" (:integer :integer :integer) :integer)
(defforeign glEvalMesh2 GL "glEvalMesh2" (:integer :integer :integer) :integer)
(defforeign glEvalPoint1 GL "glEvalPoint1" (:integer) :integer)
(defforeign glEvalPoint2 GL "glEvalPoint2" (:integer :integer) :integer)
(defforeign glFeedbackBuffer GL "glFeedbackBuffer" (:integer :integer :string) :integer)
(defforeign glFinish GL "glFinish" () :integer)
(defforeign glFlush GL "glFlush" () :integer)
(defforeign glFogf GL "glFogf" (:integer :float) :integer)
(defforeign glFogfv GL "glFogfv" (:integer :string) :integer)
(defforeign glFogi GL "glFogi" (:integer :integer) :integer)
(defforeign glFogiv GL "glFogiv" (:integer :string) :integer)
(defforeign glFrontFace GL "glFrontFace" (:integer) :integer)
(defforeign glFrustum GL "glFrustum" (:float :float :float :float :float :float) :integer)
(defforeign glGenLists GL "glGenLists" (:integer) :integer)
(defforeign glGetBooleanv GL "glGetBooleanv" (:integer :string) :integer)
(defforeign glGetClipPlane GL "glGetClipPlane" (:integer :string) :integer)
(defforeign glGetDoublev GL "glGetDoublev" (:integer :string) :integer)
(defforeign glGetError GL "glGetError" () :integer)
(defforeign glGetFloatv GL "glGetFloatv" (:integer :string) :integer)
(defforeign glGetIntegerv GL "glGetIntegerv" (:integer :string) :integer)
(defforeign glGetLightfv GL "glGetLightfv" (:integer :integer :string) :integer)
(defforeign glGetLightiv GL "glGetLightiv" (:integer :integer :string) :integer)
(defforeign glGetMapdv GL "glGetMapdv" (:integer :integer :string) :integer)
(defforeign glGetMapfv GL "glGetMapfv" (:integer :integer :string) :integer)
(defforeign glGetMapiv GL "glGetMapiv" (:integer :integer :string) :integer)
(defforeign glGetMaterialfv GL "glGetMaterialfv" (:integer :integer :string) :integer)
(defforeign glGetMaterialiv GL "glGetMaterialiv" (:integer :integer :string) :integer)
(defforeign glGetPixelMapfv GL "glGetPixelMapfv" (:integer :integer :string) :integer)
(defforeign glGetPixelMapuiv GL "glGetPixelMapuiv" (:integer :string) :integer)
(defforeign glGetPixelMapusv GL "glGetPixelMapusv" (:integer :string) :integer)
(defforeign glGetPolygonStipple GL "glGetPolygonStipple" (:string) :integer)
(defforeign glGetString GL "glGetString" (:integer) :integer)
(defforeign glGetTexEnvfv GL "glGetTexEnvfv" (:integer :integer :string) :integer)
(defforeign glGetTexEnviv GL "glGetTexEnviv" (:integer :integer :string) :integer)
(defforeign glGetTexGendv GL "glGetTexGendv" (:integer :integer :string) :integer)
(defforeign glGetTexGenfv GL "glGetTexGenfv" (:integer :integer :string) :integer)
(defforeign glGetTexGeniv GL "glGetTexGeniv" (:integer :integer :string) :integer)
(defforeign glGetTexImage GL "glGetTexImage" (:integer :integer :float :integer :string) :integer)
(defforeign glGetTexLevelParameterfv GL "glGetTexLevelParameterfv" (:integer :integer :integer :string) :integer)
(defforeign glGetTexLevelParameteriv GL "glGetTexLevelParameteriv" (:integer :integer :integer :string) :integer)
(defforeign glGetTexParameterfv GL "glGetTexParameterfv" (:integer :integer :string) :integer)
(defforeign glGetTexParameteriv GL "glGetTexParameteriv" (:integer :integer :string) :integer)
(defforeign glHint GL "glHint" (:integer :integer) :integer)
(defforeign glIndexMask GL "glIndexMask" (:integer) :integer)
(defforeign glIndexd GL "glIndexd" (:float) :integer)
(defforeign glIndexdv GL "glIndexdv" (:string) :integer)
(defforeign glIndexf GL "glIndexf" (:float) :integer)
(defforeign glIndexfv GL "glIndexfv" (:string) :integer)
(defforeign glIndexi GL "glIndexi" (:integer) :integer)
(defforeign glIndexiv GL "glIndexiv" (:string) :integer)
(defforeign glIndexs GL "glIndexs" (:integer) :integer)
(defforeign glIndexsv GL "glIndexsv" (:string) :integer)
(defforeign glInitNames GL "glInitNames" () :integer)
(defforeign glIsEnabled GL "glIsEnabled" (:integer) :integer)
(defforeign glIsList GL "glIsList" (:integer) :integer)
(defforeign glLightModelf GL "glLightModelf" (:integer :float) :integer)
(defforeign glLightModelfv GL "glLightModelfv" (:integer :string) :integer)
(defforeign glLightModeli GL "glLightModeli" (:integer :integer) :integer)
(defforeign glLightModeliv GL "glLightModeliv" (:integer :string) :integer)
(defforeign glLightf GL "glLightf" (:integer :integer :float) :integer)
(defforeign glLightfv GL "glLightfv" (:integer :integer :string) :integer)
(defforeign glLighti GL "glLighti" (:integer :integer :integer) :integer)
(defforeign glLightiv GL "glLightiv" (:integer :integer :string) :integer)
(defforeign glLineStipple GL "glLineStipple" (:integer :integer) :integer)
(defforeign glLineWidth GL "glLineWidth" (:float) :integer)
(defforeign glListBase GL "glListBase" (:integer) :integer)
(defforeign glLoadIdentity GL "glLoadIdentity" () :integer)
(defforeign glLoadMatrixd GL "glLoadMatrixd" (:string) :integer)
(defforeign glLoadMatrixf GL "glLoadMatrixf" (:string) :integer)
(defforeign glLoadName GL "glLoadName" (:integer) :integer)
(defforeign glLogicOp GL "glLogicOp" (:integer) :integer)
(defforeign glMap1d GL "glMap1d" (:integer :float :float :integer :integer :string) :integer)
(defforeign glMap1f GL "glMap1f" (:integer :float :float :integer :integer :string) :integer)
(defforeign glMap2d GL "glMap2d" (:integer :float :float :integer :integer :float :float :integer :integer :string) :integer)
(defforeign glMap2f GL "glMap2f" (:integer :float :float :integer :integer :float :float :integer :integer :string) :integer)
(defforeign glMapGrid1d GL "glMapGrid1d" (:integer :float :float) :integer)
(defforeign glMapGrid1f GL "glMapGrid1f" (:integer :float :float) :integer)
(defforeign glMapGrid2d GL "glMapGrid2d" (:integer :float :float :integer :float :float) :integer)
(defforeign glMapGrid2f GL "glMapGrid2f" (:integer :float :float :integer :float :float) :integer)
(defforeign glMaterialf GL "glMaterialf" (:integer :integer :float) :integer)
(defforeign glMaterialfv GL "glMaterialfv" (:integer :integer :string) :integer)
(defforeign glMateriali GL "glMateriali" (:integer :integer :integer) :integer)
(defforeign glMaterialiv GL "glMaterialiv" (:integer :integer :string) :integer)
(defforeign glMatrixMode GL "glMatrixMode" (:integer) :integer)
(defforeign glMultMatrixd GL "glMultMatrixd" (:string) :integer)
(defforeign glMultMatrixf GL "glMultMatrixf" (:string) :integer)
(defforeign glNewList GL "glNewList" (:integer :integer) :integer)
(defforeign glNormal3b GL "glNormal3b" (:integer :integer :integer) :integer)
(defforeign glNormal3bv GL "glNormal3bv" (:string) :integer)
(defforeign glNormal3d GL "glNormal3d" (:float :float :float) :integer)
(defforeign glNormal3dv GL "glNormal3dv" (:string) :integer)
(defforeign glNormal3f GL "glNormal3f" (:float :float :float) :integer)
(defforeign glNormal3fv GL "glNormal3fv" (:string) :integer)
(defforeign glNormal3i GL "glNormal3i" (:integer :integer :integer) :integer)
(defforeign glNormal3iv GL "glNormal3iv" (:string) :integer)
(defforeign glNormal3s GL "glNormal3s" (:integer :integer :integer) :integer)
(defforeign glNormal3sv GL "glNormal3sv" (:string) :integer)
(defforeign glOrtho GL "glOrtho" (:float :float :float :float :float :float) :integer)
(defforeign glPassThrough GL "glPassThrough" (:integer) :integer)
(defforeign glPixelMapfv GL "glPixelMapfv" (:integer :integer :string) :integer)
(defforeign glPixelMapuiv GL "glPixelMapuiv" (:integer :integer :string) :integer)
(defforeign glPixelMapusv GL "glPixelMapusv" (:integer :integer :string) :integer)
(defforeign glPixelStoref GL "glPixelStoref" (:integer :float) :integer)
(defforeign glPixelStorei GL "glPixelStorei" (:integer :integer) :integer)
(defforeign glPixelTransferf GL "glPixelTransferf" (:integer :float) :integer)
(defforeign glPixelTransferi GL "glPixelTransferi" (:integer :integer) :integer)
(defforeign glPixelZoom GL "glPixelZoom" (:float :float) :integer)
(defforeign glPointSize GL "glPointSize" (:float) :integer)
(defforeign glPolygonMode GL "glPolygonMode" (:integer :integer) :integer)
(defforeign glPolygonStipple GL "glPolygonStipple" (:string) :integer)
(defforeign glPopAttrib GL "glPopAttrib" () :integer)
(defforeign glPopMatrix GL "glPopMatrix" () :integer)
(defforeign glPopName GL "glPopName" () :integer)
(defforeign glPushAttrib GL "glPushAttrib" (:integer) :integer)
(defforeign glPushMatrix GL "glPushMatrix" () :integer)
(defforeign glPushName GL "glPushName" (:integer) :integer)
(defforeign glRasterPos2d GL "glRasterPos2d" (:float :float) :integer)
(defforeign glRasterPos2dv GL "glRasterPos2dv" (:string) :integer)
(defforeign glRasterPos2f GL "glRasterPos2f" (:float :float) :integer)
(defforeign glRasterPos2fv GL "glRasterPos2fv" (:string) :integer)
(defforeign glRasterPos2i GL "glRasterPos2i" (:integer :integer) :integer)
(defforeign glRasterPos2iv GL "glRasterPos2iv" (:string) :integer)
(defforeign glRasterPos2s GL "glRasterPos2s" (:integer :integer) :integer)
(defforeign glRasterPos2sv GL "glRasterPos2sv" (:string) :integer)
(defforeign glRasterPos3d GL "glRasterPos3d" (:float :float :float) :integer)
(defforeign glRasterPos3dv GL "glRasterPos3dv" (:string) :integer)
(defforeign glRasterPos3f GL "glRasterPos3f" (:float :float :float) :integer)
(defforeign glRasterPos3fv GL "glRasterPos3fv" (:string) :integer)
(defforeign glRasterPos3i GL "glRasterPos3i" (:integer :integer :integer) :integer)
(defforeign glRasterPos3iv GL "glRasterPos3iv" (:string) :integer)
(defforeign glRasterPos3s GL "glRasterPos3s" (:integer :integer :integer) :integer)
(defforeign glRasterPos3sv GL "glRasterPos3sv" (:string) :integer)
(defforeign glRasterPos4d GL "glRasterPos4d" (:float :float :float :float) :integer)
(defforeign glRasterPos4dv GL "glRasterPos4dv" (:string) :integer)
(defforeign glRasterPos4f GL "glRasterPos4f" (:float :float :float :float) :integer)
(defforeign glRasterPos4fv GL "glRasterPos4fv" (:string) :integer)
(defforeign glRasterPos4i GL "glRasterPos4i" (:integer :integer :integer :integer) :integer)
(defforeign glRasterPos4iv GL "glRasterPos4iv" (:string) :integer)
(defforeign glRasterPos4s GL "glRasterPos4s" (:integer :integer :integer :integer) :integer)
(defforeign glRasterPos4sv GL "glRasterPos4sv" (:string) :integer)
(defforeign glReadBuffer GL "glReadBuffer" (:integer) :integer)
(defforeign glReadPixels GL "glReadPixels" (:integer :integer :integer :integer :integer :integer :string) :integer)
(defforeign glRectd GL "glRectd" (:float :float :float :float) :integer)
(defforeign glRectdv GL "glRectdv" (:string :string) :integer)
(defforeign glRectf GL "glRectf" (:float :float :float :float) :integer)
(defforeign glRectfv GL "glRectfv" (:string :string) :integer)
(defforeign glRecti GL "glRecti" (:integer :integer :integer :integer) :integer)
(defforeign glRectiv GL "glRectiv" (:string :string) :integer)
(defforeign glRects GL "glRects" (:integer :integer :integer :integer) :integer)
(defforeign glRectsv GL "glRectsv" (:string :string) :integer)
(defforeign glRenderMode GL "glRenderMode" (:integer) :integer)
(defforeign glRotated GL "glRotated" (:float :float :float :float) :integer)
(defforeign glRotatef GL "glRotatef" (:float :float :float :float) :integer)
(defforeign glScaled GL "glScaled" (:float :float :float) :integer)
(defforeign glScalef GL "glScalef" (:float :float :float) :integer)
(defforeign glScissor GL "glScissor" (:integer :integer :integer :integer) :integer)
(defforeign glSelectBuffer GL "glSelectBuffer" (:integer :string) :integer)
(defforeign glShadeModel GL "glShadeModel" (:integer) :integer)
(defforeign glStencilFunc GL "glStencilFunc" (:integer :integer :integer) :integer)
(defforeign glStencilMask GL "glStencilMask" (:integer) :integer)
(defforeign glStencilOp GL "glStencilOp" (:integer :integer :integer) :integer)
(defforeign glTexCoord1d GL "glTexCoord1d" (:float) :integer)
(defforeign glTexCoord1dv GL "glTexCoord1dv" (:string) :integer)
(defforeign glTexCoord1f GL "glTexCoord1f" (:float) :integer)
(defforeign glTexCoord1fv GL "glTexCoord1fv" (:string) :integer)
(defforeign glTexCoord1i GL "glTexCoord1i" (:integer) :integer)
(defforeign glTexCoord1iv GL "glTexCoord1iv" (:string) :integer)
(defforeign glTexCoord1s GL "glTexCoord1s" (:integer) :integer)
(defforeign glTexCoord1sv GL "glTexCoord1sv" (:string) :integer)
(defforeign glTexCoord2d GL "glTexCoord2d" (:float :float) :integer)
(defforeign glTexCoord2dv GL "glTexCoord2dv" (:string) :integer)
(defforeign glTexCoord2f GL "glTexCoord2f" (:float :float) :integer)
(defforeign glTexCoord2fv GL "glTexCoord2fv" (:string) :integer)
(defforeign glTexCoord2i GL "glTexCoord2i" (:integer :integer) :integer)
(defforeign glTexCoord2iv GL "glTexCoord2iv" (:string) :integer)
(defforeign glTexCoord2s GL "glTexCoord2s" (:integer :integer) :integer)
(defforeign glTexCoord2sv GL "glTexCoord2sv" (:string) :integer)
(defforeign glTexCoord3d GL "glTexCoord3d" (:float :float :float) :integer)
(defforeign glTexCoord3dv GL "glTexCoord3dv" (:string) :integer)
(defforeign glTexCoord3f GL "glTexCoord3f" (:float :float :float) :integer)
(defforeign glTexCoord3fv GL "glTexCoord3fv" (:string) :integer)
(defforeign glTexCoord3i GL "glTexCoord3i" (:integer :integer :integer) :integer)
(defforeign glTexCoord3iv GL "glTexCoord3iv" (:string) :integer)
(defforeign glTexCoord3s GL "glTexCoord3s" (:integer :integer :integer) :integer)
(defforeign glTexCoord3sv GL "glTexCoord3sv" (:string) :integer)
(defforeign glTexCoord4d GL "glTexCoord4d" (:float :float :float :float) :integer)
(defforeign glTexCoord4dv GL "glTexCoord4dv" (:string) :integer)
(defforeign glTexCoord4f GL "glTexCoord4f" (:float :float :float :float) :integer)
(defforeign glTexCoord4fv GL "glTexCoord4fv" (:string) :integer)
(defforeign glTexCoord4i GL "glTexCoord4i" (:integer :integer :integer :integer) :integer)
(defforeign glTexCoord4iv GL "glTexCoord4iv" (:string) :integer)
(defforeign glTexCoord4s GL "glTexCoord4s" (:integer :integer :integer :integer) :integer)
(defforeign glTexCoord4sv GL "glTexCoord4sv" (:string) :integer)
(defforeign glTexEnvf GL "glTexEnvf" (:integer :integer :float) :integer)
(defforeign glTexEnvfv GL "glTexEnvfv" (:integer :integer :string) :integer)
(defforeign glTexEnvi GL "glTexEnvi" (:integer :integer :integer) :integer)
(defforeign glTexEnviv GL "glTexEnviv" (:integer :integer :string) :integer)
(defforeign glTexGend GL "glTexGend" (:integer :integer :float) :integer)
(defforeign glTexGendv GL "glTexGendv" (:integer :integer :string) :integer)
(defforeign glTexGenf GL "glTexGenf" (:integer :integer :float) :integer)
(defforeign glTexGenfv GL "glTexGenfv" (:integer :integer :string) :integer)
(defforeign glTexGeni GL "glTexGeni" (:integer :integer :integer) :integer)
(defforeign glTexGeniv GL "glTexGeniv" (:integer :integer :string) :integer)
(defforeign glTexImage1D GL "glTexImage1D" (:integer :integer :integer :integer :integer :integer :integer :string) :integer)
(defforeign glTexImage2D GL "glTexImage2D" (:integer :integer :integer :integer :integer :integer :integer :integer :string) :integer)
(defforeign glTexParameterf GL "glTexParameterf" (:integer :integer :float) :integer)
(defforeign glTexParameterfv GL "glTexParameterfv" (:integer :integer :string) :integer)
(defforeign glTexParameteri GL "glTexParameteri" (:integer :integer :integer) :integer)
(defforeign glTexParameteriv GL "glTexParameteriv" (:integer :integer :string) :integer)
(defforeign glTranslated GL "glTranslated" (:float :float :float) :integer)
(defforeign glTranslatef GL "glTranslatef" (:float :float :float) :integer)
(defforeign glVertex2d GL "glVertex2d" (:float :float) :integer)
(defforeign glVertex2dv GL "glVertex2dv" (:string) :integer)
(defforeign glVertex2f GL "glVertex2f" (:float :float) :integer)
(defforeign glVertex2fv GL "glVertex2fv" (:string) :integer)
(defforeign glVertex2i GL "glVertex2i" (:integer :integer) :integer)
(defforeign glVertex2iv GL "glVertex2iv" (:string) :integer)
(defforeign glVertex2s GL "glVertex2s" (:integer :integer) :integer)
(defforeign glVertex2sv GL "glVertex2sv" (:string) :integer)
(defforeign glVertex3d GL "glVertex3d" (:float :float :float) :integer)
(defforeign glVertex3dv GL "glVertex3dv" (:string) :integer)
(defforeign glVertex3f GL "glVertex3f" (:float :float :float) :integer)
(defforeign glVertex3fv GL "glVertex3fv" (:string) :integer)
(defforeign glVertex3i GL "glVertex3i" (:integer :integer :integer) :integer)
(defforeign glVertex3iv GL "glVertex3iv" (:string) :integer)
(defforeign glVertex3s GL "glVertex3s" (:integer :integer :integer) :integer)
(defforeign glVertex3sv GL "glVertex3sv" (:string) :integer)
(defforeign glVertex4d GL "glVertex4d" (:float :float :float :float) :integer)
(defforeign glVertex4dv GL "glVertex4dv" (:string) :integer)
(defforeign glVertex4f GL "glVertex4f" (:float :float :float :float) :integer)
(defforeign glVertex4fv GL "glVertex4fv" (:string) :integer)
(defforeign glVertex4i GL "glVertex4i" (:integer :integer :integer :integer) :integer)
(defforeign glVertex4iv GL "glVertex4iv" (:string) :integer)
(defforeign glVertex4s GL "glVertex4s" (:integer :integer :integer :integer) :integer)
(defforeign glVertex4sv GL "glVertex4sv" (:string) :integer)
(defforeign glViewport GL "glViewport" (:integer :integer :integer :integer) :integer)

; gluforeign.l

(defforeign gluErrorString GLU "gluErrorString" (:integer) :integer)

(defforeign gluOrtho2D GLU "gluOrtho2D" (:float :float :float :float) :integer)
(defforeign gluPerspective GLU "gluPerspective" (:float :float :float :float) :integer)
(defforeign gluPickMatrix GLU "gluPickMatrix" (:float :float :float :float :string) :integer)
(defforeign gluLookAt GLU "gluLookAt" (:float :float :float :float :float :float :float :float :float) :integer)
(defforeign gluProject GLU "gluProject" (:float :float :float :string :string :string :string :string :string) :integer)
(defforeign gluUnProject GLU "gluUnProject" (:float :float :float :string :string :string :string :string :string) :integer)

(defforeign gluScaleImage GLU "gluScaleImage" (:integer :integer :integer :integer :string :integer :integer :integer :string) :integer)

(defforeign gluBuild1DMipmaps GLU "gluBuild1DMipmaps" (:integer :integer :integer :integer :integer :string) :integer)
(defforeign gluBuild2DMipmaps GLU "gluBuild2DMipmaps" (:integer :integer :integer :integer :integer :integer :string) :integer)

(defforeign gluNewQuadric GLU "gluNewQuadric" () :integer)
(defforeign gluDeleteQuadric GLU "gluDeleteQuadric" (:integer) :integer)
(defforeign gluQuadricNormals GLU "gluQuadricNormals" (:integer :integer) :integer)
(defforeign gluQuadricTexture GLU "gluQuadricTexture" (:integer :integer) :integer)
(defforeign gluQuadricOrientation GLU "gluQuadricOrientation" (:integer :integer) :integer)
(defforeign gluQuadricDrawStyle GLU "gluQuadricDrawStyle" (:integer :integer) :integer)
(defforeign gluCylinder GLU "gluCylinder" (:integer :float  :float  :float  :integer  :integer) :integer)
(defforeign gluDisk GLU "gluDisk" (:integer :float  :float  :integer  :integer) :integer)
(defforeign gluPartialDisk GLU "gluPartialDisk" (:integer :float  :float  :integer  :integer  :float  :float) :integer)
(defforeign gluSphere GLU "gluSphere" (:integer :float  :integer  :integer) :integer)
(defforeign gluQuadricCallback GLU "gluQuadricCallback" (:integer :integer  :string) :integer)

(defforeign gluNewTess GLU "gluNewTess" () :integer)
(defforeign gluTessCallback GLU "gluTessCallback" (:integer :integer  :string) :integer)
(defforeign gluDeleteTess GLU "gluDeleteTess" (:integer) :integer)
(defforeign gluBeginPolygon GLU "gluBeginPolygon" (:integer) :integer)
(defforeign gluEndPolygon GLU "gluEndPolygon" (:integer) :integer)
(defforeign gluNextContour GLU "gluNextContour" (:integer :integer) :integer)
(defforeign gluTessVertex GLU "gluTessVertex" (:integer :string :string) :integer)

(defforeign gluNewNurbsRenderer GLU "gluNewNurbsRenderer" () :integer)
(defforeign gluDeleteNurbsRenderer GLU "gluDeleteNurbsRenderer" (:integer) :integer)
(defforeign gluBeginSurface GLU "gluBeginSurface" (:integer) :integer)
(defforeign gluBeginCurve GLU "gluBeginCurve" (:integer) :integer)
(defforeign gluEndCurve GLU "gluEndCurve" (:integer) :integer)
(defforeign gluEndSurface GLU "gluEndSurface" (:integer) :integer)
(defforeign gluBeginTrim GLU "gluBeginTrim" (:integer) :integer)
(defforeign gluEndTrim GLU "gluEndTrim" (:integer) :integer)
(defforeign gluPwlCurve GLU "gluPwlCurve" (:integer :integer  :string :integer  :integer) :integer)
(defforeign gluNurbsCurve GLU "gluNurbsCurve" (:integer :integer  :string :integer  :string :integer  :integer) :integer)
(defforeign gluNurbsSurface GLU "gluNurbsSurface" (:integer :integer :string :integer :string :integer :integer :string :integer  :integer  :integer) :integer)
(defforeign gluLoadSamplingMatrices GLU "gluLoadSamplingMatrices" (:integer :string :string :string) :integer)
(defforeign gluNurbsProperty GLU "gluNurbsProperty" (:integer :integer  :float) :integer)
(defforeign gluGetNurbsProperty GLU "gluGetNurbsProperty" (:integer :integer  :string) :integer)
(defforeign gluNurbsCallback GLU "gluNurbsCallback" (:integer :integer  :string) :integer)


; glxforeign.l

(defforeign glXChooseVisual GLX "glXChooseVisual" (:string :integer :string) :integer)
(defforeign glXCopyContext GLX "glXCopyContext" (:string :string :string :integer) :integer)
(defforeign glXCreateContext GLX "glXCreateContext" (:string :string :string :integer) :integer)
(defforeign glXCreateGLXPixmap GLX "glXCreateGLXPixmap" (:string :string :integer) :integer)
(defforeign glXDestroyContext GLX "glXDestroyContext" (:string :string) :integer)
(defforeign glXDestroyGLXPixmap GLX "glXDestroyGLXPixmap" (:string :integer) :integer)
(defforeign glXGetConfig GLX "glXGetConfig" (:string :string :integer :string) :integer)
(defforeign glXGetCurrentContext GLX "glXGetCurrentContext" () :integer)
(defforeign glXGetCurrentDrawable GLX "glXGetCurrentDrawable" () :integer)
(defforeign glXIsDirect GLX "glXIsDirect" (:string :string) :integer)
(defforeign glXMakeCurrent GLX "glXMakeCurrent" (:string :integer :integer) :integer)
(defforeign glXQueryExtension GLX "glXQueryExtension" (:string :string :string) :integer)
(defforeign glXQueryVersion GLX "glXQueryVersion" (:string :string :string) :integer)
(defforeign glXSwapBuffers GLX "glXSwapBuffers" (:integer :integer) :integer)
(defforeign glXUseXFont GLX "glXUseXFont" (:integer :integer :integer :integer) :integer)
(defforeign glXWaitGL GLX "glXWaitGL" () :integer)
(defforeign glXWaitX GLX "glXWaitX" () :integer)

; auxforeign.l

#|
(defforeign auxInitDisplayMode AUX "auxInitDisplayMode" (:integer) :integer)
#- :solaris2 (defforeign auxInitDisplayModePolicy AUX "auxInitDisplayModePolicy" (:integer) :integer)
#- :solaris2 (defforeign auxInitDisplayModeID AUX "auxInitDisplayModeID" (:integer) :integer)
(defforeign auxInitPosition AUX "auxInitPosition" (:integer :integer :integer :integer) :integer)
(defforeign auxInitWindow AUX "auxInitWindow" (:string) :integer)
(defforeign auxCloseWindow AUX "auxCloseWindow" () :integer)
(defforeign auxQuit AUX "auxQuit" () :integer)
(defforeign auxSwapBuffers AUX "auxSwapBuffers" () :integer)

(defforeign auxXDisplay AUX "auxXDisplay" () :integer)
(defforeign auxXWindow AUX "auxXWindow" () :integer)
;; #- (or :solaris2 *mesa*) (defforeign auxXScreen AUX "auxXScreen" () :integer)

(defforeign auxMainLoop AUX "auxMainLoop" (:string) :integer)
(defforeign auxExposeFunc AUX "auxExposeFunc" (:string) :integer)
(defforeign auxReshapeFunc AUX "auxReshapeFunc" (:string) :integer)
(defforeign auxIdleFunc AUX "auxIdleFunc" (:string) :integer)
(defforeign auxKeyFunc AUX "auxKeyFunc" (:string) :integer)
(defforeign auxMouseFunc AUX "auxMouseFunc" (:integer :integer :string) :integer)

(defforeign auxGetColorMapSize AUX "auxGetColorMapSize" () :integer)
(defforeign auxGetMouseLoc AUX "auxGetMouseLoc" (:string :string) :integer)
#- :solaris2 (defforeign auxGetDisplayModePolicy AUX "auxGetDisplayModePolicy" () :integer)
#- :solaris2 (defforeign auxGetDisplayModeID AUX "auxGetDisplayModeID" () :integer)
#- :solaris2 (defforeign auxGetDisplayMode AUX "auxGetDisplayMode" () :integer)
;; #- :solaris2 (defforeign auxGetContext AUX "auxGetContext" () :integer)
(defforeign auxSetOneColor AUX "auxSetOneColor" (:integer :float :float :float) :integer)
(defforeign auxSetFogRamp AUX "auxSetFogRamp" (:integer :integer) :integer)
(defforeign auxSetGreyRamp AUX "auxSetGreyRamp" () :integer)
(defforeign auxSetRGBMap AUX "auxSetRGBMap" (:integer :string) :integer)

(defforeign auxRGBImageLoad AUX "auxRGBImageLoad" (:string) :integer)

(defforeign auxCreateFont AUX "auxCreateFont" () :integer)
(defforeign auxDrawStr AUX "auxDrawStr" (:string) :integer)

(defforeign auxWireSphere AUX "auxWireSphere" (:float) :integer)
(defforeign auxSolidSphere AUX "auxSolidSphere" (:float) :integer)
(defforeign auxWireCube AUX "auxWireCube" (:float) :integer)
(defforeign auxSolidCube AUX "auxSolidCube" (:float) :integer)
(defforeign auxWireBox AUX "auxWireBox" (:float :float :float) :integer)
(defforeign auxSolidBox AUX "auxSolidBox" (:float :float :float) :integer)
(defforeign auxWireTorus AUX "auxWireTorus" (:float :float) :integer)
(defforeign auxSolidTorus AUX "auxSolidTorus" (:float :float) :integer)
(defforeign auxWireCylinder AUX "auxWireCylinder" (:float :float) :integer)
(defforeign auxSolidCylinder AUX "auxSolidCylinder" (:float :float) :integer)
(defforeign auxWireIcosahedron AUX "auxWireIcosahedron" (:float) :integer)
(defforeign auxSolidIcosahedron AUX "auxSolidIcosahedron" (:float) :integer)
(defforeign auxWireOctahedron AUX "auxWireOctahedron" (:float) :integer)
(defforeign auxSolidOctahedron AUX "auxSolidOctahedron" (:float) :integer)
(defforeign auxWireTetrahedron AUX "auxWireTetrahedron" (:float) :integer)
(defforeign auxSolidTetrahedron AUX "auxSolidTetrahedron" (:float) :integer)
(defforeign auxWireDodecahedron AUX "auxWireDodecahedron" (:float) :integer)
(defforeign auxSolidDodecahedron AUX "auxSolidDodecahedron" (:float) :integer)
(defforeign auxWireCone AUX "auxWireCone" (:float :float) :integer)
(defforeign auxSolidCone AUX "auxSolidCone" (:float :float) :integer)
(defforeign auxWireTeapot AUX "auxWireTeapot" (:float) :integer)
(defforeign auxSolidTeapot AUX "auxSolidTeapot" (:float) :integer)
|#
; tkforeign.l

;(defforeign tkInitDisplay TK "tkInitDisplay" () :integer)
(defforeign tkInitDisplayMode TK "tkInitDisplayMode" (:integer) :integer)
;(defforeign tkInitDisplayModePolicy TK "tkInitDisplayModePolicy" (:integer) :integer)
;(defforeign tkInitDisplayModeID TK "tkInitDisplayModeID" (:integer) :integer)
(defforeign tkInitPosition TK "tkInitPosition" (:integer :integer :integer :integer) :integer)
(defforeign tkInitWindow TK "tkInitWindow" (:string) :integer)
(defforeign tkCloseWindow TK "tkCloseWindow" () :integer)
(defforeign tkQuit TK "tkQuit" () :integer)

(defforeign tkSetWindowLevel TK "tkSetWindowLevel" (:integer) :integer)
(defforeign tkSwapBuffers TK "tkSwapBuffers" () :integer)

(defforeign tkExec TK "tkExec" () :integer)
(defforeign tkExposeFunc TK "tkExposeFunc" (:string) :integer)
(defforeign tkReshapeFunc TK "tkReshapeFunc" (:string) :integer)
(defforeign tkDisplayFunc TK "tkDisplayFunc" (:string) :integer)
(defforeign tkKeyDownFunc TK "tkKeyDownFunc" (:string) :integer)
(defforeign tkMouseDownFunc TK "tkMouseDownFunc" (:string) :integer)
(defforeign tkMouseUpFunc TK "tkMouseUpFunc" (:string) :integer)
(defforeign tkMouseMoveFunc TK "tkMouseMoveFunc" (:string) :integer)
(defforeign tkIdleFunc TK "tkIdleFunc" (:string) :integer)

(defforeign tkGetColorMapSize TK "tkGetColorMapSize" () :integer)
(defforeign tkGetMouseLoc TK "tkGetMouseLoc" (:string :string) :integer)
(defforeign tkGetSystem TK "tkGetSystem" (:integer :string) :integer)
;(defforeign tkGetDisplayModePolicy TK "tkGetDisplayModePolicy" () :integer)
;(defforeign tkGetDisplayModeID TK "tkGetDisplayModeID" () :integer)
;(defforeign tkGetDisplayMode TK "tkGetDisplayMode" () :integer)
;(defforeign tkGetContext TK "tkGetContext" () :integer)

(defforeign tkSetOneColor TK "tkSetOneColor" (:integer :float :float :float) :integer)
(defforeign tkSetFogRamp TK "tkSetFogRamp" (:integer :integer) :integer)
(defforeign tkSetGreyRamp TK "tkSetGreyRamp" () :integer)
(defforeign tkSetRGBMap TK "tkSetRGBMap" (:integer :string) :integer)
(defforeign tkSetOverlayMap TK "tkSetOverlayMap" (:integer :string) :integer)

(defforeign tkNewCursor TK "tkNewCursor" (:integer :string :string :integer :integer :integer :integer) :integer)
(defforeign tkSetCursor TK "tkSetCursor" (:integer) :integer)

(defforeign tkRGBImageLoad TK "tkRGBImageLoad" (:string) :integer)

(defforeign tkCreateStrokeFont TK "tkCreateStrokeFont" (:integer) :integer)
(defforeign tkCreateOutlineFont TK "tkCreateOutlineFont" (:integer) :integer)
(defforeign tkCreateFilledFont TK "tkCreateFilledFont" (:integer) :integer)
(defforeign tkCreateBitmapFont TK "tkCreateBitmapFont" (:integer) :integer)
(defforeign tkDrawStr TK "tkDrawStr" (:integer :string) :integer)

(defforeign tkWireSphere TK "tkWireSphere" (:integer :float) :integer)
(defforeign tkSolidSphere TK "tkSolidSphere" (:integer :float) :integer)
(defforeign tkWireCube TK "tkWireCube" (:integer :float) :integer)
(defforeign tkSolidCube TK "tkSolidCube" (:integer :float) :integer)
(defforeign tkWireBox TK "tkWireBox" (:integer :float :float :float) :integer)
(defforeign tkSolidBox TK "tkSolidBox" (:integer :float :float :float) :integer)
(defforeign tkWireTorus TK "tkWireTorus" (:integer :float :float) :integer)
(defforeign tkSolidTorus TK "tkSolidTorus" (:integer :float :float) :integer)
(defforeign tkWireCylinder TK "tkWireCylinder" (:integer :float :float) :integer)
(defforeign tkSolidCylinder TK "tkSolidCylinder" (:integer :float :float) :integer)
(defforeign tkWireCone TK "tkWireCone" (:integer :float :float) :integer)
(defforeign tkSolidCone TK "tkSolidCone" (:integer :float :float) :integer)

; glutil.l

(defforeign glClearColorfv libutil "glClearColorfv" (:string) :integer)
(defforeign glOrtho6f libutil "glOrtho6f" (:float :float :float :float :float :float) :integer)
(defforeign glOrthofv libutil "glOrthofv" (:string) :integer)
(defforeign glRotatefv libutil "glRotatefv" (:string) :integer)
(defforeign glTranslatefv libutil "glTranslatefv" (:string) :integer)
(defforeign glClipPlanef libutil "glClipPlanef" (:integer :string) :integer)
#|
(defforeign auxSolidTeapotfv libutil "auxSolidTeapotfv" (:string) :integer)
(defforeign auxSolidSpherefv libutil "auxSolidSpherefv" (:string) :integer)
(defforeign auxWireSpherefv libutil "auxWireSpherefv" (:string) :integer)
(defforeign auxSolidCylinderfv libutil "auxSolidCylinderfv" (:string) :integer)
(defforeign auxSolidConefv libutil "auxSolidConefv" (:string) :integer)
(defforeign auxSolidBoxfv libutil "auxSolidBoxfv" (:string) :integer)
(defforeign auxSolidTorusfv libutil "auxSolidTorusfv" (:string) :integer)
(defforeign auxSolidCubefv libutil "auxSolidCubefv" (:string) :integer)
(defforeign auxSolidOctahedronfv libutil "auxSolidOctahedronfv" (:string) :integer)
(defforeign auxWireIcosahedronfv libutil "auxWireIcosahedronfv" (:string) :integer)
(defforeign auxSetOneColorfv libutil "auxSetOneColorfv" (:integer :string) :integer)
|#
(defforeign gluPerspectivefv libutil "gluPerspectivefv" (:string) :integer)
(defforeign gluLookAtfv libutil "gluLookAtfv" (:string) :integer)
(defforeign gluTessCallbackl libutil "gluTessCallbackl" () :integer)
(defforeign glClearAccumfv libutil "glClearAccumfv" (:string) :integer)
(defforeign glAccumfv libutil "glAccumfv" (:integer :string) :integer)
(defforeign gluDiskfv libutil "gluDiskfv" (:integer :string) :integer)
(defforeign gluPartialDiskfv libutil "gluPartialDiskfv" (:integer :string) :integer)
(defforeign glScalefv libutil "glScalefv" (:string) :integer)
(defforeign gluNurbsPropertyfv libutil "gluNurbsPropertyfv" (:integer :integer :string) :integer)
(defforeign glMapGrid2fv libutil "glMapGrid2fv" (:string) :integer)
(defforeign glBitmapfv libutil "glBitmapfv" (:integer :integer :string :string) :integer)
(defforeign glMap1fv libutil "glMap1fv" (:integer :string :string) :integer)
(defforeign glMap2fv libutil "glMap2fv" (:integer :string :string) :integer)
(defforeign glFrustumfv libutil "glFrustumfv" (:string) :integer)
(defforeign gluOrtho2Dfv libutil "gluOrtho2Dfv" (:string) :integer)
(defforeign glPointSizefv libutil "glPointSizefv" (:string) :integer)
(defforeign glClearIndexfv libutil "glClearIndexfv" (:string) :integer)
(defforeign alloctessinfo libutil "alloctessinfo" (:string :integer :string :integer :string) :integer)
(defforeign tess_vertex_cb libutil "tess_vertex_cb" (:string) :integer)

