static pointer CLO434();
static pointer CLO505();
static pointer (*ftab[44])();

#define QUOTE_STRINGS_SIZE 243
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "#(:name :color :ambient :diffuse :specular :emission :shininess :transparency)",
    ":name",
    "float-vector-p",
    "\"number of float-vector expcted for colormaterial :ambient\"",
    "\"number of float-vector expcted for colormaterial :diffuse\"",
    "\"number of float-vector expcted for colormaterial :specular\"",
    "\"number of float-vector expcted for colormaterial :emission\"",
    "\"number expected for colormaterial :shininess\"",
    "\"number expected for colormaterial :transparency\"",
    "glmaterialfv",
    "#(:ambient :diffuse :specular :position)",
    "\"number of float-vector expcted for lightsource :ambient\"",
    "\"number of float-vector expcted for lightsource :diffuse\"",
    "\"number of float-vector expcted for lightsource :specular\"",
    ":light-id",
    "glenable",
    "gldisable",
    "gllightfv",
    "#(:x :y :size :width :height :glcon :title)",
    "\"GL\"",
    "string",
    ":x",
    ":y",
    ":width",
    ":height",
    "x:*display*",
    "x:defaultscreen",
    "*attributelist*",
    "glxchoosevisual",
    "glxcreatecontext",
    "send-message",
    "super",
    ":create",
    ":depth",
    ":integer",
    ":visual",
    ":long",
    ":title",
    "glxmakecurrent",
    ":3d-mode",
    "lightsource",
    ":ambient",
    ":diffuse",
    ":specular",
    ":position",
    "*light0*",
    "*light1*",
    "*light2*",
    ":opengl",
    "glfrontface",
    "gldepthfunc",
    "glshademodel",
    "glpixelstorei",
    "gltexparameteri",
    "gltexenvi",
    "glclear",
    "glxswapbuffers",
    "glunewtess",
    "*tess-obj*",
    "glbegin",
    "entry",
    "entry2",
    "glutesscallbackl",
    "tess_vertex_cb",
    "glend",
    "linecolor",
    "3",
    "glcolor3fv",
    "4",
    "glcolor4fv",
    "\":color\"",
    "glviewport",
    "glmatrixmode",
    "glloadidentity",
    "#(:push)",
    "glpushmatrix",
    "glorthofv",
    "glpopmatrix",
    "glflush",
    ":2d-mode",
    ":push",
    "glvertex2fv",
    ":pop-mode",
    "glvertex3fv",
    "draw-face",
    "send",
    "glviewsurface",
    ":point",
    ":line",
    ":rectangle",
    "2",
    "3",
    ":3d-line",
    "\"draw vector?\"",
    ":draw-one",
    ":draw",
    "find-method",
    ":drawners",
    ":worldcoords",
    "colormaterial",
    ":color",
    "geometry:line",
    ":draw-edge",
    "geometry:edge-image",
    ":draw-edge-image",
    "geometry:body",
    "draw-body",
    ":visible-edges",
    "geometry:faceset",
    ":edges",
    "geometry:face",
    ":draw-faces",
    "geometry:polygon",
    ":draw-star",
    "coordinates-p",
    ":draw-axis",
    "2dlnseg",
    ":draw-2dlnseg",
    ":viewpoint",
    ":view-direction",
    ":view-up",
    ":fovy",
    "rad2deg",
    "*perspective-near*",
    "*perspective-far*",
    "gluperspectivefv",
    "vector",
    "glulookatfv",
    "geometry:viewer",
    "geometry:*viewer*",
    ":viewing",
    ":viewsurface",
    "cls",
    "geometry:draw",
    "*viewsurface*",
    ":glflush",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "\"unkown light number ~a\"",
    "\"GL\"",
    "\"GL\"",
    "make-package",
    "\"GL\"",
    "\"GL\"",
    "*package*",
    "\"no such package\"",
    ":geoclasses",
    "\"lisp/geo/geoclasses.l\"",
    "require",
    ":gldecl",
    "\"lisp/opengl/src/gldecl.l\"",
    ":glforeign",
    "\"lisp/opengl/src/glforeign.l\"",
    ":glconst",
    "\"lisp/opengl/src/glconst.l\"",
    ":gluforeign",
    "\"lisp/opengl/src/gluforeign.l\"",
    ":glutil",
    "\"lisp/opengl/src/glutil.l\"",
    ":gluconst",
    "\"lisp/opengl/src/gluconst.l\"",
    ":eglforeign",
    "\"lisp/opengl/src/eglforeign.l\"",
    "(gldraw glviewsurface colormaterial lightsource *light0* *light1* *light2*)",
    ":vtype",
    ":global",
    "(*perspective-far* *perspective-near*)",
    "\"&key (color #f(0.5 0.7 0.9 1.0)) ambient diffuse specular emssion shininess transparency\"",
    "\"(self class &optional amb (amb2 amb) (amb3 amb) (amb4 1))\"",
    "\"(self class &optional dif (dif2 dif) (dif3 dif) (dif4 1))\"",
    "\"(self class &optional spec (spec2 spec) (spec3 spec) (spec4 1))\"",
    ":emission",
    "\"(self class &optional emit (emit2 emit) (emit3 emit) (emit4 1))\"",
    ":shininess",
    "\"(self class &optional shi)\"",
    ":transparency",
    "\"(self class &optional trans)\"",
    "\"(self class)\"",
    "\"(self class index &key ((:ambient amb) (float-vector 0.5 0.5 0.5 1.0)) ((:diffuse dif) (float-vector 0.8 0.8 0.8 0.8)) ((:specular spec) (float-vector 0.7 0.7 0.7 1.0)) ((:position pos) (float-vector 1000.0 2000.0 100000.0 0.0)))\"",
    "\"(self class)\"",
    "\"(self class &optional amb (amb2 amb) (amb3 amb) (amb4 1))\"",
    "\"(self class &optional dif (dif2 dif) (dif3 dif) (dif4 1))\"",
    "\"(self class &optional spec (spec2 spec) (spec3 spec) (spec4 1))\"",
    "\"(self class &optional p)\"",
    ":move",
    "\"(self class v)\"",
    ":enable",
    "\"(self class)\"",
    ":disable",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class &rest args &key (x 0) (y 0) (size 256) ((:width w) size) ((:height h) size) ((:glcon shared-glcon) 0) (title (string (gensym \\\"GL\\\"))) &allow-other-keys)\"",
    ":material",
    "\"(self class ambient &optional diffuse specular emission shininess)\"",
    "\"(self class color-vector)\"",
    ":window",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class &key ((:push apush) nil))\"",
    "\"(self class)\"",
    "\"(self class &optional h)\"",
    "\"(self class &optional w)\"",
    ":pos",
    "\"(self class)\"",
    "\"(self class &optional nx)\"",
    "\"(self class &optional ny)\"",
    ":clear",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class x y)\"",
    "\"(self class x1 y1 x2 y2)\"",
    ":3d-point",
    "\"(self class pos)\"",
    "\"(self class start end)\"",
    "\"(self class faces)\"",
    "\"(self class x y w h)\"",
    "geometry::default-viewsurface",
    "\"(&rest args)\"",
    ":draw-point",
    "\"(self class p)\"",
    ":draw-line",
    "\"(self class from to)\"",
    ":draw-rectangle",
    "\"(self class point width height)\"",
    "\"(self class thing info)\"",
    "\"(self class flist &optional (normal-clip nil) color)\"",
    "resetperspective",
    "\"(viewing surface) set viewing/viewport parameter to GL\"",
    "gldraw",
    "\"(&rest things)\"",
    "swapb",
    "\"(&optional (vsurf *viewsurface*))\"",
    "position-light",
    "\"(light x y z)\"",
    ":glview",
    "\"@(#)$Id$\"",
    "provide",
  };
