static pointer FLET3602();
static pointer (*ftab[3])();

#define QUOTE_STRINGS_SIZE 84
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "(0)",
    "(1 2)",
    "(3)",
    "(4 5 6)",
    "\";; line: ~s ~s --> ~s ~s~%\"",
    ":drawline-primitive",
    "0",
    "\"solid line\"",
    "1",
    "\"dashed line\"",
    "\";; line-width= ~d~%\"",
    "\"unrecognized message ~s sent to ~S~%\"",
    "warn",
    "#(:color :width :height)",
    ":width",
    ":height",
    "*debug*",
    "\";; tektro-showline: ~s ~s ~s ~s~%\"",
    "*tektro-plot-buffer*",
    "*tektro-port*",
    "with-open-file",
    ":direction",
    ":output",
    "send",
    "tektro-viewsurface",
    ":init",
    "\"GEOMETRY\"",
    "\"GEOMETRY\"",
    "*package*",
    "\"no such package\"",
    "(hls2rgb rgb2hls viewsurface tektro-viewsurface *tektro-port* tektro-showline tektro-clear tektro)",
    "hls2rgb",
    "\"hls2rgb hue lightness saturation\nhue: 0..360, lightness 0..1, saturation 0..1\"",
    "rgb2hls",
    "\"(red green blue &optional (rgb 255.0))\"",
    "viewsurface",
    ":global",
    ":super",
    "propertied-object",
    ":slots",
    "nil",
    ":metaclass",
    ":element-type",
    ":size",
    ":documentation",
    "make-class",
    "\"(self class x1 y1 x2 y2 &optional color)\"",
    ":draw-line",
    "\"(self class v1 v2 &optional color)\"",
    ":line-style",
    "\"(self class x)\"",
    ":line-width",
    "\"(self class x)\"",
    ":nomethod",
    "\"(self class &rest msg)\"",
    ":set-erase-mode",
    "\"(self class)\"",
    ":set-show-mode",
    "\"(self class)\"",
    ":flush",
    "\"(self class)\"",
    "\"(self class &rest l &key &allow-other-keys)\"",
    "(width height color)",
    "\"(self class &rest args &key ((:color c) 0) ((:width w) 768) ((:height h) 512) &allow-other-keys)\"",
    ":clear",
    "\"(self class)\"",
    "\"(self class &optional x)\"",
    "\"(self class &optional x)\"",
    ":resize",
    "\"(self class w h)\"",
    "\"(self class x0 y0 x1 y1 &optional color)\"",
    ":vtype",
    "\"          \"",
    "tektro-showline",
    "\"(x1 y1 x2 y2)\"",
    "tektro-clear",
    "\"(&optional (port *tektro-port*))\"",
    "tektro",
    "\"(file &rest forms)\"",
    "default-viewsurface",
    "\"(&rest args)\"",
    ":viewsurface",
    "\"@(#)$Id$\"",
    "provide",
  };
