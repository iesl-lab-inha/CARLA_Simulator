static pointer CLO3565();
static pointer (*ftab[10])();

#define QUOTE_STRINGS_SIZE 140
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "super",
    ":update",
    "#2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 -1.0))",
    ":changed",
    ":worldcoords",
    ":worldpos",
    "matrix-row",
    "\":sendviewcoords -- subclass'es responsibility\"",
    "#f(0.0 0.0 0.0)",
    ":init",
    ":rotate",
    ":x",
    ":world",
    ":y",
    ":locate",
    ":reset-coords",
    ":z",
    "#(:dimension :target :view-direction :view-up :view-right)",
    "send-message",
    ":dimension",
    "coords",
    "float-vector",
    ":project3",
    ":transform-vector",
    ":make-projection",
    "\":make-projection   subclass's responsibility\"",
    "#(:hither :yon :aspect :screen :screen-x :screen-y)",
    ":project2",
    "make-matrix",
    "#(:screen :screen-x :screen-y)",
    ":rotate-vector",
    ":normal",
    ":view-direction",
    ":point",
    "make-plane",
    "unit-matrix",
    ":screen",
    ":view-angle",
    ":local",
    "flatten",
    "bounding-box-union",
    ":grow",
    ":look",
    ":viewpoint",
    ":center",
    "bounding-box",
    ":corners",
    ":minpoint",
    ":maxpoint",
    "acos",
    ":hither",
    ":extream-point",
    "#f(0.0 0.0 -1.0)",
    ":yon",
    "#f(0.0 0.0 1.0)",
    "maxpoint",
    "minpoint",
    "#f(0.0 0.0 -1.0)",
    "#f(0.0 0.0 1.0)",
    ":prin1",
    "\"~fdeg\"",
    "rad2deg",
    "#(:viewdistance)",
    "rot",
    "#f(0.0 0.0)",
    "3dline",
    ":view-orient",
    "\"GEOMETRY\"",
    "\"GEOMETRY\"",
    "*package*",
    "\"no such package\"",
    "viewing",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    ":view-up",
    "\"(self class)\"",
    ":view-right",
    "\"(self class)\"",
    ":sendviewcoords",
    "\"(self class)\"",
    "\"(self class from &optional (to #f(0.0 0.0 0.0)))\"",
    ":makeviewcoords",
    "\"(self class ax ay az p)\"",
    "\"(self class &rest viewargs &key (dimension 3) (target nil) (view-direction nil) (view-up (float-vector 0.0 0.0 1.0)) (view-right nil) &allow-other-keys)\"",
    ":projection",
    "projection",
    "\"(self class)\"",
    ":newprojection",
    "\"(self class pmat)\"",
    ":project",
    "\"(self class vec)\"",
    "\"(self class vec3)\"",
    ":view",
    "\"(self class point)\"",
    "\"(self class &optional (sx nil) (sy sx))\"",
    "\"(self class &optional (h nil))\"",
    "\"(self class &optional (y nil))\"",
    ":aspect",
    "\"(self class &optional (rate nil))\"",
    ":viewreference",
    "\"(self class)\"",
    "\"(self class &rest args)\"",
    "\"(self class &rest viewing-params &key ((:hither h) 100.0) ((:yon y) 10000.0) (aspect 1.0) (screen 100.0) (screen-x screen) (screen-y (* aspect screen-x)) &allow-other-keys)\"",
    "viewing2d",
    "\"(self class vec)\"",
    "\"(self class vec3)\"",
    "\"(self class point)\"",
    "\"(self class)\"",
    "\"(self class &rest initargs &key (screen 1.0) (screen-x screen) (screen-y screen-x) &allow-other-keys)\"",
    "parallel-viewing",
    "\"(self class)\"",
    ":ray",
    "perspective-viewing",
    "\"returns direction vector pointing (u,v) in NDC from the viewpoint\"",
    ":view-plane",
    "\"+offset makes the viewplane closer to the viewpoint,\n-offset takes further distance.\"",
    "\"(self class)\"",
    ":viewdistance",
    "\"(self class &optional (vd nil))\"",
    "\"(self class &optional ang)\"",
    ":fovy",
    "\"(self class)\"",
    ":zoom",
    "\"(self class &optional (s nil))\"",
    ":lookaround",
    "\"(self class alfa beta)\"",
    ":look-body",
    "\"(self class &rest bodies)\"",
    ":look-body2",
    "\"(self class &rest bodies)\"",
    "\"(self class strm &optional msg)\"",
    "\"(self class &rest params &key ((:viewdistance vd)) &allow-other-keys)\"",
    "\"(self class &optional (v (float-vector 0 0)))\"",
    ":view-line",
    "\"(self class &optional (v #f(0.0 0.0)))\"",
    ":viewing",
    "\"@(#)$Id: viewing.l,v 1.1.1.1 2003/11/20 07:46:30 eus Exp $\"",
    "provide",
  };
