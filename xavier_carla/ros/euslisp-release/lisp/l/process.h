static pointer (*ftab[14])();

#define QUOTE_STRINGS_SIZE 98
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "\"HOME\"",
    "string",
    "string-downcase",
    "unix:chdir",
    "\"LOGINPID\"",
    "read-from-string",
    "\"\"",
    "concatenate",
    "make-string-input-stream",
    ":eof",
    "*standard-input*",
    "*standard-output*",
    "outstream",
    "instream",
    ":infd",
    ":outfd",
    "file-stream",
    ":init",
    "\"pipe\"",
    ":input",
    "\"pipe\"",
    ":output",
    "make-two-way-stream",
    "*terminal-io*",
    "position",
    "unix:exec",
    "functionp",
    ":eusexit",
    "*replevel*",
    "\"\"",
    "reploop",
    "unix::_exit",
    "io-stream",
    "*debug*",
    "\";; child_pid=~D~%\"",
    ":pid",
    "\";; child_pid=~D~%\"",
    "#(:stdin :stdout :stderr :args)",
    "*error-output*",
    "\"exec\"",
    "exit",
    "\";; child_pid=~D~%\"",
    ":instream",
    ":outstream",
    "\".\"",
    "directory",
    "string<",
    "max",
    "length",
    "tprint",
    "\"user time ~f sec~%system time ~f sec~%\"",
    "\"max resident core ~d Kb~%\"",
    "\"integral resident   ~d Kb~%\"",
    "\"page faults without I/O ~d ~%\"",
    "\"page faults with I/O   ~d ~%\"",
    "\"swaps         ~d ~%\"",
    "\"input op.     ~d ~%\"",
    "\"output op.    ~d ~%\"",
    "\"message sent  ~d ~%\"",
    "\"message rcvd  ~d ~%\"",
    "\"signals       ~d ~%\"",
    "\"volutary sw.  ~d ~%\"",
    "\"involutary sw.~d ~%\"",
    "\"xterm\"",
    "\"/dev/pty~c~1,1x\"",
    ":if-does-not-exist",
    ":direction",
    ":io",
    "open",
    ":name",
    "\"-S~c~1,1x~1d\"",
    "\"LISP\"",
    "\"LISP\"",
    "*package*",
    "\"no such package\"",
    "(cd pwd ez piped-fork popen xfork dir directory rusage)",
    "cd",
    "\"(&optional (dir (unix:getenv \\\"HOME\\\")))\"",
    "pwd",
    "\"nil\"",
    "ez",
    "\"(&optional (key (read-from-string (unix:getenv \\\"LOGINPID\\\"))))\"",
    "piped-fork",
    "\"(&optional (exec) &rest args)\"",
    "popen",
    "\"(exec &rest args)\"",
    "xfork",
    "\"(exec &key (stdin *standard-input*) (stdout *standard-output*) (stderr *error-output*) (args nil))\"",
    "unix::readdir",
    "dir",
    "\"(&optional (dir \\\".\\\"))\"",
    "rusage",
    "\"(&optional (who 0) (s t))\"",
    "xterm-window",
    "\"(&optional (cmnd \\\"xterm\\\") (port))\"",
    ":process",
    "\"@(#)$Id$\"",
    "provide",
  };
