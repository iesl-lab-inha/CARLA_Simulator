static pointer (*ftab[6])();

#define QUOTE_STRINGS_SIZE 132
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "((0 :object) (1 :bit) (2 :character) (3 :byte) (4 :integer) (5 :float) (6 :foreign) (7 t))",
    "assoc",
    ":elmtype",
    ":element-type",
    ":float",
    ":integer",
    ":character",
    ":bit",
    "*",
    "\"array dimension mismatch\"",
    "#(:element-type :fill-pointer :displaced-to :displaced-index-offset :adjustable :initial-contents :initial-element :&aux :entity :a)",
    "vector",
    "(:character character :char char :byte byte)",
    "string",
    "(:bit bit)",
    "bit-vector",
    "(:float float)",
    "float-vector",
    "(:integer integer :int int fixnum :fixnum)",
    "integer-vector",
    "array",
    "\"array rank limit over\"",
    "integerp",
    "every",
    "\"integer expected for array dimensions\"",
    "rank",
    "fill",
    "fill-pointer",
    "\"not an array\"",
    "\"not array\"",
    ":initial-contents",
    "entity",
    "dim1",
    ":start1",
    ":end1",
    "replace",
    "max",
    "length",
    "degenerated",
    "zerop",
    ":z",
    ":y",
    ":x",
    "\"LISP\"",
    "\"LISP\"",
    "*package*",
    "\"no such package\"",
    "(make-array array-total-size fill-pointer array-rank array-dimensions array-dimension array-vector row-major-aref list-dimensions read-array read-float-array read-integer-array float-vector-p integer-vector-p bit-vector-p matrixp make-matrix matrix-row matrix-column set-matrix-row set-matrix-column replace-matrix copy-matrix scale-matrix matrix acos asin unit-matrix m** simultaneous-equation inverse-matrix vector-x vector-y vector-z v= euler-matrix rpy-matrix)",
    "vectorclass",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "fill-initial-contents",
    "\"(vec offset dimensions seq)\"",
    "make-array",
    "\"(dim &key (element-type vector) (fill-pointer nil) (displaced-to nil) (displaced-index-offset 0) (adjustable nil) (initial-contents nil) (initial-element nil) &aux entity a)\"",
    "array-total-size",
    "\"(a)\"",
    "\"(a)\"",
    "array-rank",
    "\"(a)\"",
    "array-dimensions",
    "\"(a)\"",
    "array-dimension",
    "\"(a axis)\"",
    "array-vector",
    "\"(a)\"",
    "row-major-aref",
    "\"(a index)\"",
    "list-dimensions",
    "\"(list)\"",
    "read-array",
    "\"(strm char num)\"",
    "read-float-array",
    "\"(strm char num)\"",
    "read-integer-array",
    "\"(strm char num)\"",
    "float-vector-p",
    "\"(obj)\"",
    "integer-vector-p",
    "\"(obj)\"",
    "bit-vector-p",
    "\"(obj)\"",
    "matrixp",
    "\"(obj)\"",
    "make-matrix",
    "\"(row column &optional init)\"",
    "matrix-row",
    "\"(mat row)\"",
    "matrix-column",
    "\"(mat col)\"",
    "set-matrix-row",
    "\"(mat row values)\"",
    "set-matrix-column",
    "\"(mat col values)\"",
    "replace-matrix",
    "\"(dest src)\"",
    "copy-matrix",
    "\"(mat)\"",
    "scale-matrix",
    "\"(s m &optional (result (copy-matrix m)))\"",
    "matrix",
    "\"(&rest seq)\"",
    "acos",
    "\"(x)\"",
    "asin",
    "\"(x)\"",
    "unit-matrix",
    "\"(&optional (n 3))\"",
    "m**",
    "\"(m1 m2 &rest more-matrices &aux mat)\"",
    "simultaneous-equation",
    "\"(mat vec)\"",
    "inverse-matrix",
    "\"(mat)\"",
    "vector-x",
    "\"(p)\"",
    "vector-y",
    "\"(p)\"",
    "vector-z",
    "\"(p)\"",
    "v=",
    "\"(a b)\"",
    "euler-matrix",
    "\"EULER-MATRIX (az ay az2) creates a rotation matrix which has been\nrotated az, ay, and az2 radian around local z, y, and again z axes.\nEULER-ANGLE extracts these angles out of a matrix.\"",
    "rpy-matrix",
    "\"RPY-MATRIX (az ay ax) creates a new rotation matrix which has been \nrotated ax radian around x-axis in WORLD, ay radian around y-axis in\nWORLD, and az radian around z axis in WORLD, in this order.\nThese angles can be extracted by the RPY-ANGLE function.\"",
    ":array",
    "\"@(#)$Id$\"",
    "provide",
  };
