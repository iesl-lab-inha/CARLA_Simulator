(> function-documentation "
Args: (number &rest more-numbers)
Returns T if the args are in decreasing order; NIL otherwise.")
(eighth function-documentation "
Args: (x)
Equivalent to (CADDDR (CDDDDR X)).")
(*evalhook* variable-documentation "
Specifies a function to be used instead of EVAL.  If the value of this
variable is non-NIL, it must be a function that can receive two arguments: a
form to evaluate and an environment.  This function does the evaluation
instead of EVAL.")
(get-internal-real-time function-documentation "
Args: ()
Returns the time (in 1/1000 seconds) since the invocation of KCL.")
(intersection function-documentation "
Args: (list1 list2 &key (key #'identity) (test #'eql) test-not)
Returns a list consisting of those objects that are elements of both LIST1 and
LIST2.")
(mapc function-documentation "
Args: (function list &rest more-lists)
For each N (0 <= N < K), applies FUNCTION to the N-th elements of the given
LISTs, where K is the maximum length of the given LISTs.  Returns the first
LIST.")
(nth function-documentation "
Args: (n list)
Returns the N-th element of LIST, the first element of LIST being the zeroth.
Returns NIL if the length of LIST is less than N.  N must be a non-negative
integer.")
(proclaim function-documentation "
Args: (decl-spec)
Gives a global declaration.  See DECLARE for possible DECL-SPECs.")
(single-float-negative-epsilon variable-documentation "
Same as LONG-FLOAT-NEGATIVE-EPSILON.")
(sixth function-documentation "
Args: (x)
Equivalent to (CADR (CDDDDR X)).")
(*make-special function-documentation "
Args (symbol)
KCL specific.
Declares the variable named by NAME as a special variable.")
