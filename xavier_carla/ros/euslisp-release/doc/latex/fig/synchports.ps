%!PS-Adobe-2.0 EPSF-1.2
%%Creator: SuperPaint
%%Title: synchports.ps
%%CreationDate: 95.1.14
%%BoundingBox: 0 250 600 560 
%%Pages 1
%%DocumentFonts: Symbol
%%+Palatino-Roman
%%+Courier
%%DocumentNeededFonts: Symbol
%%+Palatino-Roman
%%+Courier
%%DocumentProcSets: BeachHead 2 1
%%DocumentSuppliedProcSets: BeachHead 2 1
%%EndComments
%%BeginProcSet: BeachHead 2 2
%% BeachHead - v2.2 Copyright 1991, 1992 Silicon Beach Software, inc. 
userdict /BeachHead known userdict begin /BeachHead 140 dict def BeachHead end begin /ta exch def /BeachHead_version 2 def /isWinPS false def /c 75 string def /sa 75 string def /f false def /g false def /h false def /i false def /k 0.015 def /oldmatrix 6 array def /newmatrix 6 array def
/a{bind def}bind def/b{exch def}a /_doTexturePat false def /_strtxtmatrix null def /nulld { counttomark {null def} repeat pop } a mark /l /m /o /q /r /u /v /w /_cwidths /wa /x /y /z /A /B /D /E/F /G /H /I /J /K /M /N /O /P /Q /R /S /T /V /W /X /Y /ba /ca /da /ea /fa /ga
/ha /ia /ja /ka ta not{/la /ma}if /_strtxtmatrix nulld /ra 256 array def
ra dup dup 0 /Times-Roman findfont /Encoding get 0 128 getinterval putinterval
39 /quotesingle put 96 /grave put /Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve
/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent
/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute
/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff
/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown
/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright
/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft
/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron ra 128 128 getinterval astore pop /winvec 256 array def ra winvec copy pop winvec 15{dup}repeat 161 /ring put 178 /Scaron put 182 /eth put 184 /Thorn put 185 /thorn put 195 /scaron put 198 /Eth put 222 
/hyphen put 223 /twosuperior put 225 /threesuperior put 240 
/onequarter put 249 /onehalf put 250 /periodcentered put 252 /cedilla put 253 /multiply put 254 /Yacute put version cvr 51 ge 
{ winvec 245 /onesuperior put winvec 251 /threequarters put winvec 255 /yacute put } if /d { 0 1 74 { c exch 0 put } for dup c cvs pop c } a /qa { 0 1 74 { sa exch 0 put } for dup sa cvs pop sa 74 1 put } a /e { d 74 2 put } a /addoblique { /g true def } a /addheavy 
{ /f true def } a /adduline { /h true def } a /findshadowfont 
{ findoutlinefont /i true def } a /findoutlinefont { findbeachheadfont j } a /findbeachheadfont { /f false def /g false def /h false def /i false def
dup findfont dup /FontType get 0 ne	{ /Encoding get dup 161 get exch 162 get /cent eq exch /exclamdown eq and { userdict /BeachHead get begin qa FontDirectory sa known { pop sa findfont } {
findfont dup length 1 add dict /o b { 1 index /FID ne 2 index /UniqueID ne and { o 3 1 roll put } { pop pop } ifelse } forall /FontName sa dup length string copy def
o /Encoding isWinPS {winvec}{ra} ifelse put sa o definefont } ifelse end }{ findfont } ifelse }{ exch pop } ifelse } a /j { userdict /BeachHead get begin dup /FontName get e FontDirectory c known { pop pop c findfont } { exch dup /FontType get 0 eq { { 1 index /FID ne 2 index 
/UniqueID ne and {def} {pop pop} ifelse }forall currentdict end dup dup /FDepVector get [ exch {j} forall
] /FDepVector exch put exch e pop c exch definefont } { 12 dict begin dup /l b /FontType 3 def /FontMatrix [1 0 0 1 0 0] def /FontBBox [0 0 1 1] def /Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for dup exch maxlength 2 add dict begin { 1 index /FID ne 2 index /UniqueID ne and {def} {pop pop} ifelse
}forall /PaintType 2 def /StrokeWidth 1 0 FontMatrix dtransform dup mul exch dup mul add sqrt .012 exch div def
currentdict end /_dummy exch definefont /r b /m 1 string def /FontType 3 def /BuildChar { exch begin m 0 3 -1 roll put r setfont m stringwidth setcharwidth l setfont userdict /BeachHead get /i get { .05 -.05 moveto m show } if reversecolor 0 0 moveto m show reversecolor r 
setfont 0 0 moveto m show end } a
currentdict end exch e pop c exch definefont } ifelse } ifelse end } a /EPSBegin { save userdict /BeachHead get begin /la b count /ma b end userdict /showpage {} put
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath } a /EPSEnd { userdict /BeachHead get begin count ma sub dup 0 gt {{pop}repeat} {pop}ifelse la end restore } a /cimage { userdict /BeachHead get begin { {readstring} } { {readhexstring} }
ifelse /u b /colorimage where
{ pop 4 index dup string /v b dup string /w b dup string /x b dup string /y b string /z b { currentfile v u pop } { currentfile w u pop }
{ currentfile x u pop } { currentfile y u pop currentfile z u pop pop } 5 -1 roll { true 4 A } { true 4 /colorimage load exec } ifelse }
{ 4 index dup string /z b 4 mul string /B b { currentfile B u pop pop currentfile z u pop }
exch { transimage } { /image load exec } ifelse } ifelse end } a /bhshow { userdict /BeachHead get begin gsave g { [1 0 .17 1 0 0] concat } if f {
/_x1 12 k mul def currentpoint 3 copy _y1 add exch _x1 add exch moveto show 3 copy _y1 add exch _x1 sub exch moveto show 3 copy _y1 sub exch _x1 add exch moveto
show 3 copy _y1 sub exch _x1 sub exch moveto show moveto } if show grestore end } a /C { D { gsave
E F 3 index idtransform translate G 1 4 index 4 index {H} /image load exec grestore /I 0 def /G 0 def /D false def } if } a /transimage { userdict /BeachHead get begin
2 index 8 ne { /image load exec } { 4 index cvi string /H b /J 0 string def /K 0 def /D false def /I 0 def /G 0 def 0 1 5 index 1 sub { /F b 0 1 6 index 1 sub { K J length ge {
1 index dup type /stringtype ne { exec } if /J b /K 0 def } if J K get /K K 1 add def dup 255 eq { pop pop C } { H I 3 -1 roll put /I I 1 add def /G G 1 add def D not { /E b /G 1 def /D true def } { pop } ifelse } ifelse } for C } for 5{pop}repeat } ifelse end } a /L { D { gsave
E F 8 index idtransform translate I 1 8 9 index {M} {N} {O} {P} true 4 /colorimage	load exec grestore /I 0 def /D false def } if } a /A {
9 index cvi dup string /M b dup string /N b dup string /O b string /P b /Q 0 string def /K 0 def /D false def /I 0 def /G 0 def 0 1 10 index 1 sub { /F b 0 1 11 index 1 sub { K Q length ge {
6 index exec /R b 5 index exec /S b 4 index exec /T b 3 index exec /Q b /K 0 def } if
R K get S K get T K get Q K get /K K 1 add def dup 0 eq 2 index 0 eq and 3 index 0 eq and 4 index 0 eq and { 5{pop}repeat L } { M I 6 -1 roll put N I 5 -1 roll put O I 4 -1 roll put P I 3 -1 roll put /I I 1 add def D not { /E b /D true def } { pop } ifelse } ifelse
} for L } for 10{pop}repeat } a /bps 8 string def /bpm [8 0 0 8 0 0] def /bpp { bps } def /overlaybackpat { userdict /BeachHead get begin gsave
setrgbcolor bps copy pop dup 0 get 8 div floor cvi 8 mul 1 index 2 get 8 div floor cvi 8 mul 2 index 1 get 8 div floor cvi 8 mul 8 4 index 3 get 8 div floor cvi 8 mul { 2 index 8 3 index { 1 index gsave translate 8 8 scale 8 8 false bpm /bpp load imagemask grestore } for pop }
for pop pop pop grestore end } a /U { userdict /BeachHead get begin /V b /W b
countdictstack save V 2 add 2 roll count V sub /X b /W load end { exec } stopped userdict /BeachHead get begin
/Y b count X sub { pop } repeat Y 3 1 roll restore countdictstack exch sub { end } repeat end } a /Z ( ) def /aa { moveto {
ba setfont Z end gsave 0 setgray stringwidth grestore
userdict /BeachHead get begin rmoveto /ca load null ne { /da da 1 add def da ea length 1 sub le { fa ea da get ca } if } { ax ay rmoveto fa ga eq { cx cy rmoveto } if } ifelse
} stopped currentdict userdict /BeachHead get ne { userdict /BeachHead get begin }if } a /filltextpath { userdict /BeachHead get begin
/ea b dup type dup /integertype eq exch /realtype eq or { /ay b /ax b /ga b /cy b /cx b /ca null def } { /wa 0 def /ca b } ifelse /ha b /ia b ia { userdict /BeachHead get /i get { gsave 0 setgray /ca load null ne { /ca load ea kshow /wa 0 def } { cx cy ga ax ay ea awidthshow } 
ifelse grestore } if } if gsave currentfont ia 
{ begin r FontMatrix makefont l FontMatrix makefont end } { null exch } ifelse /ja b /ka b /ba currentfont def _doTexturePat 
{ systemdict /makepattern known } { false }ifelse { matrix currentmatrix _strtxtmatrix null ne { _strtxtmatrix setmatrix } if 1 -1 scale txTrnsX txTrnsY translate settexturepat setmatrix /da 0 def ea { /fa b Z 0 fa put ja setfont currentpoint Z show aa {exit} if } forall } {
10 setlinewidth /da 0 def currentpoint newpath 0 dup dup dup moveto lineto closepath moveto ea {
/fa b Z 0 fa put currentpoint ja setfont count 1 add dup 1 roll Z true { charpath } stopped count count -1 roll sub { pop } repeat currentpoint {ha} 0 U pop newpath 0 dup dup dup moveto lineto closepath moveto aa {exit} if } forall } grestore ka null ne { /wa 0 def gsave 0 setgray
/da 0 def ea { /fa b Z 0 fa put ka setfont 
currentpoint Z show aa {exit} if } forall grestore } if /_doTexturePat false def /_strtxtmatrix null def end } a /reversecolor { 1
currentrgbcolor 1 index eq 3 1 roll eq and { currentgray sub } if setgray } a /ftpkproc
{ pop Z 0 3 -1 roll put Z stringwidth neg exch neg exch rmoveto userdict /BeachHead get begin
_cwidths wa get /wa wa 1 add def _cwidths wa get /wa wa 1 add def rmoveto end } a /xa { userdict /BeachHead get begin
pop pop Z 0 3 -1 roll put currentpoint Z bhshow moveto _cwidths pa get /pa pa 1 add def _cwidths pa get /pa pa 1 add def rmoveto end } a
/na[256{0}repeat]def mark 161 176 173 185 176 165 177 177 178 163 179 179 181 109 182 182 183 229 184 213 185 112 186 242 189 87 195 214 197 187 198 68 214 184 215 224 240 240
counttomark 2 div cvi {na 3 1 roll put} repeat pop /krnshow
{ dup type dup /integertype ne exch /realtype ne and {12} if
/Symbol findfont exch scalefont /oa b /ua currentfont def /pa 0 def systemdict /cshow known currentfont /FontType get 0 eq and { /_cwidths b /xa load cshow } { exch {
dup na exch get dup 0 eq isWinPS or { pop Z 0 3 -1 roll put currentpoint Z userdict begin bhshow end moveto }
{ oa setfont Z 0 3 -1 roll put currentpoint Z bhshow moveto ua setfont pop } ifelse dup pa get /pa pa 1 add def 1 index pa get /pa pa 1 add def rmoveto } forall pop } ifelse } a /setcmykcolor where
{ pop /bhsetcmykcolor/setcmykcolor load def } { /bhsetcmykcolor { 4 1 roll 3{ 3 index add neg 1 add dup 0 lt {pop 0}if 3 1 roll }repeat setrgbcolor pop
}a }ifelse end 
%%EndProcSet
%%EndProlog
%%BeginSetup
userdict/BeachHead get begin
%%EndSetup
%%Page One 1
newpath
0 0 moveto
0 560 lineto
797 560 lineto
797 0 lineto closepath clip
gsave
0 560 translate
1 -1 scale
newpath 59 98 moveto 50 72 lineto 59 80 lineto 68 72 lineto 59 98 lineto closepath 
0 setgray
eofill
newpath 59 39 moveto
59 80 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 122 72 moveto 113 45 lineto 122 54 lineto 130 45 lineto 122 72 lineto closepath 
0 setgray
eofill
newpath 122 39 moveto
122 54 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 184 89 moveto 175 62 lineto 184 71 lineto 193 62 lineto 184 89 lineto closepath 
0 setgray
eofill
newpath 184 39 moveto
184 71 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 246 80 moveto 237 53 lineto 246 62 lineto 255 53 lineto 246 80 lineto closepath 
0 setgray
eofill
newpath 246 39 moveto
246 62 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 122 71 moveto
122 102 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 184 88 moveto
184 97 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 246 77 moveto
246 100 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 59 156 moveto 54 130 lineto 59 139 lineto 65 130 lineto 59 156 lineto closepath 
0 setgray
eofill
newpath 59 118 moveto
59 139 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 122 150 moveto 116 124 lineto 122 133 lineto 127 124 lineto 122 150 lineto closepath 
0 setgray
eofill
newpath 122 118 moveto
122 133 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 184 154 moveto 178 128 lineto 184 137 lineto 189 128 lineto 184 154 lineto closepath 
0 setgray
eofill
newpath 184 118 moveto
184 137 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 246 166 moveto 241 140 lineto 246 149 lineto 252 140 lineto 246 166 lineto closepath 
0 setgray
eofill
newpath 246 118 moveto
246 149 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 59 156 moveto
59 165 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 184 156 moveto
184 163 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 122 151 moveto
122 165 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
newpath 32 97 moveto 268 97 lineto 268 123 lineto 32 123 lineto 32 97 lineto closepath 
1 setgray
eofill
newpath 32.5 97.5 moveto 267.5 97.5 lineto 267.5 122.5 lineto 32.5 122.5 lineto 32.5 97.5 lineto closepath 
0 setgray
1 setlinewidth stroke
/Palatino-Roman findbeachheadfont 18 scalefont setfont
gsave
121 116 translate 1 -1 scale 0 0 moveto
0 setgray
(barrier)
[11 0 10 0 7 0 7 0 5 0 10 0 7 0 ]
18 krnshow
grestore
newpath 32 165 moveto 268 165 lineto 268 191 lineto 32 191 lineto 32 165 lineto closepath 
1 setgray
eofill
newpath 32.5 165.5 moveto 267.5 165.5 lineto 267.5 190.5 lineto 32.5 190.5 lineto 32.5 165.5 lineto closepath 
0 setgray
1 setlinewidth stroke
gsave
124 184 translate 1 -1 scale 0 0 moveto
0 setgray
(barrier)
[11 0 10 0 7 0 7 0 5 0 10 0 7 0 ]
18 krnshow
grestore
gsave
527 46 translate 1 -1 scale 0 0 moveto
0 setgray
(thread-2)
[6 0 11 0 7 0 10 0 10 0 11 0 6 0 9 0 ]
18 krnshow
grestore
newpath 427 63 moveto 451 63 lineto 451 184 lineto 427 184 lineto 427 63 lineto closepath 
1 setgray
eofill
newpath 427.5 63.5 moveto 450.5 63.5 lineto 450.5 183.5 lineto 427.5 183.5 lineto 427.5 63.5 lineto closepath 
0 setgray
1 setlinewidth stroke
newpath 560 109 moveto 556 91 lineto 560 97 lineto 564 91 lineto 560 109 lineto closepath 
0 setgray
eofill
newpath 560.5 52.5 moveto
560.5 97.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 557 109 moveto 539 113 lineto 545 109 lineto 539 105 lineto 557 109 lineto closepath 
0 setgray
eofill
newpath 447 109 moveto 465 105 lineto 459 109 lineto 465 113 lineto 447 109 lineto closepath 
0 setgray
eofill
newpath 545.5 109.5 moveto
459.5 109.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
gsave
480 100 translate 1 -1 scale 0 0 moveto
0 setgray
(read)
[7 0 10 0 10 0 11 0 ]
18 krnshow
grestore
newpath 560 137 moveto 556 119 lineto 560 125 lineto 564 119 lineto 560 137 lineto closepath 
0 setgray
eofill
newpath 560.5 112.5 moveto
560.5 125.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 451 134 moveto 469 130 lineto 463 134 lineto 469 138 lineto 451 134 lineto closepath 
0 setgray
eofill
newpath 553.5 134.5 moveto
463.5 134.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 557 154 moveto 539 158 lineto 545 154 lineto 539 150 lineto 557 154 lineto closepath 
0 setgray
eofill
newpath 452.5 154.5 moveto
545.5 154.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 560 188 moveto 556 170 lineto 560 176 lineto 564 170 lineto 560 188 lineto closepath 
0 setgray
eofill
newpath 560.5 157.5 moveto
560.5 176.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
gsave
456 129 translate 1 -1 scale 0 0 moveto
0 setgray
(read & wait)
[7 0 10 0 10 0 11 0 4 0 14 0 4 0 12 0 10 0 5 0 6 0 ]
18 krnshow
grestore
newpath 336 80 moveto 332 62 lineto 336 68 lineto 340 62 lineto 336 80 lineto closepath 
0 setgray
eofill
newpath 336.5 49.5 moveto
336.5 68.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 424 80 moveto 406 84 lineto 412 80 lineto 406 77 lineto 424 80 lineto closepath 
0 setgray
eofill
newpath 339.5 80.5 moveto
412.5 80.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
gsave
358 78 translate 1 -1 scale 0 0 moveto
0 setgray
(write)
[12 0 7 0 5 0 6 0 10 0 ]
18 krnshow
grestore
gsave
358 98 translate 1 -1 scale 0 0 moveto
0 setgray
(& wait)
[14 0 4 0 12 0 10 0 5 0 6 0 ]
18 krnshow
grestore
newpath 339 112 moveto 357 108 lineto 351 112 lineto 357 116 lineto 339 112 lineto closepath 
0 setgray
eofill
newpath 427.5 112.5 moveto
351.5 112.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 336 154 moveto 332 136 lineto 336 142 lineto 340 136 lineto 336 154 lineto closepath 
0 setgray
eofill
newpath 336.5 112.5 moveto
336.5 142.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 336 154 moveto 354 150 lineto 348 154 lineto 354 158 lineto 336 154 lineto closepath 
0 setgray
eofill
newpath 424 154 moveto 406 158 lineto 412 154 lineto 406 150 lineto 424 154 lineto closepath 
0 setgray
eofill
newpath 348.5 154.5 moveto
412.5 154.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 336 194 moveto 332 176 lineto 336 182 lineto 340 176 lineto 336 194 lineto closepath 
0 setgray
eofill
newpath 336.5 163.5 moveto
336.5 182.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
gsave
358 149 translate 1 -1 scale 0 0 moveto
0 setgray
(write)
[12 0 7 0 5 0 6 0 10 0 ]
18 krnshow
grestore
gsave
400 33 translate 1 -1 scale 0 0 moveto
0 setgray
(memory-)
[17 0 10 0 17 0 10 0 7 0 9 0 6 0 ]
18 krnshow
grestore
gsave
421 53 translate 1 -1 scale 0 0 moveto
0 setgray
(port)
[11 0 10 0 7 0 6 0 ]
18 krnshow
grestore
gsave
309 43 translate 1 -1 scale 0 0 moveto
0 setgray
(thread-1)
[6 0 11 0 7 0 10 0 10 0 11 0 6 0 9 0 ]
18 krnshow
grestore
newpath 430 112 moveto 426 93 lineto 430 99 lineto 434 93 lineto 430 112 lineto closepath 
0 setgray
eofill
newpath 430.5 80.5 moveto
430.5 99.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 447 157 moveto 443 139 lineto 447 145 lineto 451 139 lineto 447 157 lineto closepath 
0 setgray
eofill
newpath 447.5 131.5 moveto
447.5 145.5 lineto
0 setgray
currentlinecap 2 setlinecap
3 setlinewidth stroke
setlinecap
newpath 199 239 moveto 190 212 lineto 199 221 lineto 207 212 lineto 199 239 lineto closepath 
0 setgray
eofill
newpath 199 206 moveto
199 221 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
gsave
215 224 translate 1 -1 scale 0 0 moveto
0 setgray
(running)
[7 0 11 0 11 0 11 0 5 0 11 0 10 0 ]
18 krnshow
grestore
newpath 200 250 moveto
200 273 lineto
0 setgray
currentlinecap 2 setlinecap
6 setlinewidth stroke
setlinecap
gsave
216 266 translate 1 -1 scale 0 0 moveto
0 setgray
(idle)
[5 0 11 0 5 0 10 0 ]
18 krnshow
grestore
gsave
45 30 translate 1 -1 scale 0 0 moveto
0 setgray
(thr1       thr2        thr3 ...  thr-n)
[6 0 11 0 7 0 9 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 6 0 11 0 7 0 9 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 6 0 11 0 7 0 9 0 4 0 4 0 4 0 4 0 4 0 4 0 6 0 11 0 7 0 6 0 11 0 ]
18 krnshow
grestore
gsave
35 240 translate 1 -1 scale 0 0 moveto
0 setgray
(\(a\) Barrier-synch)
[6 0 10 0 6 0 4 0 13 0 10 0 7 0 7 0 5 0 10 0 7 0 6 0 8 0 9 0 11 0 9 0 11 0 ]
18 krnshow
grestore
gsave
370 235 translate 1 -1 scale 0 0 moveto
0 setgray
(\(b\) Synchronized- )
[6 0 11 0 6 0 4 0 10 0 9 0 11 0 9 0 11 0 7 0 10 0 11 0 5 0 8 0 10 0 11 0 6 0 4 0 ]
18 krnshow
grestore
gsave
370 255 translate 1 -1 scale 0 0 moveto
0 setgray
(              memory port)
[4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 17 0 10 0 17 0 10 0 7 0 9 0 4 0 11 0 10 0 7 0 6 0 ]
18 krnshow
grestore
/Courier findbeachheadfont 14 scalefont setfont
gsave
127 70 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
gsave
187 86 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
gsave
251 76 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
gsave
60 95 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
gsave
62 155 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
gsave
126 149 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
gsave
187 154 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
gsave
249 164 translate 1 -1 scale 0 0 moveto
0 setgray
(:wait)
[8 0 8 0 8 0 8 0 8 0 ]
14 krnshow
grestore
grestore
showpage
%%Trailer
end
