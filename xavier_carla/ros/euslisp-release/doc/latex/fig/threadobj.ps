%!PS-Adobe-2.0 EPSF-1.2
%%Creator: SuperPaint
%%Title: threadobj.ps
%%CreationDate: 95.1.14
%%BoundingBox: 0 0 564 316 
%%Pages 1
%%DocumentFonts: Symbol
%%+Palatino-Bold
%%+Palatino-Roman
%%+Courier
%%+Courier-Bold
%%DocumentNeededFonts: Symbol
%%+Palatino-Bold
%%+Palatino-Roman
%%+Courier
%%+Courier-Bold
%%DocumentProcSets: BeachHead 2 1
%%DocumentSuppliedProcSets: BeachHead 2 1
%%EndComments
%%BeginProcSet: BeachHead 2 2
%% BeachHead - v2.2 Copyright 1991, 1992 Silicon Beach Software, inc. 
userdict /BeachHead known userdict begin /BeachHead 140 dict def BeachHead end begin /ta exch def /BeachHead_version 2 def /isWinPS false def /c 75 string def /sa 75 string def /f false def /g false def /h false def /i false def /k 0.015 def /oldmatrix 6 array def /newmatrix 6 array def
/a{bind def}bind def/b{exch def}a /_doTexturePat false def /_strtxtmatrix null def /nulld { counttomark {null def} repeat pop } a mark /l /m /o /q /r /u /v /w /_cwidths /wa /x /y /z /A /B /D /E/F /G /H /I /J /K /M /N /O /P /Q /R /S /T /V /W /X /Y /ba /ca /da /ea /fa /ga
/ha /ia /ja /ka ta not{/la /ma}if /_strtxtmatrix nulld /ra 256 array def
ra dup dup 0 /Times-Roman findfont /Encoding get 0 128 getinterval putinterval
39 /quotesingle put 96 /grave put /Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve
/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent
/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute
/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff
/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown
/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright
/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft
/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron ra 128 128 getinterval astore pop /winvec 256 array def ra winvec copy pop winvec 15{dup}repeat 161 /ring put 178 /Scaron put 182 /eth put 184 /Thorn put 185 /thorn put 195 /scaron put 198 /Eth put 222 
/hyphen put 223 /twosuperior put 225 /threesuperior put 240 
/onequarter put 249 /onehalf put 250 /periodcentered put 252 /cedilla put 253 /multiply put 254 /Yacute put version cvr 51 ge 
{ winvec 245 /onesuperior put winvec 251 /threequarters put winvec 255 /yacute put } if /d { 0 1 74 { c exch 0 put } for dup c cvs pop c } a /qa { 0 1 74 { sa exch 0 put } for dup sa cvs pop sa 74 1 put } a /e { d 74 2 put } a /addoblique { /g true def } a /addheavy 
{ /f true def } a /adduline { /h true def } a /findshadowfont 
{ findoutlinefont /i true def } a /findoutlinefont { findbeachheadfont j } a /findbeachheadfont { /f false def /g false def /h false def /i false def
dup findfont dup /FontType get 0 ne	{ /Encoding get dup 161 get exch 162 get /cent eq exch /exclamdown eq and { userdict /BeachHead get begin qa FontDirectory sa known { pop sa findfont } {
findfont dup length 1 add dict /o b { 1 index /FID ne 2 index /UniqueID ne and { o 3 1 roll put } { pop pop } ifelse } forall /FontName sa dup length string copy def
o /Encoding isWinPS {winvec}{ra} ifelse put sa o definefont } ifelse end }{ findfont } ifelse }{ exch pop } ifelse } a /j { userdict /BeachHead get begin dup /FontName get e FontDirectory c known { pop pop c findfont } { exch dup /FontType get 0 eq { { 1 index /FID ne 2 index 
/UniqueID ne and {def} {pop pop} ifelse }forall currentdict end dup dup /FDepVector get [ exch {j} forall
] /FDepVector exch put exch e pop c exch definefont } { 12 dict begin dup /l b /FontType 3 def /FontMatrix [1 0 0 1 0 0] def /FontBBox [0 0 1 1] def /Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for dup exch maxlength 2 add dict begin { 1 index /FID ne 2 index /UniqueID ne and {def} {pop pop} ifelse
}forall /PaintType 2 def /StrokeWidth 1 0 FontMatrix dtransform dup mul exch dup mul add sqrt .012 exch div def
currentdict end /_dummy exch definefont /r b /m 1 string def /FontType 3 def /BuildChar { exch begin m 0 3 -1 roll put r setfont m stringwidth setcharwidth l setfont userdict /BeachHead get /i get { .05 -.05 moveto m show } if reversecolor 0 0 moveto m show reversecolor r 
setfont 0 0 moveto m show end } a
currentdict end exch e pop c exch definefont } ifelse } ifelse end } a /EPSBegin { save userdict /BeachHead get begin /la b count /ma b end userdict /showpage {} put
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath } a /EPSEnd { userdict /BeachHead get begin count ma sub dup 0 gt {{pop}repeat} {pop}ifelse la end restore } a /cimage { userdict /BeachHead get begin { {readstring} } { {readhexstring} }
ifelse /u b /colorimage where
{ pop 4 index dup string /v b dup string /w b dup string /x b dup string /y b string /z b { currentfile v u pop } { currentfile w u pop }
{ currentfile x u pop } { currentfile y u pop currentfile z u pop pop } 5 -1 roll { true 4 A } { true 4 /colorimage load exec } ifelse }
{ 4 index dup string /z b 4 mul string /B b { currentfile B u pop pop currentfile z u pop }
exch { transimage } { /image load exec } ifelse } ifelse end } a /bhshow { userdict /BeachHead get begin gsave g { [1 0 .17 1 0 0] concat } if f {
/_x1 12 k mul def currentpoint 3 copy _y1 add exch _x1 add exch moveto show 3 copy _y1 add exch _x1 sub exch moveto show 3 copy _y1 sub exch _x1 add exch moveto
show 3 copy _y1 sub exch _x1 sub exch moveto show moveto } if show grestore end } a /C { D { gsave
E F 3 index idtransform translate G 1 4 index 4 index {H} /image load exec grestore /I 0 def /G 0 def /D false def } if } a /transimage { userdict /BeachHead get begin
2 index 8 ne { /image load exec } { 4 index cvi string /H b /J 0 string def /K 0 def /D false def /I 0 def /G 0 def 0 1 5 index 1 sub { /F b 0 1 6 index 1 sub { K J length ge {
1 index dup type /stringtype ne { exec } if /J b /K 0 def } if J K get /K K 1 add def dup 255 eq { pop pop C } { H I 3 -1 roll put /I I 1 add def /G G 1 add def D not { /E b /G 1 def /D true def } { pop } ifelse } ifelse } for C } for 5{pop}repeat } ifelse end } a /L { D { gsave
E F 8 index idtransform translate I 1 8 9 index {M} {N} {O} {P} true 4 /colorimage	load exec grestore /I 0 def /D false def } if } a /A {
9 index cvi dup string /M b dup string /N b dup string /O b string /P b /Q 0 string def /K 0 def /D false def /I 0 def /G 0 def 0 1 10 index 1 sub { /F b 0 1 11 index 1 sub { K Q length ge {
6 index exec /R b 5 index exec /S b 4 index exec /T b 3 index exec /Q b /K 0 def } if
R K get S K get T K get Q K get /K K 1 add def dup 0 eq 2 index 0 eq and 3 index 0 eq and 4 index 0 eq and { 5{pop}repeat L } { M I 6 -1 roll put N I 5 -1 roll put O I 4 -1 roll put P I 3 -1 roll put /I I 1 add def D not { /E b /D true def } { pop } ifelse } ifelse
} for L } for 10{pop}repeat } a /bps 8 string def /bpm [8 0 0 8 0 0] def /bpp { bps } def /overlaybackpat { userdict /BeachHead get begin gsave
setrgbcolor bps copy pop dup 0 get 8 div floor cvi 8 mul 1 index 2 get 8 div floor cvi 8 mul 2 index 1 get 8 div floor cvi 8 mul 8 4 index 3 get 8 div floor cvi 8 mul { 2 index 8 3 index { 1 index gsave translate 8 8 scale 8 8 false bpm /bpp load imagemask grestore } for pop }
for pop pop pop grestore end } a /U { userdict /BeachHead get begin /V b /W b
countdictstack save V 2 add 2 roll count V sub /X b /W load end { exec } stopped userdict /BeachHead get begin
/Y b count X sub { pop } repeat Y 3 1 roll restore countdictstack exch sub { end } repeat end } a /Z ( ) def /aa { moveto {
ba setfont Z end gsave 0 setgray stringwidth grestore
userdict /BeachHead get begin rmoveto /ca load null ne { /da da 1 add def da ea length 1 sub le { fa ea da get ca } if } { ax ay rmoveto fa ga eq { cx cy rmoveto } if } ifelse
} stopped currentdict userdict /BeachHead get ne { userdict /BeachHead get begin }if } a /filltextpath { userdict /BeachHead get begin
/ea b dup type dup /integertype eq exch /realtype eq or { /ay b /ax b /ga b /cy b /cx b /ca null def } { /wa 0 def /ca b } ifelse /ha b /ia b ia { userdict /BeachHead get /i get { gsave 0 setgray /ca load null ne { /ca load ea kshow /wa 0 def } { cx cy ga ax ay ea awidthshow } 
ifelse grestore } if } if gsave currentfont ia 
{ begin r FontMatrix makefont l FontMatrix makefont end } { null exch } ifelse /ja b /ka b /ba currentfont def _doTexturePat 
{ systemdict /makepattern known } { false }ifelse { matrix currentmatrix _strtxtmatrix null ne { _strtxtmatrix setmatrix } if 1 -1 scale txTrnsX txTrnsY translate settexturepat setmatrix /da 0 def ea { /fa b Z 0 fa put ja setfont currentpoint Z show aa {exit} if } forall } {
10 setlinewidth /da 0 def currentpoint newpath 0 dup dup dup moveto lineto closepath moveto ea {
/fa b Z 0 fa put currentpoint ja setfont count 1 add dup 1 roll Z true { charpath } stopped count count -1 roll sub { pop } repeat currentpoint {ha} 0 U pop newpath 0 dup dup dup moveto lineto closepath moveto aa {exit} if } forall } grestore ka null ne { /wa 0 def gsave 0 setgray
/da 0 def ea { /fa b Z 0 fa put ka setfont 
currentpoint Z show aa {exit} if } forall grestore } if /_doTexturePat false def /_strtxtmatrix null def end } a /reversecolor { 1
currentrgbcolor 1 index eq 3 1 roll eq and { currentgray sub } if setgray } a /ftpkproc
{ pop Z 0 3 -1 roll put Z stringwidth neg exch neg exch rmoveto userdict /BeachHead get begin
_cwidths wa get /wa wa 1 add def _cwidths wa get /wa wa 1 add def rmoveto end } a /xa { userdict /BeachHead get begin
pop pop Z 0 3 -1 roll put currentpoint Z bhshow moveto _cwidths pa get /pa pa 1 add def _cwidths pa get /pa pa 1 add def rmoveto end } a
/na[256{0}repeat]def mark 161 176 173 185 176 165 177 177 178 163 179 179 181 109 182 182 183 229 184 213 185 112 186 242 189 87 195 214 197 187 198 68 214 184 215 224 240 240
counttomark 2 div cvi {na 3 1 roll put} repeat pop /krnshow
{ dup type dup /integertype ne exch /realtype ne and {12} if
/Symbol findfont exch scalefont /oa b /ua currentfont def /pa 0 def systemdict /cshow known currentfont /FontType get 0 eq and { /_cwidths b /xa load cshow } { exch {
dup na exch get dup 0 eq isWinPS or { pop Z 0 3 -1 roll put currentpoint Z userdict begin bhshow end moveto }
{ oa setfont Z 0 3 -1 roll put currentpoint Z bhshow moveto ua setfont pop } ifelse dup pa get /pa pa 1 add def 1 index pa get /pa pa 1 add def rmoveto } forall pop } ifelse } a /setcmykcolor where
{ pop /bhsetcmykcolor/setcmykcolor load def } { /bhsetcmykcolor { 4 1 roll 3{ 3 index add neg 1 add dup 0 lt {pop 0}if 3 1 roll }repeat setrgbcolor pop
}a }ifelse end 
%%EndProcSet
%%EndProlog
%%BeginSetup
userdict/BeachHead get begin
%%EndSetup
%%Page One 1
newpath
0 0 moveto
0 316 lineto
564 316 lineto
564 0 lineto closepath clip
gsave
-6 447 translate
1 -1 scale
newpath 6 253 moveto 144 253 lineto 144 316 lineto 6 316 lineto 6 253 lineto closepath 
0.75002 setgray
eofill
newpath 6.5 253.5 moveto 143.5 253.5 lineto 143.5 315.5 lineto 6.5 315.5 lineto 6.5 253.5 lineto closepath 
0 setgray
1 setlinewidth stroke
/Palatino-Bold findbeachheadfont 18 scalefont setfont
gsave
30 279 translate 1 -1 scale 0 0 moveto
0 setgray
(thread-1)
[7 0 12 0 8 0 11 0 11 0 12 0 7 0 10 0 ]
18 krnshow
grestore
gsave
30 299 translate 1 -1 scale 0 0 moveto
0 setgray
(requester)
[8 0 11 0 11 0 12 0 11 0 9 0 7 0 11 0 8 0 ]
18 krnshow
grestore
newpath 449 255 moveto 562 255 lineto 562 316 lineto 449 316 lineto 449 255 lineto closepath 
0.75002 setgray
eofill
newpath 449.5 255.5 moveto 561.5 255.5 lineto 561.5 315.5 lineto 449.5 315.5 lineto 449.5 255.5 lineto closepath 
0 setgray
1 setlinewidth stroke
newpath 464 266 moveto 552 266 lineto 552 310 lineto 464 310 lineto 464 266 lineto closepath 
0.75002 setgray
eofill
gsave
466 281 translate 1 -1 scale 0 0 moveto
0 setgray
(thread-2)
[7 0 12 0 8 0 11 0 11 0 12 0 7 0 10 0 ]
18 krnshow
grestore
gsave
466 301 translate 1 -1 scale 0 0 moveto
0 setgray
(server)
[9 0 11 0 8 0 10 0 11 0 8 0 ]
18 krnshow
grestore
newpath 300.5 254.5 40.5 0 360 arc
closepath 
0.75002 setgray
eofill
newpath 300.5 254.5 40 0 360 arc
closepath 
0 setgray
1 setlinewidth stroke
/Palatino-Roman findbeachheadfont 18 scalefont setfont
gsave
273 252 translate 1 -1 scale 0 0 moveto
0 setgray
(request)
[7 0 10 0 10 0 11 0 10 0 8 0 6 0 ]
18 krnshow
grestore
gsave
282 272 translate 1 -1 scale 0 0 moveto
0 setgray
(sema)
[8 0 10 0 17 0 10 0 ]
18 krnshow
grestore
newpath 300.5 344.5 40.5 0 360 arc
closepath 
0.75002 setgray
eofill
newpath 300.5 344.5 40 0 360 arc
closepath 
0 setgray
1 setlinewidth stroke
gsave
276 339 translate 1 -1 scale 0 0 moveto
0 setgray
(done)
[11 0 10 0 11 0 10 0 ]
18 krnshow
grestore
gsave
276 359 translate 1 -1 scale 0 0 moveto
0 setgray
(sema)
[8 0 10 0 17 0 10 0 ]
18 krnshow
grestore
newpath 238 179 moveto 252 179 14 180 270 arc
354 165 lineto 354 179 14 270 0 arc
368 185 lineto 354 185 14 0 90 arc
252 199 lineto 252 185 14 90 180 arc
238 179 lineto closepath 
0.75002 setgray
eofill
newpath 238.5 179 moveto 252 179 13.5 180 270 arc
354 165.5 lineto 354 179 13.5 270 0 arc
367.5 185 lineto 354 185 13.5 0 90 arc
252 198.5 lineto 252 185 13.5 90 180 arc
238.5 179 lineto closepath 
0 setgray
1 setlinewidth stroke
newpath 254 172 moveto 352 172 lineto 352 194 lineto 254 194 lineto 254 172 lineto closepath 
0.75002 setgray
eofill
gsave
256 187 translate 1 -1 scale 0 0 moveto
0 setgray
(parameter)
[11 0 10 0 7 0 10 0 17 0 10 0 6 0 10 0 7 0 ]
18 krnshow
grestore
newpath 247 412 moveto 261 412 14 180 270 arc
350 398 lineto 350 412 14 270 0 arc
364 417 lineto 350 417 14 0 90 arc
261 431 lineto 261 417 14 90 180 arc
247 412 lineto closepath 
0.75002 setgray
eofill
newpath 247.5 412 moveto 261 412 13.5 180 270 arc
350 398.5 lineto 350 412 13.5 270 0 arc
363.5 417 lineto 350 417 13.5 0 90 arc
261 430.5 lineto 261 417 13.5 90 180 arc
247.5 412 lineto closepath 
0 setgray
1 setlinewidth stroke
newpath 277 404 moveto 332 404 lineto 332 426 lineto 277 426 lineto 277 404 lineto closepath 
0.75002 setgray
eofill
gsave
279 420 translate 1 -1 scale 0 0 moveto
0 setgray
(result)
[7 0 10 0 8 0 11 0 5 0 6 0 ]
18 krnshow
grestore
newpath 238 186 moveto 231 195 lineto 229 193 lineto 227 191 lineto 238 186 lineto closepath 
0 setgray
eofill
newpath 144.5 262.5 moveto
229.5 193.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
newpath 255 258 moveto 244 262 lineto 244 259 lineto 243 256 lineto 255 258 lineto closepath 
0 setgray
eofill
newpath 144.5 273.5 moveto
244.5 260.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
newpath 449 270 moveto 439 264 lineto 441 262 lineto 443 260 lineto 449 270 lineto closepath 
0 setgray
eofill
newpath 367.5 187.5 moveto
441.5 261.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
newpath 455 285 moveto 441 285 lineto 442 282 lineto 443 279 lineto 455 285 lineto closepath 
0 setgray
eofill
newpath 350.5 261.5 moveto
442.5 283.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
newpath 345 335 moveto 355 328 lineto 356 332 lineto 357 334 lineto 345 335 lineto closepath 
0 setgray
eofill
newpath 456.5 300.5 moveto
356.5 332.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
newpath 362 400 moveto 368 389 lineto 370 392 lineto 373 394 lineto 362 400 lineto closepath 
0 setgray
eofill
newpath 449.5 310.5 moveto
370.5 392.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
newpath 144 305 moveto 154 310 lineto 152 312 lineto 151 315 lineto 144 305 lineto closepath 
0 setgray
eofill
newpath 248.5 393.5 moveto
152.5 313.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
newpath 144 295 moveto 156 296 lineto 155 298 lineto 154 301 lineto 144 295 lineto closepath 
0 setgray
eofill
newpath 263.5 330.5 moveto
155.5 298.5 lineto
0 setgray
currentlinecap 2 setlinecap
1 setlinewidth stroke
setlinecap
/Courier findbeachheadfont 18 scalefont setfont
gsave
187 253 translate 1 -1 scale 0 0 moveto
0 setgray
(post)
[11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
gsave
354 308 translate 1 -1 scale 0 0 moveto
0 setgray
(post)
[11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
gsave
134 215 translate 1 -1 scale 0 0 moveto
0 setgray
(write)
[11 0 11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
gsave
398 216 translate 1 -1 scale 0 0 moveto
0 setgray
(read)
[11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
gsave
413 351 translate 1 -1 scale 0 0 moveto
0 setgray
(write)
[11 0 11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
gsave
149 368 translate 1 -1 scale 0 0 moveto
0 setgray
(read)
[11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
gsave
197 308 translate 1 -1 scale 0 0 moveto
0 setgray
(wait)
[11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
gsave
360 256 translate 1 -1 scale 0 0 moveto
0 setgray
(wait)
[11 0 11 0 11 0 11 0 ]
18 krnshow
grestore
newpath 172.5 145 moveto 186 145 13.5 180 270 arc
556 131.5 lineto 556 145 13.5 270 0 arc
569.5 433 lineto 556 433 13.5 0 90 arc
186 446.5 lineto 186 433 13.5 90 180 arc
172.5 145 lineto closepath 
0 setgray
1 setlinewidth stroke
/Courier-Bold findbeachheadfont 24 scalefont setfont
gsave
348 154 translate 1 -1 scale 0 0 moveto
0 setgray
(thread-object)
[15 0 15 0 15 0 15 0 15 0 15 0 15 0 15 0 15 0 15 0 15 0 15 0 15 0 ]
24 krnshow
grestore
grestore
showpage
%%Trailer
end
