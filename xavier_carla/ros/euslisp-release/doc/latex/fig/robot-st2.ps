%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Times-Bold Helvetica-Bold Helvetica
%%Pages: 1
%%BoundingBox: 28 410 587 685
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def


/RRect { CBSpl } def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/WhiteBg 1 def
/HollowBg 0 def
/Text { ishow } def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/xdescender {
begin 0
FontType 0 eq
{ FDepVector dup length 1 sub get xdescender }
{ [FontBBox] 1 get } ifelse
FontMatrix transform exch pop end
} def
/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
WhiteBg eq /drawBg exch def
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict xdescender def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
drawBg {
newpath 0 vertoffset descender add moveto
dup stringwidth pop dup 0 rlineto
0 printSize rlineto 0 exch sub 0 rlineto
closepath currentgray 1 setgray fill	setgray } if
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 4 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 9 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I k u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I MLine
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ -.999878 -0.0155947 0.0155947 -.999878 198.754 1243.69 ] concat
%I 8
88 642
68 612
88 542
138 542
158 612
138 642
88 642
88 642
8 MLine
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-180-*
/Times-Bold 18 SetF
%I t
[ 1 0 0 1 90 690 ] concat
%I
[
(F)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-180-*
/Times-Bold 18 SetF
%I t
[ 1 0 0 1 90 620 ] concat
%I
[
(B)
] HollowBg Text
End

Begin %I MLine
%I b 65280
5 0 0 [8 8] 17 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -18 208 ] concat
%I 2
88 542
88 492
2 MLine
End

Begin %I MLine
%I b 65280
5 0 0 [8 8] 17 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -18 208 ] concat
%I 2
138 542
138 492
2 MLine
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 180 660 ] concat
%I
[
(touch)
( sensor)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 170 790 ] concat
%I
[
(infrared)
( sensor)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 300 780 ] concat
%I
[
(s)
(e)
(n)
(s)
(o)
(r)
(s)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 360 810 ] concat
%I
[
(r)
(e)
(g)
(i)
(s)
(t)
(r)
(a)
(r)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 410 790 ] concat
%I
[
(forward behaviour)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 410 750 ] concat
%I
[
(wander behaviour)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 410 710 ] concat
%I
[
(infrared behaviour)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 420 670 ] concat
%I
[
(escape behaviour)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 420 630 ] concat
%I
[
(touch behaviour)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 650 790 ] concat
%I
[
(a)
(r)
(b)
(i)
(t)
(e)
(r)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 710 850 ] concat
%I
[
(r)
(o)
(b)
(o)
(t)
()
(a)
(c)
(t)
(i)
(o)
(n)
] HollowBg Text
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 224 158 ] concat
%I 20
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
76 622
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 224 158 ] concat
%I 20
66 452
72 452
78 452
84 452
90 452
96 452
96 458
96 464
96 610
96 616
96 622
90 622
84 622
78 622
72 622
66 622
66 616
66 610
66 464
66 458
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 244 168 ] concat
%I 20
106 422
112 422
118 422
124 422
130 422
136 422
136 428
136 434
136 630
136 636
136 642
130 642
124 642
118 642
112 642
106 642
106 636
106 630
106 434
106 428
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 254 148 ] concat
%I 20
146 622
150 622
154 622
358 622
362 622
366 622
366 626
366 630
366 634
366 638
366 642
362 642
358 642
154 642
150 642
146 642
146 638
146 634
146 630
146 626
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 254 158 ] concat
%I 20
146 572
150 572
154 572
358 572
362 572
366 572
366 576
366 580
366 584
366 588
366 592
362 592
358 592
154 592
150 592
146 592
146 588
146 584
146 580
146 576
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 254 158 ] concat
%I 20
146 532
150 532
154 532
358 532
362 532
366 532
366 536
366 540
366 544
366 548
366 552
362 552
358 552
154 552
150 552
146 552
146 548
146 544
146 540
146 536
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 254 158 ] concat
%I 20
146 492
150 492
154 492
358 492
362 492
366 492
366 496
366 500
366 504
366 508
366 512
362 512
358 512
154 512
150 512
146 512
146 508
146 504
146 500
146 496
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 244 168 ] concat
%I 20
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
146 472
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 254 168 ] concat
%I 20
146 442
150 442
154 442
358 442
362 442
366 442
366 446
366 450
366 454
366 458
366 462
362 462
358 462
154 462
150 462
146 462
146 458
146 454
146 450
146 446
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 264 158 ] concat
%I 20
376 462
382 462
388 462
394 462
400 462
406 462
406 468
406 474
406 620
406 626
406 632
400 632
394 632
388 632
382 632
376 632
376 626
376 620
376 474
376 468
20 RRect
End

Begin %I RRect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 274 198 ] concat
%I 20
426 362
432 362
438 362
444 362
450 362
456 362
456 368
456 374
456 640
456 646
456 652
450 652
444 652
438 652
432 652
426 652
426 646
426 640
426 374
426 368
20 RRect
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
146 592
166 592
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
146 552
166 552
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
146 512
166 512
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
146 472
166 472
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
146 432
166 432
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
386 592
406 592
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
386 552
406 552
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
386 512
406 512
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
386 472
406 472
2 MLine
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
386 432
406 432
2 MLine
End

Begin %I MLine
%I b 65535
5 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
86 512
116 512
2 MLine
End

Begin %I MLine
%I b 65535
5 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 2
436 512
466 512
2 MLine
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-240-*
/Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 430 840 ] concat
%I
[
(User's Modules)
] HollowBg Text
End

Begin %I MLine
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 234 188 ] concat
%I 6
186 642
106 642
106 382
446 382
446 642
386 642
6 MLine
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-240-*
/Helvetica 24 SetF
%I t
[ 1 0 0 1 40 540 ] concat
%I
[
(\(1\) hardware)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-240-*
/Helvetica 24 SetF
%I t
[ 1 0 0 1 450 550 ] concat
%I
[
(\(2\) software)
] HollowBg Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-180-*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 420 600 ] concat
%I
[
(behaviour modules)
] HollowBg Text
End

Begin %I MLine
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 188 ] concat
%I 6
242 402
222 402
222 622
462 622
462 402
432 402
6 MLine
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
3.36312e-44 SetP
%I t
[ 1 0 0 1 -30 354 ] concat
%I
125 297 70 446 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
3.36312e-44 SetP
%I t
[ 1 0 0 1 -30 354 ] concat
%I
126 298 180 447 Line
End

Begin %I BSpl
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 5
70 447
91 457
126 463
160 457
180 445
5 BSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
/Times-Bold 24 SetF
%I t
[ 1 0 0 1 80 840 ] concat
%I
[
(eye)
] HollowBg Text
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 3
190 426
130 426
100 396
3 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 3
190 406
160 406
150 396
3 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 2
200 296
170 296
2 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 2
200 266
170 266
2 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 3
200 286
110 286
90 306
3 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 3
200 276
100 276
90 266
3 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 4
200 256
170 226
140 226
120 246
4 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -30 354 ] concat
%I 4
200 306
150 366
140 366
120 346
4 MLine
End

End %I eop

showpage

%%Trailer

end
